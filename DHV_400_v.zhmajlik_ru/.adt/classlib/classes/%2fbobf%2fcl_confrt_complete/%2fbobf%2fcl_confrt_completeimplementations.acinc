*"* local class implementation for public class
*"* use this source file for the implementation part of
*"* local helper classes

CLASS lcl_error_handler DEFINITION.

  PUBLIC SECTION.

    CLASS-METHODS raise_node_error
      IMPORTING iv_node_key TYPE /bobf/obm_node_key
                iv_bo_name  TYPE /bobf/obm_name.

    CLASS-METHODS raise_act_error
      IMPORTING iv_act_key TYPE /bobf/act_key
                iv_bo_name TYPE /bobf/obm_name.

    CLASS-METHODS raise_altkey_error
      IMPORTING iv_altkey_key TYPE /bobf/obm_altkey_key
                iv_bo_name    TYPE /bobf/obm_name.

    CLASS-METHODS raise_assoc_error
      IMPORTING iv_assoc_key TYPE /bobf/obm_assoc_key
                iv_bo_name   TYPE /bobf/obm_name.

    CLASS-METHODS raise_query_error
      IMPORTING iv_query_key TYPE /bobf/obm_query_key
                iv_bo_name   TYPE /bobf/obm_name.

    CLASS-METHODS raise_group_error
      IMPORTING iv_group_key TYPE /bobf/obm_group_key
                iv_bo_name   TYPE /bobf/obm_name.

    CLASS-METHODS raise_status_variable_error
      IMPORTING iv_stat_var_key TYPE /bobf/sta_var_key
                iv_bo_name      TYPE /bobf/obm_name.

    CLASS-METHODS raise_status_derivator_error
      IMPORTING iv_sta_deriv_key TYPE /bobf/sta_derivator_key
                iv_bo_name       TYPE /bobf/obm_name.

    CLASS-METHODS raise_determination_error
      IMPORTING iv_exectime TYPE /bobf/conf_exectime
                iv_bo_name  TYPE /bobf/obm_name.

    CLASS-METHODS raise_property_error
      IMPORTING iv_node_cat_key TYPE /bobf/obm_node_cat_key
                iv_bo_name      TYPE /bobf/obm_name.

    CLASS-METHODS raise_value_set_error
      IMPORTING iv_value_set_key TYPE /bobf/obm_value_set_key
                iv_bo_name       TYPE /bobf/obm_name.

    CLASS-METHODS raise_invalid_parameters_error.

    CLASS-METHODS raise_faulty_const_assoc_bind
      IMPORTING
        iv_constant_name    TYPE csequence
        iv_bo_name          TYPE csequence
        iv_node_name        TYPE csequence
        iv_association_name TYPE csequence.

  PRIVATE SECTION.

    CLASS-METHODS raise_fatal_exception
      IMPORTING
        iv_application_information TYPE string
        iv_bo_name                 TYPE csequence optional.

    CLASS-METHODS get_application_component
      EXPORTING
        ev_application_component TYPE ufps_posid
        ev_class                 TYPE seoclsname.
ENDCLASS.

CLASS lcl_error_handler IMPLEMENTATION.


  METHOD raise_node_error.
    " **********************************************************************
    " RAISE_NODE_ERROR
    " **********************************************************************

    DATA: lv_error_text            TYPE string,
          lv_hint_text             TYPE string,
          lv_class                 TYPE seoclsname,
          lv_application_component TYPE ufps_posid,
          lv_hint_bo_name          TYPE /bobf/obm_name,
          lv_hint_node_name        TYPE /bobf/obm_name.

    get_application_component(
      IMPORTING
        ev_application_component = lv_application_component
        ev_class                 = lv_class ).

    lv_error_text = |While execution, a meta data request of a certain |
                     && | node was caused in class "| && lv_class && |". This request fails,|
                     && | because the node doesn't exist in the business object "| && iv_bo_name && |" and|
                     && | its used configuration object.|.  "#EC NOTEXT

    SELECT SINGLE name node_name FROM /bobf/obm_node INTO (lv_hint_bo_name, lv_hint_node_name) WHERE node_key = iv_node_key. "#EC CI_NOORDER
    IF sy-subrc IS INITIAL.
      lv_error_text = lv_error_text && | But a node named "| && lv_hint_node_name && |" with the requested key "|
                       && iv_node_key && |" instead exists in business object "| && lv_hint_bo_name && |".|. "#EC NOTEXT
    ENDIF.

    IF lv_application_component IS NOT INITIAL.
      lv_error_text = lv_error_text && | Please open a ticket to the responsible component "| && lv_application_component && |".|. "#EC NOTEXT
    ENDIF.

    raise_fatal_exception( iv_application_information = lv_error_text iv_bo_name = iv_bo_name ).

  ENDMETHOD.

  METHOD raise_act_error.
    " **********************************************************************
    " RAISE_ACT_ERROR
    " **********************************************************************

    DATA: lv_error_text            TYPE string,
          lv_hint_act_name         TYPE /bobf/obm_name,
          lv_hint_node_key         TYPE /bobf/obm_bo_key,
          lv_application_component TYPE ufps_posid,
          lv_class                 TYPE seoclsname,
          lv_hint_node_name        TYPE /bobf/obm_name,
          lv_hint_bo_name          TYPE /bobf/obm_name.

    get_application_component(
      IMPORTING
        ev_application_component = lv_application_component
        ev_class                 = lv_class ).

    lv_error_text = |While execution, a meta data request of a certain |
                     && | action was caused in class "| && lv_class && |". This request fails,|
                     && | because the action doesn't exist in the business object "| && iv_bo_name && |" and|
                     && | its used configuration object.|.  "#EC NOTEXT

    SELECT SINGLE name act_name node_key FROM /bobf/act_list
      INTO (lv_hint_bo_name, lv_hint_act_name, lv_hint_node_key) WHERE act_key = iv_act_key. "#EC CI_NOORDER
    IF sy-subrc IS INITIAL.
      lv_error_text = lv_error_text && | But an action named "| && lv_hint_act_name && |" with the requested key "|
                       && iv_act_key && |" instead exists in business object "| && lv_hint_bo_name && |".|. "#EC NOTEXT
    ENDIF.

    IF lv_application_component IS NOT INITIAL.
      lv_error_text = lv_error_text && | Please open a ticket to the responsible component "| && lv_application_component && |".|. "#EC NOTEXT
    ENDIF.

    raise_fatal_exception( iv_application_information = lv_error_text iv_bo_name = iv_bo_name ).

  ENDMETHOD.

  METHOD raise_altkey_error.
    " **********************************************************************
    " RAISE_ALTKEY_ERROR
    " **********************************************************************
    DATA: lv_error_text            TYPE string,
          lv_hint_node_key         TYPE /bobf/obm_bo_key,
          lv_application_component TYPE ufps_posid,
          lv_class                 TYPE seoclsname,
          lv_hint_node_name        TYPE /bobf/obm_name,
          lv_hint_bo_name          TYPE /bobf/obm_name,
          lv_hint_altkey_name      TYPE /bobf/obm_name.

    get_application_component(
      IMPORTING
        ev_application_component = lv_application_component
        ev_class                 = lv_class ).

    lv_error_text = |While execution, a meta data request of a certain |
                     && | alternative key was caused in class "| && lv_class && |". This request fails,|
                     && | because the alternative key doesn't exist in the business object "| && iv_bo_name && |" and|
                     && | its used configuration object.|.  "#EC NOTEXT

    SELECT SINGLE name node_key altkey_name FROM /bobf/obm_altkey INTO (lv_hint_bo_name, lv_hint_node_key, lv_hint_altkey_name)
                  WHERE altkey_key = iv_altkey_key. "#EC CI_NOORDER
     IF sy-subrc IS INITIAL.
      lv_error_text = lv_error_text && | But an alternative key named "| && lv_hint_altkey_name && |" with the requested key "|
                       && iv_altkey_key && |" instead exists in business object "| && lv_hint_bo_name && |" on node "| && lv_hint_node_name  && |".|. "#EC NOTEXT
    ENDIF.

    IF lv_application_component IS NOT INITIAL.
      lv_error_text = lv_error_text && | Please open a ticket to the responsible component "| && lv_application_component && |".|. "#EC NOTEXT
    ENDIF.

    raise_fatal_exception( iv_application_information = lv_error_text iv_bo_name = iv_bo_name ).

  ENDMETHOD.

  METHOD raise_assoc_error.
    " **********************************************************************
    " RAISE_ASSOC_ERROR
    " **********************************************************************
    DATA: lv_error_text            TYPE string,
          lv_hint_assoc_name       TYPE /bobf/obm_name,
          lv_hint_node_key         TYPE /bobf/obm_node_key,
          lv_class                 TYPE seoclsname,
          lv_application_component TYPE ufps_posid,
          lv_hint_node_name        TYPE /bobf/obm_name,
          lv_hint_bo_name          TYPE /bobf/obm_name.

    get_application_component(
      IMPORTING
        ev_application_component = lv_application_component
        ev_class                 = lv_class ).

    lv_error_text = |While execution, a meta data request of a certain |
                     && | association was caused in class "| && lv_class && |". This request fails,|
                     && | because the association doesn't exist in the business object "| && iv_bo_name && |" and|
                     && | its used configuration object.|.  "#EC NOTEXT

    SELECT SINGLE name assoc_name source_node_key FROM /bobf/obm_assoc
       INTO (lv_hint_bo_name, lv_hint_assoc_name, lv_hint_node_key) WHERE assoc_key = iv_assoc_key. "#EC CI_NOORDER
    IF sy-subrc IS INITIAL.
      lv_error_text = lv_error_text && | But an association named "| && lv_hint_assoc_name && |" with the requested key "|
                       && iv_assoc_key && |" instead exists in business object "| && lv_hint_bo_name && |".|. "#EC NOTEXT
    ENDIF.

    IF lv_application_component IS NOT INITIAL.
      lv_error_text = lv_error_text && | Please open a ticket to the responsible component "| && lv_application_component && |".|. "#EC NOTEXT
    ENDIF.

    raise_fatal_exception( iv_application_information = lv_error_text iv_bo_name = iv_bo_name ).

  ENDMETHOD.

  METHOD raise_query_error.
    " **********************************************************************
    " RAISE_QUERY_ERROR
    " **********************************************************************
    DATA: lv_error_text            TYPE string,
          lv_class                 TYPE seoclsname,
          lv_application_component TYPE ufps_posid,
          lv_hint_query_name       TYPE /bobf/obm_name,
          lv_hint_node_key         TYPE /bobf/obm_node_key,
          lv_hint_node_name        TYPE /bobf/obm_name,
          lv_hint_bo_name          TYPE /bobf/obm_name.

    get_application_component(
      IMPORTING
        ev_application_component = lv_application_component
        ev_class                 = lv_class ).

    lv_error_text = |While execution, a meta data request of a certain |
                     && | query was caused in class "| && lv_class && |". This request fails,|
                     && | because the query doesn't exist in the business object "| && iv_bo_name && |" and|
                     && | its used configuration object.|.  "#EC NOTEXT

    SELECT SINGLE name node_key query_name FROM /bobf/obm_query
       INTO (lv_hint_bo_name, lv_hint_node_key, lv_hint_query_name) WHERE query_key = iv_query_key. "#EC CI_NOORDER
    IF sy-subrc IS INITIAL.
      lv_error_text = lv_error_text && | But a query named "| && lv_hint_query_name && |" with the requested key "|
                       && iv_query_key && |" instead exists in business object "| && lv_hint_bo_name && |".|. "#EC NOTEXT
    ENDIF.

    IF lv_application_component IS NOT INITIAL.
      lv_error_text = lv_error_text && | Please open a ticket to the responsible component "| && lv_application_component && |".|. "#EC NOTEXT
    ENDIF.

    raise_fatal_exception( iv_application_information = lv_error_text iv_bo_name = iv_bo_name ).

  ENDMETHOD.

  METHOD raise_group_error.
    " **********************************************************************
    " RAISE_GROUP_ERROR
    " **********************************************************************
    DATA: lv_error_text            TYPE string,
          lv_hint_text             TYPE string,
          lv_class                 TYPE seoclsname,
          lv_application_component TYPE ufps_posid,
          lv_hint_bo_name          TYPE /bobf/obm_name,
          lv_hint_group_name       TYPE /bobf/obm_name.

    get_application_component(
      IMPORTING
        ev_application_component = lv_application_component
        ev_class                 = lv_class ).

    lv_error_text = |While execution, a meta data request of a certain |
                     && | group was caused in class "| && lv_class && |". This request fails,|
                     && | because the group doesn't exist in the business object "| && iv_bo_name && |" and|
                     && | its used configuration object.|.  "#EC NOTEXT

    SELECT SINGLE name group_name FROM /bobf/obm_group INTO (lv_hint_bo_name, lv_hint_group_name) WHERE group_key = iv_group_key. "#EC CI_NOORDER
    IF sy-subrc IS INITIAL.
      lv_error_text = lv_error_text && | But a group named "| && lv_hint_group_name && |" with the requested key "|
                       && iv_group_key && |" instead exists in business object "| && lv_hint_bo_name && |".|. "#EC NOTEXT
    ENDIF.

    IF lv_application_component IS NOT INITIAL.
      lv_error_text = lv_error_text && | Please open a ticket to the responsible component "| && lv_application_component && |".|. "#EC NOTEXT
    ENDIF.

    raise_fatal_exception( iv_application_information = lv_error_text iv_bo_name = iv_bo_name ).

  ENDMETHOD.

  METHOD raise_status_variable_error.
    " **********************************************************************
    " RAISE_STATUS_VARIABLE_ERROR
    " **********************************************************************
    DATA: lv_error_text            TYPE string,
          lv_class                 TYPE seoclsname,
          lv_hint_stat_var_name    TYPE /bobf/obm_name,
          lv_hint_node_key         TYPE /bobf/obm_node_key,
          lv_hint_node_name        TYPE /bobf/obm_name,
          lv_application_component TYPE ufps_posid,
          lv_hint_bo_name          TYPE /bobf/obm_name.

    get_application_component(
       IMPORTING
         ev_application_component = lv_application_component
         ev_class                 = lv_class ).

    lv_error_text = |While execution, a meta data request of a certain |
                     && | status variable was caused in class "| && lv_class && |". This request fails,|
                     && | because the status variable doesn't exist in the business object "| && iv_bo_name && |" and|
                     && | its used configuration object.|.  "#EC NOTEXT

    SELECT SINGLE name node_key sta_var_name FROM /bobf/sta_var
       INTO (lv_hint_bo_name, lv_hint_node_key, lv_hint_stat_var_name) WHERE sta_var_key = iv_stat_var_key.      "#EC CI_NOORDER
    IF sy-subrc IS INITIAL.
      lv_error_text = lv_error_text && | But a status variable named "| && lv_hint_stat_var_name && |" with the requested key "|
                       && iv_stat_var_key && |" instead exists in business object "| && lv_hint_bo_name && |".|. "#EC NOTEXT
    ENDIF.

    IF lv_application_component IS NOT INITIAL.
      lv_error_text = lv_error_text && | Please open a ticket to the responsible component "| && lv_application_component && |".|. "#EC NOTEXT
    ENDIF.

    raise_fatal_exception( iv_application_information = lv_error_text iv_bo_name = iv_bo_name ).

  ENDMETHOD.

  METHOD raise_status_derivator_error.
    " **********************************************************************
    " RAISE STATUS_DERIVATOR
    " **********************************************************************
    DATA: lv_error_text            TYPE string,
          lv_class                 TYPE seoclsname,
          lv_hint_sta_deriv_name   TYPE /bobf/obm_name,
          lv_application_component TYPE ufps_posid,
          lv_hint_node_key         TYPE /bobf/obm_node_key,
          lv_hint_node_name        TYPE /bobf/obm_name,
          lv_hint_bo_name          TYPE /bobf/obm_name.

    get_application_component(
        IMPORTING
          ev_application_component = lv_application_component
          ev_class                 = lv_class ).

    lv_error_text = |While execution, a meta data request of a certain |
                     && | status derivator was caused in class "| && lv_class && |". This request fails,|
                     && | because the status derivator doesn't exist in the business object "| && iv_bo_name && |" and|
                     && | its used configuration object.|.  "#EC NOTEXT

    SELECT SINGLE name node_key deriv_name FROM /bobf/sta_deriv
       INTO (lv_hint_bo_name, lv_hint_node_key, lv_hint_sta_deriv_name) WHERE sta_deriv_key = iv_sta_deriv_key.    "#EC CI_NOORDER
    IF sy-subrc IS INITIAL.
      lv_error_text = lv_error_text && | But a status derivator named "| && lv_hint_sta_deriv_name && |" with the requested key "|
                       && iv_sta_deriv_key && |" instead exists in business object "| && lv_hint_bo_name && |".|. "#EC NOTEXT
    ENDIF.

    IF lv_application_component IS NOT INITIAL.
      lv_error_text = lv_error_text && | Please open a ticket to the responsible component "| && lv_application_component && |".|. "#EC NOTEXT
    ENDIF.

    raise_fatal_exception( iv_application_information = lv_error_text iv_bo_name = iv_bo_name ).

  ENDMETHOD.

  METHOD raise_property_error.
    " **********************************************************************
    " RAISE_PROPERTY_ERROR
    " **********************************************************************
    DATA: lv_error_text            TYPE string,
          lv_class                 TYPE seoclsname,
          lv_hint_text             TYPE string,
          lv_application_component TYPE ufps_posid,
          lv_hint_bo_name          TYPE /bobf/obm_name,
          lv_hint_group_name       TYPE /bobf/obm_name.

    get_application_component(
        IMPORTING
          ev_application_component = lv_application_component
          ev_class                 = lv_class ).

    lv_error_text = |While execution, a meta data request in order to get properties of a certain node category |
                     && | was caused in class "| && lv_class && |". This request fails,|
                     && | because the node category doesn't exist in the business object "| && iv_bo_name && |" and|
                     && | its used configuration object.|.  "#EC NOTEXT

    " Hint: check that node cat - could exist in another bo

    IF lv_application_component IS NOT INITIAL.
      lv_error_text = lv_error_text && | Please open a ticket to the responsible component "| && lv_application_component && |".|. "#EC NOTEXT
    ENDIF.

    raise_fatal_exception( iv_application_information = lv_error_text iv_bo_name = iv_bo_name ).

  ENDMETHOD.

  METHOD raise_determination_error.
    " **********************************************************************
    " RAISE_DETERMINATION_ERROR
    " **********************************************************************
    DATA:
      lv_class                 TYPE seoclsname,
      lv_application_component TYPE ufps_posid,
      lv_error_text            TYPE string.

    get_application_component(
        IMPORTING
          ev_application_component = lv_application_component
          ev_class                 = lv_class ).

    lv_error_text = |While execution, a meta data request in order to get determinations configured to a certain determination time |
                     && | was caused in class "| && lv_class && |". This request fails,|
                     && | because the determination time "| && iv_exectime && |" does not exist. The business object "| && iv_bo_name && |" is affected.|. "#EC NOTEXT

    IF lv_application_component IS NOT INITIAL.
      lv_error_text = lv_error_text && | Please open a ticket to the responsible component "| && lv_application_component && |".|. "#EC NOTEXT
    ENDIF.

    raise_fatal_exception( iv_application_information = lv_error_text  iv_bo_name = iv_bo_name ).

  ENDMETHOD.

  METHOD raise_value_set_error.
    " **********************************************************************
    " RAISE_VALUE_SET_ERROR
    " **********************************************************************
    DATA: lv_error_text            TYPE string,
          lv_hint_attribute_name   TYPE /bobf/obm_name,
          lv_hint_node_key         TYPE /bobf/obm_node_key,
          lv_hint_entity_name      TYPE /bobf/obm_name,
          lv_class                 TYPE seoclsname,
          lv_application_component TYPE ufps_posid,
          lv_hint_bo_name          TYPE /bobf/obm_name,
          lv_hint_cont_cat         TYPE /bobf/obm_content_cat,
          lv_hint_cont_key         TYPE /bobf/conf_key.

    get_application_component(
          IMPORTING
            ev_application_component = lv_application_component
            ev_class                 = lv_class ).

    lv_error_text = |While execution, a meta data request of a certain |
                    && | value set was caused in class "| && lv_class && |". This request fails,|
                    && | because the value set doesn't exist in the business object "| && iv_bo_name && |" and|
                    && | its used configuration object.|.   "#EC NOTEXT

    SELECT SINGLE name content_cat content_key vset_name FROM /bobf/obm_vset
       INTO (lv_hint_bo_name, lv_hint_cont_cat, lv_hint_cont_key, lv_hint_attribute_name) WHERE vset_key = iv_value_set_key. "#EC CI_NOORDER
    IF sy-subrc IS INITIAL.
      lv_error_text = lv_error_text && | But a value with the requested key "|
                       && iv_value_set_key && |" instead exists in business object "| && lv_hint_bo_name && |"|.      "#EC NOTEXT
      CASE lv_hint_cont_cat.
        WHEN /bobf/if_conf_c=>sc_content_nod. " Node
          SELECT SINGLE node_name FROM /bobf/obm_node INTO lv_hint_entity_name WHERE node_key = lv_hint_cont_key.     "#EC CI_NOORDER
          lv_error_text = lv_error_text && | on node "| && lv_hint_entity_name
                          && |" for attribute "| && lv_hint_attribute_name && |".|.
        WHEN /bobf/if_conf_c=>sc_content_act. " Action
          SELECT SINGLE act_name FROM /bobf/act_list INTO lv_hint_entity_name WHERE act_key = lv_hint_cont_key.       "#EC CI_NOORDER
          lv_error_text = lv_error_text && | on action "| && lv_hint_entity_name
                          && |" for attribute "| && lv_hint_attribute_name && |".|.
        WHEN /bobf/if_conf_c=>sc_content_ass. " Association
          SELECT SINGLE assoc_name FROM /bobf/obm_assoc INTO lv_hint_entity_name WHERE assoc_key = lv_hint_cont_key.  "#EC CI_NOORDER
          lv_error_text = lv_error_text && | on association "| && lv_hint_entity_name
                          && |" for attribute "| && lv_hint_attribute_name && |".|.
        WHEN /bobf/if_conf_c=>sc_content_qry. " Query
          SELECT SINGLE query_name FROM /bobf/obm_query INTO lv_hint_entity_name WHERE query_key = lv_hint_cont_key.  "#EC CI_NOORDER
          lv_error_text = lv_error_text && | on query "| && lv_hint_entity_name
                          && |" for attribute "| && lv_hint_attribute_name && |".|.
        WHEN OTHERS.
      ENDCASE.
    ENDIF.

    IF lv_application_component IS NOT INITIAL.
      lv_error_text = lv_error_text && | Please open a ticket to the responsible component "| && lv_application_component && |".|. "#EC NOTEXT
    ENDIF.

    raise_fatal_exception( iv_application_information = lv_error_text iv_bo_name = iv_bo_name ).

  ENDMETHOD.

  METHOD raise_invalid_parameters_error.
    " **********************************************************************
    " RAISE_INVALID_PARAMETERS_ERROR
    " **********************************************************************
    DATA: lv_error_text TYPE string.

    " Build error text
    lv_error_text = | Method was called with invalid importing parameters.|.

    " Raise exception
    raise_fatal_exception( iv_application_information = lv_error_text ).
  ENDMETHOD.

  METHOD get_application_component.
    " **********************************************************************
    " GET_APPLICATION_COMPONENT
    " **********************************************************************

    DATA: lt_callstack  TYPE abap_callstack,
          ls_callstack  LIKE LINE OF lt_callstack,
          lv_class_name TYPE sobj_name,
          lv_dummy      TYPE string,
          lv_devclass   TYPE tadir-devclass,
          lv_component  TYPE tdevc-component.
    CONSTANTS: lco_comp_undetermined TYPE ufps_posid VALUE '<UNDETERMINED>'.

    " Find calling program
    CALL FUNCTION 'SYSTEM_CALLSTACK'
      IMPORTING
        callstack = lt_callstack.

    ev_application_component = lco_comp_undetermined.
    LOOP AT lt_callstack INTO ls_callstack.
      " Find applicaction component
      SPLIT ls_callstack-mainprogram AT '=' INTO lv_class_name lv_dummy.
      IF lv_class_name IS NOT INITIAL.
        " Select package name
        SELECT SINGLE devclass FROM tadir INTO lv_devclass                        "#EC CI_SEL_NESTED
          WHERE pgmid = 'R3TR' AND object = 'CLAS' AND obj_name = lv_class_name.  "#EC CI_SEL_NESTED
        " Select component name
        SELECT SINGLE component FROM tdevc INTO lv_component WHERE devclass = lv_devclass. "#EC CI_SEL_NESTED
        " Select application component name
        SELECT SINGLE ps_posid FROM df14l INTO ev_application_component "#EC CI_SEL_NESTED
          WHERE fctr_id = lv_component AND as4local = 'A'.              "#EC CI_SEL_NESTED
        IF ev_application_component CP 'BC-ESI*'.
          ev_application_component = lco_comp_undetermined.
          CONTINUE. " always trust the framework
        ELSE.
          ev_class = lv_class_name.
          EXIT.
        ENDIF.
      ELSE.
        ev_application_component = lco_comp_undetermined.
        EXIT.
      ENDIF.
    ENDLOOP.

  ENDMETHOD.

  METHOD raise_faulty_const_assoc_bind.
    raise_fatal_exception(
      iv_application_information = |Constant { iv_constant_name } of association binding of BO { iv_bo_name
        } node { iv_node_name } association { iv_association_name } is invalid|
      iv_bo_name = iv_bo_name ).
  ENDMETHOD.

  METHOD raise_fatal_exception.
    " **********************************************************************
    " RAISE_FATAL_EXCEPTION
    " **********************************************************************

    DATA: lv_component TYPE ufps_posid.

    get_application_component(
      IMPORTING
        ev_application_component = lv_component ).

    DATA lx_frw_fatal TYPE REF TO /bobf/cx_frw_fatal.
    CREATE OBJECT lx_frw_fatal
      EXPORTING
        mv_bo_name               = conv #( iv_bo_name )
        textid                   = /bobf/cx_frw_fatal=>sc_configuration_error
        mv_application_component = CONV #( lv_component )
        application_information  = iv_application_information.

    lx_frw_fatal->message_type_x( ).

  ENDMETHOD.

ENDCLASS.
