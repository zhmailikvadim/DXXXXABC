*"* use this source file for your ABAP unit test classes

CLASS ltc_assocb_convert DEFINITION DEFERRED.
CLASS /bobf/cl_confrt_complete DEFINITION LOCAL FRIENDS ltc_assocb_convert.

CLASS ltc_assocb_convert DEFINITION FOR TESTING RISK LEVEL HARMLESS DURATION SHORT.
  PUBLIC SECTION.
    CONSTANTS gc_value_int TYPE i VALUE 4.
    CONSTANTS gc_value_string TYPE string VALUE 'CODE_1234'.

  PRIVATE SECTION.
    DATA mo_cut TYPE REF TO /bobf/cl_confrt_complete.
    METHODS setup RAISING /bobf/cx_frw.
    METHODS convert_assocbinding FOR TESTING raising /bobf/cx_frw.

ENDCLASS.

CLASS ltc_assocb_convert IMPLEMENTATION.
  METHOD setup.
    CREATE OBJECT mo_cut
      EXPORTING
        iv_bo_key = CONV #( 1 ).
  ENDMETHOD.

  METHOD convert_assocbinding.

    DATA lr_assocbinding TYPE REF TO /bobf/t_confro_assocb.
    FIELD-SYMBOLS <lv_constant_value> TYPE any.
    lr_assocbinding = NEW #(
      ( attribute = |ADDRESS_TYPE|
        constant = |LTC_ASSOCB_CONVERT=>GC_VALUE_INT|
        from_binding_cat  = /bobf/if_conf_c=>sc_assocbcat_constant
        sign  = /bobf/if_conf_c=>sc_sign_equal )
      ( attribute = |ADDRESS_ID|
        from_binding_cat  = /bobf/if_conf_c=>sc_assocbcat_source
        sign  = /bobf/if_conf_c=>sc_sign_equal
        from_binding = 'ADDRESS_ID' )
      ( attribute = |ADDRESS_CODE|
        constant = |LTC_ASSOCB_CONVERT=>GC_VALUE_STRING|
        from_binding_cat  = /bobf/if_conf_c=>sc_assocbcat_constant
        sign  = /bobf/if_conf_c=>sc_sign_equal )
      ( attribute = |ADDRESS_GROUP|
        from_binding_cat  = /bobf/if_conf_c=>sc_assocbcat_source
        sign  = /bobf/if_conf_c=>sc_sign_equal
        from_binding = 'ADDRESS_GROUP' )
    ).

    DATA(lt_rt_assocb) = mo_cut->/bobf/if_frw_configuration~convert_runtime_assoc_binding(
      iv_assoc_key = value #( )
      ir_assocb = lr_assocbinding ).

    cl_abap_unit_assert=>assert_equals( exp = 4  act = lines( lt_rt_assocb ) ).
    LOOP AT lr_assocbinding->* ASSIGNING FIELD-SYMBOL(<ls_assocb_exp>).
      READ TABLE lt_rt_assocb INDEX sy-tabix ASSIGNING FIELD-SYMBOL(<ls_assocb_act>).
      cl_abap_unit_assert=>assert_subrc( exp = 0 ).
      cl_abap_unit_assert=>assert_equals(
        exp = <ls_assocb_exp>
        act = <ls_assocb_act>-assocbinding ).

      CASE <ls_assocb_exp>-attribute.
        WHEN 'ADDRESS_TYPE'.
          cl_abap_unit_assert=>assert_bound( <ls_assocb_act>-constant_value ).
          ASSIGN <ls_assocb_act>-constant_value->* TO <lv_constant_value>.
          cl_abap_unit_assert=>assert_equals( exp = gc_value_int act = <lv_constant_value> ).
        WHEN 'ADDRESS_ID'.
          cl_abap_unit_assert=>assert_initial( <ls_assocb_act>-constant_value ).
        WHEN 'ADDRESS_CODE'.
          cl_abap_unit_assert=>assert_bound( <ls_assocb_act>-constant_value ).
          ASSIGN <ls_assocb_act>-constant_value->* TO <lv_constant_value>.
          cl_abap_unit_assert=>assert_equals( exp = gc_value_string act = <lv_constant_value> ).
        WHEN 'ADDRESS_GROUP'.
          cl_abap_unit_assert=>assert_initial( <ls_assocb_act>-constant_value ).
      ENDCASE.

    ENDLOOP.

    cl_abap_unit_assert=>assert_equals( exp = 1 act = lines( mo_cut->mt_assocb_cache ) ).
    READ TABLE mo_cut->mt_assocb_cache WITH KEY r_assocb = lr_assocbinding TRANSPORTING NO FIELDS.
    cl_abap_unit_assert=>assert_subrc( exp = 0 ).

    "read again (from cache)
    DATA(lt_rt_assocb_cached) = mo_cut->/bobf/if_frw_configuration~convert_runtime_assoc_binding(
      iv_assoc_key = value #( )
      ir_assocb = lr_assocbinding ).
    cl_abap_unit_assert=>assert_equals(
      exp = lt_rt_assocb
      act = lt_rt_assocb_cached
    ).
  ENDMETHOD.

ENDCLASS.
