"! <p class="shorttext synchronized" lang="en">Lib. Action: Prepare a draft</p>
CLASS /bobf/cl_lib_a_preparation DEFINITION
  PUBLIC
  INHERITING FROM /bobf/cl_lib_a_draft_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    METHODS /bobf/if_frw_action~execute REDEFINITION.
  PROTECTED SECTION.
  PRIVATE SECTION.
    METHODS prepare_draft IMPORTING is_ctx        TYPE /bobf/s_frw_ctx_act
                                    it_key        TYPE /bobf/t_frw_key
                                    io_read       TYPE REF TO /bobf/if_frw_read
                          EXPORTING et_failed_key TYPE /bobf/t_frw_key
                                    et_data       TYPE INDEX TABLE
                          RAISING   /bobf/cx_frw .
ENDCLASS.



CLASS /BOBF/CL_LIB_A_PREPARATION IMPLEMENTATION.


  METHOD /bobf/if_frw_action~execute.

    CLEAR: et_data, et_failed_key, eo_message.

    "check sideffectsqualifier: If not initial then there's nothing to do.
    IF is_parameters IS BOUND AND CAST /bobf/s_lib_a_in_draft_prepare( is_parameters )->sideeffectsqualifier IS NOT INITIAL.
      RETURN.
    ENDIF.

    initialize( iv_bo_key = is_ctx-bo_key iv_node_key = is_ctx-node_key iv_content_key = is_ctx-act_key ).

    " Check correct usage of this class
    ASSERT ms_action_conf-act_name = /bobf/if_conf_cds_link_c=>gc_action_name-draft-preparation.

    eo_message = /bobf/cl_frw_message_factory=>create_container( ).
    check_executed_for_draft_inst( EXPORTING is_ctx = is_ctx
                                             it_key                  = it_key
                                             io_message              = eo_message
                                   IMPORTING et_active_key           = DATA(lt_active_key)
                                             et_draft_key            = DATA(lt_draft_key)
                                   RECEIVING rv_draft_instances_only = DATA(lv_called_for_draft_inst_only) ).

    IF lv_called_for_draft_inst_only = abap_false.
      et_failed_key = lt_active_key.
      RETURN.
      "TODO: Original implementation in //CL_LIB_DRAFT seems to continue if LT_draft_key is not initial ???
    ENDIF.

    prepare_draft( EXPORTING is_ctx        = is_ctx
                             it_key        = lt_draft_key
                             io_read       = io_read
                   IMPORTING et_failed_key = et_failed_key
                             et_data       = et_data ).

  ENDMETHOD.


  METHOD prepare_draft.
    " Execute check & determine via Service Manager
    /bobf/cl_tra_serv_mgr_factory=>get_service_manager( is_ctx-bo_key )->check_and_determine(
       iv_node_key    = is_ctx-node_key
       it_key         = it_key
       iv_check_scope = /bobf/if_frw_c=>sc_scope_substructure ).

    " DO NOT add messages as they are collected by the service manager
*      IMPORTING
*        eo_message     = DATA(lo_message)
*        ev_rejected    = DATA(lv_rejected) ).
*    io_message->add( lo_message ).
    " fill returning parameter
    io_read->retrieve( EXPORTING iv_node       = is_ctx-node_key
                                 it_key        = it_key
                       IMPORTING et_data       = et_data
                                 et_failed_key = et_failed_key ).

  ENDMETHOD.
ENDCLASS.