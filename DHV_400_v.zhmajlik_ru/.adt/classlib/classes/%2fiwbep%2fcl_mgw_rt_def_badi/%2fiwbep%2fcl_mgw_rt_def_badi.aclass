class /IWBEP/CL_MGW_RT_DEF_BADI definition
  public
  final
  create public .

*"* public components of class /IWBEP/CL_MGW_RT_DEF_BADI
*"* do not include other source files here!!!
public section.

  interfaces /IWBEP/IF_MGW_BADI_SRV_RUNTIME .
  interfaces /IWBEP/IF_MGW_CORE_SRV_RUNTIME .
  interfaces IF_BADI_INTERFACE .
protected section.
*"* protected components of class /IWBEP/CL_MGW_RT_DEF_BADI
*"* do not include other source files here!!!
private section.
*"* private components of class /IWBEP/CL_MGW_RT_DEF_BADI
*"* do not include other source files here!!!

  data MO_RUNTIME type ref to /IWBEP/IF_MGW_CORE_SRV_RUNTIME .
  data MO_SOFTSTATE_RUNTIME type ref to /IWBEP/IF_MGW_SOST_SRV_RUNTIME .

  methods GET_IMPLEMENTATION
    importing
      !IV_CLASS_NAME type /IWBEP/MED_DEFINITION_CLASS
    returning
      value(RO_IMPLEMENTATION) type ref to /IWBEP/IF_MGW_CORE_SRV_RUNTIME
    raising
      /IWBEP/CX_MGW_TECH_EXCEPTION .
  methods GET_SERVICE_INFO
    importing
      !IV_EXTERNAL_NAME type STRING
      !IV_NAMESPACE type STRING
      !IV_VERSION type /IWBEP/MED_GRP_VERSION
    returning
      value(RS_SERVICE_INFO) type /IWBEP/IF_MGW_MED_PROVIDER=>TY_S_SERVICE_INFO
    raising
      /IWBEP/CX_MGW_TECH_EXCEPTION .
ENDCLASS.



CLASS /IWBEP/CL_MGW_RT_DEF_BADI IMPLEMENTATION.


  METHOD /iwbep/if_mgw_core_srv_runtime~batch_begin.

    mo_runtime->batch_begin(
      EXPORTING
        it_operation_info             = it_operation_info
      CHANGING
        cv_deferred_response_creation = cv_deferred_response_creation ).

  ENDMETHOD.


  METHOD /iwbep/if_mgw_core_srv_runtime~batch_end.

    mo_runtime->batch_end(
      CHANGING
        ct_batch_response = ct_batch_response ).

  ENDMETHOD.


METHOD /iwbep/if_mgw_core_srv_runtime~changeset_begin.

*-dispatch
  mo_runtime->changeset_begin(
    EXPORTING
      it_operation_info  = it_operation_info
      it_changeset_input = it_changeset_input
    CHANGING
      cv_defer_mode      = cv_defer_mode
  ).

ENDMETHOD.


METHOD /iwbep/if_mgw_core_srv_runtime~changeset_end.

*-dispatch
  mo_runtime->changeset_end( ).

ENDMETHOD.


METHOD /iwbep/if_mgw_core_srv_runtime~changeset_process.

*-dispatch
  mo_runtime->changeset_process(
    CHANGING
      ct_changeset_data = ct_changeset_data
  ).

ENDMETHOD.


METHOD /iwbep/if_mgw_core_srv_runtime~cleanup.
** Softstate handling
** check if the softstate processing mode has been set on the hub
  IF mo_softstate_runtime IS BOUND.
    mo_softstate_runtime->operation_end( ).
  ENDIF.

  IF ( mo_runtime IS NOT INITIAL ).
    mo_runtime->cleanup( ).
  ENDIF.

  CLEAR mo_runtime.

ENDMETHOD.


METHOD /iwbep/if_mgw_core_srv_runtime~create_entity.

*-dispatch
  mo_runtime->create_entity( EXPORTING iv_entity_name     = iv_entity_name
                                       iv_source_name     = iv_source_name
                                       io_data_provider   = io_data_provider
                                       is_request_details = is_request_details
                             CHANGING  cr_entity          = cr_entity
                                       ct_headers         = ct_headers
                                       ct_inline_info     = ct_inline_info
                                       cs_response_context = cs_response_context ).

ENDMETHOD.


method /IWBEP/IF_MGW_CORE_SRV_RUNTIME~DELETE_ENTITY.

*-dispatch
  mo_runtime->delete_entity( EXPORTING iv_entity_name      = iv_entity_name
                                        iv_source_name     = iv_source_name
                                        is_request_details = is_request_details
                             changing  ct_headers         = ct_headers
                                       cs_response_context = cs_response_context ).

endmethod.


METHOD /iwbep/if_mgw_core_srv_runtime~exec_service_operation.

  mo_runtime->exec_service_operation( EXPORTING iv_action_name     = iv_action_name
                                                iv_return_type     = iv_return_type
                                                iv_multiplicity    = iv_multiplicity
                                                is_request_details = is_request_details
                                      CHANGING  cr_data            = cr_data
                                                ct_headers         = ct_headers
                                                ct_inline_info     = ct_inline_info
                                                cs_response_context = cs_response_context ).

ENDMETHOD.


  METHOD /iwbep/if_mgw_core_srv_runtime~get_expand_root.

*-dispatch
    mo_runtime->get_expand_root( EXPORTING
                                     iv_cardinality = iv_cardinality
                                 CHANGING
                                     cs_request_details  = cs_request_details ).

  ENDMETHOD.


METHOD /iwbep/if_mgw_core_srv_runtime~init.

  DATA: lv_softstate_enabled   TYPE abap_bool,
        lv_softstate_mode      TYPE char1,
        lv_softstate_before    TYPE abap_bool,
        lv_softstate_first_req TYPE abap_bool,
        lo_context             TYPE REF TO /iwbep/if_mgw_context,
        ls_service_info        TYPE /iwbep/if_mgw_med_provider=>ty_s_service_info.


*-intialize context
  lo_context = io_context.

*-get service info
  ls_service_info = get_service_info( iv_external_name = iv_service_document_name
                                     iv_namespace     = iv_namespace
                                     iv_version       = iv_version ).

*-set context
  lo_context->set_parameter( iv_name  = /iwbep/if_mgw_context=>gc_param_isn
                             iv_value = ls_service_info-technical_name ).

  lo_context->set_parameter( iv_name  = /iwbep/if_mgw_context=>gc_param_isv
                             iv_value = ls_service_info-version ).

  lo_context->set_parameter( iv_name  = /iwbep/if_mgw_context=>gc_param_dpc
                             iv_value = ls_service_info-class_name ).

*-get registered implementation from persistency (factory ensures dpc re-use)
  mo_runtime = /iwbep/cl_mgw_dpc_factory=>get_implementation( iv_class_name = ls_service_info-class_name ).

  " Get Soft State Flags from hub system
  lo_context->get_parameter( EXPORTING iv_name  = /iwbep/if_mgw_context=>gc_param_softstate
                             IMPORTING ev_value = lv_softstate_enabled ).

  lo_context->get_parameter( EXPORTING iv_name  = /iwbep/if_mgw_context=>gc_param_softstate_mode
                             IMPORTING ev_value = lv_softstate_mode ).

  lo_context->get_parameter( EXPORTING iv_name  = /iwbep/if_mgw_context=>gc_param_softstate_before
                             IMPORTING ev_value = lv_softstate_before ).

  lo_context->get_parameter( EXPORTING iv_name  = /iwbep/if_mgw_context=>gc_param_softstate_first_req
                             IMPORTING ev_value = lv_softstate_first_req ).

  mo_runtime->init(
    iv_service_document_name = iv_service_document_name
    iv_namespace             = iv_namespace
    iv_version               = iv_version
    io_context               = lo_context ).

* Softstate handling
  IF lv_softstate_enabled EQ abap_true AND
     ( lv_softstate_mode = /iwbep/if_mgw_core_types=>gcs_soft_state_mode-immediate OR
       ( lv_softstate_mode = /iwbep/if_mgw_core_types=>gcs_soft_state_mode-delayed AND
         lv_softstate_before = abap_true
       )
      ).
    mo_softstate_runtime ?= mo_runtime.
    mo_softstate_runtime->operation_start(
      EXPORTING
        iv_is_first_request = lv_softstate_first_req
    ).
  ENDIF.

ENDMETHOD.


method /IWBEP/IF_MGW_CORE_SRV_RUNTIME~INIT_REQUEST_CONTEXT.

*-dispatch
  mo_runtime->init_request_context(
    exporting
      is_request_details = is_request_details
      it_headers         = it_headers
    changing
      co_request_context = co_request_context ).

endmethod.


METHOD /iwbep/if_mgw_core_srv_runtime~read_entity.

*-dispatch
  mo_runtime->read_entity( EXPORTING iv_entity_name      = iv_entity_name
                                     iv_source_name      = iv_source_name
                                     is_request_details  = is_request_details
                           CHANGING  cr_entity           = cr_entity
                                     cs_response_context = cs_response_context
                                     ct_headers          = ct_headers
                                     ct_expand_skiptoken = ct_expand_skiptoken
                                     ct_inline_info      = ct_inline_info ).

ENDMETHOD.


METHOD /iwbep/if_mgw_core_srv_runtime~read_entityset.

*-dispatch
  mo_runtime->read_entityset( EXPORTING iv_entity_name           = iv_entity_name
                                        iv_source_name           = iv_source_name
                                        is_paging                = is_paging
                                        it_order                 = it_order
                                        it_filter_select_options = it_filter_select_options
                                        is_request_details       = is_request_details
                              CHANGING  cr_entityset             = cr_entityset
                                        cr_deleted_entityset     = cr_deleted_entityset
                                        ct_headers               = ct_headers
                                        cs_response_context      = cs_response_context
                                        ct_inline_info           = ct_inline_info
                                        cv_response_body         = cv_response_body
                                        ).

ENDMETHOD.


METHOD /iwbep/if_mgw_core_srv_runtime~read_stream.

*-dispatch
  mo_runtime->read_stream( EXPORTING iv_entity_name      = iv_entity_name
                                     iv_source_name      = iv_source_name
                                     is_request_details  = is_request_details
                           CHANGING  cr_stream           = cr_stream
                                     ct_headers          = ct_headers
                                     cs_response_context = cs_response_context ).

ENDMETHOD.


  METHOD /iwbep/if_mgw_core_srv_runtime~session_is_terminated.


    " No handling of Session Timeout at this time
    RETURN.

*    IF mo_softstate_runtime IS BOUND.
*      mo_softstate_runtime->session_is_terminated( iv_reason = iv_reason ).
*    ENDIF.

  ENDMETHOD.


METHOD /iwbep/if_mgw_core_srv_runtime~set_context.

  mo_runtime->set_context( io_context ).

ENDMETHOD.


METHOD /iwbep/if_mgw_core_srv_runtime~update_entity.

*-dispatch
  mo_runtime->update_entity( EXPORTING iv_entity_name      = iv_entity_name
                                        iv_source_name     = iv_source_name
                                        io_data_provider   = io_data_provider
                                        is_request_details = is_request_details
                             CHANGING   cr_entity          = cr_entity
                                        ct_headers         = ct_headers
                                        cs_response_context = cs_response_context ).

ENDMETHOD.


METHOD get_implementation.

  DATA lx_create_obj_error TYPE REF TO cx_sy_create_object_error.
  DATA lo_sutil_runtime    TYPE REF TO /iwbep/cl_sutil_runtime.
  DATA lv_perf_handle      TYPE i.


  lo_sutil_runtime = /iwbep/cl_sutil_runtime=>get_instance( ).

  " Performance Trace START
  lv_perf_handle = lo_sutil_runtime->performance_start( iv_action_name = iv_class_name ).

  TRY.
      CREATE OBJECT ro_implementation TYPE (iv_class_name).
    CATCH cx_sy_create_object_error INTO lx_create_obj_error.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
        EXPORTING
          previous = lx_create_obj_error.
  ENDTRY.

  " Performance Trace STOP
  lo_sutil_runtime->performance_stop( lv_perf_handle ).

ENDMETHOD.


METHOD GET_SERVICE_INFO.

  DATA lo_metadata_provider TYPE REF TO /iwbep/if_mgw_med_provider.

  lo_metadata_provider = /iwbep/cl_mgw_med_provider=>get_med_provider( ).

  rs_service_info = lo_metadata_provider->get_service_info(
    iv_external_name          = iv_external_name
    iv_namespace              = iv_namespace
    iv_version                = iv_version
    iv_do_check_for_extension = abap_true
  ).

ENDMETHOD.
ENDCLASS.