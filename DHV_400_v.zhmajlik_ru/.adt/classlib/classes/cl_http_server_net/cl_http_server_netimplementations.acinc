*METHOD compute_log_subkey.
*  IF m_log_subkey IS INITIAL.
*    DATA: l_epp_global TYPE REF TO if_epp_global_section.
*    DATA: l_error      TYPE REF TO cx_epp_error.
*
*    TRY.
*        l_epp_global = cl_epp_global_factory=>get_section( ).
*        m_log_subkey = l_epp_global->get_root_context_id_as_uuid( ).
*        CONCATENATE m_log_subkey '-1' INTO m_log_subkey.
*
*      CATCH cx_epp_error INTO l_error.
*        m_log_subkey = '-1'.
*    ENDTRY.
*  ELSE.
*    DATA: l_subkey TYPE string,
*          l_number TYPE string.
*
*    FIND REGEX '(\w+)-([0-9]+)' IN m_log_subkey IGNORING CASE SUBMATCHES l_subkey l_number.
*    ADD 1 TO l_number.
*    CONCATENATE l_subkey '-' l_number INTO m_log_subkey.
*  ENDIF.
*  subkey = m_log_subkey.
*ENDMETHOD.
DEFINE add_icf_trc.

  if not c_sap_trace is initial or not c_trace is initial.

    if &2 is initial.
      trcstr = |{ &1 } | & | { co_space } |.
    else.
      trcstr = |{ &1 } | & |{ &2 } |.
    endif.

    TRY.
        WHILE ( strlen( trcstr ) > co_str ).
          IF split_str EQ abap_false.
            trcstr_orig = trcstr.
            split_str = abap_true.
          ENDIF.
          subtxt = trcstr(co_str).
          WRITE cl_abap_char_utilities=>cr_lf TO subtxt+co_str(2).
          trc_index = sy-index.
          trc_offset = co_str * sy-index.
          trcstr = trcstr_orig+trc_offset.
          concatenate subtxt_long subtxt into subtxt_long.
        ENDWHILE.

* write the rest, if any exists
        if trc_offset > 0.
          concatenate subtxt_long trcstr into subtxt_long.
          trc_len = ( co_str + 2 ) * trc_index + co_str.
          write cl_abap_char_utilities=>cr_lf TO subtxt_long+trc_len(2).
          flush_trace subtxt_long.
        else.
          subtxt = trcstr.
*          write cl_abap_char_utilities=>cr_lf TO subtxt+co_str(2).
          flush_trace subtxt.
        endif.

        CLEAR: subtxt, subtxt_long, split_str,
               trc_index, trc_offset, trcstr.

      CATCH cx_sy_range_out_of_bounds.
    ENDTRY.
  endif.

END-OF-DEFINITION.

* &1 is a input value of type chr with length 100
* &1 will be used for trace entry in dev_w<n> file
DEFINE flush_trace.

  clear cl_http_server=>l_trace.
  concatenate 'HTTP Application> '              ##NO_TEXT   "#EC NOTEXT
              &1 into cl_http_server=>l_trace
              separated by space.
  call 'ICF_DISPATCH' id 'HTTP' field 'T'
                      id 'Trace' field cl_http_server=>l_trace.

END-OF-DEFINITION.
