class zcl_hr_a_copy_to_family definition
  public
  inheriting from /bobf/cl_lib_a_supercl_simple
  final
  create public .

  public section.

    methods /bobf/if_frw_action~execute
        redefinition .
  protected section.
  private section.
endclass.



class zcl_hr_a_copy_to_family implementation.
  method /bobf/if_frw_action~execute.
    data lt_relatives type zthri_candidate_relatives.
    data lt_family    type zthri_candidate_family.
    data ls_family    type ref to zshri_candidate_family.

    data(zif_header_associations) = zif_hr_i_candidateheader4_c_co=>sc_association.
    data(zif_header_node) = zif_hr_i_candidateheader4_c_co=>sc_node.


    io_read->retrieve( exporting iv_node = is_ctx-node_key
                             it_key  = it_key
                   importing et_data = lt_relatives ).

    data(lt_header_key) = it_key.
    lt_header_key[ 1 ]-key = lt_relatives[ 1 ]-parent_key.

    io_read->retrieve_by_association(
      exporting it_key         = lt_header_key
                iv_node        = zif_header_node-zhr_i_candidateheader
                iv_association = zif_header_associations-zhr_i_candidateheader-_candidatefamily
                iv_fill_data   = abap_true
      importing et_data        = lt_family ).

    loop at lt_relatives reference into data(ls_relatives).
      select single id into @data(lv_id)
        from zhr_i_type_relat_vh
        where description = @ls_relatives->relat_degree.

      if not ( lv_id = 1 or lv_id = 2 ).
        continue.
      endif.

      if line_exists( lt_family[ relat_id = ls_relatives->relat_id
                                 vorna    = ls_relatives->relat_name
                                 nachn    = ls_relatives->relat_fio
                                 nach2    = ls_relatives->relat_otch ] ).
        continue.
      endif.

      create data ls_family.
      ls_family->relat_id = lv_id.
      ls_family->relat_degree = ls_relatives->relat_degree.
      ls_family->vorna        = ls_relatives->relat_name.
      ls_family->nachn        = ls_relatives->relat_fio.
      ls_family->nach2        = ls_relatives->relat_otch.
      ls_family->job          = ls_relatives->relat_work.

      io_modify->create( iv_source_node_key = zif_header_node-zhr_i_candidateheader
                         iv_source_key      = lt_header_key[ 1 ]-key
                         iv_assoc_key       = zif_header_associations-zhr_i_candidateheader-_candidatefamily
                         iv_node            = zif_header_node-zhr_i_candidate_family
                         is_data            = ls_family ).
    endloop.
  endmethod.
endclass.