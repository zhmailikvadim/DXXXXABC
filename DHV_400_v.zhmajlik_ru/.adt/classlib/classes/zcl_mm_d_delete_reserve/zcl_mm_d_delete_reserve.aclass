CLASS zcl_mm_d_delete_reserve DEFINITION
  PUBLIC
  INHERITING FROM /bobf/cl_lib_d_supercl_simple
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    METHODS after_rfc    IMPORTING p_task TYPE clike.
    METHODS /bobf/if_frw_determination~execute
        REDEFINITION .
  PROTECTED SECTION.
  PRIVATE SECTION.
    DATA gv_resb    TYPE bapi2093_res_key-reserv_no.
    DATA gt_err_res TYPE bapirettab.
ENDCLASS.



CLASS zcl_mm_d_delete_reserve IMPLEMENTATION.

  METHOD after_rfc.

    RECEIVE RESULTS FROM FUNCTION 'ZBAPI_RESERVATION_DELETE'
      IMPORTING  reservation           = gv_resb
      TABLES     return                = gt_err_res
      EXCEPTIONS system_failure        = 1
                 communication_failure = 2
                 resource_failure      = 3
                 OTHERS                = 4.
    IF sy-subrc <> 0.
      RETURN.
    ENDIF.
  ENDMETHOD.
  METHOD /bobf/if_frw_determination~execute.

    DATA lt_header   TYPE ztmmi_reserve_header.
    READ TABLE it_key INTO DATA(lv_key) INDEX 1.
    IF sy-subrc = 0.
      SELECT SINGLE rsnum
        FROM zmm_res_header
        WHERE uuid = @lv_key-key
        INTO @DATA(lv_rsnum).
      IF sy-subrc = 0.
        CALL FUNCTION 'ZBAPI_RESERVATION_DELETE' STARTING NEW TASK 'REMOVE'
          CALLING after_rfc ON END OF TASK
          EXPORTING
            reservation = lv_rsnum.
        WAIT FOR ASYNCHRONOUS TASKS UNTIL gt_err_res IS NOT INITIAL.
        READ TABLE gt_err_res INTO DATA(ls_err) WITH KEY type = 'E'.
        IF sy-subrc = 0.
            ET_FAILED_KEY = it_key.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDMETHOD.
ENDCLASS.