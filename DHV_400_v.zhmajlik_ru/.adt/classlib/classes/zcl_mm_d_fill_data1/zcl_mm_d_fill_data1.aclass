CLASS zcl_mm_d_fill_data1 DEFINITION
  PUBLIC
  INHERITING FROM /bobf/cl_lib_d_supercl_simple
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    METHODS /bobf/if_frw_determination~execute
        REDEFINITION .
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS zcl_mm_d_fill_data1 IMPLEMENTATION.


  METHOD /bobf/if_frw_determination~execute.
*    DATA: lt_root           TYPE ztmmi_dog_val5,
*          lr_data           TYPE REF TO zsmmi_dog_val5,
*          lt_key            TYPE /bobf/t_frw_key,
*          lt_changed_fields TYPE /bobf/t_frw_name,
*          lo_message        TYPE REF TO /bobf/if_frw_message,
*          ls_msg            TYPE symsg..
*
*    CREATE DATA lr_data.
*
*    CHECK it_key IS NOT INITIAL.
*    io_read->retrieve(
*      EXPORTING
*        iv_node                 =     zif_mm_i_dog_val5_c=>sc_node-zmm_i_dog_val
*        it_key                  =     it_key
*      IMPORTING
*        eo_message              =     lo_message
*        et_data                 =     lt_root ).
*
*
*    READ TABLE lt_root ASSIGNING FIELD-SYMBOL(<ls_root>) INDEX 1.
*    IF sy-subrc = 0.
*      lr_data->typen = '0010'.
*      lr_data->zz_vozvrpro = '20'.
*
**      INSERT zif_mm_i_dog_val5_c=>sc_node_attribute-zmm_i_dog_val-typen INTO TABLE lt_changed_fields.
**      INSERT zif_mm_i_dog_val5_c=>sc_node_attribute-zmm_i_dog_val-zz_vozvrpro INTO TABLE lt_changed_fields.
*
*      io_modify->update(
*    EXPORTING
*      iv_node           =  is_ctx-node_key
*      iv_key            = <ls_root>-key
*      is_data           = lr_data
**      it_changed_fields = lt_changed_fields
*       ).
*
*    ENDIF.
*
*    IF 1 = 1.
*    ENDIF.

  ENDMETHOD.
ENDCLASS.