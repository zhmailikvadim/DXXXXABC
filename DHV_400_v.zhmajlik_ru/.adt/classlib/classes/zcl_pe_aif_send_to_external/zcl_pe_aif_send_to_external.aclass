class ZCL_PE_AIF_SEND_TO_EXTERNAL definition
  public
  abstract
  create public .

public section.

  methods RUN
    importing
      !IO_DATA type ANY
    returning
      value(RT_MESSAGES) type BAPIRETTAB .
protected section.

  methods GET_KEY
    importing
      !IS_DATA type ANY
    returning
      value(RO_KEY) type ref to DATA
    raising
      ZCX_PE_AIF .
  methods GET_DESTINATION
    importing
      !IS_DATA type ANY
    returning
      value(RV_DESTINATION) type Z_DESTINATION_ID
    raising
      ZCX_PE_AIF .
  methods GET_PAYLOAD
    importing
      !IS_DATA type ANY
    returning
      value(RO_PAYLOAD) type ref to DATA
    raising
      ZCX_PE_AIF .
  methods SEND
  abstract
    importing
      !IV_DESTINATION type Z_DESTINATION_ID
      !IO_PAYLOAD type ANY
      !IO_KEY type ANY
    returning
      value(RT_MESSAGES) type BAPIRETTAB .
  PRIVATE SECTION.
ENDCLASS.



CLASS ZCL_PE_AIF_SEND_TO_EXTERNAL IMPLEMENTATION.


  METHOD get_destination.
    CONSTANTS lc_destination TYPE char11 VALUE 'DESTINATION'.

    " -----------------------------------------------------------------------
    "  R E V I S I O N   H I S T O R Y                                     -
    " -----------------------------------------------------------------------
    " AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              -
    "              |            | TRANSPORT REQUESTS                       -
    " -----------------------------------------------------------------------
    " V.ZARETSKY   | 27.06.2022 | AIF Integration with other systems
    "              |            |                              -
    " -----------------------------------------------------------------------

    ASSIGN COMPONENT lc_destination OF STRUCTURE is_data TO FIELD-SYMBOL(<lv_destination>).
    IF sy-subrc = 0 AND <lv_destination> IS ASSIGNED.
      rv_destination = <lv_destination>.
    ELSE.
      RAISE EXCEPTION TYPE zcx_pe_aif MESSAGE e149(/aif/mes) WITH lc_destination.
    ENDIF.
  ENDMETHOD.


  METHOD get_key.
    " -----------------------------------------------------------------------
    "  R E V I S I O N   H I S T O R Y                                     -
    " -----------------------------------------------------------------------
    " AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              -
    "              |            | TRANSPORT REQUESTS                       -
    " -----------------------------------------------------------------------
    " V.ZARETSKY   | 27.06.2022 | AIF Integration with other systems
    "              |            |                            -
    " -----------------------------------------------------------------------
    ASSIGN COMPONENT 'KEY' OF STRUCTURE is_data TO FIELD-SYMBOL(<ls_key>).
    IF sy-subrc = 0 AND <ls_key> IS ASSIGNED.
      CREATE DATA ro_key LIKE <ls_key>.
      ASSIGN ro_key->* TO FIELD-SYMBOL(<ls_key1>).
      <ls_key1> = <ls_key>.
    ELSE.
      RETURN.
    ENDIF.
  ENDMETHOD.


  METHOD get_payload.
    " -----------------------------------------------------------------------
    "  R E V I S I O N   H I S T O R Y                                     -
    " -----------------------------------------------------------------------
    " AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              -
    "              |            | TRANSPORT REQUESTS                       -
    " -----------------------------------------------------------------------
    " V.ZARETSKY   | 27.06.2022 | AIF Integration with other systems
    "              |            |                             -
    " -----------------------------------------------------------------------

    ASSIGN COMPONENT 'PAYLOAD' OF STRUCTURE is_data TO FIELD-SYMBOL(<ls_payload>).
    IF sy-subrc = 0 AND <ls_payload> IS ASSIGNED.
      CREATE DATA ro_payload LIKE <ls_payload>.
      ASSIGN ro_payload->* TO FIELD-SYMBOL(<ls_payload1>).
      <ls_payload1> = <ls_payload>.
    ELSE.
      RAISE EXCEPTION TYPE zcx_pe_aif MESSAGE e149(/aif/mes) WITH 'PAYLOAD'.
    ENDIF.
  ENDMETHOD.


  method run.
    " -----------------------------------------------------------------------
    "  R E V I S I O N   H I S T O R Y                                     -
    " -----------------------------------------------------------------------
    " AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              -
    "              |            | TRANSPORT REQUESTS                       -
    " -----------------------------------------------------------------------
    " V.ZARETSKY   | 27.06.2022 | AIF Integration with other systems
    "              |            |
    " -----------------------------------------------------------------------

    try.
        data(lv_destination) = get_destination( io_data ).
        data(lo_payload) = get_payload( io_data ).
        data(lo_key)   = get_key( io_data ).
        rt_messages = send( iv_destination = lv_destination
                            io_payload     = lo_payload
                            io_key = lo_key ).

      catch zcx_pe_aif into data(lo_exception).
        call function '/AIF/UTIL_ADD_MSG'
          exporting
            msgty      = lo_exception->if_t100_dyn_msg~msgty
            msgid      = lo_exception->if_t100_message~t100key-msgid
            msgno      = lo_exception->if_t100_message~t100key-msgno
            msgv1      = lo_exception->if_t100_dyn_msg~msgv1
            msgv2      = lo_exception->if_t100_dyn_msg~msgv2
            msgv3      = lo_exception->if_t100_dyn_msg~msgv3
            msgv4      = lo_exception->if_t100_dyn_msg~msgv4
          tables
            return_tab = rt_messages.

    endtry.
  endmethod.
ENDCLASS.