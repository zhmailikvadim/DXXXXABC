*&---------------------------------------------------------------------*
*& Report Z_CHECK_INOB
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
report zehs_r_generate_uuid.
constants gc_uuid_initial type /bobf/conf_key value '00000000000000000000000000000000'.
data lt_log_tc_t    type table of zehs_log_tc_tmp.
data lt_work_stop_t type table of zehs_work_stop_t.
data lt_tickout_h_t type table of zehs_tickout_h_t.
data lt_sanctions_t type table of zehs_sanctions_t.
data lt_log_pers_t  type table of zehs_log_pers_t.
data lt_log_hs_t    type table of zehs_log_hs_t.
data lt_documents_t type table of zehs_documents_t.
data lv_task        type string.
data lt_sign        type standard table of bapisignat.
data lt_comps       type standard table of bapicompon.
data lt_signature   type dpcommon_t_bapisignat.
data lt_content     type standard table of bapiconten.
data lt_components  type standard table of bapicompon.
data lt_signature1  type dpcommon_t_bapisignat.
data lt_content1    type standard table of bapiconten.
data lt_components1 type standard table of bapicompon.
data lv_uuid        type string.
data lt_prop        type sbdst_properties.
data lt_del_prop    type sbdst_dproperties.


select * from zehs_log_tc
  into table @data(lt_log_tc).
select * from zehs_work_stop
  into table @data(lt_work_stop).
select * from zehs_tickout_h
  into table @data(lt_tickout_h).
select * from zehs_sanctions
  into table @data(lt_sanctions).
select * from zehs_log_pers
  into table @data(lt_log_pers).
select * from zehs_log_hs
  into table @data(lt_log_hs).
select * from zehs_documents
  into table @data(lt_documents).

lt_log_tc_t = corresponding #( lt_log_tc ).
lt_work_stop_t = corresponding #( lt_work_stop ).
lt_tickout_h_t = corresponding #( lt_tickout_h ).
lt_sanctions = corresponding #( lt_sanctions ).
lt_log_pers_t = corresponding #( lt_log_pers ).
lt_log_hs_t = corresponding #( lt_log_hs ).
lt_documents_t = corresponding #( lt_documents ).

insert zehs_log_tc_tmp from table lt_log_tc_t accepting duplicate keys.
insert zehs_work_stop_t from table lt_work_stop_t accepting duplicate keys.
insert zehs_tickout_h_t from table lt_tickout_h_t accepting duplicate keys.
insert zehs_sanctions_t from table lt_sanctions_t accepting duplicate keys.
insert zehs_log_pers_t from table lt_log_pers_t accepting duplicate keys.
insert zehs_log_hs_t from table lt_log_hs_t accepting duplicate keys.
insert zehs_documents_t from table lt_documents_t accepting duplicate keys.

select * from zehs_log_tc
  into table @lt_log_tc.
delete lt_log_tc where uuid is not initial.

select * from zehs_work_stop
  into table @lt_work_stop.
delete lt_work_stop where uuid is not initial.

select * from zehs_tickout_h
  into table @lt_tickout_h.
delete lt_tickout_h where uuid is not initial.

select * from zehs_sanctions
  into table @lt_sanctions.
delete lt_sanctions where uuid is not initial.

select * from zehs_log_pers
  into table @lt_log_pers.
delete lt_log_pers where uuid is not initial.

select * from zehs_log_hs
  into table @lt_log_hs.
delete lt_log_hs where uuid_his is not initial.

select * from zehs_documents
  into table @lt_documents.
delete lt_documents where uuid is not initial.

*RETURN.

loop at lt_log_tc assigning field-symbol(<ls_log_tc>).
  <ls_log_tc>-uuid         = cl_system_uuid=>create_uuid_x16_static( ).
  <ls_log_tc>-uuid_changed = abap_true.

  loop at lt_work_stop assigning field-symbol(<ls_work_stop>) where     log_id      = <ls_log_tc>-id
                                                                    and cntrl_point = <ls_log_tc>-cntrl_point.
    <ls_work_stop>-uuid         = <ls_log_tc>-uuid.
    <ls_work_stop>-uuid_changed = abap_true.
  endloop.

  loop at lt_tickout_h assigning field-symbol(<ls_tickout_h>) where     log_id      = <ls_log_tc>-id
                                                                    and cntrl_point = <ls_log_tc>-cntrl_point.
    <ls_tickout_h>-uuid         = <ls_log_tc>-uuid.
    <ls_tickout_h>-uuid_changed = abap_true.
  endloop.

  loop at lt_sanctions assigning field-symbol(<ls_sanctions>) where     rec_id         = <ls_log_tc>-id
                                                                    and cntrl_point_id = <ls_log_tc>-cntrl_point.
    <ls_sanctions>-uuid         = <ls_log_tc>-uuid.
    <ls_sanctions>-uuid_changed = abap_true.
    loop at lt_documents assigning field-symbol(<ls_documents>) where     sanction_id    = <ls_sanctions>-id
                                                                      and cntrl_point_id = <ls_log_tc>-cntrl_point.
      <ls_sanctions>-uuid         = <ls_log_tc>-uuid.
      <ls_sanctions>-uuid_changed = abap_true.

    endloop.
  endloop.

  loop at lt_log_pers assigning field-symbol(<ls_log_pers>) where     log_tc_id   = <ls_log_tc>-id
                                                                  and cntrl_point = <ls_log_tc>-cntrl_point.
    <ls_log_pers>-uuid         = <ls_log_tc>-uuid.
    <ls_log_pers>-uuid_changed = abap_true.
  endloop.

  loop at lt_log_hs assigning field-symbol(<ls_log_hs>) where     log_id         = <ls_log_tc>-id
                                                              and cntrl_point_id = <ls_log_tc>-cntrl_point.
    <ls_log_hs>-uuid_his     = <ls_log_tc>-uuid.
    <ls_log_hs>-uuid_changed = abap_true.
  endloop.
endloop.

modify zehs_log_tc from table lt_log_tc.
modify zehs_work_stop from table lt_work_stop.
modify zehs_tickout_h from table lt_tickout_h.
modify zehs_sanctions from table lt_sanctions.
modify zehs_log_pers from table lt_log_pers.
modify zehs_log_hs from table lt_log_hs.
modify zehs_documents from table lt_documents.

sort lt_log_tc by id descending.
delete adjacent duplicates from lt_log_tc comparing id.

loop at lt_log_tc assigning <ls_log_tc>.
  data(lv_success) = zcl_api_attachments=>insert_uuid_into_signature(
                         iv_object_key = |{ shift_left( val = <ls_log_tc>-id
                                                        sub = '0' ) }LG|
                         iv_uuid       = <ls_log_tc>-uuid  ).
endloop.

loop at lt_work_stop assigning <ls_work_stop>.
  lv_success = zcl_api_attachments=>insert_uuid_into_signature(
                   iv_object_key = |{ shift_left( val = <ls_work_stop>-num_id
                                                  sub = '0' ) }LG|
                   iv_uuid       = <ls_work_stop>-uuid  ).
endloop.

loop at lt_sanctions assigning <ls_sanctions>.
  lv_success = zcl_api_attachments=>insert_uuid_into_signature( iv_object_key = |{  shift_left( val = <ls_sanctions>-id
                                                                                                sub = '0' ) }|
                                                                iv_uuid       = <ls_sanctions>-uuid  ).
endloop.

loop at lt_log_hs assigning <ls_log_hs>.
  lv_success = zcl_api_attachments=>insert_uuid_into_signature( iv_object_key = |{  shift_left( val = <ls_log_hs>-id
                                                                                                sub = '0' ) }|
                                                                iv_uuid       = <ls_log_hs>-uuid_his  ).
endloop.