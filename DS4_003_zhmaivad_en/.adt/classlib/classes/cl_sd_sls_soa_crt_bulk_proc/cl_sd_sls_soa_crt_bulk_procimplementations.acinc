*"* use this source file for the definition and implementation of
*"* local helper classes, interface definitions and type
*"* declarations
*"* use this source file for the definition and implementation of
*"* local helper classes, interface definitions and type
*"* declarations


class ldcl_processing_single definition for testing final.
  public section.
    interfaces: if_sd_sls_soa_crt_single_proc.
    types: begin of tcs_results,
             ext_document_id type char40,
             result_tab      type bapiret2_t,
           end of tcs_results.

    class-data: st_results type standard table of tcs_results with key ext_document_id.
endclass.
class ldcl_processing_single implementation.

  method if_sd_sls_soa_crt_single_proc~process_single.
    read table st_results into data(ls_result) with key ext_document_id = is_customerreturn-external_document_id.
    cl_aunit_assert=>assert_subrc(
      act = sy-subrc
      msg = 'Test ist no set up correctly' ).
    rt_bapiret2_t = ls_result-result_tab.
 endmethod.

endclass.
class ldcl_factory definition for testing final.
  public section.
    types: begin of tls_calls,
             ext_rev_timestamp type ext_rev_tmstmp,
             ext_bus_syst_id   type sd_ext_bus_syst_id,
             test_run_flag     type abap_bool,
           end of tls_calls.
    interfaces: if_sd_sls_soa_factory.
    data: mt_calls type table of tls_calls.
endclass.

class ldcl_factory implementation.

  method if_sd_sls_soa_factory~get_custreturn_processing_sing.

    insert value #(
      ext_rev_timestamp = iv_ext_rev_tmstmp
      ext_bus_syst_id   = iv_ext_bus_syst_id
      test_run_flag     = iv_test_run_flag ) into table mt_calls.

    ro_instance = new ldcl_processing_single( ).

  endmethod.

endclass.