************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DZESHKAT     | 01.02.2023 | 16848 Bad debt provision                 *
*              |            | DS4K940851                               *
*----------------------------------------------------------------------*
* DZESHKAT     | 25.08.2023 | 22074 Enhancement for posting            *
*              |            | DS4K955338                               *
*----------------------------------------------------------------------*
* DZESHKAT     | 19.03.2024 | 30086 No acc to push all butt inside App *
*              |            | DS4K984196                               *
*----------------------------------------------------------------------*
CLASS lhc_postlog DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.
   TYPES:
    BEGIN OF gtyp_from_fe_bukrs,
      operator TYPE option,
      values   TYPE STANDARD TABLE OF bukrs WITH DEFAULT KEY,
    END OF gtyp_from_fe_bukrs,
    BEGIN OF gtyp_from_fe_gjahr,
      operator TYPE option,
      values   TYPE STANDARD TABLE OF gjahr WITH DEFAULT KEY,
    END OF gtyp_from_fe_gjahr,
    BEGIN OF gtyp_from_fe_monat,
      operator TYPE option,
      values   TYPE STANDARD TABLE OF monat WITH DEFAULT KEY,
    END OF gtyp_from_fe_monat,
    BEGIN OF gtyp_filers,
      bukrs TYPE STANDARD TABLE OF gtyp_from_fe_bukrs WITH DEFAULT KEY,
      gjahr TYPE STANDARD TABLE OF gtyp_from_fe_gjahr WITH DEFAULT KEY,
      perio TYPE STANDARD TABLE OF gtyp_from_fe_monat WITH DEFAULT KEY,
    END OF gtyp_filers.

    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
##NEEDED IMPORTING keys REQUEST requested_authorizations FOR postlog RESULT result.

    METHODS read FOR READ
##NEEDED IMPORTING keys FOR READ postlog RESULT result.

    METHODS lock FOR LOCK
##NEEDED IMPORTING keys FOR LOCK postlog.

    METHODS getapprove FOR READ
##NEEDED IMPORTING keys FOR FUNCTION postlog~getapprove RESULT result.

    METHODS recalculate FOR READ
##NEEDED IMPORTING keys FOR FUNCTION postlog~recalculate RESULT result.

    METHODS simulationmode FOR READ
##NEEDED IMPORTING keys FOR FUNCTION postlog~simulationmode RESULT result.

ENDCLASS.

CLASS lhc_postlog IMPLEMENTATION.

  METHOD get_instance_authorizations.
    RETURN.
  ENDMETHOD.

  METHOD read.
    RETURN.
  ENDMETHOD.

  METHOD lock.
    RETURN.
  ENDMETHOD.

  METHOD getapprove.

  DATA(lt_keys) = keys.
  DATA(lv_cid) = keys[ 1 ]-%cid.

  DATA ls_filters TYPE gtyp_filers.
  DATA lr_bukrs TYPE RANGE OF  bukrs.
  DATA lv_gjahr TYPE gjahr.
  DATA lv_perio TYPE monat.
  DATA lv_low  TYPE bukrs.
  DATA lv_high TYPE bukrs.

"Convert JSON to Internal table
  /ui2/cl_json=>deserialize( EXPORTING json = lt_keys[ 1 ]-%param-filters
                                    pretty_name = /ui2/cl_json=>pretty_mode-camel_case
                     CHANGING data = ls_filters ).

  LOOP AT ls_filters-bukrs ASSIGNING FIELD-SYMBOL(<ls_bukrs>).
    lv_low = <ls_bukrs>-values[ 1 ].

    READ TABLE <ls_bukrs>-values INDEX 2 ASSIGNING FIELD-SYMBOL(<lv_2nd_line>).
    IF sy-subrc = 0.
        lv_high = <lv_2nd_line>.
    ENDIF.

    APPEND VALUE #( sign = 'I' option = <ls_bukrs>-operator
    low = lv_low high = lv_high ) TO lr_bukrs.
  ENDLOOP.

  lv_gjahr = ls_filters-gjahr[ 1 ]-values[ 1 ].
  lv_perio = ls_filters-perio[ 1 ]-values[ 1 ].

  DATA(lo_report) = NEW zcl_fi_bad_debt_calc( ).

  DATA(lt_users_wo_auth) =
    lo_report->get_approval(
    it_bukrs = lr_bukrs[]
    iv_gjahr = lv_gjahr
    iv_monat = lv_perio ).

  LOOP AT lt_users_wo_auth ASSIGNING FIELD-SYMBOL(<lv_user>).
     MESSAGE w001(zfi_bad_debt) WITH <lv_user> INTO data(lv_result_txt).
     INSERT VALUE #(
        %cid            = lv_cid
        %param-severity = zcl_fi_bad_debt_auth=>mc_severity_error
        %param-text     = lv_result_txt ) INTO TABLE result.
  ENDLOOP.

  ENDMETHOD.

 METHOD recalculate.

  DATA ls_filters TYPE gtyp_filers.
  DATA lr_bukrs TYPE RANGE OF  bukrs.
  DATA lv_gjahr TYPE gjahr.
  DATA lv_perio TYPE monat.
  DATA lv_low TYPE bukrs.
  DATA lv_high TYPE bukrs.
  DATA(lt_keys) = keys.

"Convert JSON to Internal table
  /ui2/cl_json=>deserialize( EXPORTING json = lt_keys[ 1 ]-%param-filters
                                    pretty_name = /ui2/cl_json=>pretty_mode-camel_case
                     CHANGING data = ls_filters ).

  LOOP AT ls_filters-bukrs ASSIGNING FIELD-SYMBOL(<ls_bukrs>).
    lv_low = <ls_bukrs>-values[ 1 ].

    READ TABLE <ls_bukrs>-values INDEX 2 ASSIGNING FIELD-SYMBOL(<lv_2nd_line>).
    IF sy-subrc = 0.
        lv_high = <lv_2nd_line>.
    ENDIF.

    APPEND VALUE #( sign = 'I' option = <ls_bukrs>-operator
    low = lv_low high = lv_high ) TO lr_bukrs.
  ENDLOOP.

  lv_gjahr = ls_filters-gjahr[ 1 ]-values[ 1 ].
  lv_perio = ls_filters-perio[ 1 ]-values[ 1 ].

  DATA(lo_report) = NEW zcl_fi_bad_debt_calc( ).
    lo_report->re_processing(  "
    it_bukrs = lr_bukrs[]
    iv_gjahr = lv_gjahr
    iv_monat = lv_perio ).

  ENDMETHOD.


  METHOD SimulationMode.
  DATA ls_filters TYPE gtyp_filers.
  DATA lr_bukrs TYPE RANGE OF  bukrs.
  DATA lv_gjahr TYPE gjahr.
  DATA lv_perio TYPE monat.
  DATA lv_low TYPE bukrs.
  DATA lv_high TYPE bukrs.
  DATA(lt_keys) = keys.

"Convert JSON to Internal table
    /ui2/cl_json=>deserialize( EXPORTING json = lt_keys[ 1 ]-%param-filters
                                    pretty_name = /ui2/cl_json=>pretty_mode-camel_case
                     CHANGING data = ls_filters ).

  LOOP AT ls_filters-bukrs ASSIGNING FIELD-SYMBOL(<ls_bukrs>).
    lv_low = <ls_bukrs>-values[ 1 ].

    READ TABLE <ls_bukrs>-values INDEX 2 ASSIGNING FIELD-SYMBOL(<lv_2nd_line>).
    IF sy-subrc = 0.
        lv_high = <lv_2nd_line>.
    ENDIF.

    APPEND VALUE #( sign = 'I' option = <ls_bukrs>-operator
    low = lv_low high = lv_high ) TO lr_bukrs.
  ENDLOOP.

  lv_gjahr = ls_filters-gjahr[ 1 ]-values[ 1 ].
  lv_perio = ls_filters-perio[ 1 ]-values[ 1 ].

  DATA(lo_report) = NEW zcl_fi_bad_debt_calc( ).
    lo_report->simulation(
    it_bukrs = lr_bukrs[]
    iv_gjahr = lv_gjahr
    iv_monat = lv_perio ).

  ENDMETHOD.

ENDCLASS.

CLASS lsc_zfi_i_post_log DEFINITION INHERITING FROM cl_abap_behavior_saver.
  PROTECTED SECTION.

    METHODS finalize REDEFINITION.

    METHODS check_before_save REDEFINITION.

    METHODS save REDEFINITION.

    METHODS cleanup REDEFINITION.

    METHODS cleanup_finalize REDEFINITION.

ENDCLASS.

CLASS lsc_zfi_i_post_log IMPLEMENTATION.

  METHOD finalize.
    RETURN.
  ENDMETHOD.

  METHOD check_before_save.
    RETURN.
  ENDMETHOD.

  METHOD save.
    RETURN.
  ENDMETHOD.

  METHOD cleanup.
    RETURN.
  ENDMETHOD.

  METHOD cleanup_finalize.
    RETURN.
  ENDMETHOD.

ENDCLASS.