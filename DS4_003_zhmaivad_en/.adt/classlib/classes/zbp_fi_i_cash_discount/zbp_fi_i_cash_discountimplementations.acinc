*************************************************************************
**  R E V I S I O N   H I S T O R Y                                     *
*************************************************************************
** AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
**              |            | TRANSPORT REQUESTS                       *
*************************************************************************
* BERNAANT     | 14.02.2023 | 17584 : Cash discount program - AIF       *
*              |            | DS4K942457                                *
*-----------------------------------------------------------------------*
CLASS lhc__cashdiscount DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.

    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
      IMPORTING keys REQUEST requested_authorizations FOR _cashdiscount RESULT result ##NEEDED.

    METHODS update FOR MODIFY
      IMPORTING entities FOR UPDATE _cashdiscount ##NEEDED.

    METHODS read FOR READ
      IMPORTING keys FOR READ _cashdiscount RESULT result ##NEEDED.

    METHODS lock FOR LOCK
      IMPORTING keys FOR LOCK _cashdiscount ##NEEDED.

    METHODS changeposting FOR MODIFY
      IMPORTING keys FOR ACTION _cashdiscount~changeposting RESULT result ##NEEDED.

    METHODS cashdiscountcorrectionfunction FOR MODIFY
      IMPORTING keys FOR ACTION _cashdiscount~cashdiscountcorrectionfunction ##NEEDED.


ENDCLASS.

CLASS lhc__cashdiscount IMPLEMENTATION.

  METHOD get_instance_authorizations.

    RETURN.
  ENDMETHOD.

  METHOD update.
    RETURN.
  ENDMETHOD.

  METHOD read.

    SELECT * FROM zfi_i_cash_discount                     "#EC CI_SUBRC
     FOR ALL ENTRIES IN @keys
     WHERE companycode        = @keys-companycode
       AND customer           = @keys-customer
       AND accountingdocument = @keys-accountingdocument
       AND clearingdocument   = @keys-clearingdocument
       AND billingdocument    = @keys-billingdocument
       INTO CORRESPONDING FIELDS OF TABLE @result.

  ENDMETHOD.

  METHOD lock.
    RETURN.
  ENDMETHOD.

  METHOD changeposting.

    DATA: lt_cash_discount_update TYPE TABLE OF zfi_t_cashdiscp.
    " Read 1 time the Parameter - will be the same for all
    READ TABLE keys INDEX 1 ASSIGNING FIELD-SYMBOL(<ls_key>).
    IF sy-subrc = 0 AND <ls_key>-%param-posting IS NOT INITIAL.
      " Read entity based on Keys
      READ ENTITIES OF zfi_i_cash_discount IN LOCAL MODE
              ENTITY _cashdiscount
          ALL FIELDS
          WITH CORRESPONDING #( keys )
          RESULT DATA(lt_cash_discount).

      IF lt_cash_discount IS NOT INITIAL.
        LOOP AT lt_cash_discount ASSIGNING FIELD-SYMBOL(<ls_cash_discount>).
          APPEND INITIAL LINE TO lt_cash_discount_update ASSIGNING FIELD-SYMBOL(<ls_cash_discount_update>).
          <ls_cash_discount_update> = CORRESPONDING #( <ls_cash_discount> ).
          <ls_cash_discount_update>-posting = <ls_key>-%param-posting .
          <ls_cash_discount>-posting = <ls_key>-%param-posting.
        ENDLOOP.
        MODIFY zfi_t_cashdiscp FROM TABLE lt_cash_discount_update. "#EC CI_SUBRC

        "update status
        MODIFY ENTITIES OF zfi_i_cash_discount IN LOCAL MODE
          ENTITY _cashdiscount
            UPDATE FIELDS ( posting )
            WITH VALUE #( FOR key IN keys ( %tky    = key-%tky
                                            posting = <ls_key>-%param-posting ) ).

        " Read changed data for action result
        READ ENTITIES OF zfi_i_cash_discount IN LOCAL MODE
          ENTITY _cashdiscount
             ALL FIELDS WITH CORRESPONDING #( keys )
             RESULT DATA(lt_cash_discount_updated).

        " Change result to apply new values in UI
        result = VALUE #( FOR ls_cash_discount IN lt_cash_discount_updated ( %tky   = ls_cash_discount-%tky
                                                                             %param = ls_cash_discount ) ).

      ENDIF.

    ENDIF.
  ENDMETHOD.

  METHOD cashdiscountcorrectionfunction.
    TYPES:
      BEGIN OF ltyp_filter,
        operator TYPE string,
        values   TYPE STANDARD TABLE OF string WITH DEFAULT KEY,
      END OF ltyp_filter,
      BEGIN OF ltyp_filers,
        companycode            TYPE STANDARD TABLE OF ltyp_filter WITH DEFAULT KEY,
        customer               TYPE STANDARD TABLE OF ltyp_filter WITH DEFAULT KEY,
        clearingdate           TYPE STANDARD TABLE OF ltyp_filter WITH DEFAULT KEY,
        accountingdocumenttype TYPE STANDARD TABLE OF ltyp_filter WITH DEFAULT KEY,
        clearingdocument       TYPE STANDARD TABLE OF ltyp_filter WITH DEFAULT KEY,
        accountingdocument     TYPE STANDARD TABLE OF ltyp_filter WITH DEFAULT KEY,
        billingdocument        TYPE STANDARD TABLE OF ltyp_filter WITH DEFAULT KEY,
        doccurr                TYPE STANDARD TABLE OF ltyp_filter WITH DEFAULT KEY,
        distributionchannel    TYPE STANDARD TABLE OF ltyp_filter WITH DEFAULT KEY,
        division               TYPE STANDARD TABLE OF ltyp_filter WITH DEFAULT KEY,
        fiscalyear             TYPE STANDARD TABLE OF ltyp_filter WITH DEFAULT KEY,
        material               TYPE STANDARD TABLE OF ltyp_filter WITH DEFAULT KEY,
        posting                TYPE STANDARD TABLE OF ltyp_filter WITH DEFAULT KEY,
        postingdate            TYPE STANDARD TABLE OF ltyp_filter WITH DEFAULT KEY,
        profitcenter           TYPE STANDARD TABLE OF ltyp_filter WITH DEFAULT KEY,
        salesorganization      TYPE STANDARD TABLE OF ltyp_filter WITH DEFAULT KEY,
        soldtoparty            TYPE STANDARD TABLE OF ltyp_filter WITH DEFAULT KEY,
        taxcode                TYPE STANDARD TABLE OF ltyp_filter WITH DEFAULT KEY,
      END OF ltyp_filers.
    DATA ls_filters TYPE ltyp_filers.
    DATA: ls_cash_discount_correction TYPE zfi_s_cash_discount_correction,
          lr_companycode              TYPE RANGE OF string,
          lr_customer                 TYPE RANGE OF string,
          lr_clearingdate             TYPE RANGE OF string,
          lr_accountingdocumenttype   TYPE RANGE OF string,
          lr_clearingdocument         TYPE RANGE OF augbl,
          lr_accountingdocument       TYPE RANGE OF belnr_d,
          lr_billingdocument          TYPE RANGE OF vbeln,
          lr_doccurr                  TYPE RANGE OF string,
          lr_distributionchannel      TYPE RANGE OF string,
          lr_division                 TYPE RANGE OF string,
          lr_fiscalyear               TYPE RANGE OF string,
          lr_material                 TYPE RANGE OF string,
          lr_posting                  TYPE RANGE OF string,
          lr_postingdate              TYPE RANGE OF string,
          lr_profitcenter             TYPE RANGE OF string,
          lr_salesorganization        TYPE RANGE OF string,
          lr_soldtoparty              TYPE RANGE OF string,
          lr_taxcode                  TYPE RANGE OF string.

    READ TABLE keys INDEX 1 ASSIGNING FIELD-SYMBOL(<ls_key>).
    IF sy-subrc = 0.
      "Convert JSON to Internal Table
      /ui2/cl_json=>deserialize( EXPORTING json        = <ls_key>-%param-filters
                                           pretty_name = /ui2/cl_json=>pretty_mode-camel_case
                                 CHANGING  data        = ls_filters ).

      IF ls_filters IS NOT INITIAL.
        DATA(lo_convertor) = NEW zcl_pe_fe2be_conversor(  ).
        " SET CompanyCode Range
        IF ls_filters-companycode IS NOT INITIAL.
          TRY.
              lr_companycode = lo_convertor->get_be_range( it_fe_filter = ls_filters-companycode ).
            CATCH zcx_pe_fe2be_conversor ##NO_HANDLER.
          ENDTRY.
        ENDIF.
        " SET Customer Range
        IF ls_filters-customer IS NOT INITIAL.
          TRY.
              lr_customer = lo_convertor->get_be_range( it_fe_filter = ls_filters-customer ).
            CATCH zcx_pe_fe2be_conversor ##NO_HANDLER.
          ENDTRY.
        ENDIF.
        " SET ClearingDate  Range
        IF ls_filters-clearingdate IS NOT INITIAL.
          TRY.
              lr_clearingdate = lo_convertor->get_be_daterange( it_fe_filter = ls_filters-clearingdate ).
            CATCH zcx_pe_fe2be_conversor ##NO_HANDLER.
          ENDTRY.
        ENDIF.
        " SET AccountigDocumentType Range
        IF ls_filters-accountingdocumenttype IS NOT INITIAL.
          TRY.
              lr_accountingdocumenttype = lo_convertor->get_be_range( it_fe_filter = ls_filters-accountingdocumenttype ).
            CATCH zcx_pe_fe2be_conversor ##NO_HANDLER.
          ENDTRY.
        ENDIF.
        " SET ClearingDocument Range
        IF ls_filters-clearingdocument IS NOT INITIAL.
          LOOP AT ls_filters-clearingdocument ASSIGNING FIELD-SYMBOL(<ls_clearingdocument>).
            APPEND VALUE #( sign = 'I' option = <ls_clearingdocument>-operator low = CONV augbl( |{ <ls_clearingdocument>-values[ 1 ] ALPHA = IN }| ) ) TO lr_clearingdocument.
          ENDLOOP.
        ENDIF.
        " SET AccountigDocument Range
        IF ls_filters-accountingdocument IS NOT INITIAL.
          LOOP AT ls_filters-accountingdocument ASSIGNING FIELD-SYMBOL(<ls_accountingdocument>).
            APPEND VALUE #( sign = 'I' option = <ls_accountingdocument>-operator low = CONV belnr_d( |{ <ls_accountingdocument>-values[ 1 ] ALPHA = IN }| ) ) TO lr_accountingdocument.
          ENDLOOP.
        ENDIF.
        " SET BillingDocument Range
        IF ls_filters-billingdocument IS NOT INITIAL.
          LOOP AT ls_filters-billingdocument ASSIGNING FIELD-SYMBOL(<ls_billingdocument>).
            APPEND VALUE #( sign = 'I' option = <ls_billingdocument>-operator low = CONV #( |{ <ls_billingdocument>-values[ 1 ] ALPHA = IN }| ) ) TO lr_billingdocument.
          ENDLOOP.
        ENDIF.
        " SET DocCur Range
        IF ls_filters-doccurr IS NOT INITIAL.
          TRY.
              lr_doccurr = lo_convertor->get_be_range( it_fe_filter = ls_filters-doccurr ).
            CATCH zcx_pe_fe2be_conversor ##NO_HANDLER.
          ENDTRY.
        ENDIF.
        " SET DistributionChannel Range
        IF ls_filters-distributionchannel IS NOT INITIAL.
          TRY.
              lr_distributionchannel = lo_convertor->get_be_range( it_fe_filter = ls_filters-distributionchannel ).
            CATCH zcx_pe_fe2be_conversor ##NO_HANDLER.
          ENDTRY.
        ENDIF.
        " SET Division Range
        IF ls_filters-division IS NOT INITIAL.
          TRY.
              lr_division = lo_convertor->get_be_range( it_fe_filter = ls_filters-division ).
            CATCH zcx_pe_fe2be_conversor ##NO_HANDLER.
          ENDTRY.
        ENDIF.
        " SET FiscalYear Range
        IF ls_filters-fiscalyear IS NOT INITIAL.
          TRY.
              lr_fiscalyear = lo_convertor->get_be_range( it_fe_filter = ls_filters-fiscalyear ).
            CATCH zcx_pe_fe2be_conversor ##NO_HANDLER.
          ENDTRY.
        ENDIF.
        " SET Material Range
        IF ls_filters-material IS NOT INITIAL.
          TRY.
              lr_material = lo_convertor->get_be_range( it_fe_filter = ls_filters-material ).
            CATCH zcx_pe_fe2be_conversor ##NO_HANDLER.
          ENDTRY.
        ENDIF.
        " SET Posting Range
        IF ls_filters-posting IS NOT INITIAL.
          TRY.
              lr_posting = lo_convertor->get_be_range( it_fe_filter = ls_filters-posting ).
            CATCH zcx_pe_fe2be_conversor ##NO_HANDLER.
          ENDTRY.
        ENDIF.
        " SET PostingDate Range
        IF ls_filters-postingdate IS NOT INITIAL.
          TRY.
              lr_postingdate = lo_convertor->get_be_daterange( it_fe_filter = ls_filters-postingdate ).
            CATCH zcx_pe_fe2be_conversor ##NO_HANDLER.
          ENDTRY.
        ENDIF.
        " SET ProfitCenter Range
        IF ls_filters-profitcenter IS NOT INITIAL.
          TRY.
              lr_profitcenter = lo_convertor->get_be_range( it_fe_filter = ls_filters-profitcenter ).
            CATCH zcx_pe_fe2be_conversor ##NO_HANDLER.
          ENDTRY.
        ENDIF.
        " SET SalesOrganization Range
        IF ls_filters-salesorganization IS NOT INITIAL.
          TRY.
              lr_salesorganization = lo_convertor->get_be_range( it_fe_filter = ls_filters-salesorganization ).
            CATCH zcx_pe_fe2be_conversor ##NO_HANDLER.
          ENDTRY.
        ENDIF.
        " SET SoldToParty Range
        IF ls_filters-soldtoparty IS NOT INITIAL.
          TRY.
              lr_soldtoparty = lo_convertor->get_be_range( it_fe_filter = ls_filters-soldtoparty ).
            CATCH zcx_pe_fe2be_conversor ##NO_HANDLER.
          ENDTRY.
        ENDIF.
        " SET TaxCode Range
        IF ls_filters-taxcode IS NOT INITIAL.
          TRY.
              lr_taxcode = lo_convertor->get_be_range( it_fe_filter = ls_filters-taxcode ).
            CATCH zcx_pe_fe2be_conversor ##NO_HANDLER.
          ENDTRY.
        ENDIF.

        SELECT *                                          "#EC CI_SUBRC
        FROM zfi_i_cash_discount
        INTO TABLE @DATA(lt_cash)
            WHERE companycode            IN @lr_companycode
              AND customer               IN @lr_customer
              AND clearingdate           IN @lr_clearingdate
              AND accountingdocumenttype IN @lr_accountingdocumenttype
              AND clearingdocument       IN @lr_clearingdocument
              AND accountingdocument     IN @lr_accountingdocument
              AND billingdocument        IN @lr_billingdocument
              AND doccurr                IN @lr_doccurr
              AND distributionchannel    IN @lr_distributionchannel
              AND division               IN @lr_division
              AND fiscalyear             IN @lr_fiscalyear
              AND material               IN @lr_material
              AND posting                IN @lr_posting
              AND postingdate            IN @lr_postingdate
              AND profitcenter           IN @lr_profitcenter
              AND salesorganization      IN @lr_salesorganization
              AND soldtoparty            IN @lr_soldtoparty
            AND taxcode                IN @lr_taxcode.

        IF lt_cash IS NOT INITIAL.
          ls_cash_discount_correction-lines = CORRESPONDING #( lt_cash ).
*       Trigger AIF call. FM need to escape DUMP while COMMIT
          CALL FUNCTION 'ZFI_FM_CASH_DISCOUNT_CORRECT' DESTINATION 'NONE'
            EXPORTING
              is_aif = ls_cash_discount_correction ##ENH_OK
                       EXCEPTIONS
                       system_failure
                       communication_failure.

        ENDIF.
      ENDIF.
    ENDIF.
  ENDMETHOD.

ENDCLASS.

CLASS lsc_zfi_i_cash_discount DEFINITION INHERITING FROM cl_abap_behavior_saver.
  PROTECTED SECTION.

    METHODS finalize REDEFINITION.

    METHODS check_before_save REDEFINITION.

    METHODS save REDEFINITION.

    METHODS cleanup REDEFINITION.

    METHODS cleanup_finalize REDEFINITION.
ENDCLASS.

CLASS lsc_zfi_i_cash_discount IMPLEMENTATION.

  METHOD finalize.
    RETURN.
  ENDMETHOD.

  METHOD check_before_save.
    RETURN.
  ENDMETHOD.

  METHOD save.
    RETURN.
  ENDMETHOD.

  METHOD cleanup.
    RETURN.
  ENDMETHOD.

  METHOD cleanup_finalize.
    RETURN.
  ENDMETHOD.
ENDCLASS.