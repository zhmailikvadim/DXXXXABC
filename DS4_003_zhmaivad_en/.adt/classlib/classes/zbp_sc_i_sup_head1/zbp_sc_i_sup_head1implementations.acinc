************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* SRIKAVEN     | 04.11.2022 | 14542     : [Backend]Mass Create SUP- Cu *
*              |            | DS4K932997                               *
*----------------------------------------------------------------------*
CLASS lhc_suphead DEFINITION INHERITING FROM cl_abap_behavior_handler FINAL.
  PRIVATE SECTION.

    METHODS createguid FOR MODIFY
      IMPORTING keys FOR ACTION suphead~createguid RESULT result.

    METHODS getguid FOR MODIFY
##NEEDED
      IMPORTING keys FOR ACTION suphead~getguid RESULT result.
    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
##NEEDED
      IMPORTING keys REQUEST requested_authorizations FOR suphead RESULT result.

    METHODS get_instance_features FOR INSTANCE FEATURES
##NEEDED
      IMPORTING keys REQUEST requested_features FOR suphead RESULT result.
    METHODS read FOR READ
##NEEDED
      IMPORTING keys FOR READ suphead RESULT result.

ENDCLASS.

CLASS lhc_suphead IMPLEMENTATION.


  METHOD createguid.
    DATA :lt_variant TYPE TABLE OF zsc_t_supvariant.
    DATA lv_msg TYPE string.
    TRY.
        DATA(lv_guid) =  cl_system_uuid=>if_system_uuid_static~create_uuid_x16( ).
      CATCH cx_uuid_error INTO DATA(lo_error).
        DATA(lv_message) = lo_error->if_message~get_text( ).
        APPEND VALUE #(  %msg = new_message_with_text( text = lv_message
                                   severity = if_abap_behv_message=>severity-error
                                 ) )
                 TO reported-suphead.
    ENDTRY.
    DATA(lv_converted_value) = CONV string( lv_guid ).
    lv_msg = '$#' && lv_converted_value.
    APPEND VALUE #(  %msg = new_message_with_text( text = lv_msg
                                   severity = if_abap_behv_message=>severity-success
                                 ) )
                 TO reported-suphead.
    LOOP AT keys ASSIGNING FIELD-SYMBOL(<ls_keys>).
      IF sy-tabix NE 1.
        APPEND VALUE #(  material = <ls_keys>-material
                         guid = lv_guid
                         plant = <ls_keys>-plant
                         created_at = sy-datum
                         created_by = sy-uname ) TO lt_variant.
      ENDIF.
    ENDLOOP.
    IF lt_variant IS NOT INITIAL.
      CALL FUNCTION 'ZSC_FM_SUP_TABLE_UPDATE'
        TABLES
          it_tab                = lt_variant.
##FM_SUBRC_OK
      IF sy-subrc IS NOT INITIAL.
        CLEAR sy-subrc.
      ENDIF.
    ENDIF.
  ENDMETHOD.

  METHOD getguid.
    READ TABLE keys ASSIGNING FIELD-SYMBOL(<ls_keys>) INDEX 1.
    IF sy-subrc IS INITIAL AND <ls_keys> IS ASSIGNED.
      DATA(lv_create_guid) = <ls_keys>-%param-create_guid.
      DATA(lv_guid) = <ls_keys>-%param-guid.
      WAIT UP TO 2 SECONDS.
      zcl_sc_background_handler=>create_sup_in_background( iv_variant_uuid = lv_guid iv_sup_uuid = lv_create_guid ).
    ENDIF.

  ENDMETHOD.

  ##NEEDED
  METHOD get_instance_authorizations.

  ENDMETHOD.



  ##NEEDED
  METHOD get_instance_features.
  ENDMETHOD.
  ##NEEDED
  METHOD read.
  ENDMETHOD.

ENDCLASS.

CLASS lsc_zsc_i_sup_head DEFINITION INHERITING FROM cl_abap_behavior_saver FINAL.
  PROTECTED SECTION.

    METHODS finalize REDEFINITION.

    METHODS check_before_save REDEFINITION.

    METHODS save REDEFINITION.

    METHODS cleanup REDEFINITION.

    METHODS cleanup_finalize REDEFINITION.

ENDCLASS.

CLASS lsc_zsc_i_sup_head IMPLEMENTATION.
  ##NEEDED
  METHOD finalize.
  ENDMETHOD.
  ##NEEDED
  METHOD check_before_save.
  ENDMETHOD.
  ##NEEDED
  METHOD save.
  ENDMETHOD.
  ##NEEDED
  METHOD cleanup.
  ENDMETHOD.
  ##NEEDED
  METHOD cleanup_finalize.
  ENDMETHOD.

ENDCLASS.