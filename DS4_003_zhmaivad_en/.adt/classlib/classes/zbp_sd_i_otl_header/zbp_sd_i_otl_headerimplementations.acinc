***********************************************************************
*  R E V I S I O N   H I S T O R Y                                    *
***********************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION             *
*              |            | TRANSPORT REQUESTS                      *
***********************************************************************
*  NAVARGUI    | 02.04.2024 | 29949 : OTL App                         *
*              |            | DS4K983282                              *
*---------------------------------------------------------------------*
CLASS lhc__header DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.

    METHODS read FOR READ
      IMPORTING keys FOR READ _header RESULT result.

    METHODS rba_item FOR READ
      IMPORTING keys_rba FOR READ _header\_item FULL result_requested RESULT result LINK association_links.

    METHODS cba_item FOR MODIFY
      IMPORTING entities_cba FOR CREATE _header\_item.

    METHODS accept FOR MODIFY
      IMPORTING keys FOR ACTION _header~accept RESULT result.

    METHODS complete FOR MODIFY
      IMPORTING keys FOR ACTION _header~complete RESULT result.

    METHODS CreateT FOR MODIFY
      IMPORTING keys FOR ACTION _header~CreateT.

    METHODS get_instance_features FOR INSTANCE FEATURES
      IMPORTING keys   REQUEST requested_features FOR _header
      RESULT    result.

ENDCLASS.

CLASS lhc__header IMPLEMENTATION.

  METHOD read.
    SELECT * FROM zsd_i_otl_header
     FOR ALL ENTRIES IN @keys
     WHERE transferlist = @keys-transferlist
     INTO CORRESPONDING FIELDS OF TABLE @result. "#EC CI_SUBRC "#EC CI_FAE_NO_LINES_OK
  ENDMETHOD.

  METHOD rba_item.
  ENDMETHOD.

  METHOD cba_item.
  ENDMETHOD.

  METHOD accept.
    DATA: lt_aufi TYPE wrf_rw04a_tty.

    READ ENTITIES OF  zsd_i_otl_header IN LOCAL MODE
    ENTITY _header
        ALL FIELDS
        WITH CORRESPONDING #( keys )
        RESULT DATA(lt_otl_header).

    READ TABLE keys ASSIGNING FIELD-SYMBOL(<ls_keys>) INDEX 1.
    IF sy-subrc IS INITIAL.

      SELECT * FROM zsd_i_aufi
      INTO CORRESPONDING FIELDS OF TABLE @lt_aufi
      WHERE abeln = @<ls_keys>-transferlist.

      IF sy-subrc IS INITIAL.
        LOOP AT lt_aufi ASSIGNING FIELD-SYMBOL(<ls_aufi>).
          <ls_aufi>-vbukz = 'U'.
          <ls_aufi>-updkz = 'X'.
          <ls_aufi>-wmerf = 'X'.
        ENDLOOP.

        CALL FUNCTION 'WAUF_ALLOCATIONTABLE_UPD'
          EXPORTING
            im_gnart                    = 'A'
            im_allocation_data_selected = abap_true               "Should be always set
          TABLES
            im_aufi                     = lt_aufi.

        result = VALUE #( FOR ls_otl_result IN lt_otl_header ( transferlist = ls_otl_result-transferlist
                                        %param    = ls_otl_result
                                      ) ).

      ENDIF.
    ENDIF.
  ENDMETHOD.

  METHOD complete.
    DATA: lt_aufi TYPE wrf_rw04a_tty.

    READ ENTITIES OF  zsd_i_otl_header IN LOCAL MODE
    ENTITY _header
        ALL FIELDS
        WITH CORRESPONDING #( keys )
        RESULT DATA(lt_otl_header).

    READ TABLE keys ASSIGNING FIELD-SYMBOL(<ls_keys>) INDEX 1.
    IF sy-subrc IS INITIAL.

      SELECT * FROM zsd_i_aufi
      INTO CORRESPONDING FIELDS OF TABLE @lt_aufi
      WHERE abeln = @<ls_keys>-transferlist.

      IF sy-subrc IS INITIAL.
        LOOP AT lt_aufi ASSIGNING FIELD-SYMBOL(<ls_aufi>).
          <ls_aufi>-vbukz = 'U'.
          <ls_aufi>-updkz = 'X'.
          <ls_aufi>-wmerf = 'X'.
          <ls_aufi>-bmerf = 'X'.

        ENDLOOP.

        CALL FUNCTION 'WAUF_ALLOCATIONTABLE_UPD'
          EXPORTING
            im_gnart                    = 'A'
            im_allocation_data_selected = abap_true               "Should be always set
          TABLES
            im_aufi                     = lt_aufi.

        result = VALUE #( FOR ls_otl_result IN lt_otl_header ( transferlist = ls_otl_result-transferlist
                                        %param    = ls_otl_result
                                      ) ).

      ENDIF.
    ENDIF.
  ENDMETHOD.

  METHOD CreateT.
    if 1 = 1.

    endif.
  ENDMETHOD.

  METHOD get_instance_features.
    DATA: ls_result LIKE LINE OF result.

    READ ENTITIES OF zsd_i_otl_header IN LOCAL MODE
    ENTITY _header
    ALL FIELDS WITH CORRESPONDING #( keys )
    RESULT DATA(lt_otl_header).

    LOOP AT lt_otl_header ASSIGNING FIELD-SYMBOL(<ls_otl_header>).
      ls_result-%key = <ls_otl_header>-%key.

      IF <ls_otl_header>-status = 'New'.
        ls_result-%action-accept = if_abap_behv=>fc-o-enabled.
        ls_result-%action-complete = if_abap_behv=>fc-o-disabled.
        ls_result-%action-CreateT = if_abap_behv=>fc-o-disabled.
      ENDIF.

      IF <ls_otl_header>-status = 'Pending'.
        ls_result-%action-accept = if_abap_behv=>fc-o-disabled.
        ls_result-%action-CreateT = if_abap_behv=>fc-o-enabled.
        IF <ls_otl_header>-ScannedItems <> 0.
            ls_result-%action-complete = if_abap_behv=>fc-o-enabled.
        ENDIF.
      ENDIF.

      APPEND ls_result TO result.
    ENDLOOP.

  ENDMETHOD.

ENDCLASS.

CLASS lhc__item DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.

    METHODS read FOR READ
      IMPORTING keys FOR READ _item RESULT result.

    METHODS rba_header FOR READ
      IMPORTING keys_rba FOR READ _item\_header FULL result_requested RESULT result LINK association_links.

ENDCLASS.

CLASS lhc__item IMPLEMENTATION.

  METHOD read.
  ENDMETHOD.

  METHOD rba_header.
  ENDMETHOD.

ENDCLASS.

CLASS lsc_zsd_i_otl_header DEFINITION INHERITING FROM cl_abap_behavior_saver.
  PROTECTED SECTION.

    METHODS finalize REDEFINITION.

    METHODS check_before_save REDEFINITION.

    METHODS save REDEFINITION.

    METHODS cleanup REDEFINITION.

    METHODS cleanup_finalize REDEFINITION.

ENDCLASS.

CLASS lsc_zsd_i_otl_header IMPLEMENTATION.

  METHOD finalize.
  ENDMETHOD.

  METHOD check_before_save.
  ENDMETHOD.

  METHOD save.
  ENDMETHOD.

  METHOD cleanup.
  ENDMETHOD.

  METHOD cleanup_finalize.
  ENDMETHOD.

ENDCLASS.