************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* GUPTANI1     | 10.12.2022 | FB_17650_SD_[Feature] [BUILD] PR Mass Change  and San *
*              |            | DS4K942637
*----------------------------------------------------------------------*
* GUPTANI1     | 24.02.2023 | B_18423_SD_[BUILD][Defects] PR Mass Change and Sani *
*              |            | DS4K944944
*----------------------------------------------------------------------*

CLASS lsc_zsd_i_pr_sanity DEFINITION INHERITING FROM cl_abap_behavior_saver ##CLASS_FINAL.

  PROTECTED SECTION.

    METHODS save_modified REDEFINITION.

ENDCLASS.

CLASS lsc_zsd_i_pr_sanity IMPLEMENTATION.

  METHOD save_modified.

    DATA: lt_pritem    TYPE TABLE OF bapimereqitemimp,
          lt_pritemx   TYPE TABLE OF bapimereqitemx,
          ls_pritem    TYPE bapimereqitemimp,
          ls_pritemx   TYPE bapimereqitemx,
          lv_prno_prev TYPE banfn,
          lt_prerror   TYPE STANDARD TABLE OF zsd_t_pr_err,
          ls_itemcust  TYPE mmpur_ppr_s_bapi_pritem_ext,
          lt_itemcust  TYPE zsp_tt_pr_bapi_pritem_ext.

    lt_prerror = CORRESPONDING #( update-prerror MAPPING FROM ENTITY ).

    SORT   lt_prerror BY banfn bnfpo DESCENDING.

    LOOP AT  lt_prerror ASSIGNING FIELD-SYMBOL(<ls_prerror>).

      IF <ls_prerror>-banfn = lv_prno_prev OR sy-tabix = 1.

        ls_pritem-preq_item = <ls_prerror>-bnfpo.
        ls_pritemx-preq_item = <ls_prerror>-bnfpo.
        ls_pritemx-preq_itemx = abap_true.
        ls_itemcust-key = <ls_prerror>-bnfpo.

        CASE <ls_prerror>-msg_code.
          WHEN '002' OR '003'.
            ls_pritem-fixed_vend = <ls_prerror>-flief.
            ls_pritemx-fixed_vend = abap_true.


          WHEN '004'.
            ls_itemcust-data-zz1_everss_pri = <ls_prerror>-zz1_everss_pri.
            ls_itemcust-datax-zz1_everss_pri = abap_true.
            APPEND ls_itemcust TO lt_itemcust.

          WHEN '005' OR '006' OR '007' OR '008'.
            ls_itemcust-data-zz1_mm_exfactorydt_pri = <ls_prerror>-zz1_mm_exfactorydt_pri.
            ls_itemcust-datax-zz1_mm_exfactorydt_pri = abap_true.
            APPEND ls_itemcust TO lt_itemcust.

          WHEN '009'.
            ls_itemcust-data-zz1_adi_m_planned_pri = <ls_prerror>-zz1_adi_m_planned_pri.
            ls_itemcust-datax-zz1_adi_m_planned_pri = abap_true.
            APPEND ls_itemcust TO lt_itemcust.

          WHEN '010'.
            ls_itemcust-data-zz1_adi_m_leadtimeplan_pri = <ls_prerror>-zz1_adi_m_leadtimeplan_pri.
            ls_itemcust-datax-zz1_adi_m_leadtimeplan_pri = abap_true.
            APPEND ls_itemcust TO lt_itemcust.

          WHEN '011'.
            ls_itemcust-data-zz1_mm_scmsegment_pri = <ls_prerror>-zz1_mm_scmsegment_pri.
            ls_itemcust-datax-zz1_mm_scmsegment_pri = abap_true.
            APPEND ls_itemcust TO lt_itemcust.

          WHEN '012' OR '013'.
            ls_itemcust-data-zz1_mm_tradecomodel_pri = <ls_prerror>-zz1_mm_tradecomodel_pri.
            ls_itemcust-datax-zz1_mm_tradecomodel_pri = abap_true.
            APPEND ls_itemcust TO lt_itemcust.

          WHEN '014'.
            ls_itemcust-data-zz1_adi_m_promoflag_pri = <ls_prerror>-zz1_adi_m_promoflag_pri.
            ls_itemcust-datax-zz1_adi_m_promoflag_pri = abap_true.
            APPEND ls_itemcust TO lt_itemcust.

          WHEN '015'.
            ls_pritem-store_loc = <ls_prerror>-lgort.
            ls_pritemx-store_loc = abap_true.

        ENDCASE.

        APPEND ls_pritem TO lt_pritem.
        APPEND ls_pritemx TO lt_pritemx.


      ELSEIF lt_itemcust IS NOT INITIAL.

        CALL FUNCTION 'ZSP_FM_PR_UPDATE_CUST'
          EXPORTING
            iv_number     = lv_prno_prev
            iv_nocommit   = 'X'
          CHANGING
            ch_pritem     = lt_pritem
            ch_pritemx    = lt_pritemx
            ch_pritemcust = lt_itemcust.

      ELSE.

        CALL FUNCTION 'BAPI_PR_CHANGE'
          EXPORTING
            number  = lv_prno_prev                    " Purchase Requisition Number
          TABLES
            pritem  = lt_pritem            " Transfer Structure for Enjoy Purchase Req. - Item Data
            pritemx = lt_pritemx.            " Change Parameter for Enjoy Purchase Requisition - Item Data
      ENDIF.

      lv_prno_prev =  <ls_prerror>-banfn.

    ENDLOOP.

    IF <ls_prerror> IS ASSIGNED.

      IF lt_itemcust IS NOT INITIAL.

        CALL FUNCTION 'ZSP_FM_PR_UPDATE_CUST'
          EXPORTING
            iv_number     = lv_prno_prev
            iv_nocommit   = 'X'
          CHANGING
            ch_pritem     = lt_pritem
            ch_pritemx    = lt_pritemx
            ch_pritemcust = lt_itemcust.

      ELSE.

        CALL FUNCTION 'BAPI_PR_CHANGE'
          EXPORTING
            number  = lv_prno_prev                    " Purchase Requisition Number
          TABLES
            pritem  = lt_pritem            " Transfer Structure for Enjoy Purchase Req. - Item Data
            pritemx = lt_pritemx.            " Change Parameter for Enjoy Purchase Requisition - Item Data
      ENDIF.
    ENDIF.

  ENDMETHOD.

ENDCLASS.

CLASS lhc_zsd_i_pr_sanity DEFINITION INHERITING FROM cl_abap_behavior_handler  ##CLASS_FINAL.
  PRIVATE SECTION.

    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
      IMPORTING keys ##NEEDED
                  REQUEST requested_authorizations ##NEEDED
                  FOR prsanity
      RESULT    result ##NEEDED.

    METHODS prsanitycheck FOR MODIFY
      IMPORTING keys FOR ACTION prsanity~prsanitycheck RESULT result.

ENDCLASS.

CLASS lhc_zsd_i_pr_sanity IMPLEMENTATION.

  METHOD get_instance_authorizations ##NEEDED.
  ENDMETHOD.

  METHOD prsanitycheck.

    DATA: lr_pr_num TYPE wtysc_banfn_ranges_tab.


    LOOP AT keys ASSIGNING FIELD-SYMBOL(<ls_keys>).
      APPEND VALUE #( sign = 'I'
                      option = 'EQ'
                      low  =  <ls_keys>-purchaserequisition ) TO lr_pr_num.
*

    ENDLOOP.

    CALL FUNCTION 'ZSD_FM_PR_SANITY' ##FM_SUBRC_OK
      DESTINATION 'NONE'
      EXPORTING
        it_pr_num = lr_pr_num
                    EXCEPTIONS communication_failure
                    system_failure.

    READ ENTITIES OF zsd_i_pr_sanity IN LOCAL MODE
    ENTITY prsanity
    ALL FIELDS WITH CORRESPONDING #( keys )
    RESULT DATA(lt_prsanity).

    result = VALUE #( FOR ls_prsanity IN lt_prsanity
                       ( %tky   = ls_prsanity-%tky
                         %param = ls_prsanity ) ).




  ENDMETHOD.

ENDCLASS.