************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 13.01.2023 | FB_16095_SD_[BUILD] - SO conversion tool to dedicate      *
*              |            | DS4K937868                               *
*----------------------------------------------------------------------*
* IVANOKON     | 04.08.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*
* ISAICSVI     | 20.02.2024 | 28916     : Feature - [Build] - SO Conve *
*              |            | DS4K979128                               *
*----------------------------------------------------------------------*
CLASS lhc_zsd_i_so_conversion_tool DEFINITION FINAL INHERITING FROM cl_abap_behavior_handler.
  PUBLIC SECTION.
    INTERFACES zif_sd_so_conversion_constants.

    ALIASES gc_hm_category_seq FOR zif_sd_so_conversion_constants~gc_hm_item_category_seq.

  PRIVATE SECTION.
    TYPES:
      gtyp_i_so_conv_tool_result TYPE TABLE FOR READ RESULT zsd_i_so_conversion_tool.
    TYPES:
      gtyp_i_so_conv_tool_reported TYPE RESPONSE FOR REPORTED EARLY zsd_i_so_conversion_tool.

    TYPES: BEGIN OF mtyp_filters_fe,
             ordernumber                    TYPE zpe_tt_selectall_fe_filter,
             orderitemnumber                TYPE zpe_tt_selectall_fe_filter,
             salesdocumenttype              TYPE zpe_tt_selectall_fe_filter,
             customersoldto                 TYPE zpe_tt_selectall_fe_filter,
             customershipto                 TYPE zpe_tt_selectall_fe_filter,
             salesorganization              TYPE zpe_tt_selectall_fe_filter,
             salesorganizationname          TYPE zpe_tt_selectall_fe_filter,
             distributionchannel            TYPE zpe_tt_selectall_fe_filter,
             division                       TYPE zpe_tt_selectall_fe_filter,
             requesteddeliverydate          TYPE zpe_tt_selectall_fe_filter,
             creationdate                   TYPE zpe_tt_selectall_fe_filter,
             lastchangedatetime             TYPE zpe_tt_selectall_fe_filter,
             orderitemcategory              TYPE zpe_tt_selectall_fe_filter,
             orderitemcategoryname          TYPE zpe_tt_selectall_fe_filter,
             orderitemplant                 TYPE zpe_tt_selectall_fe_filter,
             orderitemplantname             TYPE zpe_tt_selectall_fe_filter,
             orderitemproduct               TYPE zpe_tt_selectall_fe_filter,
             orderitemproductname           TYPE zpe_tt_selectall_fe_filter,
             orderitemgenericproduct        TYPE zpe_tt_selectall_fe_filter,
             orderitemgenericproductname    TYPE zpe_tt_selectall_fe_filter,
             orderitemquantity              TYPE zpe_tt_selectall_fe_filter,
             orderitemquantityunit          TYPE zpe_tt_selectall_fe_filter,
             orderitemconfirmeddeliverydate TYPE zpe_tt_selectall_fe_filter,
             orderitemfieldscalculationdone TYPE zpe_tt_selectall_fe_filter,
             orderitemfieldscalculatedon    TYPE zpe_tt_selectall_fe_filter,
             orderitemreplleadtimecheck     TYPE zpe_tt_selectall_fe_filter,
             orderitemcutoffdate            TYPE zpe_tt_selectall_fe_filter,
             orderitemcutoffdatenext        TYPE zpe_tt_selectall_fe_filter,
             orderitemdueinnextcutoffdate   TYPE zpe_tt_selectall_fe_filter,
             orderquantitysumunit           TYPE zpe_tt_selectall_fe_filter,
             orderquantitysum               TYPE zpe_tt_selectall_fe_filter,
           END OF mtyp_filters_fe.
    TYPES: BEGIN OF mtyp_filters_be,
             ordernumber                    TYPE if_rap_query_filter=>tt_range_option,
             orderitemnumber                TYPE if_rap_query_filter=>tt_range_option,
             salesdocumenttype              TYPE if_rap_query_filter=>tt_range_option,
             customersoldto                 TYPE if_rap_query_filter=>tt_range_option,
             customershipto                 TYPE if_rap_query_filter=>tt_range_option,
             salesorganization              TYPE if_rap_query_filter=>tt_range_option,
             salesorganizationname          TYPE if_rap_query_filter=>tt_range_option,
             distributionchannel            TYPE if_rap_query_filter=>tt_range_option,
             division                       TYPE if_rap_query_filter=>tt_range_option,
             requesteddeliverydate          TYPE if_rap_query_filter=>tt_range_option,
             creationdate                   TYPE if_rap_query_filter=>tt_range_option,
             lastchangedatetime             TYPE if_rap_query_filter=>tt_range_option,
             orderitemcategory              TYPE if_rap_query_filter=>tt_range_option,
             orderitemcategoryname          TYPE if_rap_query_filter=>tt_range_option,
             orderitemplant                 TYPE if_rap_query_filter=>tt_range_option,
             orderitemplantname             TYPE if_rap_query_filter=>tt_range_option,
             orderitemproduct               TYPE if_rap_query_filter=>tt_range_option,
             orderitemproductname           TYPE if_rap_query_filter=>tt_range_option,
             orderitemgenericproduct        TYPE if_rap_query_filter=>tt_range_option,
             orderitemgenericproductname    TYPE if_rap_query_filter=>tt_range_option,
             orderitemquantity              TYPE if_rap_query_filter=>tt_range_option,
             orderitemquantityunit          TYPE if_rap_query_filter=>tt_range_option,
             orderitemconfirmeddeliverydate TYPE if_rap_query_filter=>tt_range_option,
             orderitemfieldscalculationdone TYPE if_rap_query_filter=>tt_range_option,
             orderitemfieldscalculatedon    TYPE if_rap_query_filter=>tt_range_option,
             orderitemreplleadtimecheck     TYPE if_rap_query_filter=>tt_range_option,
             orderitemcutoffdate            TYPE if_rap_query_filter=>tt_range_option,
             orderitemcutoffdatenext        TYPE if_rap_query_filter=>tt_range_option,
             orderitemdueinnextcutoffdate   TYPE if_rap_query_filter=>tt_range_option,
             orderquantitysumunit           TYPE if_rap_query_filter=>tt_range_option,
             orderquantitysum               TYPE if_rap_query_filter=>tt_range_option,
           END OF mtyp_filters_be.


    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
      IMPORTING keys REQUEST requested_authorizations FOR zsd_i_so_conversion_tool RESULT result ##NEEDED.

    METHODS convert_orders
      IMPORTING
        it_orders          TYPE gtyp_i_so_conv_tool_result
        iv_target_category TYPE pstyv
        iv_background      TYPE abap_bool OPTIONAL
      EXPORTING
        ev_background_mode TYPE abap_bool
      CHANGING
        cs_reported        TYPE gtyp_i_so_conv_tool_reported.

    METHODS convert_in_foreground
      IMPORTING
        it_orders          TYPE gtyp_i_so_conv_tool_result
        iv_target_category TYPE pstyv
      CHANGING
        cs_reported        TYPE gtyp_i_so_conv_tool_reported.

    METHODS convert_in_background
      IMPORTING
        it_orders          TYPE gtyp_i_so_conv_tool_result
        iv_target_category TYPE pstyv
      CHANGING
        cs_reported        TYPE gtyp_i_so_conv_tool_reported.

    METHODS get_behv_msg_from_exception
      IMPORTING
        iif_exception      TYPE REF TO if_t100_dyn_msg
        iv_severity        TYPE if_abap_behv_message=>t_severity DEFAULT if_abap_behv_message=>severity-error
      RETURNING
        VALUE(rif_message) TYPE REF TO if_abap_behv_message.

    METHODS get_behv_msg_from_bapiret
      IMPORTING
        is_bapiret         TYPE bapiret2
      RETURNING
        VALUE(rif_message) TYPE REF TO if_abap_behv_message.

    METHODS check_items_with_generic
      CHANGING
        ct_orders   TYPE gtyp_i_so_conv_tool_result
        cs_reported TYPE gtyp_i_so_conv_tool_reported.

    METHODS move_reported_messages_to_log
      CHANGING
        cs_reported TYPE gtyp_i_so_conv_tool_reported.

    METHODS performfieldscalculation FOR MODIFY
      IMPORTING keys FOR ACTION zsd_i_so_conversion_tool~performfieldscalculation.

    METHODS converttocrossdock FOR MODIFY
      IMPORTING keys   FOR ACTION zsd_i_so_conversion_tool~converttocrossdock
                  REQUEST requested_fields
      RESULT    result ##NEEDED.

    METHODS converttodirectship FOR MODIFY
      IMPORTING keys   FOR ACTION zsd_i_so_conversion_tool~converttodirectship
                  REQUEST requested_fields
      RESULT    result ##NEEDED.

    METHODS converttonormal FOR MODIFY
      IMPORTING keys   FOR ACTION zsd_i_so_conversion_tool~converttonormal
                  REQUEST requested_fields
      RESULT    result ##NEEDED.

    METHODS converttosubcodirectship FOR MODIFY
      IMPORTING keys   FOR ACTION zsd_i_so_conversion_tool~converttosubcodirectship
                  REQUEST requested_fields
      RESULT    result ##NEEDED.

    METHODS factoryreallocationcalculation FOR MODIFY
      IMPORTING it_keys FOR ACTION zsd_i_so_conversion_tool~factoryreallocationcalculation.

    METHODS convertcrossdockstatic FOR MODIFY
      IMPORTING it_keys FOR ACTION zsd_i_so_conversion_tool~convertcrossdockstatic
                  REQUEST requested_fields
      RESULT    result ##NEEDED.

    METHODS convertdirectstatic FOR MODIFY
      IMPORTING it_keys FOR ACTION zsd_i_so_conversion_tool~convertdirectstatic
                  REQUEST requested_fields
      RESULT    result ##NEEDED.

    METHODS convertnormalstatic FOR MODIFY
      IMPORTING it_keys FOR ACTION zsd_i_so_conversion_tool~convertnormalstatic
                  REQUEST requested_fields
      RESULT    result ##NEEDED.

    METHODS convertsubcostatic FOR MODIFY
      IMPORTING it_keys FOR ACTION zsd_i_so_conversion_tool~convertsubcostatic
                  REQUEST requested_fields
      RESULT    result ##NEEDED.

    METHODS filter_conv_fe2be
      IMPORTING is_fe_filter        TYPE mtyp_filters_fe
      RETURNING VALUE(rs_be_filter) TYPE mtyp_filters_be.

ENDCLASS.

CLASS lhc_zsd_i_so_conversion_tool IMPLEMENTATION.

  METHOD get_instance_authorizations.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 13.01.2023 | FB_16095_SD_[BUILD] - SO conversion tool to dedicate      *
*              |            | DS4K937868                               *
*----------------------------------------------------------------------*
* IVANOKON     | 04.08.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

    " no specific authorizations, method is required by 'strict' behavior definition
    RETURN.

  ENDMETHOD.

  METHOD move_reported_messages_to_log.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 17.04.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*
* IVANOKON     | 04.08.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

* ATTENTION!!! This method exists as a workaround for the RAP framework limitation,
* when 'UI.lineItem.invocationGrouping: #CHANGE_SET' annotation is used for actions.
* This annotation enables the strict mode, which disallows issuing of Error and Warning
* messages in the REPORTED parameter of the action implementation method.
* If issued, the application will hang with a Gateway error in the backend /IWBEP/ERROR_LOG.


    TYPES:
      BEGIN OF ltyp_s_order_log,
        ordernumber     TYPE zsd_i_so_conversion_tool-ordernumber,
        orderitemnumber TYPE zsd_i_so_conversion_tool-orderitemnumber,
        log_instance    TYPE REF TO if_bali_log,
      END OF ltyp_s_order_log,
      ltyp_t_order_logs TYPE SORTED TABLE OF ltyp_s_order_log
                        WITH UNIQUE KEY primary_key COMPONENTS ordernumber orderitemnumber.

    DATA:
      lts_order_logs TYPE ltyp_t_order_logs.

    " Move all Order related messages to the corresponding application logs
    LOOP AT cs_reported-zsd_i_so_conversion_tool REFERENCE INTO DATA(lo_reported_order).
      READ TABLE lts_order_logs REFERENCE INTO DATA(lo_order_log)
        WITH KEY ordernumber = lo_reported_order->ordernumber
                 orderitemnumber =  lo_reported_order->orderitemnumber.

      TRY.
          IF sy-subrc <> 0.
            " Create new status log instance and move the message there
            DATA(lif_log) = zcl_sd_so_conversion_tool=>create_log(
              iv_order_number = lo_reported_order->ordernumber
              iv_order_item   = lo_reported_order->orderitemnumber
              iv_subobject    = zif_sd_so_conversion_constants=>gc_appl_log_subobject-status
            ).

            INSERT VALUE #( ordernumber = lo_reported_order->ordernumber
                            orderitemnumber =  lo_reported_order->orderitemnumber
                            log_instance = lif_log )
              INTO TABLE lts_order_logs
              REFERENCE INTO lo_order_log.

          ENDIF.

          lo_order_log->log_instance->add_abap_behavior_message( lo_reported_order->%msg ).

        CATCH cx_bali_runtime.
          CONTINUE.
      ENDTRY.

    ENDLOOP.

    CLEAR: cs_reported-zsd_i_so_conversion_tool.


    " For generic messages, delete all Error and Warning messages as they will cause the application to hang.
    DELETE cs_reported-%other
     WHERE table_line->m_severity = if_abap_behv_message=>severity-error
       AND table_line->m_severity = if_abap_behv_message=>severity-warning.


    " Save all logs
    LOOP AT lts_order_logs REFERENCE INTO lo_order_log.
      TRY.
          cl_bali_log_db=>get_instance( )->save_log(
            log = lo_order_log->log_instance
          ).

        CATCH cx_bali_runtime.
          CONTINUE.
      ENDTRY.

    ENDLOOP.

    " Wait timer to make sure that the log entries are committed
    WAIT UP TO 1 SECONDS.

  ENDMETHOD.

  METHOD convert_orders.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 13.01.2023 | FB_16095_SD_[BUILD] - SO conversion tool to dedicate      *
*              |            | DS4K937868                               *
*----------------------------------------------------------------------*
* IVANOKON     | 04.08.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

    DATA(lt_orders) = it_orders.

    check_items_with_generic(
      CHANGING
        ct_orders   = lt_orders
        cs_reported = cs_reported
    ).

    IF lines( lt_orders ) = 0.
      " No data to process.
      MESSAGE ID     zif_sd_so_conversion_constants=>gc_message_class
              TYPE   zif_sd_so_conversion_constants=>gc_msg_type-success
              NUMBER '013'
              INTO   DATA(lv_no_data_warning) ##NEEDED.

      DATA(lif_behv_message) = new_message(
        id       = zif_sd_so_conversion_constants=>gc_message_class
        number   = '013'
        severity = if_abap_behv_message=>severity-success
      ).

      APPEND lif_behv_message TO cs_reported-%other.

      RETURN.
    ENDIF.

    " Check whether the number of selected order item exceeds a set threshold.
    " If so, schedule conversion in the background (as an application job).
    IF lines( lt_orders ) >= zif_sd_so_conversion_constants~gc_min_items_for_apj OR iv_background = abap_true.

      ev_background_mode = abap_true.

      IF iv_background = abap_true.
        DATA(lv_lines) = lines( lt_orders ).
        " Number of items exceed set threshold (&1). Converting in background.
        MESSAGE ID     zif_sd_so_conversion_constants=>gc_message_class
                TYPE   zif_sd_so_conversion_constants=>gc_msg_type-information
                NUMBER '017'
                WITH lv_lines
                INTO   lv_no_data_warning.

        lif_behv_message = new_message(
          id       = zif_sd_so_conversion_constants=>gc_message_class
          number   = '017'
          severity = if_abap_behv_message=>severity-information
          v1       = lv_lines
        ).

      ELSE.
        " Number of items exceed set threshold (&1). Converting in background.
        MESSAGE ID     zif_sd_so_conversion_constants=>gc_message_class
                TYPE   zif_sd_so_conversion_constants=>gc_msg_type-information
                NUMBER '004'
                WITH   zif_sd_so_conversion_constants~gc_min_items_for_apj
                INTO   lv_no_data_warning.

        lif_behv_message = new_message(
          id       = zif_sd_so_conversion_constants=>gc_message_class
          number   = '004'
          severity = if_abap_behv_message=>severity-information
          v1       = zif_sd_so_conversion_constants~gc_min_items_for_apj
        ).

      ENDIF.

      APPEND lif_behv_message TO cs_reported-%other.


      convert_in_background(
        EXPORTING
          it_orders          = lt_orders
          iv_target_category = iv_target_category
        CHANGING
          cs_reported        = cs_reported
      ).

    ELSE.
      " Otherwise, proceed in the foreground
      convert_in_foreground(
        EXPORTING
          it_orders          = lt_orders
          iv_target_category = iv_target_category
        CHANGING
          cs_reported        = cs_reported
      ).

    ENDIF.

  ENDMETHOD.

  METHOD converttocrossdock.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 13.01.2023 | FB_16095_SD_[BUILD] - SO conversion tool to dedicate      *
*              |            | DS4K937868                               *
*----------------------------------------------------------------------*
* IVANOKON     | 17.08.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

    DATA:
      lt_results TYPE gtyp_i_so_conv_tool_result.

    READ ENTITIES OF zsd_i_so_conversion_tool IN LOCAL MODE
         ENTITY zsd_i_so_conversion_tool
         FIELDS ( ordernumber orderitemnumber orderitemgenericproduct lastchangedatetime orderitemplant orderitemconfirmeddeliverydate )
         WITH CORRESPONDING #( keys )
         RESULT lt_results
         FAILED failed
         REPORTED reported.

    TRY.

        DATA(lv_target_category) = zcl_sd_so_conversion=>get_item_category_from_hm( gc_hm_category_seq-cross_dock ).

        convert_orders(
          EXPORTING
            it_orders          = lt_results
            iv_target_category = lv_target_category
          CHANGING
            cs_reported        = reported
        ).

      CATCH zcx_pe_hm INTO DATA(lo_hm_exception).
        " Show exception on Fiori UI
        DATA(lif_behv_message) = get_behv_msg_from_exception(
          iif_exception = lo_hm_exception
          iv_severity   = if_abap_behv_message=>severity-information
        ).

        APPEND lif_behv_message TO reported-%other.

    ENDTRY.

    move_reported_messages_to_log( CHANGING cs_reported = reported ).

    READ ENTITIES OF zsd_i_so_conversion_tool IN LOCAL MODE
      ENTITY zsd_i_so_conversion_tool
          ALL FIELDS WITH CORRESPONDING #( keys )
          RESULT DATA(lt_result).


    result = VALUE #( FOR ls_result IN lt_result
                             ( %tky   = ls_result-%tky
                                %param = CORRESPONDING #( ls_result ) ) ).


  ENDMETHOD.

  METHOD converttodirectship.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 13.01.2023 | FB_16095_SD_[BUILD] - SO conversion tool to dedicate      *
*              |            | DS4K937868                               *
*----------------------------------------------------------------------*
* IVANOKON     | 17.08.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

    DATA: lt_results TYPE gtyp_i_so_conv_tool_result.

    READ ENTITIES OF zsd_i_so_conversion_tool IN LOCAL MODE
         ENTITY zsd_i_so_conversion_tool
         FIELDS ( ordernumber orderitemnumber orderitemgenericproduct lastchangedatetime orderitemplant orderitemconfirmeddeliverydate )
         WITH CORRESPONDING #( keys )
         RESULT lt_results
         FAILED failed
         REPORTED reported.

    TRY.
        DATA(lv_target_category) = zcl_sd_so_conversion=>get_item_category_from_hm( gc_hm_category_seq-direct_ship ).

        convert_orders(
          EXPORTING
            it_orders          = lt_results
            iv_target_category = lv_target_category
          CHANGING
            cs_reported        = reported
        ).

      CATCH zcx_pe_hm INTO DATA(lo_hm_exception).
        " Show exception on Fiori UI
        DATA(lif_behv_message) = get_behv_msg_from_exception(
          iif_exception = lo_hm_exception
          iv_severity   = if_abap_behv_message=>severity-information
        ).

        APPEND lif_behv_message TO reported-%other.

    ENDTRY.

    move_reported_messages_to_log( CHANGING cs_reported = reported ).

    READ ENTITIES OF zsd_i_so_conversion_tool IN LOCAL MODE
      ENTITY zsd_i_so_conversion_tool
          ALL FIELDS WITH CORRESPONDING #( keys )
          RESULT lt_results
          REPORTED DATA(ls_reported).

    result = VALUE #( FOR ls_result IN lt_results
                             ( %key   = ls_result-%key
                               %param = CORRESPONDING #( ls_result ) ) ).

  ENDMETHOD.

  METHOD converttonormal.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 13.01.2023 | FB_16095_SD_[BUILD] - SO conversion tool to dedicate      *
*              |            | DS4K937868                               *
*----------------------------------------------------------------------*
* IVANOKON     | 17.08.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

    DATA: lt_results TYPE gtyp_i_so_conv_tool_result.

    READ ENTITIES OF zsd_i_so_conversion_tool IN LOCAL MODE
         ENTITY zsd_i_so_conversion_tool
         FIELDS ( ordernumber orderitemnumber orderitemgenericproduct lastchangedatetime orderitemplant orderitemconfirmeddeliverydate )
         WITH CORRESPONDING #( keys )
         RESULT lt_results
         FAILED failed
         REPORTED reported.

    convert_orders(
      EXPORTING
        it_orders          = lt_results
        iv_target_category = zif_sd_so_conversion_constants=>gc_normal_item_category " fake category to be redetermined
      CHANGING
        cs_reported        = reported
    ).

    move_reported_messages_to_log( CHANGING cs_reported = reported ).

    READ ENTITIES OF zsd_i_so_conversion_tool IN LOCAL MODE
      ENTITY zsd_i_so_conversion_tool
          ALL FIELDS WITH CORRESPONDING #( keys )
          RESULT DATA(lt_result).

    result = VALUE #( FOR ls_result IN lt_result
                             ( %tky   = ls_result-%tky
                                %param = CORRESPONDING #( ls_result ) ) ).

  ENDMETHOD.

  METHOD converttosubcodirectship.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 13.01.2023 | FB_16095_SD_[BUILD] - SO conversion tool to dedicate      *
*              |            | DS4K937868                               *
*----------------------------------------------------------------------*
* IVANOKON     | 17.08.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

    DATA: lt_results TYPE gtyp_i_so_conv_tool_result.

    READ ENTITIES OF zsd_i_so_conversion_tool IN LOCAL MODE
         ENTITY zsd_i_so_conversion_tool
         FIELDS ( ordernumber orderitemnumber orderitemgenericproduct lastchangedatetime orderitemplant orderitemconfirmeddeliverydate )
         WITH CORRESPONDING #( keys )
         RESULT lt_results
         FAILED failed
         REPORTED reported.

    TRY.
        DATA(lv_target_category) = zcl_sd_so_conversion=>get_item_category_from_hm( gc_hm_category_seq-subco_direct_ship ).

        convert_orders(
          EXPORTING
            it_orders          = lt_results
            iv_target_category = lv_target_category
          CHANGING
            cs_reported        = reported
        ).

      CATCH zcx_pe_hm INTO DATA(lo_hm_exception).
        " Show exception on Fiori UI
        DATA(lif_behv_message) = get_behv_msg_from_exception(
          iif_exception = lo_hm_exception
          iv_severity   = if_abap_behv_message=>severity-information
        ).

        APPEND lif_behv_message TO reported-%other.

    ENDTRY.

    move_reported_messages_to_log( CHANGING cs_reported = reported ).

    READ ENTITIES OF zsd_i_so_conversion_tool IN LOCAL MODE
      ENTITY zsd_i_so_conversion_tool
          ALL FIELDS WITH CORRESPONDING #( keys )
          RESULT DATA(lt_result).

    result = VALUE #( FOR ls_result IN lt_result
                             ( %tky   = ls_result-%tky
                                %param = CORRESPONDING #( ls_result ) ) ).

  ENDMETHOD.

  METHOD get_behv_msg_from_exception.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 19.01.2023 | FB_16095_SD_[BUILD] - SO conversion tool to dedicate      *
*              |            | DS4K937868                               *
*----------------------------------------------------------------------*
* IVANOKON     | 04.08.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*
    rif_message = new_message(
      severity = iv_severity
      id       = iif_exception->if_t100_message~t100key-msgid
      number   = iif_exception->if_t100_message~t100key-msgno
      v1       = iif_exception->msgv1
      v2       = iif_exception->msgv2
      v3       = iif_exception->msgv3
      v4       = iif_exception->msgv4
    ).

  ENDMETHOD.

  METHOD get_behv_msg_from_bapiret.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 19.01.2023 | FB_16095_SD_[BUILD] - SO conversion tool to dedicate      *
*              |            | DS4K937868                               *
*----------------------------------------------------------------------*
* IVANOKON     | 04.08.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*
    rif_message = new_message(
      severity = CONV #( is_bapiret-type )
      id       = is_bapiret-id
      number   = is_bapiret-number
      v1       = is_bapiret-message_v1
      v2       = is_bapiret-message_v2
      v3       = is_bapiret-message_v3
      v4       = is_bapiret-message_v4
    ).

  ENDMETHOD.

  METHOD convert_in_foreground.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 06.04.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*
* IVANOKON     | 04.08.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

    DATA:
      lt_order_items   TYPE zif_sd_so_conversion_constants=>gtyp_order_items,
      lif_behv_message TYPE REF TO if_abap_behv_message,
      lo_so_conv       TYPE REF TO zcl_sd_so_conversion.


    " group orders requested for conversion by number
    LOOP AT it_orders INTO DATA(ls_group)
       GROUP BY ( ordernumber = ls_group-ordernumber
                  orderitemgenericproduct  = ls_group-orderitemgenericproduct )
       INTO DATA(ls_order_number) ##INTO_OK.

      CLEAR: lt_order_items.

      TRY.
          lo_so_conv = NEW #( ).
          lo_so_conv->set_order_number( ls_order_number-ordernumber ).
          lo_so_conv->set_target_itm_category( iv_target_category ).

        CATCH cx_chdo_read_error INTO DATA(lo_chdo_exception).
          lif_behv_message = get_behv_msg_from_exception(
            iif_exception = lo_chdo_exception
            iv_severity  = if_abap_behv_message=>severity-error
          ).

          LOOP AT GROUP ls_order_number REFERENCE INTO DATA(lo_order_item).
            cs_reported-zsd_i_so_conversion_tool = VALUE #( BASE cs_reported-zsd_i_so_conversion_tool
                                                            ( %msg = lif_behv_message %tky = VALUE #( ordernumber = ls_order_number-ordernumber orderitemnumber = lo_order_item->orderitemnumber ) ) ).
          ENDLOOP.

          CONTINUE.

        CATCH zcx_pe_hm INTO DATA(lo_hm_exception).
          lif_behv_message = get_behv_msg_from_exception(
            iif_exception = lo_hm_exception
            iv_severity  = if_abap_behv_message=>severity-error
          ).

          LOOP AT GROUP ls_order_number REFERENCE INTO lo_order_item.
            cs_reported-zsd_i_so_conversion_tool = VALUE #( BASE cs_reported-zsd_i_so_conversion_tool
                                                            ( %msg = lif_behv_message %tky = VALUE #( ordernumber = ls_order_number-ordernumber orderitemnumber = lo_order_item->orderitemnumber ) ) ).
          ENDLOOP.

          CONTINUE.

          CATCH cx_bali_runtime.
          CONTINUE.

      ENDTRY.

      " for each order, process its items
      LOOP AT GROUP ls_order_number REFERENCE INTO lo_order_item.
        INSERT INITIAL LINE INTO TABLE lt_order_items REFERENCE INTO DATA(lo_item).
        lo_item->itm_number = lo_order_item->orderitemnumber.
        lo_item->item_categ = lo_order_item->orderitemcategory.
        lo_item->plant      = lo_order_item->orderitemplant.
      ENDLOOP.

      lo_so_conv->set_item( lt_order_items ).

      TRY.
          " Execute conversion
          DATA(lv_is_conversion_successful) = lo_so_conv->convert_order_items( ).

          IF lv_is_conversion_successful = abap_true.
            " Order &1 successfully converted.
            MESSAGE ID     zif_sd_so_conversion_constants=>gc_message_class
                    TYPE   zif_sd_so_conversion_constants=>gc_msg_type-success
                    NUMBER '010'
                    WITH   ls_order_number-ordernumber
                    INTO   DATA(lv_conv_message) ##NEEDED.

            lif_behv_message = new_message(
              id       = zif_sd_so_conversion_constants=>gc_message_class
              number   = '010'
              severity = if_abap_behv_message=>severity-success
              v1       = ls_order_number-ordernumber
            ).

          ELSE.
            " Order &1 failed to convert. Check Application Log for details.
            MESSAGE ID     zif_sd_so_conversion_constants=>gc_message_class
                    TYPE   zif_sd_so_conversion_constants=>gc_msg_type-error
                    NUMBER '011'
                    WITH   ls_order_number-ordernumber
                    INTO   lv_conv_message.

            lif_behv_message = new_message(
              id       = zif_sd_so_conversion_constants=>gc_message_class
              number   = '011'
              severity = if_abap_behv_message=>severity-error
              v1       = ls_order_number-ordernumber
            ).

          ENDIF.

          " Add message on UI
          LOOP AT GROUP ls_order_number REFERENCE INTO lo_order_item.
            cs_reported-zsd_i_so_conversion_tool = VALUE #( BASE cs_reported-zsd_i_so_conversion_tool
                                                            ( %msg = lif_behv_message %tky = VALUE #( ordernumber = ls_order_number-ordernumber
                                                                                                      orderitemnumber = lo_order_item->orderitemnumber ) ) ).
          ENDLOOP.

        CATCH cx_bali_runtime INTO DATA(lo_bali_exception).
          " return exception message to UI
          lif_behv_message = get_behv_msg_from_exception(
            iif_exception = lo_bali_exception
            iv_severity  = if_abap_behv_message=>severity-error
          ).


          LOOP AT GROUP ls_order_number REFERENCE INTO lo_order_item.
            cs_reported-zsd_i_so_conversion_tool = VALUE #( BASE cs_reported-zsd_i_so_conversion_tool
                                                            ( %msg = lif_behv_message %tky = VALUE #( ordernumber = ls_order_number-ordernumber
                                                                                                      orderitemnumber = lo_order_item->orderitemnumber ) ) ).
          ENDLOOP.

          " do not proceed with further processing
          RETURN.
      ENDTRY.

    ENDLOOP.

    MESSAGE ID     zif_sd_so_conversion_constants=>gc_message_class
            TYPE   zif_sd_so_conversion_constants=>gc_msg_type-success
            NUMBER '013'
            INTO   lv_conv_message.

    lif_behv_message = new_message(
      id       = zif_sd_so_conversion_constants=>gc_message_class
      number   = '013'
      severity = if_abap_behv_message=>severity-success
    ).

    APPEND lif_behv_message TO cs_reported-%other.


  ENDMETHOD.

  METHOD convert_in_background.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 14.02.2023 | FB_16095_SD_[BUILD] - SO conversion tool to dedicate      *
*              |            | DS4K937868                               *
*----------------------------------------------------------------------*
* IVANOKON     | 04.08.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

    DATA: lif_behv_message  TYPE REF TO if_abap_behv_message,
          lt_sel_params     TYPE  if_apj_rt_types=>tt_value_range,
          ls_apj_cont       TYPE zcl_sd_so_conv_tool_apj_all=>gtyp_s_apj_job_container,
          lv_container      TYPE char40,
          lv_job_numb       TYPE i,
          lt_message        TYPE bal_t_msg,
          lv_job_text       TYPE apj_job_text,
          lt_job_parameters TYPE if_apj_rt_types=>tt_job_parameter_value.


    " Group orders requested for conversion by number
    LOOP AT it_orders INTO DATA(ls_group)
      GROUP BY ( ordernumber = ls_group-ordernumber
                 orderitemgenericproduct  = ls_group-orderitemgenericproduct )
      INTO DATA(ls_order_number).

      lv_job_numb += 1.

      " Collect order items
      LOOP AT GROUP ls_order_number REFERENCE INTO DATA(lo_order_item).

        " Conversion for order &1 item &2 started
        MESSAGE ID     zif_sd_so_conversion_constants=>gc_message_class
                TYPE   zif_sd_so_conversion_constants=>gc_msg_type-information
                NUMBER '019'
                WITH   ls_order_number-ordernumber
                INTO   DATA(lv_message_text) ##NEEDED.

        lt_message = VALUE bal_t_msg( ( msgid = sy-msgid
                              msgno = sy-msgno
                              msgty = sy-msgty )
                            ( msgid = sy-msgid
                              msgno = sy-msgno
                              msgty = sy-msgty
                              msgv1 = sy-msgv1 ) ).

        TRY.
            DATA(lo_log) = NEW zcl_sd_create_ball_log( iv_extnumber = CONV #( |{ ls_order_number-ordernumber }{ lo_order_item->orderitemnumber }| )
                                                       iv_object    = zif_sd_so_conversion_constants=>gc_appl_log_object
                                                       iv_subobject = zif_sd_so_conversion_constants=>gc_appl_log_subobject-details ).
            lo_log->add_item_log( lt_message ).
            lo_log->save_log( ).
          CATCH zcx_sd_ball_log.
            CONTINUE.
        ENDTRY.

        ls_apj_cont-job_number = lv_job_numb.
        ls_apj_cont-order_number = ls_order_number-ordernumber.
        ls_apj_cont-target_category = iv_target_category.
        ls_apj_cont-order_item = lo_order_item->orderitemnumber.

        cl_abap_container_utilities=>fill_container_c(
          EXPORTING
            im_value               = ls_apj_cont
          IMPORTING
            ex_container           = lv_container
          EXCEPTIONS
            illegal_parameter_type = 1
            OTHERS                 = 2 ).

        IF sy-subrc = 0.
          lt_sel_params = VALUE #( BASE lt_sel_params ( sign = 'I' option = 'EQ' low = lv_container ) ).
        ENDIF.
      ENDLOOP.

    ENDLOOP.

    " Job text in the Application Jobs Fiori application
    lv_job_text = 'Mass SO Conversion'.

    " Job parameter: Order Items
    INSERT VALUE #( name = zcl_sd_so_conversion_tool=>gc_apj_parameter-appl_job_key t_value = lt_sel_params )
      INTO TABLE lt_job_parameters.


    TRY.
        cl_apj_rt_job_scheduling_api=>schedule_job(
          EXPORTING
            iv_job_template_name   = zif_sd_so_conversion_constants~gc_apj_tmp_conv_all
            iv_job_text            = lv_job_text
            is_start_info          = VALUE #( start_immediately = abap_true )
            it_job_parameter_value = lt_job_parameters
          IMPORTING
            et_message             = DATA(lt_job_messages)
            es_job_details         = DATA(ls_job_details)
        ).
      CATCH cm_apj_base INTO DATA(lo_apj_exception).
        lif_behv_message = get_behv_msg_from_bapiret(
          is_bapiret = lo_apj_exception->get_message_as_bapiret2( )
        ).

        APPEND VALUE #( %msg = lif_behv_message )
            TO cs_reported-zsd_i_so_conversion_tool.

    ENDTRY.

    IF ls_job_details-job_name IS INITIAL
    OR line_exists( lt_job_messages[ type = zif_sd_so_conversion_constants=>gc_msg_type-error ] ).
      DATA(lv_is_scheduling_successful) = abap_false.
    ELSE.
      lv_is_scheduling_successful = abap_true.
    ENDIF.

    IF lv_is_scheduling_successful = abap_true.
      " Conversion job for Order &1 has been scheduled.
      MESSAGE ID     zif_sd_so_conversion_constants=>gc_message_class
              TYPE   zif_sd_so_conversion_constants=>gc_msg_type-information
              NUMBER '020'
              INTO lv_message_text.

      lif_behv_message = new_message(
        id       = zif_sd_so_conversion_constants=>gc_message_class
        number   = '020'
        severity = if_abap_behv_message=>severity-information ).

    ELSE.
      " Conversion job for Order &1 couldn't be scheduled.
      MESSAGE ID     zif_sd_so_conversion_constants=>gc_message_class
              TYPE   zif_sd_so_conversion_constants=>gc_msg_type-error
              NUMBER '021'
              INTO lv_message_text.

      lif_behv_message = new_message(
        id       = zif_sd_so_conversion_constants=>gc_message_class
        number   = '021'
        severity = if_abap_behv_message=>severity-error
      ).

    ENDIF.

    " Add message on UI
    APPEND VALUE #( %msg = lif_behv_message )
        TO cs_reported-zsd_i_so_conversion_tool.


  ENDMETHOD.

  METHOD check_items_with_generic.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 06.04.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

    TYPES:
      BEGIN OF ltyp_s_selected_item,
        ordernumber                    TYPE zsd_i_so_conversion_tool-ordernumber,
        orderitemnumber                TYPE zsd_i_so_conversion_tool-orderitemnumber,
        orderitemgenericproduct        TYPE zsd_i_so_conversion_tool-orderitemgenericproduct,
        orderitemconfirmeddeliverydate TYPE zsd_i_so_conversion_tool-orderitemconfirmeddeliverydate,
      END OF ltyp_s_selected_item.

    DATA:
      lts_items_selected TYPE SORTED TABLE OF ltyp_s_selected_item WITH UNIQUE KEY ordernumber orderitemnumber orderitemgenericproduct.

    CHECK ct_orders IS NOT INITIAL.

    lts_items_selected = CORRESPONDING #( ct_orders ).


    SELECT salesdocument, salesdocumentitem, genericproduct, higherlevelitem
      FROM zsd_i_so_conv_item
       FOR ALL ENTRIES IN @lts_items_selected
     WHERE salesdocument  = @lts_items_selected-ordernumber
       AND genericproduct = @lts_items_selected-orderitemgenericproduct
       AND salesdocumentrjcnreason IS INITIAL
       AND confirmeddeliverydate = @lts_items_selected-orderitemconfirmeddeliverydate
      INTO TABLE @DATA(lt_items_all).

    IF sy-subrc <> 0.
      " TODO handle
      RETURN.
    ENDIF.

    DATA(lt_items_not_selected) = FILTER #(
      lt_items_all EXCEPT IN lts_items_selected
      WHERE salesdocument     = ordernumber
        AND salesdocumentitem = orderitemnumber
        AND genericproduct    = orderitemgenericproduct
    ).

    IF lt_items_not_selected IS INITIAL.
      " All items are selected correctly with respect to the Generic Product
      RETURN.
    ENDIF.

    SORT lt_items_not_selected BY salesdocument genericproduct.
    DELETE ADJACENT DUPLICATES FROM lt_items_not_selected COMPARING salesdocument genericproduct.

    " Indicate items with incomplete set with respect to the Generic Product
    LOOP AT lt_items_not_selected REFERENCE INTO DATA(lo_generic_not_selected).
      " Not all items selected for Order &1 and Gen. Product &2. Order excluded.
      MESSAGE ID     zif_sd_so_conversion_constants=>gc_message_class
              TYPE   zif_sd_so_conversion_constants=>gc_msg_type-warning
              NUMBER '012'
              WITH   lo_generic_not_selected->salesdocument
                     lo_generic_not_selected->genericproduct
              INTO   DATA(lv_generic_product_warning) ##NEEDED.

      DATA(lif_behv_message) = new_message(
        id       = zif_sd_so_conversion_constants=>gc_message_class
        number   = '012'
        severity = if_abap_behv_message=>severity-warning
        v1       = lo_generic_not_selected->salesdocument
        v2       = lo_generic_not_selected->genericproduct
      ).

      cs_reported-zsd_i_so_conversion_tool = VALUE #( BASE cs_reported-zsd_i_so_conversion_tool
                                             FOR ls_selected IN lts_items_selected WHERE ( ordernumber = lo_generic_not_selected->salesdocument )
                                             (  %msg = lif_behv_message %tky = VALUE #( ordernumber = ls_selected-ordernumber
                                                     orderitemnumber = ls_selected-orderitemnumber ) ) ).

      DELETE ct_orders WHERE ordernumber = lo_generic_not_selected->salesdocument. "#EC CI_STDSEQ
    ENDLOOP.

  ENDMETHOD.

  METHOD performfieldscalculation.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 06.04.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*
* IVANOKON     | 04.08.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*
    DATA:
      lv_job_text       TYPE apj_job_text,
      lt_job_parameters TYPE if_apj_rt_types=>tt_job_parameter_value.

    DATA(ls_parameters) = VALUE #( keys[ 1 ]-%param OPTIONAL ).

    " Job parameter: Sales Organization
    IF ls_parameters-salesorganization IS NOT INITIAL.
      INSERT VALUE #( name    = zcl_sd_so_conv_calc_fields_apj=>gc_apj_parameter-sales_organization
                      t_value = VALUE #( ( sign = 'I' option = 'EQ' low = ls_parameters-salesorganization ) ) )
        INTO TABLE lt_job_parameters.
    ENDIF.

    " Job parameter: Item Plant
    IF ls_parameters-orderitemplant IS NOT INITIAL.
      INSERT VALUE #( name = zcl_sd_so_conv_calc_fields_apj=>gc_apj_parameter-item_plant
                      t_value = VALUE #( ( sign = 'I' option = 'EQ' low = ls_parameters-orderitemplant ) ) )
        INTO TABLE lt_job_parameters.
    ENDIF.

    " Job text in the Application Jobs Fiori application
    lv_job_text = |S.Org: { ls_parameters-salesorganization } / Plant: { ls_parameters-orderitemplant }|.
    IF lv_job_text IS INITIAL.
      lv_job_text = |{ 'SO Conversion Field Calculation:'(001) } Full|.
    ELSE.
      lv_job_text = |{ 'SO Conversion Field Calculation:'(001) } { lv_job_text }|.
    ENDIF.

    " Schedule the Application Job
    TRY.
        cl_apj_rt_job_scheduling_api=>schedule_job(
          EXPORTING
            iv_job_template_name   = zcl_sd_so_conv_calc_fields_apj=>gc_apj_template
            iv_job_text            = lv_job_text
            is_start_info          = VALUE #( start_immediately = abap_true )
            it_job_parameter_value = lt_job_parameters
          IMPORTING
            et_message             = DATA(lt_job_messages)
            es_job_details         = DATA(ls_job_details)
        ).

        IF ls_job_details-job_name IS INITIAL
        OR line_exists( lt_job_messages[ type = zif_sd_so_conversion_constants=>gc_msg_type-error ] ).
          RAISE EXCEPTION NEW cm_apj_rt( severity = zif_sd_so_conversion_constants=>gc_msg_type-error
                                         textid   = cm_apj_rt=>job_schduling_failed
                                         ).
        ENDIF.

      CATCH cm_apj_base INTO DATA(lo_apj_exception).
        " Show exception on Fiori UI
        DATA(lif_behv_message) = get_behv_msg_from_bapiret( lo_apj_exception->get_message_as_bapiret2( ) ).
        APPEND lif_behv_message TO reported-%other.
        RETURN.

    ENDTRY.


    lif_behv_message = new_message_with_text(
      severity = if_abap_behv_message=>severity-success
      text     = 'Fields calculation job has been scheduled.'
    ).

    APPEND lif_behv_message TO reported-%other.

  ENDMETHOD.

  METHOD factoryreallocationcalculation.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 04.08.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

    DATA: lv_job_text       TYPE apj_job_text,
          lt_job_parameters TYPE if_apj_rt_types=>tt_job_parameter_value.

    DATA: ls_filters_fe TYPE mtyp_filters_fe,
          ls_filters_be TYPE mtyp_filters_be.

    /ui2/cl_json=>deserialize( EXPORTING json        =  VALUE #( it_keys[ 1 ]-%param-filters OPTIONAL  )
                                         pretty_name = /ui2/cl_json=>pretty_mode-camel_case
                               CHANGING  data        = ls_filters_fe ).

    ls_filters_be = filter_conv_fe2be( ls_filters_fe ).

    IF ls_filters_be IS NOT INITIAL.

      SELECT ordernumber, salesorganization, orderitemplant
      FROM zsd_i_so_conversion_tool
      INTO TABLE @DATA(lt_calc_range)
      WHERE   ordernumber                    IN @ls_filters_be-ordernumber AND
              orderitemnumber                IN @ls_filters_be-orderitemnumber AND
              salesdocumenttype              IN @ls_filters_be-salesdocumenttype AND
              customersoldto                 IN @ls_filters_be-customersoldto AND
              customershipto                 IN @ls_filters_be-customershipto AND
              salesorganization              IN @ls_filters_be-salesorganization AND
              salesorganizationname          IN @ls_filters_be-salesorganizationname AND
              distributionchannel            IN @ls_filters_be-distributionchannel AND
              division                       IN @ls_filters_be-division AND
              requesteddeliverydate          IN @ls_filters_be-requesteddeliverydate AND
              creationdate                   IN @ls_filters_be-creationdate                   AND
              lastchangedatetime             IN @ls_filters_be-lastchangedatetime             AND
              orderitemcategory              IN @ls_filters_be-orderitemcategory              AND
              orderitemcategoryname          IN @ls_filters_be-orderitemcategoryname          AND
              orderitemplant                 IN @ls_filters_be-orderitemplant                 AND
              orderitemplantname             IN @ls_filters_be-orderitemplantname             AND
              orderitemproduct               IN @ls_filters_be-orderitemproduct               AND
              orderitemproductname           IN @ls_filters_be-orderitemproductname           AND
              orderitemgenericproduct        IN @ls_filters_be-orderitemgenericproduct        AND
              orderitemgenericproductname    IN @ls_filters_be-orderitemgenericproductname    AND
              orderitemquantity              IN @ls_filters_be-orderitemquantity              AND
              orderitemquantityunit          IN @ls_filters_be-orderitemquantityunit          AND
              orderitemconfirmeddeliverydate IN @ls_filters_be-orderitemconfirmeddeliverydate AND
              orderitemfieldscalculationdone IN @ls_filters_be-orderitemfieldscalculationdone AND
              orderitemfieldscalculatedon    IN @ls_filters_be-orderitemfieldscalculatedon    AND
              orderitemreplleadtimecheck     IN @ls_filters_be-orderitemreplleadtimecheck     AND
              orderitemcutoffdate            IN @ls_filters_be-orderitemcutoffdate            AND
              orderitemcutoffdatenext        IN @ls_filters_be-orderitemcutoffdatenext        AND
              orderitemdueinnextcutoffdate   IN @ls_filters_be-orderitemdueinnextcutoffdate   AND
              orderquantitysumunit           IN @ls_filters_be-orderquantitysumunit           AND
              orderquantitysum               IN @ls_filters_be-orderquantitysum
              GROUP BY ordernumber, salesorganization, orderitemplant.
      IF sy-subrc <> 0.
        CLEAR: lt_calc_range.
      ENDIF.
    ENDIF.

    LOOP AT lt_calc_range ASSIGNING FIELD-SYMBOL(<ls_calc_range>).
      " Job parameter: Sales Order Number
      IF <ls_calc_range>-ordernumber IS NOT INITIAL.
        READ TABLE lt_job_parameters WITH KEY name = zcl_sd_so_conv_calc_fields_apj=>gc_apj_parameter-sales_order_number
          ASSIGNING FIELD-SYMBOL(<ls_param>).
        IF <ls_param> IS ASSIGNED.
          INSERT VALUE #(  sign = 'I' option = 'EQ' low = <ls_calc_range>-ordernumber )
          INTO TABLE <ls_param>-t_value.
        ELSE.
          INSERT VALUE #( name = zcl_sd_so_conv_calc_fields_apj=>gc_apj_parameter-sales_order_number
                          t_value = VALUE #( ( sign = 'I' option = 'EQ' low = <ls_calc_range>-ordernumber ) ) )
            INTO TABLE lt_job_parameters.
        ENDIF.
      ENDIF.

    ENDLOOP.

    " Job text in the Application Jobs Fiori application
    lv_job_text = |{ 'SO Conversion Field Calculation:'(001) } { lv_job_text }|.

    " Schedule the Application Job
    TRY.
        cl_apj_rt_job_scheduling_api=>schedule_job(
          EXPORTING
            iv_job_template_name   = zcl_sd_so_conv_calc_fields_apj=>gc_apj_template
            iv_job_text            = lv_job_text
            is_start_info          = VALUE #( start_immediately = abap_true )
            it_job_parameter_value = lt_job_parameters
          IMPORTING
            et_message             = DATA(lt_job_messages)
            es_job_details         = DATA(ls_job_details)
        ).

        IF ls_job_details-job_name IS INITIAL
        OR line_exists( lt_job_messages[ type = zif_sd_so_conversion_constants=>gc_msg_type-error ] ).
          RAISE EXCEPTION NEW cm_apj_rt( severity = zif_sd_so_conversion_constants=>gc_msg_type-error
                                         textid   = cm_apj_rt=>job_schduling_failed
                                         ).
        ENDIF.

      CATCH cm_apj_base.
        RETURN.
    ENDTRY.

  ENDMETHOD.

  METHOD convertcrossdockstatic.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 04.08.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*
    DATA: lt_results TYPE gtyp_i_so_conv_tool_result.

    DATA: ls_filters_fe TYPE mtyp_filters_fe.

    /ui2/cl_json=>deserialize( EXPORTING json        = to_upper( VALUE #( it_keys[ 1 ]-%param-filters OPTIONAL ) )
                                         pretty_name = /ui2/cl_json=>pretty_mode-camel_case
                               CHANGING  data        = ls_filters_fe ).

    DATA(ls_filters_be) = filter_conv_fe2be( ls_filters_fe ).

    IF ls_filters_be IS NOT INITIAL.
      SELECT *
      FROM zsd_i_so_conversion_tool
      INTO CORRESPONDING FIELDS OF TABLE @lt_results
      WHERE   ordernumber                    IN @ls_filters_be-ordernumber AND
              orderitemnumber                IN @ls_filters_be-orderitemnumber AND
              salesdocumenttype              IN @ls_filters_be-salesdocumenttype AND
              customersoldto                 IN @ls_filters_be-customersoldto AND
              customershipto                 IN @ls_filters_be-customershipto AND
              salesorganization              IN @ls_filters_be-salesorganization AND
              salesorganizationname          IN @ls_filters_be-salesorganizationname AND
              distributionchannel            IN @ls_filters_be-distributionchannel AND
              division                       IN @ls_filters_be-division AND
              requesteddeliverydate          IN @ls_filters_be-requesteddeliverydate AND
              creationdate                   IN @ls_filters_be-creationdate                   AND
              lastchangedatetime             IN @ls_filters_be-lastchangedatetime             AND
              orderitemcategory              IN @ls_filters_be-orderitemcategory              AND
              orderitemcategoryname          IN @ls_filters_be-orderitemcategoryname          AND
              orderitemplant                 IN @ls_filters_be-orderitemplant                 AND
              orderitemplantname             IN @ls_filters_be-orderitemplantname             AND
              orderitemproduct               IN @ls_filters_be-orderitemproduct               AND
              orderitemproductname           IN @ls_filters_be-orderitemproductname           AND
              orderitemgenericproduct        IN @ls_filters_be-orderitemgenericproduct        AND
              orderitemgenericproductname    IN @ls_filters_be-orderitemgenericproductname    AND
              orderitemquantity              IN @ls_filters_be-orderitemquantity              AND
              orderitemquantityunit          IN @ls_filters_be-orderitemquantityunit          AND
              orderitemconfirmeddeliverydate IN @ls_filters_be-orderitemconfirmeddeliverydate AND
              orderitemfieldscalculationdone IN @ls_filters_be-orderitemfieldscalculationdone AND
              orderitemfieldscalculatedon    IN @ls_filters_be-orderitemfieldscalculatedon    AND
              orderitemreplleadtimecheck     IN @ls_filters_be-orderitemreplleadtimecheck     AND
              orderitemcutoffdate            IN @ls_filters_be-orderitemcutoffdate            AND
              orderitemcutoffdatenext        IN @ls_filters_be-orderitemcutoffdatenext        AND
              orderitemdueinnextcutoffdate   IN @ls_filters_be-orderitemdueinnextcutoffdate   AND
              orderquantitysumunit           IN @ls_filters_be-orderquantitysumunit           AND
              orderquantitysum               IN @ls_filters_be-orderquantitysum.
      IF sy-subrc <> 0.
        CLEAR: lt_results.
      ENDIF.
    ENDIF.

    TRY.
        DATA(lv_target_category) = zcl_sd_so_conversion=>get_item_category_from_hm( gc_hm_category_seq-cross_dock ).

      CATCH zcx_pe_hm INTO DATA(lo_hm_exception).
        " Show exception on Fiori UI
        DATA(lif_behv_message) = get_behv_msg_from_exception(
          iif_exception = lo_hm_exception
          iv_severity   = if_abap_behv_message=>severity-information
        ).

        APPEND lif_behv_message TO reported-%other.
    ENDTRY.

    convert_orders(
      EXPORTING
        it_orders          = lt_results
        iv_target_category = lv_target_category
        iv_background      = abap_true
      CHANGING
        cs_reported        = reported
    ).

    move_reported_messages_to_log( CHANGING cs_reported = reported ).

    CLEAR: reported.
  ENDMETHOD.

  METHOD convertdirectstatic.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 04.08.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*
    DATA: lt_results TYPE gtyp_i_so_conv_tool_result.

    DATA: ls_filters_fe TYPE mtyp_filters_fe.

    /ui2/cl_json=>deserialize( EXPORTING json        = to_upper( VALUE #( it_keys[ 1 ]-%param-filters OPTIONAL ) )
                                         pretty_name = /ui2/cl_json=>pretty_mode-camel_case
                               CHANGING  data        = ls_filters_fe ).

    DATA(ls_filters_be) = filter_conv_fe2be( ls_filters_fe ).

    IF ls_filters_be IS NOT INITIAL.
      SELECT *
      FROM zsd_i_so_conversion_tool
      INTO CORRESPONDING FIELDS OF TABLE @lt_results
      WHERE   ordernumber                    IN @ls_filters_be-ordernumber AND
              orderitemnumber                IN @ls_filters_be-orderitemnumber AND
              salesdocumenttype              IN @ls_filters_be-salesdocumenttype AND
              customersoldto                 IN @ls_filters_be-customersoldto AND
              customershipto                 IN @ls_filters_be-customershipto AND
              salesorganization              IN @ls_filters_be-salesorganization AND
              salesorganizationname          IN @ls_filters_be-salesorganizationname AND
              distributionchannel            IN @ls_filters_be-distributionchannel AND
              division                       IN @ls_filters_be-division AND
              requesteddeliverydate          IN @ls_filters_be-requesteddeliverydate AND
              creationdate                   IN @ls_filters_be-creationdate                   AND
              lastchangedatetime             IN @ls_filters_be-lastchangedatetime             AND
              orderitemcategory              IN @ls_filters_be-orderitemcategory              AND
              orderitemcategoryname          IN @ls_filters_be-orderitemcategoryname          AND
              orderitemplant                 IN @ls_filters_be-orderitemplant                 AND
              orderitemplantname             IN @ls_filters_be-orderitemplantname             AND
              orderitemproduct               IN @ls_filters_be-orderitemproduct               AND
              orderitemproductname           IN @ls_filters_be-orderitemproductname           AND
              orderitemgenericproduct        IN @ls_filters_be-orderitemgenericproduct        AND
              orderitemgenericproductname    IN @ls_filters_be-orderitemgenericproductname    AND
              orderitemquantity              IN @ls_filters_be-orderitemquantity              AND
              orderitemquantityunit          IN @ls_filters_be-orderitemquantityunit          AND
              orderitemconfirmeddeliverydate IN @ls_filters_be-orderitemconfirmeddeliverydate AND
              orderitemfieldscalculationdone IN @ls_filters_be-orderitemfieldscalculationdone AND
              orderitemfieldscalculatedon    IN @ls_filters_be-orderitemfieldscalculatedon    AND
              orderitemreplleadtimecheck     IN @ls_filters_be-orderitemreplleadtimecheck     AND
              orderitemcutoffdate            IN @ls_filters_be-orderitemcutoffdate            AND
              orderitemcutoffdatenext        IN @ls_filters_be-orderitemcutoffdatenext        AND
              orderitemdueinnextcutoffdate   IN @ls_filters_be-orderitemdueinnextcutoffdate   AND
              orderquantitysumunit           IN @ls_filters_be-orderquantitysumunit           AND
              orderquantitysum               IN @ls_filters_be-orderquantitysum.
      IF sy-subrc <> 0.
        CLEAR: lt_results.
      ENDIF.
    ENDIF.

    TRY.
        DATA(lv_target_category) = zcl_sd_so_conversion=>get_item_category_from_hm( gc_hm_category_seq-direct_ship ).

      CATCH zcx_pe_hm INTO DATA(lo_hm_exception).
        " Show exception on Fiori UI
        DATA(lif_behv_message) = get_behv_msg_from_exception(
          iif_exception = lo_hm_exception
          iv_severity   = if_abap_behv_message=>severity-information
        ).

        APPEND lif_behv_message TO reported-%other.
    ENDTRY.

    convert_orders(
      EXPORTING
        it_orders          = lt_results
        iv_target_category = lv_target_category
        iv_background      = abap_true
      CHANGING
        cs_reported        = reported
    ).

    move_reported_messages_to_log( CHANGING cs_reported = reported ).

    CLEAR: reported.
  ENDMETHOD.

  METHOD convertnormalstatic.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 04.08.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*
    DATA: lt_results TYPE gtyp_i_so_conv_tool_result.

    DATA: ls_filters_fe TYPE mtyp_filters_fe.

    /ui2/cl_json=>deserialize( EXPORTING json        = to_upper( VALUE #( it_keys[ 1 ]-%param-filters OPTIONAL ) )
                                         pretty_name = /ui2/cl_json=>pretty_mode-camel_case
                               CHANGING  data        = ls_filters_fe ).

    DATA(ls_filters_be) = filter_conv_fe2be( ls_filters_fe ).

    IF ls_filters_be IS NOT INITIAL.
      SELECT *
      FROM zsd_i_so_conversion_tool
      INTO CORRESPONDING FIELDS OF TABLE @lt_results
      WHERE   ordernumber                    IN @ls_filters_be-ordernumber AND
              orderitemnumber                IN @ls_filters_be-orderitemnumber AND
              salesdocumenttype              IN @ls_filters_be-salesdocumenttype AND
              customersoldto                 IN @ls_filters_be-customersoldto AND
              customershipto                 IN @ls_filters_be-customershipto AND
              salesorganization              IN @ls_filters_be-salesorganization AND
              salesorganizationname          IN @ls_filters_be-salesorganizationname AND
              distributionchannel            IN @ls_filters_be-distributionchannel AND
              division                       IN @ls_filters_be-division AND
              requesteddeliverydate          IN @ls_filters_be-requesteddeliverydate AND
              creationdate                   IN @ls_filters_be-creationdate                   AND
              lastchangedatetime             IN @ls_filters_be-lastchangedatetime             AND
              orderitemcategory              IN @ls_filters_be-orderitemcategory              AND
              orderitemcategoryname          IN @ls_filters_be-orderitemcategoryname          AND
              orderitemplant                 IN @ls_filters_be-orderitemplant                 AND
              orderitemplantname             IN @ls_filters_be-orderitemplantname             AND
              orderitemproduct               IN @ls_filters_be-orderitemproduct               AND
              orderitemproductname           IN @ls_filters_be-orderitemproductname           AND
              orderitemgenericproduct        IN @ls_filters_be-orderitemgenericproduct        AND
              orderitemgenericproductname    IN @ls_filters_be-orderitemgenericproductname    AND
              orderitemquantity              IN @ls_filters_be-orderitemquantity              AND
              orderitemquantityunit          IN @ls_filters_be-orderitemquantityunit          AND
              orderitemconfirmeddeliverydate IN @ls_filters_be-orderitemconfirmeddeliverydate AND
              orderitemfieldscalculationdone IN @ls_filters_be-orderitemfieldscalculationdone AND
              orderitemfieldscalculatedon    IN @ls_filters_be-orderitemfieldscalculatedon    AND
              orderitemreplleadtimecheck     IN @ls_filters_be-orderitemreplleadtimecheck     AND
              orderitemcutoffdate            IN @ls_filters_be-orderitemcutoffdate            AND
              orderitemcutoffdatenext        IN @ls_filters_be-orderitemcutoffdatenext        AND
              orderitemdueinnextcutoffdate   IN @ls_filters_be-orderitemdueinnextcutoffdate   AND
              orderquantitysumunit           IN @ls_filters_be-orderquantitysumunit           AND
              orderquantitysum               IN @ls_filters_be-orderquantitysum.
      IF sy-subrc <> 0.
        CLEAR: lt_results.
      ENDIF.
    ENDIF.

    convert_orders(
      EXPORTING
        it_orders          = lt_results
        iv_target_category = zif_sd_so_conversion_constants=>gc_normal_item_category
        iv_background      = abap_true
      CHANGING
        cs_reported        = reported
    ).

    move_reported_messages_to_log( CHANGING cs_reported = reported ).

    CLEAR: reported.
  ENDMETHOD.

  METHOD convertsubcostatic.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 04.08.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*
    DATA: lt_results TYPE gtyp_i_so_conv_tool_result.

    DATA: ls_filters_fe TYPE mtyp_filters_fe.

    /ui2/cl_json=>deserialize( EXPORTING json        = to_upper( VALUE #( it_keys[ 1 ]-%param-filters OPTIONAL ) )
                                         pretty_name = /ui2/cl_json=>pretty_mode-camel_case
                               CHANGING  data        = ls_filters_fe ).

    DATA(ls_filters_be) = filter_conv_fe2be( ls_filters_fe ).

    IF ls_filters_be IS NOT INITIAL.
      SELECT *
      FROM zsd_i_so_conversion_tool
      INTO CORRESPONDING FIELDS OF TABLE @lt_results
      WHERE   ordernumber                    IN @ls_filters_be-ordernumber AND
              orderitemnumber                IN @ls_filters_be-orderitemnumber AND
              salesdocumenttype              IN @ls_filters_be-salesdocumenttype AND
              customersoldto                 IN @ls_filters_be-customersoldto AND
              customershipto                 IN @ls_filters_be-customershipto AND
              salesorganization              IN @ls_filters_be-salesorganization AND
              salesorganizationname          IN @ls_filters_be-salesorganizationname AND
              distributionchannel            IN @ls_filters_be-distributionchannel AND
              division                       IN @ls_filters_be-division AND
              requesteddeliverydate          IN @ls_filters_be-requesteddeliverydate AND
              creationdate                   IN @ls_filters_be-creationdate                   AND
              lastchangedatetime             IN @ls_filters_be-lastchangedatetime             AND
              orderitemcategory              IN @ls_filters_be-orderitemcategory              AND
              orderitemcategoryname          IN @ls_filters_be-orderitemcategoryname          AND
              orderitemplant                 IN @ls_filters_be-orderitemplant                 AND
              orderitemplantname             IN @ls_filters_be-orderitemplantname             AND
              orderitemproduct               IN @ls_filters_be-orderitemproduct               AND
              orderitemproductname           IN @ls_filters_be-orderitemproductname           AND
              orderitemgenericproduct        IN @ls_filters_be-orderitemgenericproduct        AND
              orderitemgenericproductname    IN @ls_filters_be-orderitemgenericproductname    AND
              orderitemquantity              IN @ls_filters_be-orderitemquantity              AND
              orderitemquantityunit          IN @ls_filters_be-orderitemquantityunit          AND
              orderitemconfirmeddeliverydate IN @ls_filters_be-orderitemconfirmeddeliverydate AND
              orderitemfieldscalculationdone IN @ls_filters_be-orderitemfieldscalculationdone AND
              orderitemfieldscalculatedon    IN @ls_filters_be-orderitemfieldscalculatedon    AND
              orderitemreplleadtimecheck     IN @ls_filters_be-orderitemreplleadtimecheck     AND
              orderitemcutoffdate            IN @ls_filters_be-orderitemcutoffdate            AND
              orderitemcutoffdatenext        IN @ls_filters_be-orderitemcutoffdatenext        AND
              orderitemdueinnextcutoffdate   IN @ls_filters_be-orderitemdueinnextcutoffdate   AND
              orderquantitysumunit           IN @ls_filters_be-orderquantitysumunit           AND
              orderquantitysum               IN @ls_filters_be-orderquantitysum.
      IF sy-subrc <> 0.
        CLEAR: lt_results.
      ENDIF.
    ENDIF.

    TRY.
        DATA(lv_target_category) = zcl_sd_so_conversion=>get_item_category_from_hm( gc_hm_category_seq-subco_direct_ship ).
      CATCH zcx_pe_hm INTO DATA(lo_hm_exception).
        " Show exception on Fiori UI
        DATA(lif_behv_message) = get_behv_msg_from_exception(
          iif_exception = lo_hm_exception
          iv_severity   = if_abap_behv_message=>severity-information
        ).

        APPEND lif_behv_message TO reported-%other.
    ENDTRY.

    convert_orders(
      EXPORTING
        it_orders          = lt_results
        iv_target_category = lv_target_category
        iv_background      = abap_true
      CHANGING
        cs_reported        = reported
    ).

    move_reported_messages_to_log( CHANGING cs_reported = reported ).

    CLEAR: reported.

    lif_behv_message = new_message_with_text(
      severity = if_abap_behv_message=>severity-success
      text     = 'SO conversion job has been scheduled.'
    ).

    APPEND lif_behv_message TO reported-%other.

  ENDMETHOD.

  METHOD filter_conv_fe2be.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 04.08.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*
    DATA: ls_be_filter          TYPE mtyp_filters_be,
          ls_so_conversion_tool TYPE zsd_i_so_conversion_tool.

    FIELD-SYMBOLS <ls_filter> TYPE  if_rap_query_filter=>ty_range_option.

    DATA(lt_component) = CAST cl_abap_structdescr( cl_abap_typedescr=>describe_by_data( rs_be_filter ) )->get_components( ).

    LOOP AT lt_component ASSIGNING FIELD-SYMBOL(<ls_component>).
      ASSIGN COMPONENT <ls_component>-name OF STRUCTURE is_fe_filter
        TO FIELD-SYMBOL(<lt_filter_fe>).
      IF sy-subrc <> 0.
        CONTINUE.
      ENDIF.
      ASSIGN COMPONENT <ls_component>-name OF STRUCTURE ls_be_filter
        TO FIELD-SYMBOL(<lt_filter_be>).
      IF sy-subrc <> 0.
        CONTINUE.
      ENDIF.

      ASSIGN COMPONENT <ls_component>-name OF STRUCTURE ls_so_conversion_tool TO FIELD-SYMBOL(<ls_field>).
      IF sy-subrc = 0.
        TRY.
            DESCRIBE FIELD: <ls_field> TYPE DATA(lv_field_type).
            CASE lv_field_type.
              WHEN cl_abap_typedescr=>typekind_date.
                <lt_filter_be> = NEW zcl_pe_fe2be_conversor( )->get_be_daterange( <lt_filter_fe> ).
              WHEN OTHERS.
                <lt_filter_be> = NEW zcl_pe_fe2be_conversor( )->get_be_range( <lt_filter_fe> ).
            ENDCASE.
          CATCH zcx_pe_fe2be_conversor.
            CONTINUE.
        ENDTRY.
      ENDIF.

      LOOP AT <lt_filter_be> ASSIGNING <ls_filter>.      "#EC CI_NESTED
        <ls_filter>-low = to_upper( <ls_filter>-low ).
        <ls_filter>-high = to_upper( <ls_filter>-high ).
      ENDLOOP.

    ENDLOOP.

    rs_be_filter = ls_be_filter.
  ENDMETHOD.


ENDCLASS.