************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* LINGARAG     | 05.12.2023 | 25590_SP_Feature - [BUILD] TradeCo 1.5 PO  <-> Mar                *
*              |            | DS4K965604                               *
*----------------------------------------------------------------------*
CLASS lhc_mpc_rep DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.

    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
 ##NEEDED     IMPORTING keys REQUEST requested_authorizations FOR mpc_rep RESULT result.

    METHODS read FOR READ
 ##NEEDED     IMPORTING keys FOR READ mpc_rep RESULT result.

    METHODS lock FOR LOCK
##NEEDED      IMPORTING keys FOR LOCK mpc_rep.

    METHODS get_messages FOR MODIFY
      IMPORTING keys FOR ACTION mpc_rep~get_messages RESULT result.

ENDCLASS.

CLASS lhc_mpc_rep IMPLEMENTATION.

  METHOD get_instance_authorizations.
    RETURN.
  ENDMETHOD.

  METHOD read.
    RETURN.
  ENDMETHOD.

  METHOD lock.
    RETURN.
  ENDMETHOD.

  METHOD get_messages.

    DATA(ls_key) = keys[ 1 ].
    DATA lv_messages TYPE string_data.

    SELECT SINGLE * FROM zsp_c_market_po_mpc_rep INTO @DATA(ls_mpc) WHERE
       mpopurchaseorder   = @ls_key-%param-mpopurchaseorder AND  mpopurchaseorderitem = @ls_key-%param-mpopurchaseorderitem AND
       tpopurchaseorder   = @ls_key-%param-tpopurchaseorder AND tpopurchaseorderitem = @ls_key-%param-tpopurchaseorderitem AND
       tpopurchaseorderitem = @ls_key-%param-tpopurchaseorderitem AND  tsosalesdocument   = @ls_key-%param-tsosalesdocument AND
       tsosalesdocumentitem = @ls_key-%param-tsosalesdocumentitem.
    IF sy-subrc = 0.
      IF ls_mpc-p_check_vnd     IS INITIAL AND ls_mpc-p_check_tcm     IS INITIAL AND
         ls_mpc-p_check_qnt     IS INITIAL AND ls_mpc-p_check_del     IS INITIAL AND
         ls_mpc-p_check_custsta IS INITIAL AND ls_mpc-p_check_custind IS INITIAL AND
         ls_mpc-p_check_dci     IS INITIAL AND ls_mpc-p_check_shi     IS INITIAL AND
         ls_mpc-p_check_pd      IS INITIAL AND ls_mpc-p_check_ppf     IS INITIAL AND
         ls_mpc-p_check_fpd     IS INITIAL AND ls_mpc-p_check_ck      IS INITIAL AND
         ls_mpc-p_check_ii      IS INITIAL AND ls_mpc-p_check_ipd     IS INITIAL AND
         ls_mpc-p_check_lpd     IS INITIAL AND ls_mpc-p_check_opi     IS INITIAL AND
         ls_mpc-p_check_ipi     IS INITIAL AND ls_mpc-p_check_scs     IS INITIAL.

        lv_messages = |{ TEXT-027 }{ TEXT-001 }{ '"}]' }| .

      ELSE.

        IF ls_mpc-p_check_vnd = abap_true.
          DATA(lv_text_vnd) = |{ TEXT-025 }{ TEXT-003 } { ls_mpc-mpoekpasupplier } { TEXT-022 } { ls_mpc-tpoekpasupplier } { TEXT-023 }{ TEXT-026 }|.
        ENDIF.
        IF  ls_mpc-p_check_tcm = abap_true.
          DATA(lv_text_tcm) = |{ TEXT-025 }{ TEXT-004 } { ls_mpc-mpozz1_mm_tradecomodel_pdh } { TEXT-022 } { ls_mpc-tpozz1_mm_tradecomodel_pdh } { TEXT-023 }{ TEXT-026 }|.
        ENDIF.
        IF ls_mpc-p_check_qnt = abap_true.
          DATA(lv_text_qnt) = |{ TEXT-025 }{ TEXT-005 } { ls_mpc-mpoorderquantity } { TEXT-022 } { ls_mpc-tsoorderquantity } { TEXT-024 } { ls_mpc-tpoorderquantity } { TEXT-023 }{ TEXT-026 }|.
        ENDIF.
        IF ls_mpc-p_check_del = abap_true.
          DATA(lv_text_del) = |{ TEXT-025 }{ TEXT-006 } { ls_mpc-mpopurchdocumentdeletioncode } { TEXT-022 } { ls_mpc-tsosalesdocumentrjcnreason } { TEXT-024 } { ls_mpc-tpopurchdocumentdeletioncode } { TEXT-023 }{ TEXT-026 }|.
        ENDIF.
        IF ls_mpc-p_check_custsta = abap_true.
          DATA(lv_text_custsta) = |{ TEXT-025 }{ TEXT-007 } { ls_mpc-mpocustom_stat_pdi } { TEXT-022 } { ls_mpc-tpocustom_stat_pdi } { TEXT-023 }{ TEXT-026 }|.
        ENDIF.
        IF ls_mpc-p_check_custind = abap_true.
          DATA(lv_text_custind) = |{ TEXT-025 }{ TEXT-008 } { ls_mpc-mpocustin_pdi } { TEXT-022 } { ls_mpc-tpocustin_pdi } { TEXT-023 }{ TEXT-026 }|.
        ENDIF.
        IF ls_mpc-p_check_dci = abap_true.
          DATA(lv_text_dci) = |{ TEXT-025 }{ TEXT-009 } { ls_mpc-mpoiscompletelydelivered } { TEXT-022 } { ls_mpc-tpoiscompletelydelivered } { TEXT-023 }{ TEXT-026 }|.
        ENDIF.
        IF ls_mpc-p_check_shi = abap_true.
          DATA(lv_text_shi) = |{ TEXT-025 }{ TEXT-010 } { ls_mpc-mposhippinginstruction } { TEXT-022 } { ls_mpc-tposhippinginstruction } { TEXT-023 }{ TEXT-026 }|.
        ENDIF.
        IF ls_mpc-p_check_pd = abap_true.
          DATA(lv_text_pd) = |{ TEXT-025 }{ TEXT-011 } { ls_mpc-mpoadi_m_planned_pdi } { TEXT-022 } { ls_mpc-tpoadi_m_planned_pdi } { TEXT-023 }{ TEXT-026 }|.
        ENDIF.
        IF ls_mpc-p_check_ppf = abap_true.
          DATA(lv_text_ppf) = |{ TEXT-025 }{ TEXT-012 } { ls_mpc-mpoadi_m_promoflag_pdi } { TEXT-022 } { ls_mpc-tpoadi_m_promoflag_pdi } { TEXT-023 }{ TEXT-026 }|.
        ENDIF.
        IF ls_mpc-p_check_fpd = abap_true.
          DATA(lv_text_fpd) = |{ TEXT-025 }{ TEXT-013 } { ls_mpc-mpofprod_da_pdi } { TEXT-022 } { ls_mpc-tpofprod_da_pdi } { TEXT-023 }{ TEXT-026 }|.
        ENDIF.
        IF ls_mpc-p_check_ck = abap_true.
          DATA(lv_text_ck) = |{ TEXT-025 }{ TEXT-014 } { ls_mpc-mpohts_curr_pdi } { TEXT-022 } { ls_mpc-tpohts_curr_pdi } { TEXT-023 }{ TEXT-026 }|.
        ENDIF.
        IF ls_mpc-p_check_ii = abap_true.
          DATA(lv_text_ii) = |{ TEXT-025 }{ TEXT-016 } { ls_mpc-mpohts_scope_pdi } { TEXT-022 } { ls_mpc-mpohts_scope_pdi } { TEXT-023 }{ TEXT-026 }|.
        ENDIF.
        IF ls_mpc-p_check_ipd = abap_true.
          DATA(lv_text_ipd) = |{ TEXT-025 }{ TEXT-017 } { ls_mpc-mpohts_eligibility_pdi } { TEXT-022 } { ls_mpc-tpohts_eligibility_pdi } { TEXT-023 }{ TEXT-026 }|.
        ENDIF.
        IF ls_mpc-p_check_lpd = abap_true.
          DATA(lv_text_lpd) = |{ TEXT-025 }{ TEXT-018 } { ls_mpc-mpolprod_da_pdi } { TEXT-022 } { ls_mpc-tpolprod_da_pdi } { TEXT-023 }{ TEXT-026 }|.
        ENDIF.
        IF ls_mpc-p_check_opi = abap_true.
          DATA(lv_text_opi) = |{ TEXT-025 }{ TEXT-019 } { ls_mpc-mpoordprio_pdi } { TEXT-022 } { ls_mpc-tpoordprio_pdi } { TEXT-023 }{ TEXT-026 }|.
        ENDIF.
        IF ls_mpc-p_check_ipi = abap_true.
          DATA(lv_text_ipw) = |{ TEXT-025 }{ TEXT-020 } { ls_mpc-mpoprior_ind_pdi } { TEXT-022 } { ls_mpc-tpoprior_ind_pdi } { TEXT-023 }{ TEXT-026 }|.
        ENDIF.
        IF ls_mpc-p_check_scs = abap_true.
          DATA(lv_text_scs) = |{ TEXT-025 }{ TEXT-021 } { ls_mpc-mposupconf_pdi } { TEXT-022 } { ls_mpc-tposupconf_pdi } { TEXT-023 }{ TEXT-026 }|.
        ENDIF.

        DATA(lv_message1) = |{ lv_text_vnd }{ lv_text_tcm }{ lv_text_qnt }{ lv_text_del }{ lv_text_custsta }{ lv_text_custind }{ lv_text_dci }{ lv_text_shi }{ lv_text_pd }|.
        DATA(lv_message2) = |{ lv_text_ppf }{ lv_text_fpd }{ lv_text_ck }{ lv_text_ii }{ lv_text_ipd }{ lv_text_lpd }{ lv_text_opi }{ lv_text_ipw }{ lv_text_scs }|.

        IF ls_mpc-message1 IS NOT INITIAL.
          ls_mpc-message1 = |{ '[' }{ ls_mpc-message1 }{ ']' }|.
          REPLACE ALL OCCURRENCES OF '},]' IN ls_mpc-message1 WITH '}]'.
        ENDIF.
        IF ls_mpc-message2 IS NOT INITIAL.
          ls_mpc-message2 = |{ '[' }{ ls_mpc-message2 }{ ']' }|.
          REPLACE ALL OCCURRENCES OF '},]' IN ls_mpc-message2 WITH '}]'.
        ENDIF.
        lv_messages = |{ lv_message1 }{ lv_message2 }|.
      ENDIF.

      INSERT VALUE #( %cid             = ls_key-%cid
                      %param-messages  = lv_messages ) INTO TABLE result.

    ENDIF.

  ENDMETHOD.

ENDCLASS.

CLASS lsc_zsp_c_market_po_mpc_rep DEFINITION INHERITING FROM cl_abap_behavior_saver.
  PROTECTED SECTION.

    METHODS finalize REDEFINITION.

    METHODS check_before_save REDEFINITION.

    METHODS save REDEFINITION.

    METHODS cleanup REDEFINITION.

    METHODS cleanup_finalize REDEFINITION.

ENDCLASS.

CLASS lsc_zsp_c_market_po_mpc_rep IMPLEMENTATION.

  METHOD finalize.
    RETURN.
  ENDMETHOD.

  METHOD check_before_save.
    RETURN.
  ENDMETHOD.

  METHOD save.
    RETURN.
  ENDMETHOD.

  METHOD cleanup.
    RETURN.
  ENDMETHOD.

  METHOD cleanup_finalize.
    RETURN.
  ENDMETHOD.

ENDCLASS.