class ZCL_AIFPOST definition
  public
  final
  create public .

public section.

  interfaces /AIF/IF_POST_MESSAGE_PROCESS .
  interfaces IF_BADI_INTERFACE .
protected section.
private section.
ENDCLASS.



CLASS ZCL_AIFPOST IMPLEMENTATION.


METHOD /aif/if_post_message_process~post_message_processing.
  DATA:
    lr_source_data TYPE REF TO data,
    ls_xml_parse   TYPE /aif/xmlparse_data,
    lo_appl_engine TYPE REF TO /aif/if_application_engine,
    ls_ifkeys      TYPE /aif/ifkeys,
    lv_sxmsguid    TYPE sxmsguid.

  FIELD-SYMBOLS:
    <lv_ns>      TYPE /aif/ns,
    <lv_ifname>  TYPE /aif/ifname,
    <lv_ifver>   TYPE /aif/ifversion,
    <lv_status>  TYPE any,
    <lv_msgguid> TYPE any
    .
  IF SY-UNAME = 'OZCELAHM'.
   WHILE 1 = 1.

   ENDWHILE.
  ENDIF.

  ASSIGN COMPONENT /aif/if_globals=>gc_eh_fix_key_flds-msgguid OF STRUCTURE is_message_data TO <lv_msgguid>.
  ASSIGN COMPONENT /aif/if_globals=>gc_eh_fix_key_flds-status OF STRUCTURE is_message_data TO <lv_status>.
  ASSIGN COMPONENT /aif/if_globals=>gc_eh_fix_key_flds-namespace OF STRUCTURE is_message_data TO <lv_ns>.
  ASSIGN COMPONENT /aif/if_globals=>gc_eh_fix_key_flds-interface OF STRUCTURE is_message_data TO <lv_ifname>.
  ASSIGN COMPONENT /aif/if_globals=>gc_eh_fix_key_flds-interface_ver OF STRUCTURE is_message_data TO <lv_ifver>.

  ls_ifkeys-ns     = <lv_ns>.
  ls_ifkeys-ifname = <lv_ifname>.
  ls_ifkeys-ifver  = <lv_ifver>.

* Retrieve message payload if necessary
  TRY.
      IF is_post_proc-ref_to_raw IS NOT BOUND.
        lo_appl_engine = /aif/cl_aif_engine_factory=>get_engine(
            iv_ns            = ls_ifkeys-ns
            iv_ifname        = ls_ifkeys-ifname
            iv_ifversion     = ls_ifkeys-ifver
               ).

        lv_sxmsguid = <lv_msgguid>.

        lo_appl_engine->read_msg_from_persistency(
           EXPORTING
             iv_msgguid  = lv_sxmsguid
             iv_ns       = ls_ifkeys-ns
             iv_ifname   = ls_ifkeys-ifname
             iv_ifver    = ls_ifkeys-ifver
           CHANGING
             cs_xmlparse = ls_xml_parse
             cref_data = lr_source_data
             ).
      ELSE.
        lo_appl_engine = /aif/cl_aif_engine_factory=>get_engine(
            iv_ns            = ls_ifkeys-ns
            iv_ifname        = ls_ifkeys-ifname
            iv_ifversion     = ls_ifkeys-ifver
               ).

  " data(lr_logging) =  lo_appl_engine->GET_LOGGING_ENGINE( ).
TRY.

      data(lr_logging) = /aif/cl_aif_engine_factory=>get_engine(
                       iv_ns        = ls_ifkeys-ns
                       iv_ifname    = ls_ifkeys-ifname
                       iv_ifversion = ls_ifkeys-ifver )->get_logging_engine( ).

    CATCH /aif/cx_error_handling_general /aif/cx_aif_engine_not_found.
      RETURN.
  ENDTRY.
  data: ls_index type SDSLS_BUSSYS_IDX.
  ls_index = is_message_Data.

*     lr_logging->RETRIEVE_LOG(
*      EXPORTING
*        is_interface_key  = ls_ifkeys
*        iv_msgguid        = CS_MESSAGE_DATA-MSGGUID
*        iv_filter_msgtype = iv_filter_msgtype
*        is_page           = is_page
*        iv_skip_additional = iv_skip_additional
*      IMPORTING
*        et_msg_log        = et_msg_log
*        ev_count          = ev_count ).
*        lr_source_data = is_post_proc-ref_to_raw.
*      ENDIF.
*    CATCH /aif/cx_error_handling_general.
*    CATCH /aif/cx_aif_engine_not_found.
DATA: LT_LOG TYPE /AIF/S_DATA_MSG_LOG_HISTORY.
 lt_log =    lr_logging->RETRIEVE_LOG_HISTORY(
      EXPORTING
        IS_AIF_KEYS  = ls_ifkeys
        iv_msgguid        = ls_index-MSGGUID

).
        lr_source_data = is_post_proc-ref_to_raw.
      ENDIF.
    CATCH /aif/cx_error_handling_general.
    CATCH /aif/cx_aif_engine_not_found.
  ENDTRY.
data: ltt_log type bapiret2_tab,
lss_log type bapiret2.
lss_log-id = 'SD'.
LSS_LOG-log_msg_no = '003'.
APPEND LSS_LOG TO LTT_LOG.
lr_logging->add_messages( EXPORTING
  IT_LOG_MESSAGES =  ltt_log ).

lr_logging->SAVE( ).

  IF <lv_status> IS ASSIGNED.
    CASE <lv_status>.
      WHEN /aif/if_globals=>gc_eh_file_status-canceled.
        "Send Negtive Acknowledgement Out
      WHEN /aif/if_globals=>gc_eh_file_status-successful.
        "Send Positive Acknowledgement Out
      WHEN /aif/if_globals=>gc_eh_file_status-successful_w_warning.
        "Send Positive Acknowledgement with Reservation Out
    ENDCASE.
  ENDIF.
ENDMETHOD.
ENDCLASS.