CLASS zcl_ccr_application_job_delete DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES if_oo_adt_classrun .
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS ZCL_CCR_APPLICATION_JOB_DELETE IMPLEMENTATION.


  METHOD if_oo_adt_classrun~main.

    CONSTANTS lc_catalog_name      TYPE cl_apj_dt_create_content=>ty_catalog_name  VALUE 'ZDMO_RAP_GEN_CATATALOG_ENTRY'.
    CONSTANTS lc_template_name     TYPE cl_apj_dt_create_content=>ty_template_name VALUE 'ZDMO_RAP_GEN_JOB_TEMPLATE'.
    CONSTANTS lc_transport_request TYPE cl_apj_dt_create_content=>ty_transport_request VALUE 'DS4K944140'.



    DATA(lo_dt) = cl_apj_dt_create_content=>get_instance( ).

**   Delete Job Template
*    TRY.
*        DATA(lv_ok_temp) = lo_dt->delete_job_template_entry( iv_template_name     = lc_template_name
*                                                             iv_transport_request = lc_transport_request ).
*        IF lv_ok_temp = abap_true.
*          out->write( |Job template deleted successfully| ).
*        ELSE.
*          out->write( |Job template deletion failed| ).
*          RETURN.
*        ENDIF.
*
*      CATCH cx_apj_dt_content INTO DATA(lx_apj_dt_content).
*        out->write( |Job template deletion failed: { lx_apj_dt_content->get_text( ) }| ).
*        RETURN.
*    ENDTRY.


*   Delete job catalog
    TRY.
        DATA(lv_ok) = lo_dt->delete_job_cat_entry( iv_catalog_name      = lc_catalog_name
                                                   iv_transport_request = lc_transport_request ).
        IF lv_ok = abap_true.
          out->write( |Job catalog deleted successfully| ).
        ELSE.
          out->write( |Job catalog deletion failed| ).
          RETURN.
        ENDIF.

      CATCH cx_apj_dt_content INTO DATA(lx_apj_dt_content2).
        out->write( |Job catalog deletion failed: { lx_apj_dt_content2->get_text( ) }| ).
        RETURN.
    ENDTRY.

  ENDMETHOD.
ENDCLASS.