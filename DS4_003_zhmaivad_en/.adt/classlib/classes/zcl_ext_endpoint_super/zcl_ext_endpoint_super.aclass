class ZCL_EXT_ENDPOINT_SUPER definition
  public
  create public .

public section.

  data MV_TOKEN type STRING .

  methods CONSTRUCTOR
    importing
      !IV_TYPE type CHAR5 default 'VAT'
      !IV_COMPANY type BUKRS optional
      !IV_COUNTRY type LAND1_STML optional
      !IV_REPORTING_DATE_FROM type VATDATE optional
      !IV_REPORTING_DATE_TO type VATDATE optional
      !IV_POSTING_DATE_FROM type BUDAT optional
      !IV_POSTING_DATE_TO type BUDAT optional
      !IV_MONTH type NUMC2 optional
      !IV_YEAR type NUMC4 optional
      !IV_DIREC type CHAR1 default '1'
      !IV_SII_REGION type ZVAT_EXT_SII_REGION optional
      !IV_PERIOD type RPMAX optional
      !IS_DYN_FILTERS type ZSVAT_DYN_EXT_FILTERS optional
      !IV_MODEL_ID type NUMC10 optional
      !IV_FILENAME_SUFFIX type ZVAT_EXT_FILE_NAME_SUFFIX optional .
  methods SEND
    importing
      !IV_LINES type NUMC15 optional
      !IV_FILENAME_OVERWRITE type STRING optional
      !IV_EXTENSION_OVERWRITE type STRING optional
      !IT_STRING_DATA type ZVAT_EXT_STRING_T optional
      !IT_XSTRING_DATA type ZVAT_EXT_XSTRING_COUNT optional
    exporting
      !EV_RESPONSE type STRING
      !EV_STATUS_CODE type STRING
      !EV_STATUS_REASON type STRING
    raising
      ZCX_EXT_EXCEPTION
      CX_ENCRYPT_ERROR .
protected section.

  data MS_DYN_FILTERS type ZSVAT_DYN_EXT_FILTERS .
  data MV_MODEL_ID type NUMC10 .
  data MV_FILE_NAME type STRING value 'myfile.txt' ##NO_TEXT.
  data MV_TYPE type ZVAT_EXT_RUN_TYPE value 'VAT' ##NO_TEXT.
  data MV_COMPANY type BUKRS .
  data MV_COUNTRY type LAND1_STML .
  data MV_REPORTING_DATE_FROM type VATDATE .
  data MV_REPORTING_DATE_TO type VATDATE .
  data MV_POSTING_DATE_FROM type BUDAT .
  data MV_POSTING_DATE_TO type BUDAT .
  data MV_MONTH type NUMC2 .
  data MV_YEAR type NUMC4 .
  data MV_DIREC type CHAR1 value '1' ##NO_TEXT.
  data MV_SII_REGION type ZVAT_EXT_SII_REGION .
  data MV_PERIOD type RPMAX .
  data MV_FILENAME_SUFFIX type ZVAT_EXT_FILE_NAME_SUFFIX .
  constants MC_DEFAULT_EXTENSION type STRING value '.txt' ##NO_TEXT.
  constants MC_JSON_EXTENSION type STRING value '.json' ##NO_TEXT.

  methods GENERATE_FILE_NAME .
  methods WRITE_LOG
    importing
      !IV_LINES type NUMC15 optional
      !IV_HTTP_RESPONSE type STRING optional
      !IV_HTTP_STATUS type STRING default '200'
      value(IV_EXCEPTION) type ref to ZCX_EXT_EXCEPTION optional .
  methods HANDLE_STATUS_CODE
    importing
      !IV_STATUS_CODE type STRING
    exporting
      !EV_EXCEPTION type ref to ZCX_EXT_EXCEPTION
    raising
      resumable(ZCX_EXT_EXCEPTION) .
  methods GET_OAUTH_TOKEN
    raising
      ZCX_EXT_EXCEPTION
      CX_ENCRYPT_ERROR .
private section.

  data MV_TOKEN_STATUS type STRING .
  data MV_ENDPOINT type STRING .
  class-data MV_TIMESTAMP type TIMESTAMPL .
ENDCLASS.



CLASS ZCL_EXT_ENDPOINT_SUPER IMPLEMENTATION.


  METHOD constructor.

    mv_type = iv_type.
    mv_company = iv_company.
    mv_country = iv_country.
    mv_reporting_date_from = iv_reporting_date_from.
    mv_reporting_date_to = iv_reporting_date_to.
    mv_posting_date_from = iv_posting_date_from.
    mv_posting_date_to = iv_posting_date_to.
    mv_month = iv_month.
    mv_year = iv_year.
    mv_direc = iv_direc.
    mv_sii_region = iv_sii_region.
    mv_period = iv_period.
    mv_model_id = iv_model_id.
    mv_filename_suffix = iv_filename_suffix.
    ms_dyn_filters = is_dyn_filters.

    me->generate_file_name( ).

  ENDMETHOD.


  METHOD generate_file_name.
*"----------------------------------------------------------------------
************************************************************************
*  METHOD              : COLLECT
*  RICEF I D           :
*  Author              : GDEGROOTE
*  Date                : 29/01/2020
*  SAP Transport Req.# : EH4K902938
*  Release             : S4 1809
*----------------------------------------------------------------------*
*  Application Area    : EH4
*  Description         : Class method
*----------------------------------------------------------------------*
* MODIFICATION HISTORY ( Only changes)
*  SAP Transport Req.# : XXXXXXXXXX
*  Change Driver       : Change Request
*  Author              : Firstname Lastname
*  Modification Date   : MM/DD/YYYY
*  Description         : Description of changes
************************************************************************

***************************************************************************"
* DATA DECLARATION
***************************************************************************"
* Objects

* Tables

* Field Symbols

* Structures

* Variables

* Constants

***************************************************************************"
* IMPLEMENTATION
***************************************************************************"


    zcl_ext_utility=>generate_file_name(
      EXPORTING
        iv_with_extension      = abap_false       " Add extension to file name
        iv_type                = mv_type                 " Export type
        iv_company             = mv_company                 " Company Code
        iv_country             = mv_country               " Country for Tax Return
        iv_reporting_date_from = mv_reporting_date_from   " Tax Reporting Date
        iv_reporting_date_to   = mv_reporting_date_to     " Tax Reporting Date
        iv_posting_date_from   = mv_posting_date_from     " Posting Date in the Document
        iv_posting_date_to     = mv_posting_date_to       " Posting Date in the Document
        iv_month               = mv_month                 " Month
        iv_year                = mv_year                  " Year
        iv_direc               = mv_direc                 " Direction (Receipt, Dispatch)
        iv_sii_region          = mv_sii_region
        iv_period              = mv_period
        iv_dyn_model           = mv_model_id
        iv_filename_suffix     = mv_filename_suffix       "Deloitte Extractor File Name Suffix
        is_dyn_filters         = ms_dyn_filters
      IMPORTING
        ev_file_name           = mv_file_name                " File name
    ).


  ENDMETHOD.


  method GET_OAUTH_TOKEN.
  endmethod.


  METHOD handle_status_code.

    DATA: ls_msg_key TYPE scx_t100key.

    CONSTANTS: lc_message_id TYPE bapiret2-id VALUE 'ZVAT_EXT'.

    IF iv_status_code EQ '200'.
      RETURN.
    ENDIF.

    TRY.

        ls_msg_key-msgid = 'ZVAT_EXT'.

        CASE iv_status_code.
          WHEN '401'.
          WHEN '403'.
            ls_msg_key-msgno = '005'.
            RAISE EXCEPTION TYPE zcx_ext_exception
              EXPORTING
                textid = ls_msg_key.
          WHEN '404'.
            ls_msg_key-msgno = '006'.
            RAISE EXCEPTION TYPE zcx_ext_exception
              EXPORTING
                textid = ls_msg_key.
          WHEN '500'.
            ls_msg_key-msgno = '007'.
            RAISE EXCEPTION TYPE zcx_ext_exception
              EXPORTING
                textid = ls_msg_key.
          WHEN OTHERS.
            ls_msg_key-msgno = '008'.
            RAISE EXCEPTION TYPE zcx_ext_exception
              EXPORTING
                textid = ls_msg_key.
        ENDCASE.
      CATCH zcx_ext_exception INTO ev_exception.
        " we handle the exception on a higher level
    ENDTRY.

  ENDMETHOD.


  METHOD send.
  ENDMETHOD.


  METHOD write_log.
  ENDMETHOD.
ENDCLASS.