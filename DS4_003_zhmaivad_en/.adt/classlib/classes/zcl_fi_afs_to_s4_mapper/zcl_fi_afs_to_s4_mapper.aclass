class ZCL_FI_AFS_TO_S4_MAPPER definition
  public
  create public .

public section.

  constants:
    BEGIN OF gc_mapping_entity,
        company_id    TYPE fins_cfin_mapping_entity VALUE 'COMPANY_ID',
        company_code  TYPE fins_cfin_mapping_entity VALUE 'BUKRS',
        profit_center TYPE fins_cfin_mapping_entity VALUE 'PROFIT_CENTRE_ID',
      END OF gc_mapping_entity .

  methods CONSTRUCTOR
    raising
      ZCX_FI_COPA_ACDOCA_COMP_POST .
  class-methods GET_INSTANCE
    returning
      value(RO_INSTANCE) type ref to ZCL_FI_AFS_TO_S4_MAPPER
    raising
      ZCX_FI_COPA_ACDOCA_COMP_POST .
  methods GET_TRAIDING_PARTNER
    importing
      !IV_SOURCE_VALUE type RASSC
    returning
      value(RV_MAPPED_VALUE) type RASSC
    raising
      ZCX_FI_COPA_ACDOCA_COMP_POST .
  methods GET_COMPANY_CODE
    importing
      !IV_SOURCE_VALUE type BUKRS
    returning
      value(RV_MAPPED_VALUE) type BUKRS
    raising
      ZCX_FI_COPA_ACDOCA_COMP_POST .
  methods GET_COMPANY_CODE_RANGE
    importing
      !IT_SOURCE_RANGE type ICL_BUKRS_RANGE
    returning
      value(RT_MAPPED_RANGE) type ICL_BUKRS_RANGE .
  methods GET_PROFIT_CENTER
    importing
      !IV_SOURCE_VALUE type PRCTR
      !IV_CNTXT1 type CHAR40
    returning
      value(RV_MAPPED_VALUE) type PRCTR
    raising
      ZCX_FI_COPA_ACDOCA_COMP_POST .
protected section.

  types:
    BEGIN OF mtyp_s_company_code,
      source_value TYPE bukrs,
      mapped_value TYPE bukrs,
    END OF mtyp_s_company_code .
  types:
    BEGIN OF mtyp_s_profit_center,
      source_value TYPE prctr,
      mapped_value TYPE prctr,
    END OF mtyp_s_profit_center .

  class-data GO_INSTANCE type ref to ZCL_FI_AFS_TO_S4_MAPPER .
  data MV_SOURCE type MDG_BUSINESS_SYSTEM .
  data:
    mts_company_code     TYPE SORTED TABLE OF mtyp_s_company_code
                              WITH UNIQUE KEY source_value .
  data:
    mts_company_id       TYPE SORTED TABLE OF mtyp_s_company_code
                              WITH UNIQUE KEY source_value .
  data:
    mts_profit_center    TYPE SORTED TABLE OF mtyp_s_profit_center
                              WITH UNIQUE KEY source_value .

  methods GET_COMPANY_CODE_MAPPING_TABLE
    raising
      ZCX_FI_COPA_ACDOCA_COMP_POST .
  methods GET_COMPANY_ID_MAPPING_TABLE
    raising
      ZCX_FI_COPA_ACDOCA_COMP_POST .
  methods RUN_MAPPING_TEST
    importing
      !IV_MAPPING_ENTITY type FINS_CFIN_MAPPING_ENTITY
      !IV_VALUE type CHAR40
      !IV_CNTXT1 type CHAR40 optional
      !IV_CNTXT2 type CHAR40 optional
    returning
      value(RV_VALUE) type SYMSGV .
private section.
ENDCLASS.



CLASS ZCL_FI_AFS_TO_S4_MAPPER IMPLEMENTATION.


  METHOD constructor.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* BOBRULA      | 23.01.2023 | 27687: Reconciliation tool between       *
*              |            |        AFS-COPA and ACDOCA               *
*              |            | DSXK904877                               *
*----------------------------------------------------------------------*

    TYPES:
      BEGIN OF ltyp_s_filter,
        syst_sysid TYPE syst_sysid,
      END OF ltyp_s_filter,

      BEGIN OF ltyp_s_output,
        logsys TYPE logsys,
      END OF ltyp_s_output.

    DATA: lt_output TYPE STANDARD TABLE OF ltyp_s_output.

    TRY.
        zcl_pe_hm_complex=>get_table(
          EXPORTING
            iv_id           = '0239FC3B8D041EDDA8E1F25A60287F59'
            is_filter       = VALUE ltyp_s_filter( syst_sysid = sy-sysid )
            iv_mapping_type = zcl_pe_hm_complex=>gc_s_mapping_type-names
          IMPORTING
            et_table        = lt_output ).
        DATA(lv_logsys) = VALUE logsys( lt_output[ 1 ]-logsys OPTIONAL ).

      CATCH zcx_pe_hm INTO DATA(lo_exception).

        RAISE EXCEPTION TYPE zcx_fi_copa_acdoca_comp_post
          EXPORTING
            textid = lo_exception->if_t100_message~t100key.
    ENDTRY.

    SELECT
        BusinessSystem                                  "#EC CI_NOORDER
      FROM zfi_i_mdg_bus_sys_tech
      WHERE Logsys = @lv_logsys
      INTO @mv_source
      UP TO 1 ROWS.
    ENDSELECT.

    IF sy-subrc <> 0.

      RAISE EXCEPTION TYPE zcx_fi_copa_acdoca_comp_post
        EXPORTING
          textid = zcx_fi_copa_acdoca_comp_post=>business_system_not_defined.
    ENDIF.

    get_company_code_mapping_table( ).
    get_company_id_mapping_table( ).

  ENDMETHOD.


  METHOD get_company_code.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* BOBRULA      | 23.01.2023 | 27687: Reconciliation tool between       *
*              |            |        AFS-COPA and ACDOCA               *
*              |            | DSXK904877                               *
*----------------------------------------------------------------------*

    CHECK iv_source_value IS NOT INITIAL.

    rv_mapped_value = VALUE #(
                        mts_company_code[
                          source_value = iv_source_value ]-mapped_value
                        OPTIONAL ).

    IF rv_mapped_value IS INITIAL.

      RAISE EXCEPTION TYPE zcx_fi_copa_acdoca_comp_post
        EXPORTING
          company_code = iv_source_value
          textid       = zcx_fi_copa_acdoca_comp_post=>no_mapping_for_company_code.
    ENDIF.

  ENDMETHOD.


  METHOD get_instance.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* BOBRULA      | 23.01.2023 | 27687: Reconciliation tool between       *
*              |            |        AFS-COPA and ACDOCA               *
*              |            | DSXK904877                               *
*----------------------------------------------------------------------*

    IF go_instance IS NOT BOUND.
      go_instance = NEW #( ).
    ENDIF.
    ro_instance = go_instance.

  ENDMETHOD.


  METHOD get_profit_center.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* BOBRULA      | 23.01.2023 | 27687: Reconciliation tool between       *
*              |            |        AFS-COPA and ACDOCA               *
*              |            | DSXK904877                               *
*----------------------------------------------------------------------*

    CHECK iv_source_value IS NOT INITIAL.

    rv_mapped_value = VALUE #(
                        mts_profit_center[
                          source_value = iv_source_value ]-mapped_value
                        OPTIONAL ).

    IF rv_mapped_value IS NOT INITIAL.
      RETURN.
    ENDIF.

    rv_mapped_value = run_mapping_test(
                        iv_mapping_entity = gc_mapping_entity-profit_center
                        iv_value          = CONV #( iv_source_value )
                        iv_cntxt1         = iv_cntxt1 ).

    IF rv_mapped_value IS INITIAL.

      RAISE EXCEPTION TYPE zcx_fi_copa_acdoca_comp_post
        EXPORTING
          profit_center = iv_source_value
          textid        = zcx_fi_copa_acdoca_comp_post=>no_mapping_for_profit_center.
    ENDIF.

    mts_profit_center = VALUE #(
                          BASE mts_profit_center
                             ( source_value = iv_source_value
                               mapped_value = rv_mapped_value ) ).
  ENDMETHOD.


   METHOD get_traiding_partner.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* BOBRULA      | 23.01.2023 | 27687: Reconciliation tool between       *
*              |            |        AFS-COPA and ACDOCA               *
*              |            | DSXK904877                               *
*----------------------------------------------------------------------*

     CHECK iv_source_value IS NOT INITIAL.

     rv_mapped_value = VALUE #(
                         mts_company_id[
                           source_value = CONV bukrs( |{ iv_source_value ALPHA = OUT }| ) ]-mapped_value
                         OPTIONAL ).

     IF rv_mapped_value IS INITIAL.

       RAISE EXCEPTION TYPE zcx_fi_copa_acdoca_comp_post
         EXPORTING
           traiding_partner = iv_source_value
           textid           = zcx_fi_copa_acdoca_comp_post=>no_mapping_for_traiding_partn.
     ENDIF.

   ENDMETHOD.


  METHOD run_mapping_test.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* BOBRULA      | 23.01.2023 | 27687: Reconciliation tool between       *
*              |            |        AFS-COPA and ACDOCA               *
*              |            | DSXK904877                               *
*----------------------------------------------------------------------*

    CONSTANTS:
      lc_CFIN_mapping_msg_cl TYPE symsgid  VALUE 'FINS_CFIN_MAPPING',
      lc_external_value_maps TYPE symsgno  VALUE '063'.

    cl_fins_cfin_mdg_mapping_test=>get_instance(
      )->mdg_mapping_test(
        EXPORTING
          iv_mapping_entity = iv_mapping_entity
          iv_source         = mv_source
          iv_value          = iv_value
          iv_cntxt1         = iv_cntxt1
          iv_cntxt2         = iv_cntxt2
        IMPORTING
          et_message        = DATA(lt_message) ).

    rv_value = VALUE #(
                 lt_message[
                   type       = if_xo_const_message=>success
                   id         = lc_CFIN_mapping_msg_cl
                   number     = lc_external_value_maps
                   message_v2 = iv_value ]-message_v3
                 OPTIONAL ).
  ENDMETHOD.


  METHOD get_company_code_mapping_table.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* BOBRULA      | 23.01.2023 | 27687: Reconciliation tool between       *
*              |            |        AFS-COPA and ACDOCA               *
*              |            | DSXK904877                               *
*----------------------------------------------------------------------*

    CONSTANTS:
      lc_source_field TYPE fieldname VALUE 'SRC_ID',
      lc_target_field TYPE fieldname VALUE 'TGT_ID'.

    FIELD-SYMBOLS:
      <lt_company_code>  TYPE STANDARD TABLE.

    cf_fins_cfin_mapping=>get_instance_by_mapping_entity(
      iv_mapping_entity = gc_mapping_entity-company_code
        )->get_list_from_db(
         EXPORTING
           iv_source_system  = mv_source
           ib_suppress_check = abap_true
         IMPORTING
           er_mapping_table = DATA(lo_company_code_mapping) ).

    IF lo_company_code_mapping IS INITIAL.

      RAISE EXCEPTION TYPE zcx_fi_copa_acdoca_comp_post
        EXPORTING
          textid = zcx_fi_copa_acdoca_comp_post=>comp_code_mapping_not_defined.
    ENDIF.

    ASSIGN lo_company_code_mapping->* TO <lt_company_code>.
    SORT <lt_company_code> BY (lc_source_field).

    LOOP AT <lt_company_code> ASSIGNING FIELD-SYMBOL(<ls_company_code>).

      ASSIGN COMPONENT lc_source_field
          OF STRUCTURE <ls_company_code>
                    TO FIELD-SYMBOL(<lv_src_1>).
      IF sy-subrc > 0.
        CONTINUE.
      ENDIF.

      ASSIGN COMPONENT lc_target_field
          OF STRUCTURE <ls_company_code>
                    TO FIELD-SYMBOL(<lv_tgt_1>).
      IF sy-subrc > 0.
        CONTINUE.
      ENDIF.

      mts_company_code = VALUE #(
                           BASE mts_company_code
                              ( source_value = <lv_src_1>
                                mapped_value = <lv_tgt_1> ) ).
    ENDLOOP.

  ENDMETHOD.


  METHOD get_company_code_range.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* BOBRULA      | 22.02.2023 | 27687: Reconciliation tool between       *
*              |            |        AFS-COPA and ACDOCA               *
*              |            | DSXK904877                               *
*----------------------------------------------------------------------*

    rt_mapped_range = VALUE icl_bukrs_range(
                        FOR <ls_company_code> IN mts_company_code
                          WHERE ( source_value IN it_source_range )
                        ( VALUE #(
                            sign   = if_fsbp_const_range=>sign_include
                            option = if_fsbp_const_range=>option_equal
                            low    = <ls_company_code>-mapped_value ) ) )."#EC CI_SORTSEQ
  ENDMETHOD.


  METHOD get_company_id_mapping_table.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* BOBRULA      | 20.02.2023 | 27687: Reconciliation tool between       *
*              |            |        AFS-COPA and ACDOCA               *
*              |            | DSXK904877                               *
*----------------------------------------------------------------------*

    CONSTANTS:
      lc_source_field TYPE fieldname VALUE 'SRC_1',
      lc_target_field TYPE fieldname VALUE 'TGT_1'.

    FIELD-SYMBOLS:
      <lt_company_id>  TYPE STANDARD TABLE.

    cf_fins_cfin_mapping=>get_instance_by_mapping_entity(
      iv_mapping_entity = gc_mapping_entity-company_id
        )->get_list_from_db(
         EXPORTING
           iv_source_system  = mv_source
           ib_suppress_check = abap_true
         IMPORTING
           er_mapping_table = DATA(lo_company_id_mapping) ).

    IF lo_company_id_mapping IS INITIAL.

      RAISE EXCEPTION TYPE zcx_fi_copa_acdoca_comp_post
        EXPORTING
          textid = zcx_fi_copa_acdoca_comp_post=>comp_id_mapping_not_defined.
    ENDIF.

    ASSIGN lo_company_id_mapping->* TO <lt_company_id>.
    SORT <lt_company_id> BY (lc_source_field).

    LOOP AT <lt_company_id> ASSIGNING FIELD-SYMBOL(<ls_company_id>).

      ASSIGN COMPONENT lc_source_field
          OF STRUCTURE <ls_company_id>
                    TO FIELD-SYMBOL(<lv_src_1>).
      IF sy-subrc > 0.
        CONTINUE.
      ENDIF.

      ASSIGN COMPONENT lc_target_field
          OF STRUCTURE <ls_company_id>
                    TO FIELD-SYMBOL(<lv_tgt_1>).
      IF sy-subrc > 0.
        CONTINUE.
      ENDIF.

      mts_company_id = VALUE #(
                         BASE mts_company_id
                            ( source_value = <lv_src_1>
                              mapped_value = <lv_tgt_1> ) ).
    ENDLOOP.

  ENDMETHOD.
ENDCLASS.