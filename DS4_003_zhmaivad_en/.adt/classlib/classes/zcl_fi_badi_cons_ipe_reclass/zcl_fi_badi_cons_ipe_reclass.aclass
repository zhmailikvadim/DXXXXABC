class ZCL_FI_BADI_CONS_IPE_RECLASS definition
  public
  final
  create public .

public section.

  interfaces IF_BADI_INTERFACE .
  interfaces IF_BADI_FINCS_CUST_CONSMON .
protected section.
private section.
ENDCLASS.



CLASS ZCL_FI_BADI_CONS_IPE_RECLASS IMPLEMENTATION.


    METHOD if_badi_fincs_cust_consmon~execute.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KUMARRA8     | 05.07.2022 | FB_11718_FI: Finalize sign triggered     *
*              |            |             reclassification             *
*              |            | DS4K923050                               *
*----------------------------------------------------------------------*
* KNUR         | 09.08.2022 | FB_12749_FI:Enhancement of IPE by        *
*              |            |             allowance for good           *
*              |            | DS4K926790                               *
*----------------------------------------------------------------------*
* DOSSAGUI     | 26.09.2022 | FB_13740_FI_Defect 8000010644 - Reclass  *
*              |            | user  story    DS4K930784                *
*----------------------------------------------------------------------*
* HERNAOSC     | 03.11.2022 | FB_15002_FI_Correction for GR postings   *
*              |            | from custom t     DS4K934637             *
*----------------------------------------------------------------------*
* HERNAOSC     | 29.11.2022 | FB_15769_IPE Reclassification correction *
*              |            | DS4K937054                               *
*----------------------------------------------------------------------*
* HERNAOSC     | 01.02.2023 | FB_17600_IPE Reclassification correction *
*              |            | DS4K942516                               *
*----------------------------------------------------------------------*
* HERNAOSC     | 04.02.2023 | FB_17705_IPE Reclassification correction *
*              |            | DS4K942897                               *
*----------------------------------------------------------------------*
* KUMARRA8     | 21.06.2023 | CH_22507_FI_CH_22507_FI_Defect IPE       *
*              |            | DSXK902203  Reversal Logic               *
*----------------------------------------------------------------------*

      TYPES : BEGIN OF ltyp_acdocu_group,
                rldnr        TYPE rldnr,
                rdimen       TYPE fc_dimen,
                ryear        TYPE gjahr,
                docnr        TYPE belnr_d,
                docln        TYPE docln6,
                rrcty        TYPE fc_rrcty,
                rvers        TYPE fc_rvers,
                rtcur        TYPE rtcur,
                rhcur        TYPE lcurr,
                rkcur        TYPE gcurr,
                runit        TYPE meins,
                fiscyearper  TYPE fincs_fiscyearper,
                docct        TYPE docct,
                rbunit       TYPE fc_bunit,
                ritclg       TYPE fc_itclg,
                ritem        TYPE fc_item,
                rbuptr       TYPE fc_buptr,
                sityp        TYPE fc_sityp,
                subit        TYPE fc_sitem,
                plev1        TYPE fc_plevl,
                docty        TYPE fc_docty,
                tsl          TYPE vlcur12,
                hsl          TYPE vlcur12,
                ksl          TYPE vlcur12,
                msl          TYPE vlcur12,
                segment      TYPE fb_segment,
                zzbrand_gr   TYPE zco_brand,
                psegment     TYPE fb_psegment,
                is_processed TYPE abap_bool,
              END OF ltyp_acdocu_group.

      DATA :lv_period_high     TYPE fincs_fiscyearper,
            lv_period_low      TYPE fincs_fiscyearper,
            lt_acdocu_group_92 TYPE STANDARD TABLE OF ltyp_acdocu_group,
            lt_acdocu_group_93 TYPE STANDARD TABLE OF ltyp_acdocu_group,
            lt_doc             TYPE fc05_t_pdoc_s4h_qfle,
            ls_doc             TYPE fc05_s_pdoc_s4h_qfle,
            lt_message         TYPE fc05_t_message,
            ls_head            TYPE fc05_s_pdoc_head,
            lt_head            TYPE fc05_t_pdoc_head,
            lv_ksl_source_93   TYPE vgcur12,
            lv_ksl_target_93   TYPE vgcur12,
   ##ENH_OK lv_ksl_final       TYPE vgcur12,
            lv_ksl_final_tgt   TYPE vgcur12.

      lv_period_high = |{ fiscalyear }| && |{ fiscalperiod }|.
      lv_period_low  = |{ fiscalyear }| && |{ '000' }|.
      SELECT dimen , strvs , congr , bunit , fromyearper
        FROM fincs_grpstr                             "#EC CI_SGLSELECT
        INTO TABLE @DATA(lt_fincs_grpstr)
        WHERE dimen = @fc00_c_dimen_y1
          AND congr = @consolidationgroup.
      IF sy-subrc = 0 .

        TRY.
            DATA(lt_doctype) = zcl_pe_hm_basic=>get_table( '694' ).
            DATA(lt_item_text) = zcl_pe_hm_basic=>get_table( '695' ).
            IF lt_doctype IS NOT INITIAL.
              DATA(lv_doctype) = lt_doctype[ 1 ]-field1.
            ENDIF.
            IF lt_item_text IS NOT INITIAL.
              DATA(lv_item_text) = lt_item_text[ 1 ]-field1.
            ENDIF.
          CATCH zcx_pe_hm INTO DATA(lo_exc_001).
            MESSAGE lo_exc_001.
        ENDTRY.

        SORT lt_fincs_grpstr BY bunit.
        DELETE ADJACENT DUPLICATES FROM lt_fincs_grpstr COMPARING bunit.
        IF lt_fincs_grpstr IS NOT INITIAL.
          SELECT rldnr , rdimen , ryear , docnr , docln , rrcty , rvers , rtcur , rhcur,
                 rkcur , runit , fiscyearper , docct , rbunit , ritclg , ritem , rbuptr , sityp,
                 subit , plevl , docty ,tsl, hsl ,ksl ,msl, segment ,  zzbrand_gr, psegment
            FROM acdocu
            INTO TABLE @DATA(lt_acdocu)
            FOR ALL ENTRIES IN @lt_fincs_grpstr
            WHERE rdimen = @fc00_c_dimen_y1
              AND ryear = @fiscalyear
              AND rvers = @consolidationversion
              AND ( fiscyearper GE @lv_period_low AND fiscyearper LE @lv_period_high )
              AND rbunit = @lt_fincs_grpstr-bunit
              AND ritclg = @consolidationchartofaccounts
              AND ( docty = '93' OR docty = '92' ) .
          IF sy-subrc = 0 .
            SORT lt_acdocu BY docty.
            DATA(lt_acdocu_92) = lt_acdocu[].
            DELETE lt_acdocu_92 WHERE docty NE '92'.
            LOOP AT lt_acdocu_92 ASSIGNING FIELD-SYMBOL(<ls_acdocu>).
              READ TABLE lt_acdocu_group_92 ASSIGNING FIELD-SYMBOL(<ls_group>) WITH KEY  ritem = <ls_acdocu>-ritem
                                                                                      rbunit = <ls_acdocu>-rbunit
                                                                                      zzbrand_gr = <ls_acdocu>-zzbrand_gr
                                                                                      segment = <ls_acdocu>-segment
                                                                                      psegment = <ls_acdocu>-psegment
                                                                                      rbuptr = <ls_acdocu>-rbuptr
                                                                                      docty = <ls_acdocu>-docty.
              IF sy-subrc = 0.
                <ls_group>-tsl = <ls_group>-tsl + <ls_acdocu>-tsl.
                <ls_group>-hsl = <ls_group>-hsl + <ls_acdocu>-hsl.
                <ls_group>-ksl = <ls_group>-ksl + <ls_acdocu>-ksl.
                <ls_group>-msl = <ls_group>-msl + <ls_acdocu>-msl.
                UNASSIGN : <ls_group>.
              ELSE.
                APPEND INITIAL LINE TO lt_acdocu_group_92 ASSIGNING <ls_group>.
                IF <ls_group> IS ASSIGNED.
                  <ls_group> = CORRESPONDING #( <ls_acdocu> ).
                  UNASSIGN : <ls_group>.
                ENDIF.
              ENDIF.
            ENDLOOP.
            DATA(lt_acdocu_93) = lt_acdocu[].
            DELETE lt_acdocu_93 WHERE docty NE '93'.
            LOOP AT lt_acdocu_93 ASSIGNING <ls_acdocu>.
              READ TABLE lt_acdocu_group_93 ASSIGNING <ls_group> WITH KEY  ritem = <ls_acdocu>-ritem
                                                                           rbunit = <ls_acdocu>-rbunit
                                                                           zzbrand_gr = <ls_acdocu>-zzbrand_gr
                                                                           segment = <ls_acdocu>-segment
                                                                           psegment = <ls_acdocu>-psegment
                                                                           rbuptr = <ls_acdocu>-rbuptr
                                                                           docty = <ls_acdocu>-docty.
              IF sy-subrc = 0.
                <ls_group>-tsl = <ls_group>-tsl + <ls_acdocu>-tsl.
                <ls_group>-hsl = <ls_group>-hsl + <ls_acdocu>-hsl.
                <ls_group>-ksl = <ls_group>-ksl + <ls_acdocu>-ksl.
                <ls_group>-msl = <ls_group>-msl + <ls_acdocu>-msl.
                UNASSIGN : <ls_group>.
              ELSE.
                APPEND INITIAL LINE TO lt_acdocu_group_93 ASSIGNING <ls_group>.
                IF <ls_group> IS ASSIGNED.
                  <ls_group> = CORRESPONDING #( <ls_acdocu> ).
                  UNASSIGN : <ls_group>.
                ENDIF.
              ENDIF.
            ENDLOOP.
          ENDIF.
        ENDIF.
      ENDIF.
      DATA(lt_acdocu_temp) = lt_acdocu[].
      SORT lt_acdocu_temp BY ritem sityp subit.

      DELETE ADJACENT DUPLICATES FROM lt_acdocu_temp COMPARING ritem sityp subit.

      IF lt_acdocu_temp IS NOT INITIAL.

        SELECT trigger_item , trigger_sic , trigger_si , source_item , source_sic ,
               source_si , target_item , target_sic , target_si
          FROM zfi_t_sign_ipe
          INTO TABLE @DATA(lt_sign_ipe)
          FOR ALL ENTRIES IN @lt_acdocu_temp
          WHERE trigger_item = @lt_acdocu_temp-ritem
            AND trigger_sic = @lt_acdocu_temp-sityp
            AND trigger_si =  @lt_acdocu_temp-subit.

        IF sy-subrc = 0 .

          SORT lt_sign_ipe BY trigger_item trigger_sic trigger_si.

        ENDIF.

      ENDIF.

      CLEAR : lt_head , lt_doc.

      "START PROCESSING
      "Loop through the source records to analyze
      "1. Whether they need to be reclassified
      "2. If they do or don't, what's the ending balance in the corresponding target and source fs items and whether it needs adjusting.
      "2.1 - If reclassification is needed, delta is calculated.
      "2.2 - If not, amounts in the source and destination FS items get reversed.
      LOOP AT  lt_acdocu_group_92
        ASSIGNING <ls_group>.

        CLEAR : lv_ksl_source_93 , lv_ksl_source_93 ,lv_ksl_final .

        LOOP AT lt_sign_ipe ASSIGNING FIELD-SYMBOL(<ls_sign>) WHERE trigger_item = <ls_group>-ritem "#EC CI_NESTED
                                                                       AND trigger_sic  = <ls_group>-sityp
                                                                       AND trigger_si   = <ls_group>-subit.

          CLEAR : lv_ksl_source_93 , lv_ksl_source_93 ,lv_ksl_final, lv_ksl_target_93.

          "Aggregate source item in from DT 93 for further comparison.
          LOOP AT lt_acdocu_group_93 ASSIGNING FIELD-SYMBOL(<ls_group_93>)
            WHERE rbunit = <ls_group>-rbunit             "#EC CI_NESTED
            AND ritem = <ls_sign>-source_item
            AND zzbrand_gr = <ls_group>-zzbrand_gr
            AND segment = <ls_group>-segment
            AND psegment = <ls_group>-psegment
            AND rbuptr = <ls_group>-rbuptr.

            lv_ksl_source_93 = lv_ksl_source_93 + <ls_group_93>-ksl.

            "Mark as processed
            <ls_group_93>-is_processed = abap_true.

          ENDLOOP.

          "Mark destination item from DT 93 to mark as processed which have the same account assignments than the previous loop
          LOOP AT lt_acdocu_group_93 ASSIGNING <ls_group_93>
              WHERE rbunit = <ls_group>-rbunit           "#EC CI_NESTED
              AND ritem = <ls_sign>-target_item
              AND zzbrand_gr = <ls_group>-zzbrand_gr
              AND segment = <ls_group>-segment
              AND psegment = <ls_group>-psegment
              AND rbuptr = <ls_group>-rbuptr.

            lv_ksl_target_93 = lv_ksl_target_93 + <ls_group_93>-ksl.

            "Mark as processed
            <ls_group_93>-is_processed = abap_true.

          ENDLOOP.

          IF  ( <ls_group>-ksl GT 0 )
              OR ( <ls_group>-ksl LE 0
              AND ( lv_ksl_source_93 NE 0 OR lv_ksl_target_93 NE 0  ) ).


            "Amount is positive, needs to be reclassified.
            IF <ls_group>-ksl GT 0.

              lv_ksl_final = <ls_group>-ksl + lv_ksl_source_93. "For the source item .
              lv_ksl_final_tgt = <ls_group>-ksl - lv_ksl_target_93. "For the destination item. Since the comparison is only done for the source item, it could be that the destination item could have changed.

              "Amount is negative, previous postings need to be cancelled.
            ELSEIF ( <ls_group>-ksl LE 0
              AND ( lv_ksl_source_93 NE 0 OR lv_ksl_target_93 NE 0  ) ).

              lv_ksl_final = lv_ksl_source_93 . "For the source item
              lv_ksl_final_tgt = -1 * lv_ksl_target_93. "For the destination item

            ENDIF.

            ls_doc = CORRESPONDING #( <ls_group> ).
            ls_doc-pracq = fiscalperiod.
            ls_doc-yracq = fiscalyear.
            ls_doc-ritem = <ls_sign>-source_item.
            ls_doc-sityp = <ls_sign>-source_sic.
            ls_doc-subit = <ls_sign>-source_si.

            IF lv_ksl_final NE 0.

              ls_doc-ksl = ( -1 * lv_ksl_final ).
              CLEAR : ls_doc-tsl , ls_doc-hsl.
              APPEND ls_doc TO lt_doc.
              CLEAR : ls_doc-ritem,ls_doc-sityp,ls_doc-subit,ls_doc-ksl.

            ENDIF.

            ls_doc-ritem = <ls_sign>-target_item.
            ls_doc-sityp = <ls_sign>-target_sic.
            ls_doc-subit = <ls_sign>-target_si.

            IF lv_ksl_final_tgt NE 0.

              ls_doc-ksl = lv_ksl_final_tgt.
              APPEND ls_doc TO lt_doc.
              CLEAR : ls_doc.

            ENDIF.

          ENDIF.

        ENDLOOP.

      ENDLOOP.

      "Check unprocessed source records.
      LOOP AT lt_acdocu_group_93
        ASSIGNING <ls_group_93>
        WHERE is_processed EQ abap_false.

        "Any record that hasn't been processed no longer has a reason to exist, so it gets reversed
        ##ENH_OK ls_doc = CORRESPONDING #( <ls_group_93> ).
        ls_doc-pracq = fiscalperiod.
        ls_doc-yracq = fiscalyear.
        ls_doc-ksl = ( -1 * ls_doc-ksl ).

        IF ls_doc-ksl NE 0.

          APPEND ls_doc TO lt_doc.
          CLEAR : ls_doc.

        ENDIF.

      ENDLOOP.

      IF lt_doc IS NOT INITIAL.

        SELECT SINGLE nrrng
          FROM tf505
          WHERE docty = @lv_doctype
          AND rvers = @consolidationversion
          AND dimen = 'Y1'
          INTO @DATA(lv_nrrng).

        IF sy-subrc EQ 0.

          DATA(lv_rlevl) = lt_acdocu_92[ 1 ]-plevl.
          ls_head-docty = lv_doctype.
          ls_head-s_cont-rlevl = lv_rlevl.
          ls_head-s_cont-autrv = abap_true.
          ls_head-s_cont-nrrng = lv_nrrng.
          ls_head-rcongr = consolidationgroup.
          ls_head-sgtxt = lv_item_text.
          ls_head-from = '1'.
          ls_head-to = lines( lt_doc ).
          APPEND ls_head TO lt_head.
          CLEAR : ls_head.

          DATA(lv_rldnr) = lt_acdocu_92[ 1 ]-rldnr.
          DATA(lv_ritclg) = lt_acdocu_92[ 1 ]-ritclg.
          DATA(lv_rdimen) = lt_acdocu_92[ 1 ]-rdimen.
          IF isconsolidationtasktestrun IS INITIAL. " post the documents only for actual run not for test run.

            CALL FUNCTION 'FC_DOCUMENT_POST3'
              EXPORTING
                e_rldnr    = lv_rldnr
                e_itclg    = lv_ritclg
                e_dimen    = lv_rdimen
                e_rvers    = consolidationversion
                e_ryear    = fiscalyear
                e_perid    = fiscalperiod
                et_doc     = lt_doc
              IMPORTING
                it_message = lt_message
              CHANGING
                ct_head    = lt_head.

            READ TABLE lt_message
              TRANSPORTING NO FIELDS WITH KEY msgty = 'E' .

            IF sy-subrc <> 0 AND lt_head IS NOT INITIAL AND lt_head[ 1 ]-s_docnr-docnr IS NOT INITIAL.

              " no error -> posting successful
              consolidationtaskstatus = '9'.
              COMMIT WORK.

            ELSE.

              consolidationtaskstatus = '8'.

            ENDIF.

          ENDIF.

          CLEAR : lt_head , lt_doc.

        ELSE.

          consolidationtaskstatus = '9'.

        ENDIF.

      ELSE.

        consolidationtaskstatus = '9'.

      ENDIF.

    ENDMETHOD.
ENDCLASS.