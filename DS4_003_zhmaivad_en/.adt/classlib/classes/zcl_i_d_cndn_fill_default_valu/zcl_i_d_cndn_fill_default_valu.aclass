CLASS zcl_i_d_cndn_fill_default_valu DEFINITION
  PUBLIC
  INHERITING FROM /bobf/cl_lib_d_supercl_simple
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    TYPES:BEGIN OF ty_text,
            fieldname TYPE fieldname,
            output    TYPE string,
            input     TYPE string,
            text      TYPE string,
          END OF ty_text.

    TYPES tt_text TYPE SORTED TABLE OF ty_text WITH UNIQUE KEY fieldname output.

    TYPES:BEGIN OF ty_fields_access,
            tabname                       TYPE dd03l-tabname,
            conditiontable                TYPE kotabnr,
            fieldname                     TYPE dd03l-fieldname,
            position                      TYPE dd03l-position,
            conditiontype                 TYPE kschl,
            accessnumber                  TYPE kolnr,
            conditioncount                TYPE dzaehk,
            action                        TYPE char20,
            fieldcontrol                  TYPE char20,
            prcgcndnvalueinitialisallowed TYPE kzini,
          END OF ty_fields_access.
    TYPES tt_fields_access TYPE TABLE OF ty_fields_access.


    METHODS constructor .

    METHODS /bobf/if_frw_determination~execute
        REDEFINITION .
  PROTECTED SECTION.
  PRIVATE SECTION.

    DATA mo_cond_checks TYPE REF TO if_cnd_maint_ltd_check .
    DATA mo_cond_dependency TYPE REF TO if_cnd_maint_ltd_dep .
    DATA mo_prcg_util TYPE REF TO if_cndnrecord_public_utility .
    DATA mt_text TYPE tt_text .
    DATA mt_access TYPE tt_fields_access .
    DATA mo_sls_api TYPE REF TO if_slsprcg_cndnrecd_api .

    METHODS get_access
      IMPORTING
        !iv_conditiontype TYPE kschl
      EXPORTING
        !et_access        TYPE tt_fields_access .
    METHODS clean_value
      CHANGING
        !cs_record TYPE zsislspricingconditionrecordt .
    METHODS is_promille
      IMPORTING
        !iv_krech             TYPE krech
      RETURNING
        VALUE(rv_is_promille) TYPE abap_bool .
    METHODS propose_unit_of_measure
      IMPORTING
        !is_t685a       TYPE t685a
      CHANGING
        !cs_cond_record TYPE zsislspricingconditionrecordt .
    METHODS propose_quantity_unit
      IMPORTING
        !is_t685a       TYPE t685a
      CHANGING
        !cs_cond_record TYPE zsislspricingconditionrecordt .
    METHODS propose_weight_unit
      IMPORTING
        !is_t685a       TYPE t685a
      CHANGING
        !cs_cond_record TYPE zsislspricingconditionrecordt .
    METHODS propose_volume_unit
      IMPORTING
        !is_t685a       TYPE t685a
      CHANGING
        !cs_cond_record TYPE zsislspricingconditionrecordt .
    METHODS propose_points_unit
      IMPORTING
        !is_t685a       TYPE t685a
      CHANGING
        !cs_cond_record TYPE zsislspricingconditionrecordt .
    METHODS propose_distance_unit
      IMPORTING
        !is_t685a       TYPE t685a
      CHANGING
        !cs_cond_record TYPE zsislspricingconditionrecordt .
    METHODS check_uom_conversion
      CHANGING
        !cs_cond_record TYPE zsislspricingconditionrecordt .
    METHODS set_default_value
      CHANGING
        !cs_record TYPE zsislspricingconditionrecordt .
ENDCLASS.



CLASS ZCL_I_D_CNDN_FILL_DEFAULT_VALU IMPLEMENTATION.


  METHOD /bobf/if_frw_determination~execute.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    DATA: lt_sls_record     TYPE ztislspricingconditionrecordt,
          lt_sls_record_tmp TYPE ztislspricingconditionrecordt,
          ls_last_record    TYPE zsislspricingconditionrecordt,
          lt_change         TYPE /bobf/t_frw_change,
          lr_data           TYPE REF TO data.

**   clear exporting parameters
    CLEAR: eo_message, et_failed_key.

    IF eo_message IS NOT BOUND.
      eo_message = /bobf/cl_frw_message_factory=>create_container( ).
    ENDIF.

    " Compare changed attributes of trigger node
    io_read->compare(
      EXPORTING
        iv_node_key        = is_ctx-node_key
        it_key             = it_key
        iv_fill_attributes = abap_true
      IMPORTING
        eo_change          = DATA(lo_change) ).

    lo_change->get(
      EXPORTING
        iv_sorted  = /bobf/if_frw_c=>sc_change_sort_key
        iv_no_load = abap_true
      IMPORTING
        et_change  = lt_change ).

    " Check whether relevant attributes have changed
    READ TABLE lt_change INTO DATA(ls_change) BINARY SEARCH
      WITH KEY node_key = is_ctx-node_key
               key      = it_key[ 1 ]-key.
    IF sy-subrc <> 0. "should not happen
      RETURN.
    ELSE.
      SORT ls_change-attributes.
    ENDIF.

*  attribute Supplier or PurchasingOrganization changed -> execute determination
    io_read->retrieve(
      EXPORTING
        iv_node = is_ctx-node_key
        it_key  = it_key
      IMPORTING
        et_data = lt_sls_record ).

    GET REFERENCE OF lt_sls_record_tmp INTO lr_data.

    LOOP AT lt_sls_record INTO DATA(ls_sls_record).

      clean_value( CHANGING cs_record = ls_sls_record ).

      "condition type changed
      READ TABLE ls_change-attributes TRANSPORTING NO FIELDS
        WITH KEY table_line = zif_i_slspricingconditionrec_c=>sc_node_attribute-zi_slspricingconditionrecordtp-conditiontype
        BINARY SEARCH.                                   "#EC CI_STDSEQ

      IF ls_sls_record-conditionapplication IS INITIAL.
        ls_sls_record-conditionapplication = 'V'.
      ENDIF.

      IF ls_sls_record-conditiontype IS NOT INITIAL.
        "Get T685
        TRY.
            TEST-SEAM raise_excpetion_t685.
              DATA(ls_t685) = mo_cond_dependency->get_t685(
                                EXPORTING
                                  iv_kappl = ls_sls_record-conditionapplication
                                  iv_kschl = ls_sls_record-conditiontype ).
              DATA(ls_t685a) = mo_cond_dependency->get_t685a(
                                EXPORTING
                                  iv_kappl = ls_sls_record-conditionapplication
                                  iv_kschl = ls_sls_record-conditiontype ).
            END-TEST-SEAM.
          CATCH cx_ct_customizing_exception INTO DATA(lx_customizing).
            RETURN.
        ENDTRY.
      ELSE.
        "get text
        CLEAR lt_sls_record_tmp.
        APPEND ls_sls_record TO lt_sls_record_tmp.
        mo_prcg_util->get_text(
          EXPORTING
            iv_ddlname = 'ZC_SlsPricingConditionRecordTP'                 " Name of a DDL Source
          CHANGING
            cr_data    = lr_data
        ).
        READ TABLE lt_sls_record_tmp INTO ls_sls_record INDEX 1.

        io_modify->update(
          iv_node = is_ctx-node_key
          iv_key  = ls_sls_record-key
          is_data = REF #( ls_sls_record ) ).

        CONTINUE.
      ENDIF.

      "Propose DATAB
      IF ls_sls_record-conditionvaliditystartdate IS INITIAL OR ls_sls_record-conditionvaliditystartdate EQ abap_false.
        TEST-SEAM sd_cond_date_from_default.
          CALL FUNCTION 'SD_COND_DATE_FROM_DEFAULT'
            EXPORTING
              dfd_datab = ls_sls_record-conditionvaliditystartdate
              dfd_dtvob = ls_t685-dtvob
            IMPORTING
              dfd_datab = ls_sls_record-conditionvaliditystartdate.
        END-TEST-SEAM.
      ENDIF.

      "Propose DATBI
      IF ls_sls_record-conditionvalidityenddate IS INITIAL OR ls_sls_record-conditionvalidityenddate EQ abap_false.
        TEST-SEAM sd_cond_date_to_default.
          CALL FUNCTION 'SD_COND_DATE_TO_DEFAULT'
            EXPORTING
              dtd_datab = ls_sls_record-conditionvaliditystartdate
              dtd_datbi = ls_sls_record-conditionvalidityenddate
              dtd_datvo = ls_t685-datvo
            IMPORTING
              dtd_datbi = ls_sls_record-conditionvalidityenddate.
        END-TEST-SEAM.
      ENDIF.

      "Calculation Type for Condition krech
      IF NOT ls_sls_record-conditioncalculationtype IS INITIAL.
        DATA rv_is_restricted_mode    TYPE abap_boolean.
        DATA ls_message               TYPE symsg.

        rv_is_restricted_mode = /smb/cl_sscui_restricted_mode=>get_restricted_mode( ).

        IF rv_is_restricted_mode = abap_true.
          DATA(condition_type_sscui) = NEW cl_condition_type_sscui_util( ).
          DATA(lt_hidden_values) = condition_type_sscui->get_hidden_values_for_f4( 'KRECH' ). "restrict 23 domain fixed values to 13 for CE

          IF line_exists( lt_hidden_values[ table_line = ls_sls_record-conditioncalculationtype ] ).

            MESSAGE e578(vt) WITH ls_sls_record-conditioncalculationtype INTO DATA(lv_message).
            ls_message-msgty = 'E'.
            ls_message-msgid = 'VT'.
            ls_message-msgno = 578.
            ls_message-msgv1 = ls_sls_record-conditioncalculationtype.

            CLEAR:ls_message.
            MOVE-CORRESPONDING sy TO ls_message.

            eo_message->add_message(
                        EXPORTING
                          is_msg       = ls_message
                         iv_lifetime  = /bobf/cm_frw=>co_lifetime_transition ).
            CONTINUE.
          ENDIF.
        ENDIF.
      ELSE.
        ls_sls_record-conditioncalculationtype = ls_t685a-krech.
      ENDIF.

      "Propose and check currency KBETR propose_and_check_kbetr ConditionRateValue
      IF ls_sls_record-conditionratevalue IS NOT INITIAL.
        TEST-SEAM rv_check_condition_value.
          CALL FUNCTION 'RV_CHECK_CONDITION_VALUE'
            EXPORTING
              check_krech          = ls_sls_record-conditioncalculationtype
              check_value          = ls_sls_record-conditionratevalue
              check_currency       = ls_sls_record-conditionratevalueunit
              check_price_quantity = ls_sls_record-conditionquantity
              check_quantity_unit  = ls_sls_record-conditionquantityunit
              only_negative        = ls_t685a-knega
              condition_class      = ls_t685a-koaid
              condition            = VALUE konp( )
              product              = VALUE matnr( )
              basic_quantity_unit  = VALUE meins( )
            IMPORTING
              check_value          = ls_sls_record-conditionratevalue
            EXCEPTIONS
              error_message        = 8.
          IF sy-subrc NE 0.
            "do nothing
          ENDIF.
        END-TEST-SEAM.
      ENDIF.

*      DATA(lv_max) = 999999999.
*      lv_max = lv_max + '0.99'.
*      DATA(lv_min) = lv_max * -1.

      CASE ls_t685a-knega.
        WHEN 'X'.
          IF ls_sls_record-conditionlowerlimit > 0.
            MULTIPLY ls_sls_record-conditionlowerlimit BY -1.
          ENDIF.
          IF ls_sls_record-conditionupperlimit > 0.
            MULTIPLY ls_sls_record-conditionupperlimit BY -1.
          ENDIF.
        WHEN 'A'.
          IF ls_sls_record-conditionlowerlimit < 0.
            MULTIPLY ls_sls_record-conditionlowerlimit BY -1.
          ENDIF.
          IF ls_sls_record-conditionupperlimit < 0.
            MULTIPLY ls_sls_record-conditionupperlimit BY -1.
          ENDIF.
      ENDCASE.

      "Propose and check currency konwa propose_and_check_konwa ConditionRateValueUnit
      set_default_value( CHANGING cs_record = ls_sls_record ).


      "propose_kpein Condition Pricing Unit
      IF ls_sls_record-conditionquantity = 0 AND
         cl_pricing_calculation_types=>get_instance( )->is_relative( ls_t685a-krech ) = abap_true.
        MOVE 1 TO ls_sls_record-conditionquantity.
      ENDIF.

      "Propose and check condition unit KMEIN propose_and_check_kmein ConditionQuantityUnit
      "propose ConditionQuantityUnit when material changed
      READ TABLE ls_change-attributes TRANSPORTING NO FIELDS
        WITH KEY table_line = zif_i_slspricingconditionrec_c=>sc_node_attribute-zi_slspricingconditionrecordtp-material BINARY SEARCH. "#EC CI_STDSEQ
      IF sy-subrc EQ 0 OR ls_sls_record-conditionquantityunit IS INITIAL.
        READ TABLE ls_change-attributes TRANSPORTING NO FIELDS
          WITH KEY table_line = zif_i_slspricingconditionrec_c=>sc_node_attribute-zi_slspricingconditionrecordtp-conditiontype BINARY SEARCH. "#EC CI_STDSEQ
        IF sy-subrc NE 0.
          propose_unit_of_measure( EXPORTING is_t685a = ls_t685a CHANGING cs_cond_record = ls_sls_record ).
        ENDIF.
      ENDIF.
      "propose ConditionQuantityUnit when conditiontable changed
      READ TABLE ls_change-attributes TRANSPORTING NO FIELDS
        WITH KEY table_line = zif_i_slspricingconditionrec_c=>sc_node_attribute-zi_slspricingconditionrecordtp-conditiontable BINARY SEARCH. "#EC CI_STDSEQ
      IF sy-subrc EQ 0.
        READ TABLE ls_change-attributes TRANSPORTING NO FIELDS
        WITH KEY table_line = zif_i_slspricingconditionrec_c=>sc_node_attribute-zi_slspricingconditionrecordtp-conditiontype BINARY SEARCH. "#EC CI_STDSEQ
        IF sy-subrc NE 0 AND ls_sls_record-material IS INITIAL.
          CLEAR: ls_sls_record-baseunit, ls_sls_record-conditiontobaseqtynmrtr, ls_sls_record-conditiontobaseqtydnmntr.
        ENDIF.
      ENDIF.
      "clear data for speicial calculationtype
      IF mo_cond_dependency->is_uom_dependent( ls_sls_record-conditioncalculationtype ) = abap_false OR
         ls_t685a-krech = if_pricing_calculation_types=>c_quantity_adjustment.
        CLEAR: ls_sls_record-conditionquantity, ls_sls_record-conditionquantityunit, ls_sls_record-baseunit,
        ls_sls_record-conditiontobaseqtynmrtr, ls_sls_record-conditiontobaseqtydnmntr.
      ENDIF.

      "check and add uom(unit of measure) conversion routine when ConditionQuantityUnit changed
      READ TABLE ls_change-attributes TRANSPORTING NO FIELDS
        WITH KEY table_line = zif_i_slspricingconditionrec_c=>sc_node_attribute-zi_slspricingconditionrecordtp-conditionquantityunit BINARY SEARCH.
      IF sy-subrc EQ 0.
        READ TABLE ls_change-attributes TRANSPORTING NO FIELDS
        WITH KEY table_line = zif_i_slspricingconditionrec_c=>sc_node_attribute-zi_slspricingconditionrecordtp-conditiontype BINARY SEARCH. "#EC CI_STDSEQ
        IF sy-subrc NE 0 AND ( ls_sls_record-conditioncalculationtype EQ if_pricing_calculation_types=>c_quantity OR ls_sls_record-conditioncalculationtype EQ if_pricing_calculation_types=>c_quantity_daily
               OR ls_sls_record-conditioncalculationtype EQ if_pricing_calculation_types=>c_quantity_weekly OR ls_sls_record-conditioncalculationtype EQ if_pricing_calculation_types=>c_quantity_monthly
               OR ls_sls_record-conditioncalculationtype EQ if_pricing_calculation_types=>c_quantity_yearly OR ls_sls_record-conditioncalculationtype EQ if_pricing_calculation_types=>c_quantity_adjustment ).
          check_uom_conversion( CHANGING cs_cond_record = ls_sls_record ).
        ENDIF.
      ENDIF.

      "Propose stfkz PricingScaleType
      IF ls_sls_record-pricingscaletype IS INITIAL.
        ls_sls_record-pricingscaletype = ls_t685a-stfkz.
      ENDIF.

      ls_sls_record-CONDITIONEXCLUSION = ls_t685a-kznep.

      "get text
      CLEAR lt_sls_record_tmp.
      APPEND ls_sls_record TO lt_sls_record_tmp.
      mo_prcg_util->get_text(
        EXPORTING
          iv_ddlname = 'ZC_SlsPricingConditionRecordTP'                 " Name of a DDL Source
        CHANGING
          cr_data    = lr_data
      ).
      READ TABLE lt_sls_record_tmp INTO ls_sls_record INDEX 1.

***Check Workflow Simulation
*      DATA:ls_event_data TYPE sdslsprc_approval_request_s.
*      DATA:ls_leading_object TYPE sibflporb,
*           lv_cnt_elem_name  TYPE swfdname,
*           lo_req            TYPE REF TO cl_sd_slsprc_aprvl_req_wf.
*      CONSTANTS : lc_wf_class    TYPE sibflporb-typeid VALUE 'CL_SD_SLSPRC_APRVL_REQ_WF',
*                  lc_wf_catid    TYPE sibflporb-catid VALUE 'CL',
*                  lc_scenario_id TYPE string VALUE'WS01800208'.
*      ls_leading_object-instid = '0000000001'. "ls_sls_record-salespriceapprovalrequest.
*      ls_leading_object-typeid = lc_wf_class.
*      ls_leading_object-catid =  cl_swf_evt_event=>mc_objcateg_cl.
*
*      MOVE-CORRESPONDING ls_sls_record TO ls_event_data.
*
*      DATA(lo_factory) = cl_swf_flex_ifs_factory=>get_instance(
*                           iv_language    = sy-langu
*                           iv_scenario_id = lc_scenario_id ).
*      TRY.
*          DATA(lo_simulator) = lo_factory->get_cond_wf_start_simulator( iv_leading_object = ls_leading_object ).
*        CATCH cx_swf_flex_ifs_exception INTO DATA(lo_sim). " is raised, if leading object is not valid( ls_leading_object ).
*      ENDTRY.
*
*      "optional modify the start container before starting the simulation
*      "the leading object is already inserted at this point in time and set to readonly
*      DATA(lo_container) = lo_simulator->get_start_container( ).
*
*      TRY.
*          lo_container->set(
*            EXPORTING
*              name       =  'IS_DATA'
*              value      =  ls_event_data
*          ).
*        CATCH cx_swf_cnt_cont_access_denied. " Changed Access Not Allowed
*        CATCH cx_swf_cnt_elem_access_denied. " Value/Unit Must Not Be Changed
*        CATCH cx_swf_cnt_elem_not_found.     " Element Not in the Container
*        CATCH cx_swf_cnt_elem_type_conflict. " Type Conflict Between Value and Current Parameter
*        CATCH cx_swf_cnt_unit_type_conflict. " Type Conflict Between Unit and Current Parameter
*        CATCH cx_swf_cnt_elem_def_invalid.   " Element Definition Is Invalid (Internal Error)
*        CATCH cx_swf_cnt_container.          " Exception in the Container Service
*      ENDTRY.
*
*      TRY.
*          lo_simulator->evaluate(
*            IMPORTING
*              et_sim_result = DATA(lt_sim_result)
*              eo_workflow = DATA(lo_workflow)
*          ).
*        CATCH cx_swf_flex_ifs_exception INTO DATA(lo_eva).
*      ENDTRY.
*
*      READ TABLE lt_sim_result INTO DATA(ls_res) WITH KEY selected = abap_true.

      io_modify->update(
        iv_node = is_ctx-node_key
        iv_key  = ls_sls_record-key
        is_data = REF #( ls_sls_record ) ).

    ENDLOOP.


  ENDMETHOD.


  METHOD check_uom_conversion.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    DATA:
      lv_matnr              TYPE matnr,
      lv_vkorg              TYPE vkorg,
      lv_vtweg              TYPE vtweg,
      lv_subrc              TYPE sysubrc,
      lv_unit_of_measure(3) TYPE c,
      lv_quan               TYPE f ##NEEDED.

    lv_unit_of_measure = cs_cond_record-conditionquantityunit.
* Fill LV_MATNR, LV_VKORG, LV_VTWEG
    lv_matnr = cs_cond_record-material.
    lv_vkorg = cs_cond_record-salesorganization.
    lv_vtweg = cs_cond_record-distributionchannel.

* material does not exist
    IF ( lv_matnr =  space OR lv_matnr CO '0' ) OR ( lv_unit_of_measure =  space OR lv_unit_of_measure CO '0' ).
      CLEAR: cs_cond_record-baseunit, cs_cond_record-conditiontobaseqtynmrtr, cs_cond_record-conditiontobaseqtydnmntr.
      RETURN.

* material exists
    ELSE.
*   Fill LV_MEINS
      DATA(lv_meins) = mo_cond_dependency->get_meins( EXPORTING iv_matnr = lv_matnr ).
*   Fill LV_VRKME
      DATA(lv_vrkme) = mo_cond_dependency->get_vrkme( EXPORTING iv_matnr = lv_matnr
                                                                iv_vkorg = lv_vkorg
                                                                iv_vtweg = lv_vtweg ).

* qunatity unit = sales unit or base unit of measure
      IF lv_unit_of_measure = lv_vrkme OR
         lv_unit_of_measure = lv_meins.
*        IF iv_clear = abap_true.
* reset conversion factors
* (only when called for conditions unit, not for scale base unit)
        CLEAR: cs_cond_record-baseunit, cs_cond_record-conditiontobaseqtynmrtr, cs_cond_record-conditiontobaseqtydnmntr.
*        ENDIF.
* quantity is valid
        RETURN.
      ENDIF.

* check with unit of material master
      TEST-SEAM material_unit_conversion.
        CALL FUNCTION 'MATERIAL_UNIT_CONVERSION'
          EXPORTING
            matnr                = lv_matnr
            meinh                = lv_unit_of_measure
            meins                = lv_meins
          IMPORTING
            output               = lv_quan
          EXCEPTIONS ##FM_SUBRC_OK
            material_not_found   = 3
            conversion_not_found = 4
            meinh_not_found      = 8
            meins_missing        = 8
            no_meinh             = 8.
      END-TEST-SEAM.
* unit is valid
      IF sy-subrc EQ 4.
* reset conversion factors
        cs_cond_record-baseunit = lv_meins.
        cs_cond_record-conditiontobaseqtynmrtr =  1.
        cs_cond_record-conditiontobaseqtydnmntr = 1.
      ELSE.
        CLEAR: cs_cond_record-baseunit, cs_cond_record-conditiontobaseqtynmrtr, cs_cond_record-conditiontobaseqtydnmntr.
      ENDIF.
    ENDIF.
  ENDMETHOD.


  METHOD clean_value.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    DATA:lt_name_value TYPE cndt_field_name_value,
         ls_name_value TYPE cnds_field_name_value,
         ls_validity   TYPE ZI_SlsPrcgCndnRecdValidity,
         ls_konp       TYPE ZI_SlsPrcgCndnRecdValidity.
    CONSTANTS: lc_temporaer    TYPE char2 VALUE '$$'.

    IF cs_record-conditiontype IS INITIAL
      OR cs_record-isactiveentity = abap_true.
      EXIT.
    ENDIF.

    "If the input change accessnumber, the required fields will be changed too,
    "so clean the previous value of fields which is not required for the new accessnumber
    get_access(
      EXPORTING
        iv_conditiontype = cs_record-conditiontype                  " Condition Type
      IMPORTING
        et_access        = DATA(lt_access)
    ).
    IF NOT cs_record-conditiontable IS INITIAL.
      DELETE lt_access WHERE conditiontable <> cs_record-conditiontable.
    ENDIF.
    IF NOT cs_record-accessnumberofaccesssequence IS INITIAL.
      DELETE lt_access WHERE accessnumber <> cs_record-accessnumberofaccesssequence
                          OR accessnumber = cs_record-accessnumberofaccesssequence
                         AND prcgcndnvalueinitialisallowed = abap_true.
    ENDIF.
    SORT lt_access BY fieldname.
    DELETE ADJACENT DUPLICATES FROM lt_access COMPARING fieldname.

    LOOP AT lt_access INTO DATA(ls_access).
      ASSIGN COMPONENT ls_access-fieldname OF STRUCTURE cs_record TO FIELD-SYMBOL(<fs_value>).
      IF <fs_value> IS ASSIGNED.

        CLEAR:ls_name_value.
        ls_name_value-fieldname = ls_access-fieldname.
        ls_name_value-fieldvalue = <fs_value>.
        APPEND ls_name_value TO lt_name_value.

      ENDIF.
    ENDLOOP.

    DATA(lv_kbstat) = cs_record-conditionprocessingstatus.
    MOVE-CORRESPONDING cs_record TO ls_konp. "price related fields
    MOVE-CORRESPONDING ls_validity TO cs_record. "condition releated fields (A table)
    MOVE-CORRESPONDING ls_konp TO cs_record.
    cs_record-conditionprocessingstatus = lv_kbstat.

    CONSTANTS: lc_feature_toggle_id TYPE sftgl_ft_id VALUE 'SD_PRICE_APPROVAL_BASIC_FUNCTION'.
    TEST-SEAM feature_toggle_fine.
      IF cl_feature_toggle=>is_defined( lc_feature_toggle_id )
        AND cl_feature_toggle=>is_active( lc_feature_toggle_id ).
        DATA(lv_ft_fine) = abap_true.
      ENDIF.
    END-TEST-SEAM.
    IF lv_ft_fine = abap_true and cs_record-conditionrecord is INITIAL.
      cs_record-conditionreleasestatus = 'A'.
    ENDIF.

    CLEAR:cs_record-wbselementinternalid,cs_record-workpackage,
          cs_record-customername,cs_record-personfullname,cs_record-engmtprojectserviceorgname,
          cs_record-salesorganizationname,cs_record-distributionchannelname,cs_record-materialname,
          cs_record-wbsdescription,cs_record-workpackagename,cs_record-workitemname,cs_record-engagementprojectname.

    LOOP AT lt_name_value INTO ls_name_value.
      ASSIGN COMPONENT 'FIELDVALUE' OF STRUCTURE ls_name_value TO <fs_value>.
      IF <fs_value> IS ASSIGNED.
        ASSIGN COMPONENT ls_name_value-fieldname OF STRUCTURE cs_record TO FIELD-SYMBOL(<fs_val>).
        IF <fs_val> IS ASSIGNED.
          <fs_val> = CONV #( <fs_value> ).
        ENDIF.
      ENDIF.
    ENDLOOP.
  ENDMETHOD.


  METHOD constructor.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    super->constructor( ).
    mo_cond_checks = cl_cnd_maint_ltd_check_mgr=>get_instance( ).
    mo_cond_dependency = cl_cnd_maint_ltd_dep_mgr=>get_instance( ).
    mo_prcg_util = cl_cndnrecord_public_utility=>get_instance( ).
    mo_sls_api = NEW zcl_slsprcg_cndnrecord_api( ).
  ENDMETHOD.


  METHOD get_access.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    READ TABLE mt_access WITH KEY conditiontype = iv_conditiontype TRANSPORTING NO FIELDS.
    IF sy-subrc <> 0.
      SELECT conditiontype,
             conditiontable,
             accessnumberofaccesssequence AS accessnumber,
             conditionfieldname AS fieldname,
             prcgcndnvalueinitialisallowed,
             NumberOfConditions as conditioncount
        FROM zi_slsprcgkeycombinationfield
       WHERE conditiontype = @iv_conditiontype
        APPENDING CORRESPONDING FIELDS OF TABLE @mt_access.

      SORT mt_access.
      DELETE ADJACENT DUPLICATES FROM mt_access COMPARING ALL FIELDS.
      LOOP AT mt_access INTO DATA(ls_access) WHERE conditiontype = iv_conditiontype.
        TRANSLATE ls_access-fieldname TO UPPER CASE.
        MODIFY mt_access FROM ls_access.
      ENDLOOP.
    ENDIF.

    et_access = mt_access.
    DELETE et_access WHERE conditiontype <> iv_conditiontype.
  ENDMETHOD.


  METHOD is_promille.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    rv_is_promille = abap_false.

    IF iv_krech <> if_pricing_calculation_types=>c_per_mille
      AND iv_krech <> if_pricing_calculation_types=>c_per_mille_in_thousands.
      RETURN.
    ENDIF.

    rv_is_promille = abap_true.

  ENDMETHOD.


  METHOD propose_distance_unit.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    "distance unit maintained?
    IF is_t685a-kzbzg = if_pricing_calculation_types=>c_distance_dependent AND
       is_t685a-grmen <> space.
      cs_cond_record-conditionquantityunit = is_t685a-grmen.
    ELSE.
      "standard distance unit?
      cs_cond_record-conditionquantityunit = if_cnd_maint_ltd_types=>c_standard_distance_unit.
    ENDIF.

  ENDMETHOD.


  METHOD propose_points_unit.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    "points unit maintained?
    IF is_t685a-kzbzg = if_pricing_calculation_types=>c_points  AND
       is_t685a-grmen <> space.
      cs_cond_record-conditionquantityunit = is_t685a-grmen.
    ELSE.
      cs_cond_record-conditionquantityunit = if_cnd_maint_ltd_types=>c_standard_points_unit.
    ENDIF.

  ENDMETHOD.


  METHOD propose_quantity_unit.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
*---------------------------------------------------------------------*
*  Compare form MAT_MENGENEIN_VORSCHLAGEN in SAPMV13A.
*---------------------------------------------------------------------*
    DATA:
      lv_matnr TYPE matnr,
      lv_vkorg TYPE vkorg,
      lv_vtweg TYPE vtweg.

    "Propose unit of measure
    IF is_t685a-kntyp = 'U' AND
       is_t685a-grmen <> space.
      "set quantity unit for metal prices
      cs_cond_record-conditionquantityunit = is_t685a-grmen.
    ELSE.
      "Fill LV_MATNR, LV_VKORG, LV_VTWEG

      lv_matnr = cs_cond_record-material.
      lv_vkorg = cs_cond_record-salesorganization.
      lv_vtweg = cs_cond_record-distributionchannel.

      "propose VRKME
      cs_cond_record-conditionquantityunit = mo_cond_dependency->get_vrkme( EXPORTING iv_matnr = lv_matnr
                                                                    iv_vkorg = lv_vkorg
                                                                    iv_vtweg = lv_vtweg ).
      CLEAR: cs_cond_record-conditiontobaseqtynmrtr, cs_cond_record-conditiontobaseqtydnmntr, cs_cond_record-baseunit.

    ENDIF.

  ENDMETHOD.


  METHOD propose_unit_of_measure.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*

    CHECK mo_cond_dependency->is_uom_dependent( is_t685a-krech ) = abap_true.

    CASE is_t685a-krech.
        "quantity unit
      WHEN if_pricing_calculation_types=>c_quantity_daily OR
           if_pricing_calculation_types=>c_quantity_weekly OR
           if_pricing_calculation_types=>c_quantity_monthly OR
           if_pricing_calculation_types=>c_quantity_yearly OR
           if_pricing_calculation_types=>c_quantity OR
           if_pricing_calculation_types=>c_quantity_adjustment.
        propose_quantity_unit( EXPORTING is_t685a = is_t685a CHANGING cs_cond_record = cs_cond_record ).
        "weight
      WHEN if_pricing_calculation_types=>c_gross_weight OR "gross weight
           if_pricing_calculation_types=>c_net_weight. "net weight
        propose_weight_unit( EXPORTING is_t685a = is_t685a CHANGING cs_cond_record = cs_cond_record ).
        "volume
      WHEN if_pricing_calculation_types=>c_volume.
        propose_volume_unit( EXPORTING is_t685a = is_t685a CHANGING cs_cond_record = cs_cond_record ).
        "points
      WHEN if_pricing_calculation_types=>c_points.
        propose_points_unit( EXPORTING is_t685a = is_t685a CHANGING cs_cond_record = cs_cond_record ).
        "distance
      WHEN if_pricing_calculation_types=>c_distance_dependent.
        propose_distance_unit( EXPORTING is_t685a = is_t685a CHANGING cs_cond_record = cs_cond_record ).
        "number of shipping units
      WHEN if_pricing_calculation_types=>c_no_of_shipping_units.
    ENDCASE.

  ENDMETHOD.


  METHOD propose_volume_unit.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    "volume unit maintained?
    IF is_t685a-kzbzg = if_pricing_calculation_types=>c_volume AND
       is_t685a-grmen <> space.
      cs_cond_record-conditionquantityunit = is_t685a-grmen.
    ELSE.
      "standard volume unit?
      cs_cond_record-conditionquantityunit = if_cnd_maint_ltd_types=>c_standard_volume_unit.
    ENDIF.

  ENDMETHOD.


  METHOD propose_weight_unit.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    "weight unit maintained?
    IF ( is_t685a-kzbzg = if_pricing_calculation_types=>c_gross_weight OR
         is_t685a-kzbzg = if_pricing_calculation_types=>c_net_weight )  AND
         is_t685a-grmen <> space.
      cs_cond_record-conditionquantityunit = is_t685a-grmen.
    ELSE.
      "standard weight unit?
      cs_cond_record-conditionquantityunit = if_cnd_maint_ltd_types=>c_standard_weight_unit.
    ENDIF.

  ENDMETHOD.


  METHOD set_default_value.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    CONSTANTS:
          lc_promille_display TYPE char2 VALUE '%o'.  " per mille sign
    DATA: ls_tvko   TYPE tvko,
          ls_t001   TYPE t001,
          lt_item   TYPE  if_slsprcg_cndnrecd_api_types=>ty_cndnrecd_criteria_item_t,
          ls_option TYPE  if_slsprcg_cndnrecd_api_types=>ty_cndnrecd_query_option_s.

    "Propose and check currency konwa propose_and_check_konwa ConditionRateValueUnit
    IF cs_record-conditioncalculationtype IS NOT INITIAL." AND cs_record-conditionratevalueunit IS INITIAL.
      "convert per mille sign (%O -> %o)
      IF is_promille( cs_record-conditioncalculationtype ) = abap_true.
        TRANSLATE cs_record-conditionratevalueunit TO LOWER CASE.
      ENDIF.
      "percentage rebate
      IF cs_record-conditioncalculationtype = if_pricing_calculation_types=>c_percentage OR
         cs_record-conditioncalculationtype = if_pricing_calculation_types=>c_percentage_in_hundreds OR
         cs_record-conditioncalculationtype = if_pricing_calculation_types=>c_percentage_travel_exp OR
         cs_record-conditioncalculationtype = if_pricing_calculation_types=>c_per_mille OR
         cs_record-conditioncalculationtype = if_pricing_calculation_types=>c_per_mille_in_thousands OR
         cs_record-conditioncalculationtype = if_pricing_calculation_types=>c_percentage_6.
        MOVE '%' TO cs_record-conditionratevalueunit.
        IF is_promille( cs_record-conditioncalculationtype ) = abap_true.
          MOVE lc_promille_display TO cs_record-conditionratevalueunit.
        ENDIF.
      ELSEIF cs_record-conditioncalculationtype = if_pricing_calculation_types=>c_quantity_adjustment.
        MOVE '%' TO cs_record-conditionratevalueunit.
      ELSE.
        IF cs_record-conditioncalculationtype = if_pricing_calculation_types=>c_fixed_amount OR
           cs_record-conditioncalculationtype = if_pricing_calculation_types=>c_gross_weight OR
           cs_record-conditioncalculationtype = if_pricing_calculation_types=>c_net_weight OR
           cs_record-conditioncalculationtype = if_pricing_calculation_types=>c_volume OR
           cs_record-conditioncalculationtype = if_pricing_calculation_types=>c_points OR
           cs_record-conditioncalculationtype = if_pricing_calculation_types=>c_quantity_monthly OR
           cs_record-conditioncalculationtype = if_pricing_calculation_types=>c_quantity_yearly OR
           cs_record-conditioncalculationtype = if_pricing_calculation_types=>c_quantity_daily OR
           cs_record-conditioncalculationtype = if_pricing_calculation_types=>c_quantity_weekly OR
           cs_record-conditioncalculationtype = if_pricing_calculation_types=>c_distance_dependent OR
           cs_record-conditioncalculationtype = if_pricing_calculation_types=>c_no_of_shipping_units OR
           cs_record-conditioncalculationtype = if_pricing_calculation_types=>c_quantity.

          IF cs_record-conditionratevalueunit = space.
            "no currency entered -> get proposal
            IF cs_record-salesorganization IS NOT INITIAL.
              IF cs_record-salesorganization NE ls_tvko-vkorg.
                TEST-SEAM get_ls_tvko.
                  SELECT SINGLE *
                    FROM tvko
                    INTO ls_tvko
                   WHERE vkorg EQ cs_record-salesorganization.
                END-TEST-SEAM.
              ENDIF.
              "Select from T001
              IF ls_tvko-bukrs IS NOT INITIAL.
                TEST-SEAM t001_single_read.
                  CALL FUNCTION 'T001_SINGLE_READ'
                    EXPORTING
                      bukrs  = ls_tvko-bukrs
                    IMPORTING
                      wt001  = ls_t001
                    EXCEPTIONS
                      OTHERS = 0.
                END-TEST-SEAM.
                IF NOT ls_t001-waers IS INITIAL.
                  cs_record-conditionratevalueunit = ls_t001-waers.
                ENDIF.
              ENDIF.
            ENDIF.
          ENDIF.
        ENDIF.
      ENDIF.
    ENDIF.

    "project input, then get project currency; refer to include MV13AKOM customer_project_currency
    IF cs_record-conditionratevalueunit IS INITIAL AND cs_record-engagementproject IS NOT INITIAL.
      /cpd/cl_sc_cpm_utility=>get_project_details(
        EXPORTING iv_proj_id      = cs_record-engagementproject
        IMPORTING es_proj_details = DATA(ls_project_details) ).
      IF ls_project_details IS NOT INITIAL.
        cs_record-conditionratevalueunit = ls_project_details-currency.
      ENDIF.
    ENDIF.

    "set default conditionratevlaueunit according to existing value
    IF cs_record-conditionratevalueunit IS INITIAL.
      IF NOT cs_record-conditiontype IS INITIAL
        AND NOT cs_record-conditiontable IS INITIAL.
        APPEND VALUE #( conditiontype = VALUE #( ( sign = 'I' option = 'EQ' low = cs_record-conditiontype ) )
                        conditiontable = VALUE #( ( sign = 'I' option = 'EQ' low = cs_record-conditiontable ) ) )
            TO lt_item.
      ELSEIF NOT cs_record-conditiontype IS INITIAL.
        APPEND VALUE #( conditiontype = VALUE #( ( sign = 'I' option = 'EQ' low = cs_record-conditiontype ) ) )
            TO lt_item.
      ELSEIF NOT cs_record-conditiontable IS INITIAL.
        APPEND VALUE #( conditiontable = VALUE #( ( sign = 'I' option = 'EQ' low = cs_record-conditiontable ) ) )
            TO lt_item.
      ELSE.
        APPEND VALUE #( conditiontype = VALUE #( ( sign = 'I' option = 'CP' low = '*' ) ) )
            TO lt_item.
      ENDIF.
      ls_option = VALUE #( prcgqueryoptiontop = '1' ).

      TRY.
          mo_sls_api->get_condition_record(
            EXPORTING
              it_cndnrecord_criteria_item   = lt_item
              is_cndnrecord_query_option    = ls_option
            IMPORTING
              et_condition_record           = DATA(lt_api_record)
          ).
        CATCH cx_prcg_cndnrecord_exception. " Exception for Condition Public API

      ENDTRY.
      READ TABLE lt_api_record INTO DATA(ls_api_record) INDEX 1.
      IF sy-subrc = 0.
        cs_record-conditionratevalueunit = ls_api_record-conditionratevalueunit.
      ELSE.
        cs_record-conditionratevalueunit = 'EUR'.
      ENDIF.
    ENDIF.
  ENDMETHOD.
ENDCLASS.