CLASS zcl_i_d_cndn_rcrd_admindata DEFINITION
  PUBLIC
  INHERITING FROM /bobf/cl_lib_d_supercl_simple
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    METHODS /bobf/if_frw_determination~execute
        REDEFINITION .
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS ZCL_I_D_CNDN_RCRD_ADMINDATA IMPLEMENTATION.


  METHOD /bobf/if_frw_determination~execute.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    DATA : lt_data    TYPE REF TO data.

    FIELD-SYMBOLS: <fs_t_data> TYPE INDEX TABLE.

    "Get the draft keys
    TEST-SEAM get_draft_key.
      /bobf/cl_lib_draft_active=>get_instance( is_ctx-bo_key )->separate_keys(
        EXPORTING
          iv_node_key   = is_ctx-node_key
          it_key        = it_key
        IMPORTING
          et_draft_key = DATA(lt_draft_bopf_keys)
        ).
    END-TEST-SEAM.

    eo_message = /bobf/cl_frw_message_factory=>create_container( ).

    TRY.
        TEST-SEAM rasie_exception.
          DATA(lo_conf) = /bobf/cl_frw_factory=>get_configuration( iv_bo_key = is_ctx-bo_key ).
        END-TEST-SEAM.
      CATCH /bobf/cx_frw INTO DATA(lx_bo).
        RETURN.
    ENDTRY.

    lo_conf->get_node(
      EXPORTING
        iv_node_key = is_ctx-node_key
      IMPORTING
        es_node     = DATA(ls_node)
    ).

    CREATE DATA lt_data TYPE (ls_node-data_table_type).
    ASSIGN lt_data->* TO <fs_t_data>.

    io_read->retrieve(
      EXPORTING
        iv_node                 = is_ctx-node_key
        it_key                  = lt_draft_bopf_keys
      IMPORTING
        eo_message              = DATA(lo_message)
        et_data                 = <fs_t_data>
        et_failed_key           = et_failed_key  ).

    LOOP AT <fs_t_data> ASSIGNING FIELD-SYMBOL(<fs_data>).

      ASSIGN COMPONENT 'KEY' OF STRUCTURE <fs_data> TO FIELD-SYMBOL(<fs_key>).

      ASSIGN COMPONENT ZIF_I_SLSPRICINGCONDITIONREC_C=>sc_node_attribute-zi_slspricingconditionrecordtp-createdbyuser
        OF STRUCTURE <fs_data> TO FIELD-SYMBOL(<fs_createdbyuser>).
      IF <fs_createdbyuser> IS ASSIGNED AND <fs_createdbyuser> IS INITIAL.
        <fs_createdbyuser> = sy-uname.
      ENDIF.

      ASSIGN COMPONENT ZIF_I_SLSPRICINGCONDITIONREC_C=>sc_node_attribute-zi_slspricingconditionrecordtp-creationdate
        OF STRUCTURE <fs_data> TO FIELD-SYMBOL(<fs_creationdate>).
      IF <fs_creationdate> IS ASSIGNED AND <fs_creationdate> IS INITIAL.
        <fs_creationdate> = sy-datum.
      ENDIF.

      ASSIGN COMPONENT ZIF_I_SLSPRICINGCONDITIONREC_C=>sc_node_attribute-zi_slspricingconditionrecordtp-conditionapplication
        OF STRUCTURE <fs_data> TO FIELD-SYMBOL(<fs_condappl>).
      IF <fs_condappl> IS ASSIGNED.
        <fs_condappl> = 'V'.
      ENDIF.

      ASSIGN COMPONENT ZIF_I_SLSPRICINGCONDITIONREC_C=>sc_node_attribute-zi_slspricingconditionrecordtp-conditionrecord
        OF STRUCTURE <fs_data> TO FIELD-SYMBOL(<fs_conditionrecord>).

      ASSIGN COMPONENT ZIF_I_SLSPRICINGCONDITIONREC_C=>sc_node_attribute-zi_slspricingconditionrecordtp-conditionsequentialnumber
        OF STRUCTURE <fs_data> TO FIELD-SYMBOL(<fs_sequential>).

      ASSIGN COMPONENT ZIF_I_SLSPRICINGCONDITIONREC_C=>sc_node_attribute-zi_slspricingconditionrecordtp-conditionvalidityenddate
        OF STRUCTURE <fs_data> TO FIELD-SYMBOL(<fs_enddate>).

      ASSIGN COMPONENT ZIF_I_SLSPRICINGCONDITIONREC_C=>sc_node_attribute-zi_slspricingconditionrecordtp-hasactiveentity
        OF STRUCTURE <fs_data> TO FIELD-SYMBOL(<fs_hasactive>).

      IF <fs_conditionrecord> IS NOT INITIAL AND <fs_conditionrecord> CO '0123456789'.
        IF <fs_hasactive> IS ASSIGNED.
          <fs_hasactive> = abap_true.
        ENDIF.
      ENDIF.

      io_modify->update(
        iv_node           = is_ctx-node_key
        iv_key            = <fs_key>
        is_data           = REF #( <fs_data> ) ).

    ENDLOOP.

  ENDMETHOD.
ENDCLASS.