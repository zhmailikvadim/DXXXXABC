class ZCL_IM_SD_EI_PO_DEFCALCTYPE definition
  public
  final
  create public .

public section.

  interfaces IF_EX_ME_DEFINE_CALCTYPE .
protected section.
private section.

  methods GET_PO_IN_ITERATION
    returning
      value(RV_PO_IN_ITERATION) type I .
  methods STACK_SEARCH
    importing
      !IV_PROGNAME type SYREPID
      !IV_EVENT type STRING
    returning
      value(RV_FOUND) type ABAP_BOOL .
ENDCLASS.



CLASS ZCL_IM_SD_EI_PO_DEFCALCTYPE IMPLEMENTATION.


  METHOD if_ex_me_define_calctype~define_calctype.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MUKHAMAK     | 23.12.2022 | 16542     : PO Item rebuilt after Header *
*              |            | DS4K938965                               *
* BEGMUAZI     | 23.01.2023 | FB_17066_SD_Change the pricing date in creation of PO
*              |            | DS4K940895
*----------------------------------------------------------------------*
* KURAPAND     | 17.01.2024 | 28001 Price Date not updated automatical *
*              |            | DS4K976410                               *
*----------------------------------------------------------------------*
* KURAPAND     | 18.01.2024 | 28244    : PO Pricing date               *
*              |            | DS4K976695                               *
*----------------------------------------------------------------------*
* NIELOOLE     | 27.03.2024 | FB_30514_SP_Title PO Pricing             *
*              |            | DS4K985288                               *
*----------------------------------------------------------------------*
    TYPES:
      BEGIN OF ltyp_s_data,
        bsart TYPE bsart,
        meprf TYPE meprf,
      END OF ltyp_s_data.
    DATA: lt_data TYPE STANDARD TABLE OF ltyp_s_data.

    FIELD-SYMBOLS:
      <lv_oekko_value> TYPE any,
      <lv_nekko_value> TYPE any,
      <lv_oekpo_value> TYPE any,
      <lv_nekpo_value> TYPE any.

    CONSTANTS:
      lc_calctype_b TYPE komv-ksteu VALUE 'B',  " Free
      lc_calctype_c TYPE komv-ksteu VALUE 'C'.  " Changed manually

    IF ch_x_lf_calctype = lc_calctype_b.
      RETURN.
    ENDIF.

    TRY.
        DATA(lt_field)      =  zcl_pe_hm_basic=>get_table( iv_id = '978' ).
      CATCH zcx_pe_hm.
        RETURN.
    ENDTRY.

    LOOP AT lt_field ASSIGNING FIELD-SYMBOL(<ls_field>).
* Check the values of the fields before editing and after editing. The field names are set in HM.
* If they differ, then we run the recalculation.

      UNASSIGN <lv_oekko_value>.
      ASSIGN COMPONENT <ls_field>-field1 OF STRUCTURE im_x_oekko TO <lv_oekko_value>.
      IF sy-subrc <> 0.
        CONTINUE.
      ENDIF.

      UNASSIGN <lv_nekko_value>.
      ASSIGN COMPONENT <ls_field>-field1 OF STRUCTURE im_x_nekko TO <lv_nekko_value>.
      IF sy-subrc <> 0.
        CONTINUE.
      ENDIF.

      IF <lv_oekko_value> <> <lv_nekko_value>.
        ch_x_lf_calctype = lc_calctype_b.
        EXIT.
      ENDIF.

    ENDLOOP.


    TRY.
        DATA(lt_field_item) =  zcl_pe_hm_basic=>get_table( iv_id = '1095' ).
        zcl_pe_hm_complex=>get_table( EXPORTING iv_id           = '0239FC3B8D041EDDA5E364B5514C9F59'
                                                iv_mapping_type = zcl_pe_hm_complex=>gc_s_mapping_type-data_elements
                                      IMPORTING et_table        = lt_data ).

      CATCH zcx_pe_hm.
        RETURN.
    ENDTRY.

    READ TABLE lt_data WITH KEY bsart  = im_x_nekko-bsart
                                meprf  = im_x_nekpo-meprf TRANSPORTING NO FIELDS. "#EC CI_STDSEQ
    IF sy-subrc = 0.

      DATA(lv_po_in_iteration) = get_po_in_iteration( ).

      CASE lv_po_in_iteration.
        WHEN 1.
          " Do nothing
        WHEN 2.
          ch_x_lf_calctype = lc_calctype_c.
          RETURN.
        WHEN OTHERS.
          LOOP AT lt_field_item ASSIGNING FIELD-SYMBOL(<ls_field_item>).
            UNASSIGN <lv_oekpo_value>.
            ASSIGN COMPONENT <ls_field_item>-field1 OF STRUCTURE im_x_oekpo TO <lv_oekpo_value>.
            IF sy-subrc <> 0.
              CONTINUE.
            ENDIF.

            UNASSIGN <lv_nekpo_value>.
            ASSIGN COMPONENT <ls_field_item>-field1 OF STRUCTURE im_x_nekpo TO <lv_nekpo_value>.
            IF sy-subrc <> 0.
              CONTINUE.
            ENDIF.

            IF <lv_oekpo_value> <> <lv_nekpo_value>.
              ch_x_lf_calctype = lc_calctype_c.
              EXIT.
            ENDIF.

          ENDLOOP.
      ENDCASE.

    ENDIF.

  ENDMETHOD.


  METHOD get_po_in_iteration.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* NIELOOLE     | 27.03.2024 | FB_30514_SP_Title PO Pricing             *
*              |            | DS4K985288                               *
*----------------------------------------------------------------------*
    CONSTANTS lc_po_in TYPE syrepid VALUE 'CL_MMPUR_SOA_PO_IN============CP'.

    rv_po_in_iteration = 0.

    IF stack_search( iv_progname = lc_po_in
                     iv_event    = 'EXECUTE' ).
      rv_po_in_iteration = 1.
      IF stack_search( iv_progname = lc_po_in
                       iv_event    = 'OVERWRITE_AUTODETERMINED_PRICE' ).
        rv_po_in_iteration = 2.
      ENDIF.
      IF stack_search( iv_progname = lc_po_in
                       iv_event    = 'LIF_PO_HANDLER~POST_PO' ).
        rv_po_in_iteration = 3.
      ENDIF.
    ENDIF.

  ENDMETHOD.


  METHOD stack_search.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* NIELOOLE     | 27.03.2024 | FB_30514_SP_Title PO Pricing             *
*              |            | DS4K985288                               *
*----------------------------------------------------------------------*
    DATA lt_callstack TYPE abap_callstack.

    rv_found = abap_false.

    CALL FUNCTION 'SYSTEM_CALLSTACK'
      IMPORTING
        callstack = lt_callstack.
    IF lt_callstack[] IS INITIAL.
      RETURN.
    ENDIF.

    READ TABLE lt_callstack TRANSPORTING NO FIELDS
      WITH KEY mainprogram = iv_progname
               blockname   = iv_event.
    IF sy-subrc EQ 0.
      rv_found = abap_true.
    ENDIF.

  ENDMETHOD.
ENDCLASS.