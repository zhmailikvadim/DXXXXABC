CLASS zcl_pd_ei_badi_idoc_blaord00 DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES if_badi_interface .
    INTERFACES zif_pd_badi_idoc_blaord03 .
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS zcl_pd_ei_badi_idoc_blaord00 IMPLEMENTATION.


  METHOD zif_pd_badi_idoc_blaord03~add_ebelp.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* USTINKON     | 21.08.2023 | 24134     : Feature - Feasibility for en *
*              |            | DS4K960258                               *
*----------------------------------------------------------------------*
    DATA: ls_seg TYPE zsp_s_e1edp01.
    DATA: ls_e1edk01 TYPE e1edk01.
    DATA: ls_e1edk02 TYPE e1edk02.
    DATA: lv_belnr(10).
    DATA lt_item_update   TYPE TABLE FOR UPDATE i_purchasecontractitemtp.
    CONSTANTS: lc_e1edk17_value TYPE e1edk17 VALUE '001/  /'.
    LOOP AT ct_idoc_data ASSIGNING FIELD-SYMBOL(<ls_data>) WHERE segnam = 'E1EDK17'.
      <ls_data>-sdata = lc_e1edk17_value.
    ENDLOOP.
    LOOP AT ct_idoc_data ASSIGNING <ls_data> WHERE segnam = 'E1EDK01'.
      ls_e1edk01 = <ls_data>-sdata.
      lv_belnr = |{ ls_e1edk01-belnr ALPHA = OUT }|.
      lv_belnr = |{ lv_belnr ALPHA = IN }|.
      ls_e1edk01-belnr = lv_belnr.
      <ls_data>-sdata = ls_e1edk01.
    ENDLOOP.
    LOOP AT ct_idoc_data ASSIGNING <ls_data> WHERE segnam = 'E1EDK02'.
      ls_e1edk02 = <ls_data>-sdata.
      lv_belnr = |{ ls_e1edk02-belnr ALPHA = OUT }|.
      lv_belnr = |{ lv_belnr ALPHA = IN }|.
      ls_e1edk02-belnr = lv_belnr.
      <ls_data>-sdata = ls_e1edk02.
    ENDLOOP.
    cs_ekko-ebeln = |{ cs_ekko-ebeln ALPHA = IN }|.
    SELECT ebeln, ebelp, zz1_mm_siden_pdi, pstyp, txz01, matnr, matkl  FROM zsp_i_ekpof_ex INTO TABLE @DATA(lt_ekpo) WHERE ebeln = @cs_ekko-ebeln.
    IF sy-subrc = 0.
      LOOP AT ct_idoc_data ASSIGNING <ls_data> WHERE segnam = 'ZSP_S_E1EDP01' .
        ls_seg = <ls_data>-sdata.
        cs_ekpo-zz1_fprod_da_pdi = ls_seg-z1fproddapdi.
        cs_ekpo-zz1_lprod_da_pdi = ls_seg-z1lproddapdi.
        cs_ekpo-zz1_delay_po_pdi = ls_seg-z1delaypopdi .
        cs_ekpo-zz1_delay_pln_wip_pdi = ls_seg-z1delayplnpdi .
        cs_ekpo-zz1_postat_pdi = ls_seg-z1postatpd1.
        cs_ekpo-zz1_delay_conf_pdi = ls_seg-z1delayconfpdi.
        cs_ekpo-zz1_delay_pln_conf_pdi = ls_seg-z1delayplncnf .
        cs_ekpo-zz1_fexfct_da_pdi = ls_seg-z1fexfctda.
        cs_ekpo-zz1_lexfct_da_pdi = ls_seg-z1lexfctdapdi.
        cs_ekko-ebeln = |{ cs_ekko-ebeln ALPHA = IN }|.

        LOOP AT lt_ekpo ASSIGNING FIELD-SYMBOL(<ls_ekpo>) WHERE zz1_mm_siden_pdi = ls_seg-z1mmsidenpdi. "#EC CI_NESTED
          READ TABLE ct_ekpo ASSIGNING FIELD-SYMBOL(<ls_ekpo_data>) WITH KEY ebelp = <ls_ekpo>-ebelp.
          IF sy-subrc <> 0.
            APPEND INITIAL LINE TO ct_ekpo ASSIGNING <ls_ekpo_data>.
            <ls_ekpo_data> = CORRESPONDING #( cs_ekpo EXCEPT ebelp ).
          ENDIF.
          <ls_ekpo_data> = CORRESPONDING #( cs_ekpo EXCEPT ebelp ).
          <ls_ekpo_data>-ebelp = <ls_ekpo>-ebelp.
          <ls_ekpo_data>-pstyp = <ls_ekpo>-pstyp.
          <ls_ekpo_data>-txz01 = <ls_ekpo>-txz01.
          <ls_ekpo_data>-matnr = <ls_ekpo>-matnr.
          <ls_ekpo_data>-matkl = <ls_ekpo>-matkl.
        ENDLOOP.

        LOOP AT ct_ekpo ASSIGNING <ls_ekpo_data>.        "#EC CI_NESTED
          READ TABLE lt_ekpo ASSIGNING FIELD-SYMBOL(<ls_ekpo_data1>) WITH KEY ebelp = <ls_ekpo_data>-ebelp.
          IF sy-subrc = 0.
            TRY.
                READ ENTITY i_purchasecontractitemtp ALL FIELDS WITH
                 VALUE #(  (  %key = VALUE #( purchasecontract = cs_ekko-ebeln
                                              purchasecontractitem = <ls_ekpo_data1>-ebelp ) ) )
                 RESULT DATA(lt_purcontract_item).

                "---- Make changes â€“ e.g. increase TargetAmount field
                APPEND INITIAL LINE TO lt_item_update ASSIGNING FIELD-SYMBOL(<ls_item_upd>).

                <ls_item_upd>                       = CORRESPONDING #(  lt_purcontract_item[ 1 ] ).
                <ls_item_upd>-zz1_fprod_da_pdi       = <ls_ekpo_data>-zz1_fprod_da_pdi.
                <ls_item_upd>-zz1_lprod_da_pdi       = <ls_ekpo_data>-zz1_lprod_da_pdi.
                <ls_item_upd>-zz1_delay_po_pdi       = <ls_ekpo_data>-zz1_delay_po_pdi.
                <ls_item_upd>-zz1_delay_pln_wip_pdi  = <ls_ekpo_data>-zz1_delay_pln_wip_pdi.
                <ls_item_upd>-zz1_postat_pdi         = <ls_ekpo_data>-zz1_postat_pdi.
                <ls_item_upd>-zz1_delay_conf_pdi     = <ls_ekpo_data>-zz1_delay_conf_pdi.
                <ls_item_upd>-zz1_delay_pln_conf_pdi = <ls_ekpo_data>-zz1_delay_pln_conf_pdi.
                <ls_item_upd>-zz1_fexfct_da_pdi      = <ls_ekpo_data>-zz1_fexfct_da_pdi.
                <ls_item_upd>-zz1_lexfct_da_pdi      = <ls_ekpo_data>-zz1_lexfct_da_pdi.

                <ls_item_upd>-%control-zz1_fprod_da_pdi = if_abap_behv=>mk-on.
                <ls_item_upd>-%control-zz1_lprod_da_pdi = if_abap_behv=>mk-off.
                IF <ls_item_upd>-zz1_lprod_da_pdi IS NOT INITIAL.
                  <ls_item_upd>-%control-zz1_lprod_da_pdi = if_abap_behv=>mk-on.
                ENDIF.
                <ls_item_upd>-%control-zz1_delay_po_pdi = if_abap_behv=>mk-on.
                <ls_item_upd>-%control-zz1_delay_pln_wip_pdi = if_abap_behv=>mk-on.
                <ls_item_upd>-%control-zz1_postat_pdi = if_abap_behv=>mk-on.
                <ls_item_upd>-%control-zz1_delay_conf_pdi = if_abap_behv=>mk-on.
                <ls_item_upd>-%control-zz1_delay_pln_conf_pdi = if_abap_behv=>mk-on.
                <ls_item_upd>-%control-zz1_fexfct_da_pdi  = if_abap_behv=>mk-on.
                <ls_item_upd>-%control-zz1_lexfct_da_pdi  = if_abap_behv=>mk-on.

                "---- EML for Update operation
                MODIFY ENTITIES OF i_purchasecontracttp
                      ENTITY purchasecontractitem UPDATE FROM lt_item_update

                  FAILED DATA(ls_failed)
                  REPORTED DATA(ls_reported)
                  MAPPED DATA(ls_mapped).



                COMMIT ENTITIES
                     RESPONSE OF i_purchasecontracttp
                     REPORTED DATA(ls_reported_commit).


                LOOP AT ls_reported_commit-purchasecontract ASSIGNING  FIELD-SYMBOL(<ls_msg>). "#EC CI_NESTED
                  MESSAGE ID <ls_msg>-%msg->if_t100_message~t100key-msgid TYPE <ls_msg>-%msg->if_t100_dyn_msg~msgty NUMBER <ls_msg>-%msg->if_t100_message~t100key-msgno
                                  WITH <ls_msg>-%msg->if_t100_dyn_msg~msgv1 <ls_msg>-%msg->if_t100_dyn_msg~msgv2 <ls_msg>-%msg->if_t100_dyn_msg~msgv3 <ls_msg>-%msg->if_t100_dyn_msg~msgv4 .
                ENDLOOP.

              CATCH cx_sadl_shortdump cx_rap_invalid_cid_ref.
                RETURN.
            ENDTRY.
          ENDIF.
        ENDLOOP.
      ENDLOOP.
    ENDIF.



  ENDMETHOD.


  METHOD zif_pd_badi_idoc_blaord03~add_segment.

************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* ANIPEVIN     | 13.09.2023 | 24134     : Feature - Feasibility for en *
*              |            | DS4K960258                               *
*----------------------------------------------------------------------*
    TYPES:BEGIN OF ltyp_ekpo_c,
            ebeln TYPE ekpo-ebeln,
            ebelp TYPE ekpo-ebelp,
          END OF ltyp_ekpo_c.
    DATA:ls_e1edk01       TYPE e1edk01,
         ls_e1edp01       TYPE e1edp01,
         ls_e1edk03       TYPE e1edk03,
         ls_e1edct3       TYPE e1edct3,
         ls_e1edc20       TYPE e1edc20,
         ls_zsp_s_e1edp01 TYPE zsp_s_e1edp01,
         ls_ekpo_c        TYPE ltyp_ekpo_c,
         lt_ekpo_c        TYPE TABLE OF ltyp_ekpo_c.
    CONSTANTS:lc_e1edk01       TYPE char10 VALUE 'E1EDK01',
              lc_e1edp01       TYPE char10 VALUE 'E1EDP01',
              lc_e1edk03       TYPE char10 VALUE 'E1EDK03',
              lc_e1edct3       TYPE char10 VALUE 'E1EDCT3',
              lc_e1edc20       TYPE char10 VALUE 'E1EDC20',
              lc_zsp_s_e1edp01 TYPE char20 VALUE 'ZSP_S_E1EDP01',
              lc_e             TYPE char1  VALUE 'E'.
    READ TABLE ct_idoc_data ASSIGNING FIELD-SYMBOL(<ls_data>) WITH KEY segnam = lc_e1edk01 .
    IF sy-subrc EQ 0.
      ls_e1edk01 = <ls_data>-sdata.
      DATA(lv_belnr) = ls_e1edk01-belnr.
    ENDIF.


    LOOP AT ct_idoc_data ASSIGNING <ls_data> WHERE segnam = lc_e1edp01.
      ls_e1edp01 = <ls_data>-sdata.
      ls_ekpo_c-ebeln = lv_belnr.
      ls_ekpo_c-ebelp = ls_e1edp01-posex.
      APPEND ls_ekpo_c TO lt_ekpo_c.
      CLEAR:ls_ekpo_c.
    ENDLOOP.

    SELECT  a~validitystartdate,a~validityenddate,a~supplier,b~supplierlanguage
    FROM i_purchaseorderapi01 AS a
    INNER JOIN i_supplier AS b ON a~supplier = b~supplier
    WHERE a~purchaseorder = @lv_belnr
    INTO @DATA(ls_ekko_c) UP TO 1 ROWS.
    ENDSELECT.
    IF sy-subrc NE 0.
      CLEAR:ls_ekko_c.
    ENDIF.

    IF lt_ekpo_c IS NOT INITIAL.
      SELECT ebeln,ebelp,meins,
      zz1_fprod_da_pdi,zz1_lprod_da_pdi,zz1_delay_conf_pdi,zz1_delay_pln_conf_pdi
      FROM ekpo
      FOR ALL ENTRIES IN @lt_ekpo_c
      WHERE ebeln = @lt_ekpo_c-ebeln
      AND   ebelp = @lt_ekpo_c-ebelp
      INTO TABLE @DATA(lt_ekpo).
      IF sy-subrc NE 0.
        CLEAR:lt_ekpo.
      ENDIF.
    ENDIF.

    IF cs_idoc_status IS NOT INITIAL.
      RETURN.
    ENDIF.
    LOOP AT ct_idoc_data ASSIGNING <ls_data> WHERE segnam = lc_e1edk03.
      ls_e1edk03 = <ls_data>-sdata.
      IF ls_e1edk03-iddat = '019'.
        ls_e1edk03-datum = ls_ekko_c-validitystartdate.
*        ls_e1edk03-datum = ls_ekko_c-kdatb.
        <ls_data>-sdata = ls_e1edk03.
      ENDIF.
      IF ls_e1edk03-iddat = '020'.
        ls_e1edk03-datum = ls_ekko_c-validityenddate.
*        ls_e1edk03-datum = ls_ekko_c-kdate.
        <ls_data>-sdata = ls_e1edk03.
      ENDIF.
    ENDLOOP.

    LOOP AT ct_idoc_data ASSIGNING <ls_data> WHERE segnam = lc_e1edct3.
      ls_e1edct3 = <ls_data>-sdata.
*      ls_e1edct3-tsspras_iso = ls_ekko_c-spras.
      ls_e1edct3-tsspras_iso = ls_ekko_c-supplierlanguage.
      <ls_data>-sdata = ls_e1edct3.
    ENDLOOP.

    LOOP AT ct_idoc_data ASSIGNING <ls_data> WHERE segnam = lc_e1edp01.
      ls_e1edp01 = <ls_data>-sdata.
      DATA(ls_ekpo) = VALUE #( lt_ekpo[ ebelp = ls_e1edp01-posex ] OPTIONAL ) ##WARN_OK.
      IF ls_ekpo IS NOT INITIAL.
        READ TABLE ct_idoc_data ASSIGNING FIELD-SYMBOL(<ls_data_c>) WITH KEY segnam = lc_e1edc20
                                                                    psgnum = <ls_data>-segnum.
        IF sy-subrc EQ 0.
          ls_e1edc20 = <ls_data_c>-sdata.
          ls_e1edc20-menee = ls_ekpo-meins.
          <ls_data_c>-sdata = ls_e1edc20.
        ENDIF.
      ENDIF.
      READ TABLE ct_idoc_data ASSIGNING FIELD-SYMBOL(<ls_data_t>) WITH KEY segnam = lc_zsp_s_e1edp01
                                                                  psgnum = <ls_data>-segnum.
      IF sy-subrc EQ 0.
        ls_zsp_s_e1edp01 = <ls_data_t>-sdata.

        LOOP AT lt_ekpo INTO ls_ekpo WHERE ebelp = ls_zsp_s_e1edp01-posex AND ebeln = lv_belnr. "#EC CI_NESTED
          IF ls_ekpo-zz1_fprod_da_pdi IS NOT INITIAL AND ls_zsp_s_e1edp01-z1fproddapdi IS NOT INITIAL AND ls_ekpo-zz1_fprod_da_pdi <> ls_zsp_s_e1edp01-z1fproddapdi.
            cs_idoc_status-msgv1 = TEXT-001.
            cs_idoc_status-msgty = lc_e.
            cv_subrc = 4.
          ENDIF.
          IF ls_ekpo-zz1_delay_conf_pdi IS NOT INITIAL AND ls_zsp_s_e1edp01-z1delayconfpdi IS NOT INITIAL AND ls_ekpo-zz1_delay_conf_pdi <> ls_zsp_s_e1edp01-z1delayconfpdi.
            cs_idoc_status-msgv1 = TEXT-003.
            cs_idoc_status-msgty = lc_e.
            cv_subrc = 4.
          ENDIF.
          IF ls_ekpo-zz1_delay_pln_conf_pdi IS NOT INITIAL AND ls_zsp_s_e1edp01-z1delayplncnf IS NOT INITIAL AND ls_ekpo-zz1_delay_pln_conf_pdi <> ls_zsp_s_e1edp01-z1delayplncnf.
            cs_idoc_status-msgv1 = TEXT-004.
            cs_idoc_status-msgty = lc_e.
            cv_subrc = 4.
          ENDIF.
        ENDLOOP.

        IF ls_zsp_s_e1edp01-z1postatpd1 = 1.
          READ TABLE ct_ekpo ASSIGNING FIELD-SYMBOL(<ls_ekpo>) WITH KEY ebelp = ls_e1edp01-posex  ##WARN_OK.
          IF sy-subrc EQ 0.
            <ls_ekpo>-zz1_postat_pdi = 10.
          ENDIF.
        ENDIF.
      ENDIF.
    ENDLOOP.
  ENDMETHOD.


  METHOD zif_pd_badi_idoc_blaord03~run.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* USTINKON     | 21.08.2023 | 24134     : Feature - Feasibility for en *
*              |            | DS4K960258                               *
*----------------------------------------------------------------------*

    DATA: ls_seg TYPE zsp_s_e1edp01.
    LOOP AT ct_idoc_data ASSIGNING FIELD-SYMBOL(<ls_data>) WHERE segnam = 'ZSP_S_E1EDP01' .
      ls_seg = <ls_data>-sdata.
      cs_ekpo-zz1_fprod_da_pdi = ls_seg-z1fproddapdi.
      cs_ekpo-zz1_lprod_da_pdi = ls_seg-z1lproddapdi.
      cs_ekpo-zz1_delay_po_pdi = ls_seg-z1delaypopdi .
      cs_ekpo-zz1_delay_pln_wip_pdi = ls_seg-z1delayplnpdi .
      cs_ekpo-zz1_postat_pdi = ls_seg-z1postatpd1.
      cs_ekpo-zz1_delay_conf_pdi = ls_seg-z1delayconfpdi.
      cs_ekpo-zz1_delay_pln_conf_pdi = ls_seg-z1delayplncnf .
      cs_ekpo-zz1_fexfct_da_pdi = ls_seg-z1fexfctda.
      cs_ekpo-zz1_lexfct_da_pdi = ls_seg-z1lexfctdapdi.
      cs_ekko-ebeln = |{ cs_ekko-ebeln ALPHA = IN }|.
    ENDLOOP.
    LOOP AT ct_ekpo ASSIGNING FIELD-SYMBOL(<ls_ekpo>) WHERE ebelp = cs_ekpo-ebelp.
      <ls_ekpo> = CORRESPONDING #( cs_ekpo ).
    ENDLOOP.
    CONSTANTS: lc_e1edk17_value TYPE e1edk17 VALUE '001/  /'.
    DELETE ct_idoc_data WHERE segnam = 'E1EDK17'.
    LOOP AT ct_idoc_data ASSIGNING <ls_data> WHERE segnam = 'E1EDK17'.
      <ls_data>-sdata = lc_e1edk17_value.
    ENDLOOP.
  ENDMETHOD.


  METHOD zif_pd_badi_idoc_blaord03~remove_segment.
    BREAK zhmaivad.
    DELETE  ct_bdc_data WHERE fnam = 'EKKO-INCO1' OR fnam = 'EKKO-INCO2'.
  ENDMETHOD.
ENDCLASS.