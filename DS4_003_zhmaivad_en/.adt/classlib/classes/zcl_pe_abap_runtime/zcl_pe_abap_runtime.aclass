CLASS zcl_pe_abap_runtime DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS get_last_execution IMPORTING iv_program_name TYPE zpe_t_runtime-program_name OPTIONAL
                                               iv_variant      TYPE zpe_t_runtime-variant OPTIONAL
                                               iv_add_info1    TYPE zpe_t_runtime-additional_info1 OPTIONAL
                                               iv_add_info2    TYPE zpe_t_runtime-additional_info2 OPTIONAL
                                               iv_add_info3    TYPE zpe_t_runtime-additional_info3 OPTIONAL
                                               iv_user_id      TYPE zpe_t_runtime-user_id OPTIONAL
                                     RETURNING VALUE(rs_info)  TYPE zpe_t_runtime.

    CLASS-METHODS save IMPORTING is_info TYPE zpe_t_runtime OPTIONAL
                       RAISING   zcx_pe_runtime_info.

  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS ZCL_PE_ABAP_RUNTIME IMPLEMENTATION.


  METHOD save.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 13.09.2022 | 13556: ABAP Runtime information          *
*              |            | DS4K929733                               *
*----------------------------------------------------------------------*

    DATA(ls_info) = is_info.

*-- Complete mandatory missing data
    IF ls_info-program_name IS INITIAL.
      ls_info-program_name = sy-cprog.
    ENDIF.
    IF ls_info-user_id IS INITIAL.
      ls_info-user_id = sy-uname.
    ENDIF.
    IF ls_info-timestamp IS INITIAL.
      GET TIME STAMP FIELD ls_info-timestamp .
    ENDIF.
    IF ls_info-variant IS INITIAL.
      ls_info-variant = sy-slset.
    ENDIF.

*-- Insert record
    INSERT INTO zpe_t_runtime VALUES ls_info.
    IF sy-subrc = 0.
      COMMIT WORK.
    ELSE.
      ROLLBACK WORK.
      RAISE EXCEPTION TYPE zcx_pe_runtime_info MESSAGE e001(zpe_abap_runtime).
    ENDIF.

  ENDMETHOD.


  METHOD get_last_execution.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 13.09.2022 | 13556: ABAP Runtime information          *
*              |            | DS4K929733                               *
*----------------------------------------------------------------------*

    DATA: lt_program   TYPE RANGE OF zpe_t_runtime-program_name,
          lt_variant   TYPE RANGE OF zpe_t_runtime-variant,
          lt_add_info1 TYPE RANGE OF zpe_t_runtime-additional_info1,
          lt_add_info2 TYPE RANGE OF zpe_t_runtime-additional_info2,
          lt_add_info3 TYPE RANGE OF zpe_t_runtime-additional_info3,
          lt_user_id   TYPE RANGE OF zpe_t_runtime-user_id.


*-- Adjust selection fields
    IF iv_program_name IS INITIAL.
      lt_program = VALUE #( ( sign = 'I' option = 'EQ' low = sy-cprog ) ).
    ELSE.
      lt_program = VALUE #( ( sign = 'I' option = 'EQ' low = iv_program_name ) ).
    ENDIF.
    IF iv_variant IS NOT INITIAL.
      lt_variant = VALUE #( ( sign = 'I' option = 'EQ' low = iv_variant ) ).
    ENDIF.
    IF iv_add_info1 IS NOT INITIAL.
      lt_add_info1 = VALUE #( ( sign = 'I' option = 'EQ' low = iv_add_info1 ) ).
    ENDIF.
    IF iv_add_info2 IS NOT INITIAL.
      lt_add_info2 = VALUE #( ( sign = 'I' option = 'EQ' low = iv_add_info2 ) ).
    ENDIF.
    IF iv_add_info3 IS NOT INITIAL.
      lt_add_info3 = VALUE #( ( sign = 'I' option = 'EQ' low = iv_add_info3 ) ).
    ENDIF.
    IF iv_user_id IS NOT INITIAL.
      lt_user_id = VALUE #( ( sign = 'I' option = 'EQ' low = iv_user_id ) ).
    ENDIF.


*-- Get last execution
    SELECT  * FROM zpe_t_runtime INTO TABLE @DATA(lt_info)
              WHERE program_name     IN @lt_program AND
                    variant          IN @lt_variant AND
                    additional_info1 IN @lt_add_info1 AND
                    additional_info2 IN @lt_add_info2 AND
                    additional_info3 IN @lt_add_info3 AND
                    user_id          IN @lt_user_id
              ORDER BY timestamp DESCENDING.
    IF sy-subrc EQ 0.
      rs_info = lt_info[ 1 ].
    ENDIF.

  ENDMETHOD.
ENDCLASS.