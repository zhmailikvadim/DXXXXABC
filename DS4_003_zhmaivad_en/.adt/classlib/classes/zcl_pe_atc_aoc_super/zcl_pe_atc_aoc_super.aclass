CLASS zcl_pe_atc_aoc_super DEFINITION
  PUBLIC
  INHERITING FROM zcl_aoc_super
  CREATE PUBLIC .

  PUBLIC SECTION.

    CONSTANTS:
      BEGIN OF gc_s_sap_status,
        undetermined    TYPE zpe_atc_sap_status VALUE '00',
        custom          TYPE zpe_atc_sap_status VALUE '10',
        sap_not_changed TYPE zpe_atc_sap_status VALUE '20',
        sap_oss         TYPE zpe_atc_sap_status VALUE '21',
        sap_changed     TYPE zpe_atc_sap_status VALUE '22',
      END OF gc_s_sap_status .

    CLASS-METHODS display_documentation .
    CLASS-METHODS filter_out_results
      CHANGING
        !ct_results TYPE scit_rest .
    CLASS-METHODS get_function_module
      IMPORTING
        !iv_destination  TYPE rfcdest
        !iv_program      TYPE progname
        !iv_group        TYPE rs38l_area
      RETURNING
        VALUE(rv_result) TYPE versobjnam .
    CLASS-METHODS get_method_trkey
      IMPORTING
        !iv_destination TYPE rfcdest
        !iv_program     TYPE progname
      EXPORTING
        !ev_object_type TYPE versobjtyp
        !ev_object_name TYPE versobjnam .
    CLASS-METHODS get_parent_transport
      IMPORTING
        !iv_destination TYPE rfcdest
      CHANGING
        !cv_transport   TYPE trkorr .
    CLASS-METHODS get_source_code
      IMPORTING
        !iv_destination  TYPE rfcdest
        !iv_object_name  TYPE sobj_name
        !iv_object_type  TYPE trobjtype
      RETURNING
        VALUE(rv_result) TYPE string
      RAISING
        zcx_pe_atc_not_relevant .
    CLASS-METHODS get_source_code_ddls
      IMPORTING
        !iv_destination  TYPE rfcdest
        !iv_object_name  TYPE sobj_name
      RETURNING
        VALUE(rv_result) TYPE string
      RAISING
        zcx_pe_atc_not_relevant .
    CLASS-METHODS get_source_code_enho
      IMPORTING
        !iv_destination  TYPE rfcdest
        !iv_object_name  TYPE sobj_name
      RETURNING
        VALUE(rv_result) TYPE string
      RAISING
        zcx_pe_atc_not_relevant .
    CLASS-METHODS get_source_code_incl
      IMPORTING
        !iv_destination  TYPE rfcdest
        !iv_object_name  TYPE sobj_name
      RETURNING
        VALUE(rv_result) TYPE string
      RAISING
        zcx_pe_atc_not_relevant .
    CLASS-METHODS get_source_code_prog
      IMPORTING
        !iv_destination  TYPE rfcdest
        !iv_object_name  TYPE sobj_name
      RETURNING
        VALUE(rv_result) TYPE string
      RAISING
        zcx_pe_atc_not_relevant .
    CLASS-METHODS get_source_code_wapa
      IMPORTING
        !iv_destination  TYPE rfcdest
        !iv_object_name  TYPE sobj_name
      RETURNING
        VALUE(rv_result) TYPE string
      RAISING
        zcx_pe_atc_not_relevant .
    CLASS-METHODS get_vm_ids
      IMPORTING
        !iv_destination TYPE rfcdest
        !is_object      TYPE scir_rest
      EXPORTING
        !ev_object_type TYPE versobjtyp
        !ev_object_name TYPE versobjnam .
    CLASS-METHODS is_changed_on_transport
      IMPORTING
        !iv_destination  TYPE rfcdest
        !iv_object_type  TYPE versobjtyp
        !iv_object_name  TYPE versobjnam
        !iv_transport    TYPE trkorr
      RETURNING
        VALUE(rv_result) TYPE boolean .
    CLASS-METHODS is_created_by_sap
      IMPORTING
        !iv_object_name  TYPE sobj_name
        !iv_destination  TYPE rfcdest
      RETURNING
        VALUE(rv_result) TYPE boolean .
    CLASS-METHODS is_function_in_destination
      IMPORTING
        VALUE(iv_function)    TYPE rs38l-name
        VALUE(iv_destination) TYPE rfcdest
      RETURNING
        VALUE(rv_bool)        TYPE abap_bool .
    CLASS-METHODS is_relevant
      IMPORTING
        !iv_program      TYPE programm
        !iv_destination  TYPE rfcdest OPTIONAL
      RETURNING
        VALUE(rv_result) TYPE abap_boolean .
    CLASS-METHODS generate_checksum_from_string
      IMPORTING
        !iv_source_code    TYPE string
      RETURNING
        VALUE(rv_checksum) TYPE int4 .

    CLASS-METHODS get_atc_task
      IMPORTING
        !iv_destination             TYPE rfcdest OPTIONAL
      EXPORTING
        VALUE(ev_transport_request) TYPE e070-trkorr
        VALUE(ev_task)              TYPE e070-trkorr .

    CLASS-METHODS get_atc_transport_request
      IMPORTING
        !iv_destination             TYPE rfcdest OPTIONAL
      RETURNING
        VALUE(rv_transport_request) TYPE e070-trkorr .

    CLASS-METHODS get_package_hierarchy
      IMPORTING
        !iv_destination  TYPE rfcdest
        !iv_root         TYPE tadir-devclass
      RETURNING
        VALUE(rt_result) TYPE zpe_tt_package_hierarchy
      RAISING
        zcx_pe_atc_not_relevant .
    CLASS-METHODS get_rfc_destination
      RETURNING
        VALUE(rv_result) TYPE rfcdest .
    CLASS-METHODS get_sap_status
      IMPORTING
        !iv_object_name  TYPE sobj_name
        !iv_object_type  TYPE trobjtype
      RETURNING
        VALUE(rv_result) TYPE zpe_atc_sap_status .
    CLASS-METHODS get_tadir
      IMPORTING
        !iv_object_type  TYPE tadir-object
        !iv_object_name  TYPE tadir-obj_name
        !iv_destination  TYPE rfcdest
      RETURNING
        VALUE(rs_result) TYPE tadir
      RAISING
        zcx_pe_atc_not_relevant .
    CLASS-METHODS get_trdir
      IMPORTING
        !iv_program      TYPE programm
        !iv_destination  TYPE rfcdest
      RETURNING
        VALUE(rs_result) TYPE trdir .
    CLASS-METHODS get_transport_attributes
      IMPORTING
        !iv_destination      TYPE rfcdest OPTIONAL
        !iv_transport        TYPE e070-trkorr
      RETURNING
        VALUE(rt_attributes) TYPE trattributes .

    METHODS if_ci_test~display_documentation
        REDEFINITION .
  PROTECTED SECTION.

    TYPES:
      BEGIN OF mtyp_s_position,
        row TYPE token_row,
        col TYPE token_col,
      END OF mtyp_s_position .
    TYPES:
      BEGIN OF mtyp_s_statement,
        str        TYPE string,
        start      TYPE mtyp_s_position,
        end        TYPE mtyp_s_position,
        include    TYPE programm,
        count      TYPE i,
        terminator TYPE stmnt_term,
        index      TYPE i,
      END OF mtyp_s_statement .
    TYPES:
      mtyp_t_statements TYPE STANDARD TABLE OF mtyp_s_statement WITH DEFAULT KEY .

    CLASS-METHODS token_position IMPORTING !is_token          TYPE stokesx
                                 RETURNING VALUE(rs_position) TYPE mtyp_s_position .
    METHODS generate_checksum IMPORTING !io_scan           TYPE REF TO zcl_aoc_scan
                              RETURNING VALUE(rv_checksum) TYPE int4 .

  PRIVATE SECTION.


ENDCLASS.



CLASS zcl_pe_atc_aoc_super IMPLEMENTATION.


  METHOD if_ci_test~display_documentation.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 30.01.2022 | 9784      : ATC Development              *
*              |            | DS4K913083                               *
*----------------------------------------------------------------------*

    display_documentation( ).

  ENDMETHOD.


  METHOD generate_checksum.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 30.01.2022 | 9784      : ATC Development              *
*              |            | DS4K913083                               *
*----------------------------------------------------------------------*

    DATA: lv_code     TYPE string,
          ls_checksum TYPE sci_crc64.

    LOOP AT io_scan->tokens ASSIGNING FIELD-SYMBOL(<ls_token>) WHERE type <> zcl_aoc_scan=>gc_token-comment.
      lv_code = lv_code && <ls_token>-str.
    ENDLOOP.
    cl_ci_provide_checksum=>gen_chksum_from_string( EXPORTING  p_param         = lv_code
                                                    CHANGING   p_crc_value     = ls_checksum
                                                    EXCEPTIONS parameter_error = 1
                                                               OTHERS          = 2 ).
    IF sy-subrc = 0.
      rv_checksum = ls_checksum-i1.
    ENDIF.

  ENDMETHOD.


  METHOD generate_checksum_from_string.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 30.01.2022 | 9784      : ATC Development              *
*              |            | DS4K913083                               *
*----------------------------------------------------------------------*
    DATA: ls_checksum TYPE sci_crc64.

    cl_ci_provide_checksum=>gen_chksum_from_string( EXPORTING  p_param         = iv_source_code
                                                    CHANGING   p_crc_value     = ls_checksum
                                                    EXCEPTIONS parameter_error = 1
                                                               OTHERS          = 2 ).
    IF sy-subrc = 0.
      rv_checksum = ls_checksum-i1.
    ENDIF.

  ENDMETHOD.


  METHOD is_created_by_sap.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 20.12.2022 | 16320: Is created by SAP?                *
*              |            | DS4K938346                               *
*----------------------------------------------------------------------*


    TYPES: BEGIN OF ltyp_s_reposrc,
             progname TYPE progname,
             author   TYPE cnam,
           END OF ltyp_s_reposrc.

    STATICS ss_data TYPE ltyp_s_reposrc.

    IF ss_data-progname NE iv_object_name.
*     Get Report source data
      IF zcl_pe_atc_aoc_super=>is_function_in_destination( iv_function = 'ZPE_FM_GET_REPOSRC' iv_destination = iv_destination ) = abap_false.
        RETURN.
      ENDIF.

      ss_data-progname = iv_object_name.
      CALL FUNCTION 'ZPE_FM_GET_REPOSRC' DESTINATION iv_destination
        EXPORTING
          iv_program_name        = iv_object_name
        IMPORTING
          ev_author              = ss_data-author
        EXCEPTIONS
          not_found              = 1
          not_authorized         = 2
          communication_failure_ = 3
          system_failure         = 4
          OTHERS                 = 5.
    ENDIF.
    IF sy-subrc NE 0.
      MESSAGE e008(zpe_atc) WITH iv_object_name INTO DATA(lv_msg)  ##NEEDED.
      zcl_pe_atc_logger=>log_message( ).
      RETURN.
    ELSEIF ss_data-author EQ 'SAP' OR ss_data-author EQ 'SAP*' OR ss_data-author EQ 'DDIC' OR ss_data-author EQ 'SAP*........'.
      rv_result = abap_true.
    ENDIF.

  ENDMETHOD.


  METHOD get_sap_status.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 21.03.2022 | 16320: Is custom, SAP, changed...?       *
*              |            | DS4K938346                               *
*----------------------------------------------------------------------*

    TYPES: BEGIN OF ltyp_s_status,
             object_type TYPE trobjtype,
             object_name TYPE sobj_name,
             status      TYPE zpe_atc_sap_status,
           END OF ltyp_s_status.

    STATICS: st_modified_objects TYPE if_sca_repository_proxy_type=>ty_smodilog_tab,
             sv_transport        TYPE trkorr,
             ss_status           TYPE ltyp_s_status.


*-- Buffer
    IF ss_status-object_type = iv_object_type AND ss_status-object_name = iv_object_name.
      rv_result = ss_status-status.
      RETURN.
    ELSE.
      ss_status-object_type = iv_object_type.
      ss_status-object_name = iv_object_name.
    ENDIF.

*-- Discard if was not created by SAP
    IF zcl_pe_atc_aoc_super=>is_created_by_sap( iv_object_name = iv_object_name iv_destination = zcl_pe_atc_aoc_super=>get_rfc_destination( ) ) = abap_false.
      rv_result = ss_status-status = gc_s_sap_status-custom.
      RETURN.
    ENDIF.

*-- Get modified objects
    IF st_modified_objects IS INITIAL.
      DATA(lif_repo_access) = COND #( WHEN srcid IS INITIAL
        THEN cl_sca_repository_access=>get_local_access( )
        ELSE cl_sca_repository_access=>get_access_by_rfc( cl_abap_source_id=>get_destination( srcid ) ) ).
      st_modified_objects = lif_repo_access->get_modified_objects( ).
    ENDIF.

*-- Is SAP modified object
    IF line_exists( st_modified_objects[ obj_name = iv_object_name ] ) AND line_exists( st_modified_objects[ obj_name = object_name ] ).
      rv_result = ss_status-status = gc_s_sap_status-sap_changed.
    ELSE.
      rv_result = ss_status-status = gc_s_sap_status-sap_not_changed.
      RETURN.
    ENDIF.

*-- Get transport request to check if it is an OSS Note implementation
    sv_transport = COND #( WHEN sv_transport IS INITIAL
                           THEN zcl_pe_atc_aoc_super=>get_atc_transport_request( iv_destination = zcl_pe_atc_aoc_super=>get_rfc_destination( ) )
                           ELSE sv_transport  ).
    IF sv_transport IS INITIAL.
      rv_result = ss_status-status = gc_s_sap_status-undetermined.   "It will be verified at TR release time
      RETURN.
    ENDIF.

*-- OSS Note implementation
    DATA(lt_attributes) = zcl_pe_atc_aoc_super=>get_transport_attributes( iv_destination = zcl_pe_atc_aoc_super=>get_rfc_destination( )
                                                                          iv_transport   = sv_transport ).

    READ TABLE lt_attributes TRANSPORTING NO FIELDS WITH KEY attribute = 'SAPNOTE'.
    IF sy-subrc = 0.
      rv_result = ss_status-status = gc_s_sap_status-sap_oss.
    ELSE.
      rv_result = ss_status-status = gc_s_sap_status-sap_changed.
    ENDIF.

  ENDMETHOD.


  METHOD get_vm_ids.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 11.01.2023 | 16832: Calculate Version Manag. IDs   .  *
*              |            | DS4K940184                               *
*----------------------------------------------------------------------*

    CASE is_object-objtype.

      WHEN 'FUGR'.
        DATA(lv_fm) = get_function_module( iv_destination = iv_destination
                                           iv_program     = is_object-sobjname
                                           iv_group       = CONV #( is_object-objname ) ).
        ev_object_type = COND #( WHEN lv_fm IS INITIAL THEN 'REPS' ELSE 'FUNC'  ).
        ev_object_name = COND #( WHEN lv_fm IS INITIAL THEN is_object-sobjname ELSE lv_fm ).

      WHEN 'CLAS'.
        get_method_trkey( EXPORTING iv_destination = iv_destination
                                    iv_program     = is_object-sobjname
                          IMPORTING ev_object_type = ev_object_type
                                    ev_object_name = ev_object_name ).

      WHEN 'PROG'.
        ev_object_name = is_object-sobjname.
        ev_object_type = 'REPS'.


      WHEN OTHERS.
        CLEAR: ev_object_name, ev_object_type.

    ENDCASE.

  ENDMETHOD.


  METHOD get_parent_transport.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 11.01.2023 | 16832: Get TR for a task                 *
*              |            | DS4K940184                               *
*----------------------------------------------------------------------*

    TYPES: BEGIN OF ltyp_s_buffer,
             transport_in  TYPE trkorr,
             transport_out TYPE trkorr,
           END OF ltyp_s_buffer.

    DATA ls_request TYPE e070.


    STATICS: st_buffer TYPE STANDARD TABLE OF ltyp_s_buffer.


*-- Buffer
    READ TABLE st_buffer ASSIGNING FIELD-SYMBOL(<ls_buffer>) WITH KEY transport_in = cv_transport.
    IF sy-subrc = 0.
      cv_transport = <ls_buffer>-transport_out.
      RETURN.
    ENDIF.


*-- Get transport request for a task
    DATA(lv_trkorr) = cv_transport.
    IF zcl_pe_atc_aoc_super=>is_function_in_destination( iv_function = 'ZPE_FM_GET_TR' iv_destination = iv_destination ) = abap_false.
      st_buffer = VALUE #( BASE st_buffer ( transport_in = cv_transport transport_out = cv_transport ) ).
      RETURN.
    ENDIF.
    CALL FUNCTION 'ZPE_FM_GET_TR' DESTINATION iv_destination
      EXPORTING
        iv_trkorr              = lv_trkorr
      IMPORTING
        es_request             = ls_request
      EXCEPTIONS
        not_found              = 1
        action_not_supported   = 2
        not_authorized         = 3
        communication_failure_ = 4
        system_failure         = 5
        OTHERS                 = 6.

    IF sy-subrc = 0 AND ls_request-trfunction <> 'K' AND ls_request-strkorr IS NOT INITIAL.
      lv_trkorr = ls_request-strkorr.
      CALL FUNCTION 'ZPE_FM_GET_TR' DESTINATION iv_destination
        EXPORTING
          iv_trkorr              = lv_trkorr
        IMPORTING
          es_request             = ls_request
        EXCEPTIONS
          not_found              = 1
          action_not_supported   = 2
          not_authorized         = 3
          communication_failure_ = 4
          system_failure         = 5
          OTHERS                 = 6.

      IF sy-subrc = 0.
        st_buffer = VALUE #( BASE st_buffer ( transport_in = cv_transport transport_out = lv_trkorr ) ).
        cv_transport = lv_trkorr.
      ELSE.
        st_buffer = VALUE #( BASE st_buffer ( transport_in = cv_transport transport_out = cv_transport ) ).
        MESSAGE e010(zpe_atc) WITH cv_transport INTO DATA(lv_msg)  ##NEEDED.
        zcl_pe_atc_logger=>log_message( ).
      ENDIF.

    ELSE.
      st_buffer = VALUE #( BASE st_buffer ( transport_in = cv_transport transport_out = cv_transport ) ).
    ENDIF.

  ENDMETHOD.


  METHOD is_changed_on_transport.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 11.01.2023 | 16832: is object changed on the TR       *
*              |            | DS4K940184                               *
*----------------------------------------------------------------------*
* CANOCAR      | 16.02.2023 | 18143: Fix for retrieved versions        *
*              |            | DS4K944191                               *
*----------------------------------------------------------------------*

    TYPES: BEGIN OF ltyp_s_buffer,
             object_type TYPE versobjtyp,
             object_name TYPE versobjnam,
             transport   TYPE trkorr,
             changed     TYPE boolean,
           END OF ltyp_s_buffer.

    DATA: lt_version_list TYPE STANDARD TABLE OF vrsd,
          lt_versno_list  TYPE STANDARD TABLE OF vrsn ##NEEDED,
          lv_version_new  TYPE versno,
          lv_version_idx  LIKE sy-tabix,
          lt_code2        TYPE STANDARD TABLE OF abaptxt255,
          lt_trdir2       TYPE STANDARD TABLE OF trdir,
          lt_code1        TYPE STANDARD TABLE OF abaptxt255,
          lt_trdir1       TYPE STANDARD TABLE OF trdir,
          lt_trdir        TYPE TABLE OF trdir,
          lt_delta_trdir  TYPE TABLE OF xtrdir,
          lt_code_delta   TYPE vxabapt255_tab.

    STATICS: st_buffer TYPE STANDARD TABLE OF ltyp_s_buffer.


*-- Buffer
    READ TABLE st_buffer ASSIGNING FIELD-SYMBOL(<ls_buffer>) WITH KEY object_type = iv_object_type
                                                                      object_name = iv_object_name
                                                                      transport   = iv_transport.
    IF sy-subrc = 0.
      rv_result = <ls_buffer>-changed.
      RETURN.
    ENDIF.


*-- Get object history without ToCs
    CALL FUNCTION 'ZPE_FM_GET_OBJECT_VERSIONS' DESTINATION iv_destination
      EXPORTING
        iv_object_type         = iv_object_type
        iv_object_name         = iv_object_name
      IMPORTING
        et_versions            = lt_version_list
      EXCEPTIONS
        not_found              = 1
        not_authorized         = 2
        communication_failure_ = 3
        system_failure         = 4
        OTHERS                 = 5.
    IF sy-subrc = 0.
      DELETE ADJACENT DUPLICATES FROM lt_version_list COMPARING korrnum.
    ELSE.
      st_buffer = VALUE #( BASE st_buffer ( changed = abap_false object_type = iv_object_type object_name = iv_object_name transport = iv_transport ) ).
      rv_result = abap_false.
      RETURN.
    ENDIF.


*-- Take the first found version with transport number
    LOOP AT lt_version_list ASSIGNING FIELD-SYMBOL(<ls_version_list>).
      IF <ls_version_list>-korrnum = 'LOCAL'.
        st_buffer = VALUE #( BASE st_buffer ( changed = abap_false object_type = iv_object_type object_name = iv_object_name transport = iv_transport ) ).
        rv_result = abap_false.
        RETURN.
      ELSEIF <ls_version_list>-korrnum IS NOT INITIAL.
        DATA(lv_last_transport) = <ls_version_list>-korrnum.
        lv_version_new          = <ls_version_list>-versno.
        lv_version_idx          = sy-tabix.
        EXIT.
      ENDIF.
    ENDLOOP.
    IF lv_last_transport IS INITIAL.
      st_buffer = VALUE #( BASE st_buffer ( changed = abap_false object_type = iv_object_type object_name = iv_object_name transport = iv_transport ) ).
      rv_result = abap_false.
      RETURN.
    ENDIF.


*-- Get parent request, if task found
    get_parent_transport( EXPORTING iv_destination = iv_destination
                           CHANGING cv_transport   = lv_last_transport ).


*-- Matches with ATC transport?
    IF iv_transport <> lv_last_transport.
      st_buffer = VALUE #( BASE st_buffer ( changed = abap_false object_type = iv_object_type object_name = iv_object_name transport = iv_transport ) ).
      rv_result = abap_false.
      RETURN.
    ENDIF.


*-- Run Delta: Avoid global changes in classes & function groups to request change log
    READ TABLE lt_version_list ASSIGNING FIELD-SYMBOL(<ls_version_old>) INDEX lv_version_idx + 1.
    IF sy-subrc EQ 0.
*      DATA(lv_version_old) = COND #( WHEN <ls_version_old>-lastversno IS NOT INITIAL THEN <ls_version_old>-lastversno ELSE <ls_version_old>-versno ).
      DATA(lv_version_old) = <ls_version_old>-versno.
    ELSE.
      st_buffer = VALUE #( BASE st_buffer ( changed = abap_true object_type = iv_object_type object_name = iv_object_name transport = iv_transport ) ).
      rv_result = abap_true.
      RETURN.
    ENDIF.

    CALL FUNCTION 'SVRS_GET_REPS_FROM_OBJECT'
      EXPORTING
        destination = iv_destination
        object_name = iv_object_name
        object_type = iv_object_type
        versno      = lv_version_new
      TABLES
        repos_tab   = lt_code2
        trdir_tab   = lt_trdir2
      EXCEPTIONS
        no_version  = 1
        OTHERS      = 2.
    IF sy-subrc <> 0.
      st_buffer = VALUE #( BASE st_buffer ( changed = abap_true object_type = iv_object_type object_name = iv_object_name transport = iv_transport ) ).
      rv_result = abap_true.
      RETURN.
    ENDIF.

    CALL FUNCTION 'SVRS_GET_REPS_FROM_OBJECT'
      EXPORTING
        destination = iv_destination
        object_name = iv_object_name
        object_type = iv_object_type
        versno      = lv_version_old
      TABLES
        repos_tab   = lt_code1
        trdir_tab   = lt_trdir1
      EXCEPTIONS
        no_version  = 1
        OTHERS      = 2.
    IF sy-subrc <> 0.
      st_buffer = VALUE #( BASE st_buffer ( changed = abap_true object_type = iv_object_type object_name = iv_object_name transport = iv_transport ) ).
      rv_result = abap_true.
      RETURN.
    ENDIF.

*   Get the version difference
    IF lt_code2 IS NOT INITIAL OR lt_code1 IS NOT INITIAL.
      CALL FUNCTION 'SVRS_COMPUTE_DELTA_REPS'
        EXPORTING
          compare_mode            = 2
          ignore_case_differences = 'X'
        TABLES
          texttab_old             = lt_code2
          texttab_new             = lt_code1
          trdirtab_old            = lt_trdir
          trdirtab_new            = lt_trdir
          trdir_delta             = lt_delta_trdir
          text_delta              = lt_code_delta.
      IF lt_code_delta IS INITIAL.
        st_buffer = VALUE #( BASE st_buffer ( changed = abap_false object_type = iv_object_type object_name = iv_object_name transport = iv_transport ) ).
        rv_result = abap_false.
      ELSE.
        st_buffer = VALUE #( BASE st_buffer ( changed = abap_true object_type = iv_object_type object_name = iv_object_name transport = iv_transport ) ).
        rv_result = abap_true.
      ENDIF.
    ENDIF.

  ENDMETHOD.


  METHOD get_source_code_prog.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 11.01.2023 | 16832: Get source code in string format  *
*              |            | DS4K940184                               *
*----------------------------------------------------------------------*

    DATA: lv_scan_content TYPE xstring,
          ls_scan_result  TYPE cl_abap_comp_procs=>t_scan_result.


    CALL FUNCTION 'RS_ABAP_EXPORT_COMP_PROCS_E' DESTINATION iv_destination
      EXPORTING
        p_program                  = iv_object_name
        p_dynnr                    = ''
        p_no_cache                 = abap_false
      IMPORTING
        p_scan_content             = lv_scan_content
      EXCEPTIONS
        not_found                  = 1
        program_fatal_syntax_error = 2
        communication_failure      = 3
        system_failure             = 4
        OTHERS                     = 5.
    IF sy-subrc <> 0.
      MESSAGE e011(zpe_atc) WITH 'RS_ABAP_EXPORT_COMP_PROCS_E' INTO DATA(lv_msg)    ##NEEDED.
      zcl_pe_atc_logger=>log_message( ).
      RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
    ENDIF.

    IMPORT scan_result  = ls_scan_result FROM DATA BUFFER lv_scan_content.
    IF sy-subrc NE 0.
      MESSAGE e011(zpe_atc) WITH 'RS_ABAP_EXPORT_COMP_PROCS_E' INTO DATA(lv_msg2)   ##NEEDED.
      zcl_pe_atc_logger=>log_message( ).
      RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
    ENDIF.

    LOOP AT ls_scan_result-tokens ASSIGNING FIELD-SYMBOL(<ls_token>).
      rv_result = |{ rv_result } { <ls_token>-str }|.
    ENDLOOP.

  ENDMETHOD.


  METHOD get_source_code_incl.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 11.01.2023 | 16832: Get source code in string format  *
*              |            | DS4K940184                               *
*----------------------------------------------------------------------*

    IF zcl_pe_atc_aoc_super=>is_function_in_destination( iv_function = 'ZPE_FM_GET_INCLUDE_SOURCE' iv_destination = iv_destination ) = abap_false.
      RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
    ENDIF.

    CALL FUNCTION 'ZPE_FM_GET_INCLUDE_SOURCE' DESTINATION iv_destination
      EXPORTING
        iv_object_name        = iv_object_name
      IMPORTING
        ev_source             = rv_result
      EXCEPTIONS
        not_found             = 1
        not_authorized        = 2
        communication_failure = 3
        system_failure        = 4
        OTHERS                = 3.
    IF sy-subrc <> 0.
      MESSAGE e011(zpe_atc) WITH 'ZPE_FM_GET_INCLUDE_SOURCE' INTO DATA(lv_msg)  ##NEEDED.
      zcl_pe_atc_logger=>log_message( ).
      RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
    ENDIF.

  ENDMETHOD.


  METHOD get_package_hierarchy.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 09.03.2023 | 18481: Check package assignment          *
*              |            | DS4K945173                               *
************************************************************************

    IF zcl_pe_atc_aoc_super=>is_function_in_destination( iv_function = 'ZPE_FM_GET_PACKAGE_HIERARCHY' iv_destination = iv_destination ) = abap_false.
      RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
    ENDIF.

    CALL FUNCTION 'ZPE_FM_GET_PACKAGE_HIERARCHY' DESTINATION iv_destination
      EXPORTING
        iv_root               = iv_root
      IMPORTING
        et_result             = rt_result
      EXCEPTIONS
        not_found             = 1
        not_authorized        = 2
        communication_failure = 3
        system_failure        = 4
        OTHERS                = 5.

    IF sy-subrc = 0.
      RETURN.
    ELSEIF sy-subrc = 1 OR rt_result IS INITIAL.
      MESSAGE e018(zpe_atc) WITH iv_root iv_destination INTO DATA(lv_msg)  ##NEEDED.
      zcl_pe_atc_logger=>log_message( ).
    ELSEIF sy-subrc = 2.
      MESSAGE e012(zpe_atc) WITH 'ZPE_FM_GET_PACKAGE_HIERARCHY' iv_destination INTO DATA(lv_msg2)  ##NEEDED.
      zcl_pe_atc_logger=>log_message( ).
    ELSE.
      MESSAGE e011(zpe_atc) WITH 'ZPE_FM_GET_PACKAGE_HIERARCHY' INTO DATA(lv_msg3)   ##NEEDED.
      zcl_pe_atc_logger=>log_message( ).
    ENDIF.

  ENDMETHOD.


  METHOD display_documentation.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 21.03.2022 | 9784      : ATC Development              *
*              |            | DS4K913083                               *
*----------------------------------------------------------------------*
* CANOCAR      | 08.02.2023 | 17780: Rule deleted by accident          *
*              |            | DS4K943356                               *
*----------------------------------------------------------------------*

    TRY.
        DATA: lv_url TYPE icf_stringurl.
        zcl_pe_hm_complex=>get_value( EXPORTING iv_id    = '0239FC3B8D041EDDA9EF502D469DBF59'
                                      IMPORTING ev_value = lv_url ).
      CATCH zcx_pe_hm.
        MESSAGE e011(zpe_hm) WITH '0239FC3B8D041EDDA9EF502D469DBF59' INTO DATA(lv_msg)  ##NEEDED.
        zcl_pe_atc_logger=>log_message( ).
        RETURN.
    ENDTRY.

    ##SUBRC_OK
    cl_gui_frontend_services=>execute(
      EXPORTING
        document               = lv_url
      EXCEPTIONS
        cntl_error             = 1
        error_no_gui           = 2
        bad_parameter          = 3
        file_not_found         = 4
        path_not_found         = 5
        file_extension_unknown = 6
        error_execute_failed   = 7
        synchronous_failed     = 8
        not_supported_by_gui   = 9
        OTHERS                 = 10 ).

  ENDMETHOD.


  METHOD filter_out_results.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 11.01.2023 | 16832: Filter out results from SAP enh.  *
*              |            | DS4K940184                               *
*----------------------------------------------------------------------*
* CANOCAR      | 01.02.2023 | 17538: ATC check lower case for remote   *
*              |            | DS4K942351                               *
*----------------------------------------------------------------------*
* CANOCAR      | 06.06.2023 | 21958: Clean logs, unnecesary calls      *
*              |            | DS4K954570                               *
*----------------------------------------------------------------------*

    DATA: lt_r_test TYPE RANGE OF sci_chk.


*-- Get RFC Destination
    DATA(lv_rfc_destination) = zcl_pe_atc_aoc_super=>get_rfc_destination( ).


*-- Get ATC transport request
    DATA(lv_atc_transport) = get_atc_transport_request( lv_rfc_destination ).
    IF lv_atc_transport IS INITIAL.
      RETURN.
    ENDIF.


*-- ATC checks to exclude
    lt_r_test = VALUE #( ( sign = 'E' option = 'EQ' low = zcl_pe_atc_code_review=>gc_name )
                         ( sign = 'E' option = 'EQ' low = to_lower( zcl_pe_atc_code_review=>gc_name ) ) ).


*-- Get unique object names to analyze
    DATA(lt_objects) = ct_results.
    SORT lt_objects BY sobjname.
    DELETE ADJACENT DUPLICATES FROM lt_objects COMPARING sobjname.


*-- Object analysis
    LOOP AT lt_objects ASSIGNING FIELD-SYMBOL(<ls_object>).

*     Is program relevant?
      IF <ls_object>-sobjtype = 'PROG'.
        IF is_relevant( iv_program = <ls_object>-sobjname iv_destination = lv_rfc_destination ) = abap_false.
          DELETE ct_results WHERE sobjname = <ls_object>-sobjname AND test IN lt_r_test.
          CONTINUE.
        ENDIF.
      ENDIF.

*     Get IDS for Version Management calculation
      get_vm_ids( EXPORTING iv_destination = lv_rfc_destination
                            is_object      = <ls_object>
                  IMPORTING ev_object_type = DATA(lv_object_type)
                            ev_object_name = DATA(lv_object_name) ).
      IF lv_object_type IS INITIAL AND lv_object_name IS INITIAL.
        CONTINUE.   "Not relevant, we keep ATC errors
      ENDIF.

*     Is object really changed in the transport request?
      IF is_changed_on_transport( iv_destination = lv_rfc_destination
                                  iv_object_type = lv_object_type
                                  iv_object_name = lv_object_name
                                  iv_transport   = lv_atc_transport ) = abap_false.
        DELETE ct_results WHERE sobjname = <ls_object>-sobjname AND test IN lt_r_test.
        CONTINUE.
      ENDIF.

    ENDLOOP.

  ENDMETHOD.


  METHOD get_atc_transport_request.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 21.03.2022 | 9784      : ATC Development              *
*              |            | DS4K913083                               *
*----------------------------------------------------------------------*
* CANOCAR      | 11.01.2023 | 16832: Buffering                         *
*              |            | DS4K940184                               *
*----------------------------------------------------------------------*
* CANOCAR      | 12.2023    | 27103: Housekeeping SLG1                 *
*              |            | DS4K971853                               *
************************************************************************

    STATICS: sv_transport_request TYPE trkorr.

*-- Buffer
    IF sv_transport_request IS NOT INITIAL.
      rv_transport_request = sv_transport_request.
      RETURN.
    ENDIF.

*-- Get RFC destination
    DATA(lv_destination) = iv_destination.
    IF lv_destination IS INITIAL.
      lv_destination = zcl_pe_atc_aoc_super=>get_rfc_destination( ).
    ENDIF.

*-- Get ATC Transport Request
    IF zcl_pe_atc_aoc_super=>is_function_in_destination( iv_function = 'ZPE_FM_GET_ATC_TRANSPORT' iv_destination = lv_destination ) = abap_false.
      RETURN.
    ENDIF.

    CALL FUNCTION 'ZPE_FM_GET_ATC_TRANSPORT' DESTINATION lv_destination
      IMPORTING
        ev_transport_request  = rv_transport_request
      EXCEPTIONS
        not_found             = 1
        not_authorized        = 2
        communication_failure = 3
        system_failure        = 4
        OTHERS                = 5.
    IF sy-subrc GT 1.
      MESSAGE e009(zpe_atc) WITH sy-subrc INTO DATA(lv_msg)   ##NEEDED.
      zcl_pe_atc_logger=>log_message( ).
      RETURN.
    ELSE.
      sv_transport_request = rv_transport_request.
    ENDIF.

  ENDMETHOD.


  METHOD get_atc_task.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 12.03.2024 | 30001: CFE Code Review                   *
*              |            | DS4K983213                               *
************************************************************************

    STATICS sv_task TYPE trkorr.
    STATICS sv_tr   TYPE trkorr.

*-- Buffer
    IF sv_task IS NOT INITIAL.
      ev_task              = sv_task.
      ev_transport_request = sv_tr.
      RETURN.
    ENDIF.

*-- Get RFC destination
    DATA(lv_destination) = iv_destination.
    IF lv_destination IS INITIAL.
      lv_destination = zcl_pe_atc_aoc_super=>get_rfc_destination( ).
    ENDIF.

*-- Get ATC Transport Request
    IF zcl_pe_atc_aoc_super=>is_function_in_destination( iv_function    = 'ZPE_FM_GET_ATC_TRANSPORT'
                                                         iv_destination = lv_destination ) = abap_false.
      RETURN.
    ENDIF.

    CALL FUNCTION 'ZPE_FM_GET_ATC_TRANSPORT' DESTINATION lv_destination
      IMPORTING
        ev_task               = ev_task
        ev_transport_request  = ev_transport_request
      EXCEPTIONS
        not_found             = 1
        not_authorized        = 2
        communication_failure = 3
        system_failure        = 4
        OTHERS                = 5.
    IF sy-subrc > 1.
      MESSAGE e009(zpe_atc) WITH sy-subrc INTO DATA(lv_msg) ##NEEDED.
      zcl_pe_atc_logger=>log_message( ).
      RETURN.
    ELSE.
      sv_task = ev_task.
      sv_tr   = ev_transport_request.
    ENDIF.

  ENDMETHOD.

  METHOD get_function_module.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 11.01.2023 | 16832: Get function module               *
*              |            | DS4K940184                               *
*----------------------------------------------------------------------*

    TYPES: BEGIN OF ltyp_s_buffer,
             program  TYPE progname,
             function TYPE versobjnam,
           END OF ltyp_s_buffer.

    STATICS: st_buffer TYPE STANDARD TABLE OF ltyp_s_buffer.

    DATA: lv_function    TYPE rs38l_fnam.


*-- Buffer
    READ TABLE st_buffer ASSIGNING FIELD-SYMBOL(<ls_buffer>) WITH KEY program = iv_program.
    IF sy-subrc = 0.
      rv_result = <ls_buffer>-function.
      RETURN.
    ENDIF.


*-- Get data
    IF zcl_pe_atc_aoc_super=>is_function_in_destination( iv_function = 'ZPE_FM_FUNCTION_INCLUDE_INFO' iv_destination = iv_destination ) = abap_false.
      RETURN.
    ENDIF.

    DATA(lv_program) = iv_program.
    DATA(lv_group)   = iv_group.

    CALL FUNCTION 'ZPE_FM_FUNCTION_INCLUDE_INFO' DESTINATION iv_destination
      CHANGING
        cv_function           = lv_function
        cv_include            = lv_program
        cv_group              = lv_group
      EXCEPTIONS
        function_not_exists   = 1
        include_not_exists    = 2
        group_not_exists      = 3
        no_selections         = 4
        no_function_include   = 5
        not_authorized        = 6
        communication_failure = 7
        system_failure        = 8
        OTHERS                = 9.

    IF sy-subrc = 0.
      st_buffer = VALUE #( BASE st_buffer ( program = iv_program function = lv_function ) ).
      rv_result = lv_function.
    ENDIF.

  ENDMETHOD.


  METHOD get_method_trkey.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 11.01.2023 | 16832: Get method TRKEY                  *
*              |            | DS4K940184                               *
*----------------------------------------------------------------------*
* CANOCAR      | 01.02.2023 | 17538: Destination for remote execution  *
*              |            | DS4K942351                               *
*----------------------------------------------------------------------*

    TYPES: BEGIN OF ltyp_s_buffer,
             program     TYPE progname,
             object_type TYPE versobjtyp,
             object_name TYPE versobjnam,
           END OF ltyp_s_buffer.

    STATICS: st_buffer TYPE STANDARD TABLE OF ltyp_s_buffer.

    DATA: lv_object      TYPE trobjtype,
          lv_object_name TYPE trobj_name.



    CLEAR: ev_object_type, ev_object_name.



*-- Buffer
    READ TABLE st_buffer ASSIGNING FIELD-SYMBOL(<ls_buffer>) WITH KEY program = iv_program.
    IF sy-subrc = 0.
      ev_object_name = <ls_buffer>-object_name.
      ev_object_type = <ls_buffer>-object_type.
      RETURN.
    ENDIF.


*-- Get data
    IF zcl_pe_atc_aoc_super=>is_function_in_destination( iv_function = 'ZPE_FM_GET_METHOD_DATA' iv_destination = iv_destination ) = abap_false.
      RETURN.
    ENDIF.

    CALL FUNCTION 'ZPE_FM_GET_METHOD_DATA' DESTINATION iv_destination
      EXPORTING
        iv_program            = iv_program
      IMPORTING
        ev_object             = lv_object
        ev_object_name        = lv_object_name
      EXCEPTIONS
        not_found             = 1
        not_authorized        = 2
        communication_failure = 3
        system_failure        = 4
        OTHERS                = 5.
    IF sy-subrc = 0.
      ev_object_name = lv_object_name.
      ev_object_type = lv_object.
      st_buffer = VALUE #( BASE st_buffer ( program = iv_program object_name = ev_object_name object_type = ev_object_type ) ).
    ENDIF.


  ENDMETHOD.


  METHOD get_rfc_destination.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 30.01.2022 | 9784      : ATC Development              *
*              |            | DS4K913083                               *
*----------------------------------------------------------------------*

    rv_result = zcl_aoc_super=>get_destination(  ).
    IF rv_result = `NONE`.
      CLEAR rv_result.
    ENDIF.

  ENDMETHOD.


  METHOD get_source_code.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 11.01.2023 | 16832: Get source code in string format  *
*              |            | DS4K940184                               *
*----------------------------------------------------------------------*
* CANOCAR      | 02.08.2023 | 23927: ENHO Source code                  *
*              |            | DS4K959800                               *
************************************************************************

    CASE iv_object_type.

      WHEN 'DDLS'.
        rv_result = get_source_code_ddls( iv_destination = iv_destination iv_object_name = iv_object_name ).

      WHEN 'PROG' OR 'FUGR' OR 'CLAS'.
        rv_result = get_source_code_prog( iv_destination = iv_destination iv_object_name = iv_object_name ).

      WHEN 'INCL'.
        rv_result = get_source_code_incl( iv_destination = iv_destination iv_object_name = iv_object_name ).

      WHEN 'WAPD' OR 'WAPA'.
        rv_result = get_source_code_wapa( iv_destination = iv_destination iv_object_name = iv_object_name ).

      WHEN 'ENHO'.
        rv_result = get_source_code_enho( iv_destination = iv_destination iv_object_name = iv_object_name ).

      WHEN OTHERS.
        RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.

    ENDCASE.

  ENDMETHOD.


  METHOD get_source_code_ddls.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 11.01.2023 | 16832: Get source code in string format  *
*              |            | DS4K940184                               *
*----------------------------------------------------------------------*
* CANOCAR      | 12.2023    | 27103: Housekeeping SLG1                 *
*              |            | DS4K971853                               *
************************************************************************

    DATA: ls_ddl_source TYPE ddddlsrcv,
          lv_msg        TYPE string ##NEEDED.


    IF zcl_pe_atc_aoc_super=>is_function_in_destination( iv_function = 'ZPE_FM_GET_DDL_SOURCE' iv_destination = iv_destination ) = abap_false.
      RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
    ENDIF.

    CALL FUNCTION 'ZPE_FM_GET_DDL_SOURCE' DESTINATION iv_destination
      EXPORTING
        iv_object_name        = iv_object_name
      IMPORTING
        es_ddl_source         = ls_ddl_source
      EXCEPTIONS
        not_found             = 1
        not_authorized        = 2
        communication_failure = 3
        system_failure        = 4
        OTHERS                = 5.

    IF sy-subrc = 1 OR ls_ddl_source-source_origin NE 0.
      RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
    ELSEIF sy-subrc = 2.
      MESSAGE e012(zpe_atc) WITH 'ZPE_FM_GET_DDL_SOURCE' iv_destination INTO lv_msg.
      zcl_pe_atc_logger=>log_message( ).
      RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
    ELSEIF sy-subrc > 2.
      MESSAGE e017(zpe_atc) WITH 'ZPE_FM_GET_DDL_SOURCE' iv_destination INTO lv_msg.
      zcl_pe_atc_logger=>log_message( ).
      RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
    ELSE.
      rv_result = ls_ddl_source-source.
    ENDIF.

  ENDMETHOD.


  METHOD get_source_code_wapa.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 11.01.2023 | 16832: Get source code in string format  *
*              |            | DS4K940184                               *
*----------------------------------------------------------------------*

    IF zcl_pe_atc_aoc_super=>is_function_in_destination( iv_function = 'ZPE_FM_GET_BSP' iv_destination = iv_destination ) = abap_false.
      RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
    ENDIF.

    CALL FUNCTION 'ZPE_FM_GET_BSP' DESTINATION iv_destination
      EXPORTING
        iv_application        = CONV o2applname( iv_object_name )
      IMPORTING
        ev_source_code        = rv_result
      EXCEPTIONS
        not_found             = 1
        action_not_supported  = 2
        not_authorized        = 3
        communication_failure = 4
        system_failure        = 5
        OTHERS                = 6.
    IF sy-subrc <> 0.
      MESSAGE e011(zpe_atc) WITH 'ZPE_FM_GET_BSP' INTO DATA(lv_msg) ##NEEDED.
      zcl_pe_atc_logger=>log_message( ).
      RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
    ENDIF.

  ENDMETHOD.


  METHOD get_tadir.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 09.03.2023 | 18481: Check package assignment          *
*              |            | DS4K945173                               *
************************************************************************

    IF zcl_pe_atc_aoc_super=>is_function_in_destination( iv_function = 'ZPE_FM_GET_TADIR' iv_destination = iv_destination ) = abap_false.
      RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
    ENDIF.

    CALL FUNCTION 'ZPE_FM_GET_TADIR' DESTINATION iv_destination
      EXPORTING
        iv_object_type        = iv_object_type
        iv_object_name        = iv_object_name
      IMPORTING
        es_tadir              = rs_result
      EXCEPTIONS
        not_found             = 1
        not_authorized        = 2
        communication_failure = 3
        system_failure        = 4
        OTHERS                = 5.

    IF sy-subrc = 0.
      RETURN.
    ELSEIF sy-subrc = 1 OR rs_result IS INITIAL.
      MESSAGE e008(zpe_atc) WITH iv_object_name INTO DATA(lv_msg)  ##NEEDED.
      zcl_pe_atc_logger=>log_message( ).
      RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
    ELSEIF sy-subrc = 2.
      MESSAGE e012(zpe_atc) WITH 'ZPE_FM_GET_TADIR' iv_destination INTO DATA(lv_msg2)  ##NEEDED.
      zcl_pe_atc_logger=>log_message( ).
      RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
    ELSE.
      MESSAGE e011(zpe_atc) WITH 'ZPE_FM_GET_TADIR' INTO DATA(lv_msg3)   ##NEEDED.
      zcl_pe_atc_logger=>log_message( ).
      RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
    ENDIF.

  ENDMETHOD.


  METHOD get_transport_attributes.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 20.12.2022 | 16320: Get TR attributes                 *
*              |            | DS4K938346                               *
*----------------------------------------------------------------------*


    STATICS st_attributes TYPE trattributes.

*   Check if it is already read
    READ TABLE st_attributes TRANSPORTING NO FIELDS WITH KEY trkorr = iv_transport.
    IF sy-subrc = 0.
      rt_attributes = st_attributes.
      RETURN.
    ENDIF.

*   Get TR attributes
    IF zcl_pe_atc_aoc_super=>is_function_in_destination( iv_function = 'ZPE_FM_GET_TR' iv_destination = iv_destination ) = abap_false.
      RETURN.
    ENDIF.

    CLEAR st_attributes.
    CALL FUNCTION 'ZPE_FM_GET_TR' DESTINATION iv_destination
      EXPORTING
        iv_trkorr              = iv_transport
      IMPORTING
        et_attributes          = st_attributes
      EXCEPTIONS
        not_found              = 1
        action_not_supported   = 2
        not_authorized         = 3
        communication_failure_ = 4
        system_failure         = 5
        OTHERS                 = 6.
    IF sy-subrc NE 0.
      MESSAGE e010(zpe_atc) WITH iv_transport INTO DATA(lv_msg)  ##NEEDED.
      zcl_pe_atc_logger=>log_message( ).
      RETURN.
    ELSE.
      rt_attributes = st_attributes.
    ENDIF.

  ENDMETHOD.


  METHOD get_trdir.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 16.03.2022 | 9784      : ATC Development              *
*              |            | DS4K913083                               *
*----------------------------------------------------------------------*
* CANOCAR      | 08.11.2022 | 14981: Log improvement                   *
*              |            | DS4K934555                               *
************************************************************************

    CALL FUNCTION 'RS_ABAP_GET_TRDIR_E' DESTINATION iv_destination
      EXPORTING
        p_program             = iv_program
      IMPORTING
        p_result              = rs_result
      EXCEPTIONS
        communication_failure = 1
        system_failure        = 2
        OTHERS                = 3.

    IF sy-subrc = 1.
      MESSAGE e017(zpe_atc) WITH 'RS_ABAP_GET_TRDIR_E' iv_destination INTO DATA(lv_msg_017)   ##NEEDED.
      zcl_pe_atc_logger=>log_message( ).
    ELSEIF sy-subrc = 2.
      MESSAGE e011(zpe_atc) WITH 'RS_ABAP_GET_TRDIR_E' INTO DATA(lv_msg_011)   ##NEEDED.
      zcl_pe_atc_logger=>log_message( ).
    ELSEIF sy-subrc = 3 OR rs_result IS INITIAL.
      DATA(lv_transport_request) = get_atc_transport_request( iv_destination ).
      MESSAGE e007(zpe_atc) WITH iv_program lv_transport_request INTO DATA(lv_msg)   ##NEEDED.
      zcl_pe_atc_logger=>log_message( ).
    ENDIF.

  ENDMETHOD.


  METHOD is_function_in_destination.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* RIOSNAT      | 22.02.2022 | 9784      : ATC Development              *
*              |            | DS4K913083                               *
*----------------------------------------------------------------------*
    rv_bool = abap_true.
    IF iv_destination <> 'NONE'.
      CALL FUNCTION 'FUNCTION_EXISTS' DESTINATION iv_destination
        EXPORTING
          funcname              = iv_function
        EXCEPTIONS
          function_not_exist    = 1
          communication_failure = 2
          system_failure        = 3
          OTHERS                = 4.
      IF sy-subrc <> 0.
        MESSAGE e006(zpe_atc) WITH iv_function iv_destination INTO DATA(lv_msg) ##NEEDED.
        zcl_pe_atc_logger=>log_message( ).
        rv_bool = abap_false.
      ENDIF.
    ENDIF.
  ENDMETHOD.


  METHOD is_relevant.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 16.03.2022 | 9784      : ATC Development              *
*              |            | DS4K913083                               *
*----------------------------------------------------------------------*
* CANOCAR      | 21.03.2022 | 16320: Is custom, SAP, changed...?       *
*              |            | DS4K938346                               *
*----------------------------------------------------------------------*
* CANOCAR      | 12.2023    | 27103: Exclude WF standard macros        *
*              |            | DS4K971853                               *
************************************************************************

    TYPES: BEGIN OF ltyp_s_relevant,
             program  TYPE programm,
             relevant TYPE abap_boolean,
           END OF ltyp_s_relevant.

    DATA: lv_function TYPE rs38l_fnam,
          ls_tm_info  TYPE tvdir.

    STATICS: st_buffer TYPE STANDARD TABLE OF ltyp_s_relevant.


*-- Buffer
    READ TABLE st_buffer ASSIGNING FIELD-SYMBOL(<ls_buffer>) WITH KEY program = iv_program.
    IF sy-subrc = 0.
      rv_result = <ls_buffer>-relevant.
      RETURN.
    ENDIF.



*-- Unit test execution, OK
    IF iv_program = '----------------------------------------'.
      st_buffer = VALUE #( BASE st_buffer ( program = iv_program relevant = abap_true  ) ).
      rv_result = abap_true.
      RETURN.
    ENDIF.


*-- Exclude WF standard macros
    IF iv_program CP 'SWC*'.
      st_buffer = VALUE #( BASE st_buffer ( program = iv_program relevant = abap_false  ) ).
      rv_result = abap_false.
      RETURN.
    ENDIF.


*-- BREAK Points are coming like programs but don't need to be analyzed
    IF iv_program = 'BREAK'.
      st_buffer = VALUE #( BASE st_buffer ( program = iv_program relevant = abap_false  ) ).
      rv_result = abap_false.
      RETURN.
    ENDIF.


*-- Get RFC Destination and TRDIR info
    DATA(lv_destination) = iv_destination.
    IF lv_destination IS INITIAL.
      lv_destination = zcl_pe_atc_aoc_super=>get_rfc_destination( ).
    ENDIF.
    DATA(ls_trdir) = get_trdir( iv_program     = iv_program
                                iv_destination = lv_destination ).
    IF ls_trdir IS INITIAL.
      st_buffer = VALUE #( BASE st_buffer ( program = iv_program relevant = abap_true  ) ).
      rv_result = abap_true.
      RETURN.
    ENDIF.



*-- Last changed by SAP
    IF ls_trdir-unam EQ 'SAP' OR ls_trdir-unam EQ 'SAP*' OR ls_trdir-unam EQ 'DDIC' OR ls_trdir-unam EQ 'SAP*........'.
      st_buffer = VALUE #( BASE st_buffer ( program = iv_program relevant = abap_false  ) ).
      rv_result = abap_false.
      RETURN.
    ENDIF.


*-- Table maintenance auto-generated FG
    IF ls_trdir-subc = 'F' AND ls_trdir-name CP '*FG*'.
      IF zcl_pe_atc_aoc_super=>is_function_in_destination( iv_function = 'ZPE_FM_GET_TABLE_MAINTENANCE' iv_destination = lv_destination ) = abap_false.
        st_buffer = VALUE #( BASE st_buffer ( program = iv_program relevant = abap_true  ) ).
        rv_result = abap_true.
        RETURN.
      ENDIF.
      CALL FUNCTION 'ZPE_FM_GET_TABLE_MAINTENANCE' DESTINATION lv_destination
        EXPORTING
          iv_area               = CONV funct_pool( ls_trdir-name+4 )
        IMPORTING
          es_info               = ls_tm_info
        EXCEPTIONS
          not_authorized        = 1
          not_found             = 2
          action_not_supported  = 3
          communication_failure = 4
          system_failure        = 5
          OTHERS                = 6.
      IF sy-subrc = 0 AND ls_tm_info IS NOT INITIAL.
        st_buffer = VALUE #( BASE st_buffer ( program = iv_program relevant = abap_false  ) ).
        rv_result = abap_false.
        RETURN.
      ENDIF.
    ENDIF.


*-- Exclude wizard auto-generated FM
    IF object_type = 'FUGR'.
      IF zcl_pe_atc_aoc_super=>is_function_in_destination( iv_function = 'ZPE_FM_FUNCTION_INCLUDE_INFO' iv_destination = lv_destination ) = abap_false.
        st_buffer = VALUE #( BASE st_buffer ( program = iv_program relevant = abap_true  ) ).
        rv_result = abap_true.
        RETURN.
      ENDIF.

      DATA(lv_program) = iv_program.
      CALL FUNCTION 'ZPE_FM_FUNCTION_INCLUDE_INFO' DESTINATION lv_destination
        CHANGING
          cv_function           = lv_function
          cv_include            = lv_program
        EXCEPTIONS
          function_not_exists   = 1
          include_not_exists    = 2
          group_not_exists      = 3
          no_selections         = 4
          no_function_include   = 5
          not_authorized        = 6
          communication_failure = 7
          system_failure        = 8
          OTHERS                = 9.
      IF sy-subrc = 0 AND lv_function(3) = 'WZ_'.
        st_buffer = VALUE #( BASE st_buffer ( program = iv_program relevant = abap_false  ) ).
        rv_result = abap_false.
        RETURN.
      ENDIF.


*-- Exclude Table maintenance auto-generated FM
      IF sy-subrc = 0 AND ( lv_function CP 'TABLEFRAME_*' OR lv_function CP 'TABLEPROC_*' OR lv_function CP 'VIEWFRAME_*' OR lv_function CP 'VIEWPROC_*' ).
        st_buffer = VALUE #( BASE st_buffer ( program = iv_program relevant = abap_false  ) ).
        rv_result = abap_false.
        RETURN.
      ENDIF.
    ENDIF.


*-- Exclude local test classes
    IF object_type = 'CLAS' AND ls_trdir-name CP 'Z*=CCAU'.
      st_buffer = VALUE #( BASE st_buffer ( program = iv_program relevant = abap_false  ) ).
      rv_result = abap_false.
      RETURN.
    ENDIF.


*-- Consider objects origin (SAP or custom) and changes
    DATA(lv_sap_status) = get_sap_status( iv_object_name = iv_program iv_object_type = 'PROG' ).
    IF lv_sap_status = gc_s_sap_status-sap_not_changed OR
       lv_sap_status = gc_s_sap_status-sap_oss OR
       lv_sap_status = gc_s_sap_status-undetermined.
      st_buffer = VALUE #( BASE st_buffer ( program = iv_program relevant = abap_false  ) ).
      rv_result = abap_false.
      RETURN.
    ENDIF.


*-- Exclude form auto-generated
    IF iv_program CP '/1BCDWB/*'.
      st_buffer = VALUE #( BASE st_buffer ( program = iv_program relevant = abap_false  ) ).
      rv_result = abap_false.
      RETURN.
    ENDIF.


*-- If we are here, it is relevant
    st_buffer = VALUE #( BASE st_buffer ( program = iv_program relevant = abap_true  ) ).
    rv_result = abap_true.


  ENDMETHOD.


  METHOD token_position.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 30.01.2022 | 9784      : ATC Development              *
*              |            | DS4K913083                               *
*----------------------------------------------------------------------*

    rs_position-col = is_token-col.
    rs_position-row = is_token-row.

  ENDMETHOD.


  METHOD get_source_code_enho.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 02.08.2023 | 23927: ENHO Source code                  *
*              |            | DS4K959800                               *
************************************************************************

    IF zcl_pe_atc_aoc_super=>is_function_in_destination( iv_function = 'ZPE_FM_GET_ENHANCEMENT_DATA' iv_destination = iv_destination ) = abap_false.
      RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
    ENDIF.

    CALL FUNCTION 'ZPE_FM_GET_ENHANCEMENT_DATA' DESTINATION iv_destination
      EXPORTING
        iv_enhancement        = CONV enhname( iv_object_name )
      IMPORTING
        ev_source             = rv_result
      EXCEPTIONS
        not_found             = 1
        action_not_supported  = 2
        not_authorized        = 3
        communication_failure = 4
        system_failure        = 5
        OTHERS                = 6.
    IF sy-subrc <> 0.
      MESSAGE e011(zpe_atc) WITH 'ZPE_FM_GET_ENHANCEMENT_DATA' INTO DATA(lv_msg) ##NEEDED.
      zcl_pe_atc_logger=>log_message( ).
      RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
    ENDIF.

  ENDMETHOD.
ENDCLASS.