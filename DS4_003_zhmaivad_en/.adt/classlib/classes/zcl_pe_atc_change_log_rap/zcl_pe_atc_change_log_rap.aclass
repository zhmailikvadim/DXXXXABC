CLASS zcl_pe_atc_change_log_rap DEFINITION
  PUBLIC
  INHERITING FROM cl_ci_test_root
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.
    METHODS run REDEFINITION.
    METHODS constructor.

  PRIVATE SECTION.
    DATA mv_destination TYPE rfcdest.

    METHODS extract_header IMPORTING iv_source_code   TYPE string
                           RETURNING VALUE(rv_header) TYPE string
                           RAISING   zcx_pe_atc_error.

    METHODS get_source_code IMPORTING iv_object_type   TYPE trobjtype
                                      iv_object_name   TYPE sobj_name
                                      iv_destination   TYPE rfcdest
                            RETURNING VALUE(rv_source) TYPE string
                            RAISING   zcx_pe_atc_not_relevant.
ENDCLASS.



CLASS ZCL_PE_ATC_CHANGE_LOG_RAP IMPLEMENTATION.


  METHOD constructor.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 30.01.2022 | 9784      : ATC Development              *
*              |            | DS4K913083                               *
*----------------------------------------------------------------------*
* CANOCAR      | 12.08.2022 | 12913     : Behaviour definition         *
*              |            | DS4K926986                               *
************************************************************************

    super->constructor( ).

    description         = 'Change Log for RAP'(001).
    category            = zcl_pe_atc_category_002=>gc_my_name.
    position            = '020'.
    version             = '001'.
    remote_rfc_enabled  = abap_true.
    has_documentation   = abap_true.
    uses_checksum       = abap_true.

    add_obj_type( 'DDLS' ).
    add_obj_type( 'SRVD' ).
    add_obj_type( 'BDEF' ).

    fill_message '0001' c_error 'Change log not found'(008)             c_exceptn_imposibl.
    fill_message '0002' c_error 'Transport request error: &1'(006)      c_exceptn_imposibl.
    fill_message '0003' c_error 'Change log error: &1'(004)             c_exceptn_imposibl.

  ENDMETHOD.


  METHOD get_source_code.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 01.02.2022 | 9784      : ATC Development              *
*              |            | DS4K913083                               *
*----------------------------------------------------------------------*
* CANOCAR      | 12.08.2022 | 12913     : Behaviour definition         *
*              |            | DS4K926986                               *
*----------------------------------------------------------------------*
* CANOCAR      | 12.2023    | 27103: Housekeeping SLG1                 *
*              |            | DS4K971853                               *
************************************************************************
    DATA: ls_ddl_source TYPE ddddlsrcv,
          lv_msg        TYPE string ##NEEDED.

    TEST-SEAM get_source_code.
    END-TEST-SEAM.

    CASE iv_object_type.
*      Comments are removed from Service Definition, so change log cannot be required for the moment
*      WHEN 'SRVD'.
*        TRY.
*            NEW cl_srvd_object_persist( )->if_wb_object_persist~get( EXPORTING p_object_key  = CONV #( object_name )
*                                                                               p_version     = 'A'
*                                                                      CHANGING p_object_data = lo_object_data ).
*            lo_object_data->get_selected_data( EXPORTING p_data_selection = 'D'
*                                               IMPORTING p_data           = lv_source ).
*          CATCH cx_swb_exception.
*            RETURN.
*        ENDTRY.

      WHEN 'DDLS'.
        IF zcl_pe_atc_aoc_super=>is_function_in_destination( iv_function = 'ZPE_FM_GET_DDL_SOURCE' iv_destination = iv_destination ) = abap_false.
          RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
        ENDIF.
        CALL FUNCTION 'ZPE_FM_GET_DDL_SOURCE' DESTINATION iv_destination
          EXPORTING
            iv_object_name        = iv_object_name
          IMPORTING
            es_ddl_source         = ls_ddl_source
          EXCEPTIONS
            not_found             = 1
            not_authorized        = 2
            communication_failure = 3
            system_failure        = 4
            OTHERS                = 5.

        IF sy-subrc = 1 OR ls_ddl_source-source_origin NE 0.
          RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
        ELSEIF sy-subrc = 2.
          MESSAGE e012(zpe_atc) WITH 'ZPE_FM_GET_DDL_SOURCE' iv_destination INTO lv_msg.
          zcl_pe_atc_logger=>log_message( ).
          RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
        ELSEIF sy-subrc > 2.
          MESSAGE e017(zpe_atc) WITH 'ZPE_FM_GET_DDL_SOURCE' iv_destination INTO lv_msg.
          zcl_pe_atc_logger=>log_message( ).
          RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
        ELSE.
          rv_source = ls_ddl_source-source.
        ENDIF.

      WHEN 'BDEF'.

        IF zcl_pe_atc_aoc_super=>is_function_in_destination( iv_function = 'ZPE_FM_GET_BDEF_SOURCE' iv_destination = iv_destination ) = abap_false.
          RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
        ENDIF.
        CALL FUNCTION 'ZPE_FM_GET_BDEF_SOURCE' DESTINATION iv_destination
          EXPORTING
            iv_object_name        = CONV seu_objkey( iv_object_name )
          IMPORTING
            ev_source             = rv_source
          EXCEPTIONS
            not_found             = 1
            not_authorized        = 2
            communication_failure = 3
            system_failure        = 4
            OTHERS                = 5.

        IF sy-subrc = 0.
          RETURN.
        ELSEIF sy-subrc = 1.
          MESSAGE e013(zpe_atc) WITH iv_object_name 'ZPE_FM_GET_BDEF_SOURCE' iv_destination INTO lv_msg.
          zcl_pe_atc_logger=>log_message( ).
          RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
        ELSEIF sy-subrc = 2.
          MESSAGE e012(zpe_atc) WITH 'ZPE_FM_GET_BDEF_SOURCE' iv_destination INTO lv_msg.
          zcl_pe_atc_logger=>log_message( ).
          RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
        ELSE.
          MESSAGE e011(zpe_atc) WITH 'ZPE_FM_GET_BDEF_SOURCE' INTO lv_msg.
          zcl_pe_atc_logger=>log_message( ).
          RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
        ENDIF.


      WHEN OTHERS.
        RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.

    ENDCASE.

  ENDMETHOD.


  METHOD extract_header.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 30.01.2022 | 9784      : ATC Development              *
*              |            | DS4K913083                               *
*----------------------------------------------------------------------*
* CANOCAR      | 28.09.2022 | 13953: Support multiple comment formats  *
*              |            | DS4K931335                               *
************************************************************************

*   Remove leading blanks and line breaks
    DATA(lv_sc) = condense( val = iv_source_code ).
    lv_sc       = condense( val = lv_sc del = |\n| ).

*   Change log starting with /*
    IF lv_sc(2) = '/*'.
      rv_header = substring_from( val = lv_sc sub = '/*' ).
      rv_header = substring_before( val = rv_header sub = '*/' ).

*   Change log starting with //
    ELSEIF lv_sc(2) = '//'.
      DO.
        IF lv_sc(2) <> '//'.
          EXIT.
        ENDIF.
        rv_header = rv_header && substring_before( val = lv_sc sub = |\n| ) && |\n|.
        lv_sc     = substring_after( val = lv_sc sub = |\n| ).
      ENDDO.

*   Change log not found at starting position
    ELSE.
      RAISE EXCEPTION TYPE zcx_pe_atc_error.
    ENDIF.

  ENDMETHOD.


  METHOD run.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 30.01.2022 | 9784      : ATC Development              *
*              |            | DS4K913083                               *
*----------------------------------------------------------------------*
* CANOCAR      | 12.08.2022 | 12913     : Behaviour definition         *
*              |            | DS4K926986                               *
*----------------------------------------------------------------------*
* CANOCAR      | 20.01.2023 | 16832: Use ATC Transport request         *
*              |            | DS4K940184                               *
************************************************************************

    TEST-SEAM rfccall.
      mv_destination = zcl_pe_atc_aoc_super=>get_rfc_destination( ).
    END-TEST-SEAM.

    TRY.
        DATA(lv_source) = get_source_code( iv_object_type = object_type
                                           iv_object_name = object_name
                                           iv_destination = mv_destination ).

        DATA(lv_header) = extract_header( lv_source ).

        TEST-SEAM transport_number.
          DATA(lv_trkorr) = zcl_pe_atc_aoc_super=>get_atc_transport_request( mv_destination ).
          IF lv_trkorr IS INITIAL.
            RETURN.
          ENDIF.
        END-TEST-SEAM.

        TEST-SEAM change_number.
          DATA(lv_cn) = zcl_pe_atc_change_log=>get_tr_change_management_ref( iv_trkorr      = lv_trkorr
                                                                             iv_destination = mv_destination ).
        END-TEST-SEAM.

        zcl_pe_atc_change_log=>check_unified_header_data( iv_trkorr       = lv_trkorr
                                                          iv_cm_ref_value = lv_cn
                                                          iv_header       = lv_header ).

      CATCH zcx_pe_atc_error INTO DATA(lo_exc_atc).
        IF lv_header IS INITIAL.
*         Change log not found
          inform( p_sub_obj_name = object_name
                  p_kind         = c_error
                  p_checksum_1   = zcl_pe_atc_aoc_super=>generate_checksum_from_string( lv_source )
                  p_test         = myname
                  p_line         = 1
                  p_column       = 1
                  p_code         = '0001' ).
          RETURN.
        ENDIF.

*       Change log incorrect format
        inform( p_sub_obj_name = object_name
                p_line         = 1
                p_kind         = c_error
                p_checksum_1   = zcl_pe_atc_aoc_super=>generate_checksum_from_string( lv_source )
                p_test         = myname
                p_code         = '0003'
                p_param_1      = lo_exc_atc->get_text( ) ).

      CATCH zcx_pe_trv_xx INTO DATA(lo_exc_trv).
*       Incorrect transport request description
        inform( p_sub_obj_name = object_name
                p_kind         = c_error
                p_checksum_1   = zcl_pe_atc_aoc_super=>generate_checksum_from_string( lv_source )
                p_test         = myname
                p_code         = '0002'
                p_param_1      = lo_exc_trv->get_text( ) ).

      CATCH zcx_pe_atc_not_relevant.
        RETURN.

    ENDTRY.

  ENDMETHOD.
ENDCLASS.