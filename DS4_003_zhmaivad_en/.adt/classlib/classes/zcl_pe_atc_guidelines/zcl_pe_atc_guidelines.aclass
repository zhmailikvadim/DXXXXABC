CLASS zcl_pe_atc_guidelines DEFINITION
  PUBLIC
  INHERITING FROM zcl_pe_atc_aoc_super
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    METHODS get_result_node REDEFINITION.
    METHODS constructor.
    METHODS check REDEFINITION .

  PROTECTED SECTION.

  PRIVATE SECTION.

    TYPES: BEGIN OF mtyp_s_check,
             message_number TYPE syst_msgno,
             message_type   TYPE syst_msgty,
             regex          TYPE zpe_hm_text,
             message_text   TYPE zpe_hm_text,
           END OF mtyp_s_check,
           mtyp_t_checks TYPE STANDARD TABLE OF mtyp_s_check WITH EMPTY KEY.

    DATA: mt_checks TYPE mtyp_t_checks.
    DATA: mt_checks_ml TYPE mtyp_t_checks.

    METHODS get_checks.
    METHODS filter_statements IMPORTING it_levels     TYPE slevel_tab
                              CHANGING  ct_statements TYPE zcl_aoc_scan=>ty_statements.

ENDCLASS.



CLASS ZCL_PE_ATC_GUIDELINES IMPLEMENTATION.


  METHOD constructor.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 01.02.2022 | 9784      : ATC Development              *
*              |            | DS4K913083                               *
*----------------------------------------------------------------------*

    super->constructor( ).

    description         = 'Development guidelines'(001).
    category            = zcl_pe_atc_category_002=>gc_my_name.
    version             = '001'.
    remote_rfc_enabled  = abap_true.
    has_documentation   = abap_true.

    get_checks( ).

  ENDMETHOD.


  METHOD check.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 01.02.2022 | 9784      : ATC Development              *
*              |            | DS4K913083                               *
*----------------------------------------------------------------------*
* CANOCAR      | 12.08.2022 | 12913     : Remove source system check   *
*              |            | DS4K926986                               *
************************************************************************

    DATA: lv_source TYPE string.


*   Get source code
    DATA(lt_statements) = io_scan->build_statements( abap_false ).

    filter_statements( EXPORTING it_levels     = io_scan->levels
                       CHANGING  ct_statements = lt_statements ).


*   Single line instructions/operations
    LOOP AT lt_statements ASSIGNING FIELD-SYMBOL(<ls_statement>).
      LOOP AT mt_checks ASSIGNING FIELD-SYMBOL(<ls_check>). "#EC CI_NESTED
        TRY.
            FIND PCRE <ls_check>-regex IN <ls_statement>-str IGNORING CASE.
            IF sy-subrc = 0.
              inform( p_sub_obj_type = c_type_include
                      p_sub_obj_name = <ls_statement>-include
                      p_line         = <ls_statement>-start-row
                      p_kind         = <ls_check>-message_type
                      p_test         = myname
                      p_code         = CONV #( <ls_check>-message_number ) ).
            ENDIF.
          CATCH cx_sy_regex_too_complex.
            CONTINUE.
        ENDTRY.
      ENDLOOP.
    ENDLOOP.


*   Multiline instructions e.g. SELECT-ENDSELECT
    LOOP AT lt_statements ASSIGNING FIELD-SYMBOL(<ls_line>).
      lv_source = lv_source && |\n{ <ls_line>-str }|.
    ENDLOOP.
    LOOP AT mt_checks_ml ASSIGNING FIELD-SYMBOL(<ls_check_ml>). "#EC CI_NESTED
      TRY.
          FIND PCRE <ls_check_ml>-regex IN lv_source IGNORING CASE.
          IF sy-subrc = 0.
            inform( p_sub_obj_type = c_type_include
                    p_sub_obj_name = <ls_line>-include
                    p_line         = 0
                    p_kind         = <ls_check_ml>-message_type
                    p_test         = myname
                    p_code         = CONV #( <ls_check_ml>-message_number ) ).
          ENDIF.
        CATCH cx_sy_regex_too_complex.
          CONTINUE.
      ENDTRY.
    ENDLOOP.

  ENDMETHOD.


  METHOD get_checks.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 01.02.2022 | 9784      : ATC Development              *
*              |            | DS4K913083                               *
*----------------------------------------------------------------------*

*-- Checks for instructions in one single line
    TRY.
        zcl_pe_hm_complex=>get_table( EXPORTING iv_id    = '024F85009E261EEC91EDC9AD691740D2'
                                      IMPORTING et_table = mt_checks ).
      CATCH zcx_pe_hm.
        RETURN.
    ENDTRY.
    LOOP AT mt_checks ASSIGNING FIELD-SYMBOL(<ls_check>).
      fill_message <ls_check>-message_number <ls_check>-message_type <ls_check>-message_text c_exceptn_imposibl.
    ENDLOOP.

*-- Checks for multi-line instructions e.g. SELECT-ENDSELECT
    TRY.
        zcl_pe_hm_complex=>get_table( EXPORTING iv_id    = '0239FC3B8D041EDC9ED4B67F98471F59'
                                      IMPORTING et_table = mt_checks_ml ).
      CATCH zcx_pe_hm.
        RETURN.
    ENDTRY.
    LOOP AT mt_checks_ml ASSIGNING FIELD-SYMBOL(<ls_check_ml>).
      fill_message <ls_check_ml>-message_number <ls_check_ml>-message_type <ls_check_ml>-message_text c_exceptn_imposibl.
    ENDLOOP.

  ENDMETHOD.


  METHOD get_result_node.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 01.02.2022 | 9784      : ATC Development              *
*              |            | DS4K913083                               *
*----------------------------------------------------------------------*

    p_result                = NEW zcl_pe_atc_guidelines_result( p_kind = p_kind ).
    p_result->destination   = zcl_pe_atc_aoc_super=>get_rfc_destination( ).

  ENDMETHOD.


  METHOD filter_statements.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 17.03.2022 | 9784      : ATC Development              *
*              |            | DS4K913083                               *
*----------------------------------------------------------------------*
* CANOCAR      | 12.08.2022 | 12913: Exclude macros                    *
*              |            | DS4K926986                               *
*----------------------------------------------------------------------*
* CANOCAR      | 21.03.2022 | 16320: Bug fixing                        *
*              |            | DS4K938346                               *
************************************************************************

    DATA: lt_r_include TYPE RANGE OF programm.


*   Unique include names
    DATA(lt_includes) = it_levels.
    SORT lt_includes BY name.
    DELETE ADJACENT DUPLICATES FROM lt_includes COMPARING name.

*   Discard standard, auto-generated,...
    LOOP AT lt_includes ASSIGNING FIELD-SYMBOL(<ls_include>) WHERE type <> 'D'.     " D for Macros
      IF zcl_pe_atc_aoc_super=>is_relevant( iv_program = <ls_include>-name ).
        lt_r_include = VALUE #( BASE lt_r_include ( sign = 'I' option = 'EQ' low = <ls_include>-name ) ).
      ENDIF.
    ENDLOOP.
    IF lt_r_include IS INITIAL.
      CLEAR ct_statements.
      RETURN.
    ENDIF.

*   Filter statements
    DELETE ct_statements WHERE include NOT IN lt_r_include.

  ENDMETHOD.
ENDCLASS.