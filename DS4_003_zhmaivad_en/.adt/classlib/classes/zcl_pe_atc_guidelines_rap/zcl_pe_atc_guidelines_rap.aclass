CLASS zcl_pe_atc_guidelines_rap DEFINITION
  PUBLIC
  INHERITING FROM cl_ci_test_root
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.
    METHODS constructor.
    METHODS if_ci_test~display_documentation REDEFINITION.
    METHODS run                              REDEFINITION.
    METHODS verify_test                      REDEFINITION.

  PROTECTED SECTION.
  PRIVATE SECTION.

    DATA mv_destination TYPE rfcdest.
    DATA mv_object_name TYPE sobj_name.
    DATA mv_object_type TYPE trobjtype.

    TYPES: BEGIN OF mtyp_s_check,
             message_number TYPE syst_msgno,
             message_type   TYPE syst_msgty,
             regex          TYPE zpe_hm_text,
             message_text   TYPE zpe_hm_text,
           END OF mtyp_s_check,
           mtyp_t_checks TYPE STANDARD TABLE OF mtyp_s_check WITH EMPTY KEY.

    DATA mt_checks TYPE mtyp_t_checks.

    METHODS check_cds_ddic_views IMPORTING is_info  TYPE ddddlsrcv
                                           is_tadir TYPE tadir
                                 RAISING   zcx_pe_atc_error
                                           zcx_pe_atc_not_relevant.

    METHODS check_cds_dcl IMPORTING its_annotations    TYPE zpe_tt_atc_cds_annotation
                                    iv_dcl             TYPE boolean
                                    its_source_objects TYPE zpe_tt_atc_cds_source_objects
                                    is_info            TYPE ddddlsrcv
                          RAISING   zcx_pe_atc_error
                                    zcx_pe_atc_not_relevant.

    METHODS check_source_code_with_regex IMPORTING iv_source_code TYPE string
                                         RAISING   zcx_pe_atc_error.

    METHODS get_cds_data EXPORTING ets_annotations    TYPE zpe_tt_atc_cds_annotation
                                   es_info            TYPE ddddlsrcv
                                   ev_dcl             TYPE boolean
                                   ets_source_objects TYPE zpe_tt_atc_cds_source_objects
                                   es_tadir           TYPE tadir
                         RAISING   zcx_pe_atc_not_relevant.

    METHODS get_dcl_data IMPORTING iv_name        TYPE acm_dclname
                         RETURNING VALUE(rs_info) TYPE acm_s_dclsrc
                         RAISING   zcx_pe_atc_not_relevant.

    METHODS get_checks.

    METHODS init.
ENDCLASS.



CLASS zcl_pe_atc_guidelines_rap IMPLEMENTATION.


  METHOD constructor.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 07.2023    | 23353: Creation                          *
*              |            | DS4K958348                               *
************************************************************************
* CANOCAR      | 11.2023    | 26678: Error: DCL not using this entity  *
*              |            | DS4K970086                               *
************************************************************************

    super->constructor( ).

    description        = 'Development guidelines - RAP'(001).
    category           = zcl_pe_atc_category_002=>gc_my_name.
    position           = '020'.
    version            = '001'.
    remote_rfc_enabled = abap_true.
    has_documentation  = abap_true.
    uses_checksum      = abap_true.

    add_obj_type( 'DDLS' ).
    get_checks( ).

    INSERT VALUE #( test = myname code = '0001' kind = c_error text = 'CDS DDIC-based views are not recommended'(008) ) INTO TABLE scimessages.
    INSERT VALUE #( test = myname code = '0002' kind = c_error text = 'Missing or wrong DCL for CDS Entity view'(002) ) INTO TABLE scimessages.
    INSERT VALUE #( test     = myname
                    code     = '0003'
                    kind     = c_error
                    text     = 'FM &1 not available in ATC Central system'(009)
                    category = cl_ci_test_root=>c_cat_not_executable_at_all ) INTO TABLE scimessages.


  ENDMETHOD.


  METHOD verify_test.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 07.2023    | 23353: Creation                          *
*              |            | DS4K958348                               *
************************************************************************

    super->verify_test( CHANGING p_messages = p_messages ).

    DATA(lv_destination) = zcl_pe_atc_aoc_super=>get_rfc_destination( ).

    IF     zcl_pe_atc_aoc_super=>is_function_in_destination( iv_function = 'ZPE_FM_GET_DDL_SOURCE' iv_destination = lv_destination ) = abap_false
       AND object_type = 'DDLS'.
      INSERT VALUE #( code = '0003' kind = cl_ci_test_root=>c_error test = myname  param1 = `ZPE_FM_GET_DDL_SOURCE` ) INTO TABLE p_messages.
    ENDIF.
    IF     zcl_pe_atc_aoc_super=>is_function_in_destination( iv_function = 'ZPE_FM_GET_DCL' iv_destination = lv_destination ) = abap_false
       AND object_type = 'DDLS'.
      INSERT VALUE #( code = '0003' kind = cl_ci_test_root=>c_error test = myname  param1 = `ZPE_FM_GET_DCL` ) INTO TABLE p_messages.
    ENDIF.
    IF     zcl_pe_atc_aoc_super=>is_function_in_destination( iv_function = 'ZPE_FM_GET_TADIR' iv_destination = lv_destination ) = abap_false
       AND object_type = 'DDLS'.
      INSERT VALUE #( code = '0003' kind = cl_ci_test_root=>c_error test = myname  param1 = `ZPE_FM_GET_TADIR` ) INTO TABLE p_messages.
    ENDIF.


  ENDMETHOD.


  METHOD run.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 07.2023    | 23353: Creation                          *
*              |            | DS4K958348                               *
************************************************************************

*-- 0) Prepare data for checks
    TRY.
        init( ).
        get_cds_data( IMPORTING ets_annotations    = DATA(lts_annotations)
                                es_info            = DATA(ls_info)
                                ets_source_objects = DATA(lts_source_objects)
                                ev_dcl             = DATA(lv_dcl)
                                es_tadir           = DATA(ls_tadir) ).
      CATCH zcx_pe_atc_not_relevant.
        RETURN.
    ENDTRY.


*-- 1) CDS DDIC-based views
    TRY.
        check_cds_ddic_views( is_info  = ls_info
                              is_tadir = ls_tadir ).
      CATCH zcx_pe_atc_error.
        inform( p_sub_obj_name = mv_object_name
                p_kind         = c_error
                p_checksum_1   = zcl_pe_atc_aoc_super=>generate_checksum_from_string( ls_info-source )
                p_test         = myname
                p_line         = 1
                p_column       = 1
                p_code         = '0001' ).

      CATCH zcx_pe_atc_not_relevant.
        RETURN.
    ENDTRY.


*-- 2) DCL is mandatory
    TRY.
        check_cds_dcl( its_annotations    = lts_annotations
                       its_source_objects = lts_source_objects
                       iv_dcl             = lv_dcl
                       is_info            = ls_info ).

      CATCH zcx_pe_atc_error.
        inform( p_sub_obj_name = mv_object_name
                p_kind         = c_error
                p_checksum_1   = zcl_pe_atc_aoc_super=>generate_checksum_from_string( ls_info-source )
                p_test         = myname
                p_line         = 1
                p_column       = 1
                p_code         = '0002' ).

      CATCH zcx_pe_atc_not_relevant.
        RETURN.

    ENDTRY.


*-- 3) Other guidelines (REGEX search)
    TRY.
        check_source_code_with_regex( iv_source_code = ls_info-source ).

      CATCH zcx_pe_atc_error INTO DATA(lo_error_regex).
        inform( p_sub_obj_name = mv_object_name
                p_kind         = lo_error_regex->if_t100_dyn_msg~msgty
                p_checksum_1   = zcl_pe_atc_aoc_super=>generate_checksum_from_string( ls_info-source )
                p_test         = myname
                p_line         = 1
                p_column       = 1
                p_code         = CONV #( lo_error_regex->if_t100_message~t100key-msgno ) ).
      CATCH zcx_pe_atc_not_relevant.
        RETURN.
    ENDTRY.

  ENDMETHOD.


  METHOD get_cds_data.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 07.2023    | 23353: Creation                          *
*              |            | DS4K958348                               *
*----------------------------------------------------------------------*
* CANOCAR      | 11.2023    | 26678: Error: DCL not using this entity  *
*              |            | DS4K970086                               *
************************************************************************

    DATA: lv_msg TYPE string ##NEEDED.

    TEST-SEAM get_cds_data.
    END-TEST-SEAM.

    IF mv_object_type <> 'DDLS'.
      RETURN.
    ENDIF.

    CLEAR: ets_annotations,
           es_info,
           ev_dcl,
           ets_source_objects.
    CALL FUNCTION 'ZPE_FM_GET_DDL_SOURCE' DESTINATION mv_destination
      EXPORTING
        iv_object_name        = mv_object_name
      IMPORTING
        et_annotations        = ets_annotations
        es_ddl_source         = es_info
        ev_dcl                = ev_dcl
        et_source_objects     = ets_source_objects
      EXCEPTIONS
        not_found             = 1
        not_authorized        = 2
        communication_failure = 3
        system_failure        = 4
        OTHERS                = 5.

    IF sy-subrc = 1.
      RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
    ELSEIF sy-subrc = 2.
      MESSAGE e012(zpe_atc) WITH 'ZPE_FM_GET_DDL_SOURCE' mv_destination INTO lv_msg.
      zcl_pe_atc_logger=>log_message( ).
      RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
    ELSEIF sy-subrc > 2.
      MESSAGE e017(zpe_atc) WITH 'ZPE_FM_GET_DDL_SOURCE' mv_destination INTO lv_msg.
      zcl_pe_atc_logger=>log_message( ).
      RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
    ENDIF.


    CLEAR es_tadir.
    CALL FUNCTION 'ZPE_FM_GET_TADIR' DESTINATION mv_destination
      EXPORTING
        iv_object_type        = mv_object_type
        iv_object_name        = mv_object_name
      IMPORTING
        es_tadir              = es_tadir
      EXCEPTIONS
        not_found             = 1
        not_authorized        = 2
        communication_failure = 3
        system_failure        = 4
        OTHERS                = 5.

    IF sy-subrc <> 0.
      MESSAGE e011(zpe_atc) WITH 'ZPE_FM_GET_TADIR' INTO lv_msg.
      zcl_pe_atc_logger=>log_message( ).
      RAISE EXCEPTION NEW zcx_pe_atc_not_relevant( ).
    ENDIF.

  ENDMETHOD.


  METHOD check_cds_ddic_views.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 07.2023    | 23353: Creation                          *
*              |            | DS4K958348                               *
************************************************************************


*   Only relevant for CDS
    IF mv_object_type <> 'DDLS'.
      RETURN.
    ENDIF.

*   CDS created from ADT only
    IF is_info-source_origin <> 0.
      RETURN.
    ENDIF.

*   Exception captured in the development guidelines
*   CI-DS for IBP can only consumed DDIC views
    IF is_tadir-devclass = 'Z_IBP_FPS'.
      RETURN.
    ENDIF.

*   CDS DDIC view not allowed
    IF is_info-source_type = if_xco_ddef_constants=>co_type-view.
      RAISE EXCEPTION NEW zcx_pe_atc_error( ).
    ENDIF.

  ENDMETHOD.


  METHOD if_ci_test~display_documentation.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 07.2023    | 23353: Creation                          *
*              |            | DS4K958348                               *
************************************************************************

    zcl_pe_atc_aoc_super=>display_documentation( ).

  ENDMETHOD.


  METHOD check_cds_dcl.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 07.2023    | 23353: Creation                          *
*              |            | DS4K958348                               *
*----------------------------------------------------------------------*
* CANOCAR      | 11.2023    | 26678: Skip for custom entities          *
*              |            | DS4K970086                               *
************************************************************************

*   Only relevant for CDS
    IF mv_object_type <> 'DDLS'.
      RETURN.
    ENDIF.

*   Some CDS Types only
    IF    is_info-source_type = if_xco_ddef_constants=>co_type-extend
       OR is_info-source_type = if_xco_ddef_constants=>co_type-extend_version_2
       OR is_info-source_type = if_xco_ddef_constants=>co_type-abstract_entity
       OR is_info-source_type = if_xco_ddef_constants=>co_type-custom_entity.
      RETURN.
    ENDIF.

*   With #CHECK, DCL must exist
    IF line_exists( its_annotations[ name = 'ACCESSCONTROL.AUTHORIZATIONCHECK' value = '#CHECK' ] ).
      IF iv_dcl = abap_false.
        RAISE EXCEPTION NEW zcx_pe_atc_error( ).
      ELSE.
        DATA(ls_dcl) = get_dcl_data( mv_object_name ).
        IF find( val = ls_dcl-source pcre = '[WHERE|INHERIT]' case = abap_false ) <= 0.
          RAISE EXCEPTION NEW zcx_pe_atc_error( ).  " Full access control
        ELSE.
          RETURN.   " Ok
        ENDIF.
      ENDIF.
    ENDIF.

*   With e.g. #NOT_REQUIRED, DCL required if access to CDS Views or Tables below must be protected
    IF line_exists( its_source_objects[ auth_relevant = abap_true ] ). "#EC CI_SORTSEQ
      RAISE EXCEPTION NEW zcx_pe_atc_error( ).
    ENDIF.

  ENDMETHOD.


  METHOD init.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 07.2023    | 23353: Creation                          *
*              |            | DS4K958348                               *
************************************************************************

    TEST-SEAM init.
    END-TEST-SEAM.

    mv_destination = zcl_pe_atc_aoc_super=>get_rfc_destination( ).
    mv_object_name = object_name.
    mv_object_type = object_type.


  ENDMETHOD.


  METHOD get_dcl_data.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 07.2023    | 23353: Creation                          *
*              |            | DS4K958348                               *
************************************************************************

    TEST-SEAM get_dcl.
    END-TEST-SEAM.

    CALL FUNCTION 'ZPE_FM_GET_DCL' DESTINATION mv_destination
      EXPORTING
        iv_object_name        = iv_name
      IMPORTING
        es_info               = rs_info
      EXCEPTIONS
        not_found             = 1
        not_authorized        = 2
        communication_failure = 3
        system_failure        = 4
        OTHERS                = 5.

    IF sy-subrc > 1.
      MESSAGE e011(zpe_atc) WITH 'ZPE_FM_GET_DCL' INTO DATA(lv_msg) ##NEEDED.
      zcl_pe_atc_logger=>log_message( ).
      RAISE EXCEPTION NEW zcx_pe_atc_not_relevant( ).
    ENDIF.

  ENDMETHOD.


  METHOD get_checks.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 07.2023    | 23353: Creation                          *
*              |            | DS4K958348                               *
************************************************************************

    TRY.
        zcl_pe_hm_complex=>get_table( EXPORTING iv_id    = '024F85009E261EEE8CD3E507266340D2'
                                      IMPORTING et_table = mt_checks ).
      CATCH zcx_pe_hm.
        RETURN.
    ENDTRY.
    LOOP AT mt_checks ASSIGNING FIELD-SYMBOL(<ls_check>).
      INSERT VALUE #( test = myname code = <ls_check>-message_number kind = <ls_check>-message_type text = <ls_check>-message_text ) INTO TABLE scimessages.
    ENDLOOP.

  ENDMETHOD.


  METHOD check_source_code_with_regex.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 07.2023    | 23353: Creation                          *
*              |            | DS4K958348                               *
************************************************************************

    LOOP AT mt_checks ASSIGNING FIELD-SYMBOL(<ls_check>). "#EC CI_NESTED
      TRY.
          FIND PCRE <ls_check>-regex IN iv_source_code IGNORING CASE.
          IF sy-subrc = 0.
            RAISE EXCEPTION TYPE zcx_pe_atc_error MESSAGE ID 'ZPE_ATC' TYPE <ls_check>-message_type NUMBER <ls_check>-message_number.
          ENDIF.
        CATCH cx_sy_regex_too_complex.
          CONTINUE.
      ENDTRY.
    ENDLOOP.

  ENDMETHOD.
ENDCLASS.