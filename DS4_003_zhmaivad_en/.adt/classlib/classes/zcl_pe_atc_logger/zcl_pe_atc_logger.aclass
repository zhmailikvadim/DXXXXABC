class ZCL_PE_ATC_LOGGER definition
  public
  final
  create public .

public section.

  class-methods LOG_MESSAGE
    importing
      !IV_EXTERNAL_ID type BALNREXT optional
      !IO_EXCEPTION type ref to CX_ROOT optional .
  PROTECTED SECTION.
  PRIVATE SECTION.

    CONSTANTS: BEGIN OF mc_s_log,
                 object    TYPE balobj_d VALUE 'ZPE',
                 subobject TYPE balsubobj VALUE 'ATC',
               END OF mc_s_log.

ENDCLASS.



CLASS ZCL_PE_ATC_LOGGER IMPLEMENTATION.


  METHOD log_message.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 30.01.2022 | 9784      : ATC Development              *
*              |            | DS4K913083                               *
*----------------------------------------------------------------------*
* CANOCAR      | 12.08.2022 | 12913     : COMMIT to persist logs       *
*              |            | DS4K926986                               *
*----------------------------------------------------------------------*
* CANOCAR      | 02.11.2022 | 14981: Message from exception            *
*              |            | DS4K934555                               *
************************************************************************

    DATA(lv_external_id) = iv_external_id.
    IF lv_external_id IS INITIAL.
      GET TIME STAMP FIELD DATA(lv_timestamp).
      lv_external_id = |{ lv_timestamp ALIGN = LEFT }|.
    ENDIF.

    TRY.
        DATA(lif_log)        = cl_bali_log=>create( ).
        DATA(lif_log_header) = cl_bali_header_setter=>create( object     = mc_s_log-object
                                                             subobject   = mc_s_log-subobject
                                                             external_id = lv_external_id ).
        lif_log->set_header( lif_log_header ).

        IF io_exception IS NOT INITIAL.
          lif_log->add_item( cl_bali_exception_setter=>create( severity   = if_bali_constants=>c_severity_error
                                                               exception  = io_exception ) ).
        ELSE.
          lif_log->add_item( cl_bali_message_setter=>create_from_sy( ) ).
        ENDIF.
        cl_bali_log_db=>get_instance( )->save_log( log = lif_log ).
        COMMIT WORK.

      CATCH cx_bali_runtime.
        RETURN.
    ENDTRY.



  ENDMETHOD.
ENDCLASS.