CLASS lcl_data_provider DEFINITION
                        CREATE PUBLIC.

  PUBLIC SECTION.

    METHODS get_object_type_vm IMPORTING iv_object_type        TYPE trobjtype
                               RETURNING VALUE(rv_object_type) TYPE trobjtype
                               RAISING   zcx_pe_atc.

    METHODS check_object_creation IMPORTING iv_object_type TYPE trobjtype
                                            iv_object_name TYPE sobj_name
                                            iv_destination TYPE rfcdest
                                  RAISING   zcx_pe_atc.

    METHODS get_table_category IMPORTING iv_object_name TYPE sobj_name
                                         iv_destination TYPE rfcdest
                               EXPORTING ev_tab_class   TYPE dd02l-tabclass
                               RAISING   zcx_pe_atc.

  PROTECTED SECTION.

  PRIVATE SECTION.

ENDCLASS.

CLASS lcl_data_provider IMPLEMENTATION.

  METHOD get_object_type_vm.

    TRY.
        DATA(lt_mapping) = zcl_pe_hm_basic=>get_table( '16' ).
        READ TABLE lt_mapping WITH KEY field1 = iv_object_type ASSIGNING FIELD-SYMBOL(<ls_mapping>).
        IF sy-subrc = 0.
          rv_object_type = CONV #( <ls_mapping>-field2 ).
        ELSE.
          RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
        ENDIF.
      CATCH zcx_pe_hm.
        RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
    ENDTRY.

  ENDMETHOD.

  METHOD check_object_creation.

    DATA: lt_version_list TYPE STANDARD TABLE OF vrsd,
          lt_versno_list  TYPE STANDARD TABLE OF vrsn,
          lv_object_name  TYPE versobjnam.


*   Get object history
    IF lv_object_name IS INITIAL.
      lv_object_name = CONV versobjnam( iv_object_name ).
    ENDIF.

    CALL FUNCTION 'SVRS_GET_VERSION_DIRECTORY_46'
      EXPORTING
        destination            = iv_destination
        objname                = lv_object_name
        objtype                = iv_object_type
      TABLES
        lversno_list           = lt_versno_list
        version_list           = lt_version_list
      EXCEPTIONS
        no_entry               = 1
        communication_failure_ = 2
        system_failure         = 3
        OTHERS                 = 4.
    IF sy-subrc <> 0 OR lt_version_list IS INITIAL .
      RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
    ENDIF.

    DELETE lt_version_list WHERE korrnum IS INITIAL.
    IF lt_version_list IS NOT INITIAL AND lines( lt_version_list ) NE 1.
      RAISE EXCEPTION TYPE zcx_pe_atc_not_relevant.
    ENDIF.

  ENDMETHOD.


  METHOD get_table_category.

    DATA: ls_dd02v TYPE dd02v.

    CLEAR ev_tab_class.
    CALL FUNCTION 'DD_TABL_GET' DESTINATION iv_destination
      EXPORTING
        tabl_name             = CONV dd02l-tabname( iv_object_name )
      IMPORTING
        dd02v_wa_a            = ls_dd02v
      EXCEPTIONS
        access_failure        = 1
        communication_failure = 2
        system_failure        = 3
        OTHERS                = 4.
    IF sy-subrc <> 0.
      RAISE EXCEPTION TYPE zcx_pe_atc.
    ELSE.
      ev_tab_class = ls_dd02v-tabclass.
    ENDIF.

  ENDMETHOD.


ENDCLASS.