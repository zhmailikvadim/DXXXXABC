CLASS zcl_pe_hm_basic DEFINITION
  PUBLIC
  CREATE PRIVATE
  INHERITING FROM zcl_pe_hm.

  PUBLIC SECTION.

    INTERFACES if_amdp_marker_hdb.

    CONSTANTS: gc_class_name TYPE seoclsname VALUE 'ZCL_PE_HM_BASIC',
               gc_tool       TYPE zpe_hm_tool VALUE icon_view_table,
               gc_type       TYPE zpe_hm_type VALUE '1'.

    CLASS-METHODS get_value
      IMPORTING VALUE(iv_id)       TYPE zpe_hm_id
                VALUE(iv_sequence) TYPE zpe_hm_sequence OPTIONAL
      RETURNING VALUE(rv_value)    TYPE zpe_hm_field
      RAISING   zcx_pe_hm .

    CLASS-METHODS get_range
      IMPORTING VALUE(iv_id)       TYPE zpe_hm_id
                VALUE(iv_sequence) TYPE zpe_hm_sequence OPTIONAL
      RETURNING VALUE(rt_range)    TYPE zpe_tt_hm_range
      RAISING   zcx_pe_hm .

    CLASS-METHODS get_table
      IMPORTING VALUE(iv_id)    TYPE zpe_hm_id
      RETURNING VALUE(rt_table) TYPE zpe_tt_hm_table
      RAISING   zcx_pe_hm .

    CLASS-METHODS search
      IMPORTING VALUE(iv_filter_ids)      TYPE string
                VALUE(iv_filter_e070)     TYPE string
                VALUE(iv_filter_wi)       TYPE string
                VALUE(iv_filter_ids_used) TYPE string
                VALUE(iv_filter_mdv)      TYPE string
                VALUE(iv_type)            TYPE zpe_hm_type
                VALUE(iv_cust_object)     TYPE string
                VALUE(iv_in_use_yes)      TYPE icon_d
                VALUE(iv_in_use_no)       TYPE icon_d
                VALUE(iv_active_yes)      TYPE icon_d
                VALUE(iv_active_no)       TYPE icon_d
                VALUE(iv_type_in)         TYPE icon_d
                VALUE(iv_type_out)        TYPE icon_d
                VALUE(iv_client)          TYPE mandt
      EXPORTING VALUE(et_main)            TYPE zpe_tt_hm_output_main
                VALUE(et_trs)             TYPE zpe_tt_hm_output_trs
                VALUE(et_cns)             TYPE zpe_tt_hm_output_cns
                VALUE(et_metadata)        TYPE zpe_tt_hm_output_metadata
      RAISING   cx_amdp_execution_failed.



  PROTECTED SECTION.

  PRIVATE SECTION.

ENDCLASS.



CLASS zcl_pe_hm_basic IMPLEMENTATION.


  METHOD search BY DATABASE PROCEDURE FOR HDB LANGUAGE SQLSCRIPT USING zpe_t_hm_h
                                                                       zpe_t_hm_d
                                                                       e070
                                                                       e07t
                                                                       e071k
                                                                       dd04t.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 14.02.2022 | 9407      : Hardcode Manager             *
*              |            | DS4K900411                               *
*----------------------------------------------------------------------*
* CANOCAR      | 25.03.2022 | 10527     : Table logging                *
*              |            | DS4K916071                               *
*----------------------------------------------------------------------*
* CANOCAR      | 22.06.2022 | 11751: Feature pack 22-2-6               *
*              |            | DS4K921477                               *
*----------------------------------------------------------------------*
* CANOCAR      | 22.06.2022 | 11930: Feature pack 22-2-6 def1          *
*              |            | DS4K923007                               *
*----------------------------------------------------------------------*
* CANOCAR      | 14.11.2022 | 15197: Return HC with only header        *
*              |            | DS4K935222                               *
*----------------------------------------------------------------------*
* CANOCAR      | 10.02.2023 | 17810: JIRA Links                        *
*              |            | DS4K943375                               *
*----------------------------------------------------------------------*
* CANOCAR      | 22.02.2023 | 18318: Where used buffer                 *
*              |            | DS4K944636                               *
*----------------------------------------------------------------------*
* CANOCAR      | 06.11.2023 | 26417: CHARM Integration                 *
*              |            | DS4K968701                               *
************************************************************************


*   1. TRs by Change Number
    lt_e070 = SELECT e070.trkorr, e070.trfunction, e07t.as4text
                from e070 as e070 inner join e07t on e070.trkorr = e07t.trkorr
               where e07t.langu      = session_context('LOCALE_SAP') AND
                    e070.trfunction IN ( 'W','K','T' );
    lt_trs_by_cn = apply_filter (:lt_e070, :iv_filter_e070);


*   2. TRs with Basic HM entries
    lt_e071k            = apply_filter (e071k, :iv_cust_object);
    lt_trs_and_tasks_hm = SELECT DISTINCT e071k.trkorr,
                                          e071k.tabkey,
                                          NULLIF( e070.strkorr, '') as strkorr,
                                          e071k.objname
                           from :lt_e071k as e071k inner join e070 on e071k.trkorr = e070.trkorr;


    lt_trs_by_hm = select coalesce( strkorr, trkorr ) as trkorr, tabkey
                    FROM :lt_trs_and_tasks_hm;


*   3. Combine 1 & 2
    lt_trs_hm  = SELECT hm.trkorr, hm.tabkey, cn.trfunction, cn.as4text from :lt_trs_by_hm as hm inner join :lt_trs_by_cn as cn on hm.trkorr = cn.trkorr;


*   4. Main data
    lt_zpe_t_hm_h = apply_filter (zpe_t_hm_h, :iv_filter_ids);
    lt_zpe_t_hm_d = apply_filter (zpe_t_hm_d, :iv_filter_mdv);

*   Join previous results and add IDs without data (if there is no search by metadata)
    lt_zpe_t_hm  = SELECT h.*, IFNULL( d.sequence, '' ) as sequence, d.field1, d.field2, d.field3, d.field4, d.field5
                     FROM :lt_zpe_t_hm_h as h INNER JOIN :lt_zpe_t_hm_d as d ON h.id     = d.id    AND
                                                                                h.mandt  = d.mandt
                    UNION

                    SELECT *, '' as sequence, '' as field1, '' as field2, '' as field3, '' as field4, '' as field5
                     FROM :lt_zpe_t_hm_h
                    WHERE :iv_filter_mdv = '' AND id NOT IN ( SELECT id FROM zpe_t_hm_d )

                    ORDER BY id, sequence;

    lt_hm_key    = SELECT id, sequence, CONCAT( CONCAT( :iv_client, RPAD(id, 10) ),  sequence ) as tabkey FROM :lt_zpe_t_hm;


*   5. Transport requests
    lt_transport_requests = SELECT DISTINCT key.id, tr.trkorr as transport_request, tr.trfunction as type,
                                            SUBSTRING(LTRIM( SUBSTR_AFTER(SUBSTR_REGEXPR('(CRM_|FB_|CH_)\d+' IN tr.as4text),'_'),'0' ),1,10) as work_item,
                                            tr.as4text as description
                              FROM :lt_hm_key as key INNER JOIN :lt_trs_hm as tr ON key.tabkey = tr.tabkey
                             order by id, transport_request, work_item;
    lt_transport_requests = APPLY_FILTER (:lt_transport_requests, :iv_filter_wi);


*   6. Table Used and not used
    lt_hm_used  = apply_filter ( :lt_zpe_t_hm_h, :iv_filter_ids_used );
    lt_hm       = SELECT :iv_type as type, hm.id, hm.description,
                         CASE WHEN IFNULL( used.description, 'X' ) = 'X' THEN :iv_in_use_no
                            ELSE :iv_in_use_yes
                         END AS in_use,
                         hm.created_on, hm.created_at, hm.created_by, hm.changed_on, hm.changed_at, hm.changed_by
                    FROM :lt_zpe_t_hm_h AS hm LEFT JOIN :lt_hm_used as used ON hm.id = used.id;

*   7. Change numbers
    lt_cns  = SELECT DISTINCT id, work_item, '' as change_number, '' AS change_status FROM :lt_transport_requests ORDER BY id;


*   8. Metadata
    lt_metadata = SELECT DISTINCT id, :iv_type_out as type, metadata1 as metadata FROM :lt_zpe_t_hm_h WHERE metadata1 <> ''
                    UNION ALL
                  SELECT DISTINCT id, :iv_type_out as type, metadata2 as metadata FROM :lt_zpe_t_hm_h WHERE metadata2 <> ''
                    UNION ALL
                  SELECT DISTINCT id, :iv_type_out as type, metadata3 as metadata FROM :lt_zpe_t_hm_h WHERE metadata3 <> ''
                    UNION ALL
                  SELECT DISTINCT id, :iv_type_out as type, metadata4 as metadata FROM :lt_zpe_t_hm_h WHERE metadata4 <> ''
                    UNION ALL
                  SELECT DISTINCT id, :iv_type_out as type, metadata5 as metadata FROM :lt_zpe_t_hm_h WHERE metadata5 <> ''
                  ORDER BY id;


*   9. Output
    et_trs  = SELECT id, transport_request, type, description FROM :lt_transport_requests ORDER BY id;
    et_cns  = SELECT DISTINCT * FROM :lt_cns;
    et_main = SELECT key.type, key.id, key.description, key.in_use, :iv_active_yes as active,
                     key.created_on, key.created_at, key.created_by, key.changed_on, key.changed_at, key.changed_by
                from :lt_hm as key
               order by id;

    et_metadata = SELECT md.id, md.type, md.metadata, txt.scrtext_m as description
                    FROM :lt_metadata AS md LEFT JOIN dd04t AS txt ON md.metadata  = txt.rollname AND
                                                                      txt.as4local = 'A'          AND
                                                                      txt.as4vers  = '0000'       AND
                                                                      txt.ddlanguage = session_context('LOCALE_SAP');


*  10. Cross filtering
   lt_cf_cns = SELECT distinct id FROM :et_cns;
   lt_cf_trs = SELECT distinct id FROM :et_trs;
   lt_cf_met = SELECT distinct id FROM :et_metadata;

   et_trs = SELECT trs.id, trs.transport_request, trs.type, trs.description
             FROM :et_trs AS trs INNER JOIN :lt_cf_cns AS cns ON trs.id = cns.id
                                 INNER JOIN :lt_cf_met AS met ON trs.id = met.id
                                 INNER JOIN :et_main   AS mai ON trs.id = mai.id;

   et_cns = SELECT cns.id, cns.work_item, cns.change_number, cns.change_status
             FROM :et_cns AS cns INNER JOIN :lt_cf_trs AS trs ON cns.id = trs.id
                                 INNER JOIN :lt_cf_met AS met ON cns.id = met.id
                                 INNER JOIN :et_main   AS mai ON cns.id = mai.id;

   et_main = SELECT mai.type, mai.id, mai.description, mai.in_use, mai.active,
                    mai.created_on, mai.created_at, mai.created_by, mai.changed_on, mai.changed_at, mai.changed_by
              FROM :et_main AS mai INNER JOIN :lt_cf_trs AS trs ON mai.id = trs.id
                                   INNER JOIN :lt_cf_met AS met ON mai.id = met.id
                                   INNER JOIN :lt_cf_cns AS cns ON mai.id = cns.id;

   et_metadata = SELECT met.id, met.type, met.metadata, met.description
                   FROM :et_metadata AS met INNER JOIN :lt_cf_trs AS trs ON met.id = trs.id
                                            INNER JOIN :et_main   AS mai ON met.id = mai.id
                                            INNER JOIN :lt_cf_cns AS cns ON met.id = cns.id;

  ENDMETHOD.


  METHOD get_table.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 14.02.2022 | 9407      : Hardcode Manager             *
*              |            | DS4K900411                               *
*----------------------------------------------------------------------*
* CANOCAR      | 22.06.2022 | 11751: Feature pack 22-2-6               *
*              |            | DS4K921477                               *
*----------------------------------------------------------------------*

    DATA(lv_id) = |{ iv_id ALPHA = IN }|.

    SELECT id, sequence, field1, field2, field3, field4, field5
      INTO TABLE @rt_table
      FROM zpe_t_hm_d
     WHERE id = @lv_id.
    IF sy-subrc NE 0.
      RAISE EXCEPTION TYPE zcx_pe_hm MESSAGE e011(zpe_hm) WITH lv_id.
    ELSE.
      SORT rt_table BY id sequence.
    ENDIF.

  ENDMETHOD.


  METHOD get_value.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 14.02.2022 | 9407      : Hardcode Manager             *
*              |            | DS4K900411                               *
*----------------------------------------------------------------------*
* CANOCAR      | 22.06.2022 | 11751: Feature pack 22-2-6               *
*              |            | DS4K921477                               *
*----------------------------------------------------------------------*

    DATA(lv_id) = |{ iv_id ALPHA = IN }|.

    IF iv_sequence IS INITIAL.
      SELECT field1 UP TO 1 ROWS INTO rv_value FROM zpe_t_hm_d WHERE id = lv_id ORDER BY id sequence.
        EXIT.
      ENDSELECT.
    ELSE.
      SELECT SINGLE field1 INTO rv_value FROM zpe_t_hm_d WHERE id = lv_id AND sequence = iv_sequence.
    ENDIF.

    IF sy-subrc NE 0.
      RAISE EXCEPTION TYPE zcx_pe_hm MESSAGE e011(zpe_hm) WITH lv_id.
    ENDIF.

  ENDMETHOD.


  METHOD get_range.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 14.02.2022 | 9407      : Hardcode Manager             *
*              |            | DS4K900411                               *
*----------------------------------------------------------------------*
* CANOCAR      | 22.06.2022 | 11751: Feature pack 22-2-6               *
*              |            | DS4K921477                               *
*----------------------------------------------------------------------*

    DATA: lt_r_sequence TYPE RANGE OF zpe_hm_sequence.

    DATA(lv_id) = |{ iv_id ALPHA = IN }|.

    IF iv_sequence IS NOT INITIAL.
      APPEND INITIAL LINE TO lt_r_sequence ASSIGNING FIELD-SYMBOL(<ls_sequence>).
      <ls_sequence>-sign    = 'I'.
      <ls_sequence>-option  = 'EQ'.
      <ls_sequence>-low     = iv_sequence.
    ENDIF.

    SELECT range_sign   AS sign,
           range_option AS option,
           field1       AS low,
           field2       AS high
      INTO TABLE @rt_range
      FROM zpe_t_hm_d
     WHERE id = @lv_id AND sequence IN @lt_r_sequence.
    IF sy-subrc NE 0.
      RAISE EXCEPTION TYPE zcx_pe_hm MESSAGE e011(zpe_hm) WITH lv_id.
    ENDIF.

  ENDMETHOD.
ENDCLASS.