CLASS zcl_pe_jira_connector DEFINITION
  PUBLIC
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES zif_pe_change_manager.

    TYPES: BEGIN OF gtyp_s_user_story,
             key     TYPE string,
             url     TYPE string,
             summary TYPE string,
             status  TYPE string,
             wi      TYPE string,
             wi_url  TYPE string,
             team    TYPE string,
           END OF gtyp_s_user_story.
    TYPES: gtyp_t_user_stories TYPE STANDARD TABLE OF gtyp_s_user_story WITH EMPTY KEY.

    METHODS constructor IMPORTING iv_key TYPE string OPTIONAL
                        RAISING   zcx_pe_jira_connector.

    METHODS check_project_access IMPORTING iv_project TYPE  zpe_project
                                 RAISING   zcx_pe_jira_connector.


    CLASS-METHODS log_message IMPORTING io_exception TYPE REF TO zcx_pe_jira_connector OPTIONAL.

    "! Generic search
    "! @parameter it_work_items | Focused build work item numbers
    "! @parameter it_projects | JIRA Projects
    "! @parameter it_issue_keys | Issue keys
    "! @parameter iv_issue_fields | Fields to read from Jira ( by default summary,status,customfield_15200)
    METHODS search_issues IMPORTING it_work_items          TYPE zpe_tt_work_items OPTIONAL
                                    it_projects            TYPE zpe_tt_projects
                                    it_issue_keys          TYPE zpe_tt_issue_keys OPTIONAL
                                    iv_issue_fields        TYPE string OPTIONAL
                          RETURNING VALUE(rt_user_stories) TYPE gtyp_t_user_stories
                          RAISING   zcx_pe_jira_connector.


    METHODS search_us_by_object IMPORTING iv_object              TYPE sobj_name
                                          iv_project             TYPE zpe_project
                                          iv_transport           TYPE trkorr OPTIONAL
                                RETURNING VALUE(rt_user_stories) TYPE gtyp_t_user_stories
                                RAISING   zcx_pe_jira_connector.

  PROTECTED SECTION.

  PRIVATE SECTION.

    CONSTANTS: BEGIN OF mc_s_log,
                 object    TYPE balobj_d VALUE 'ZPE',
                 subobject TYPE balsubobj VALUE 'JIRA',
               END OF mc_s_log.

    DATA: mif_http_client TYPE REF TO if_http_client,
          mv_host         TYPE string,
          mv_key          TYPE string.


    METHODS get_host IMPORTING iv_rfc_destination TYPE rfcdest
                     RETURNING VALUE(rv_host)     TYPE rfchost_ext
                     RAISING   zcx_pe_jira_connector.

    METHODS get_http_client IMPORTING iv_rfc_destination     TYPE rfcdest
                            RETURNING VALUE(rif_http_client) TYPE REF TO if_http_client
                            RAISING   zcx_pe_jira_connector.

    METHODS get_rfc_destination RETURNING VALUE(rv_rfc_destination) TYPE rfcdest
                                RAISING   zcx_pe_jira_connector.


ENDCLASS.



CLASS ZCL_PE_JIRA_CONNECTOR IMPLEMENTATION.


  METHOD constructor.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 17.10.2022 | 14170     : Jira connector               *
*              |            | DS4K932682                               *
*----------------------------------------------------------------------*
* CANOCAR      | 02.11.2022 | 14981: Bugfixing, exception handling     *
*              |            | DS4K934555                               *
*----------------------------------------------------------------------*
* CANOCAR      | 06.11.2023 | 26417: CHARM Integration                 *
*              |            | DS4K968701                               *
************************************************************************
    TRY.
        DATA(lv_rfc_destination) = get_rfc_destination( ).
        mif_http_client          = get_http_client( lv_rfc_destination ).
        mv_host                  = get_host( lv_rfc_destination ).
        mv_key                   = iv_key.

      CATCH zcx_pe_jira_connector INTO DATA(lo_exception).
        log_message( lo_exception ).
        RAISE EXCEPTION lo_exception.
    ENDTRY.

  ENDMETHOD.


  METHOD get_rfc_destination.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 17.10.2022 | 14170     : Jira connector               *
*              |            | DS4K932682                               *
*----------------------------------------------------------------------*
    TEST-SEAM get_rfc_destination.

      TRY.
          zcl_pe_hm_complex=>get_value( EXPORTING iv_id           = '024F85009E261EED92EF2666C95460D2'
                                                  is_filter       = sy-sysid
                                                  iv_mapping_type = zcl_pe_hm=>gc_s_mapping_type-data_elements
                                        IMPORTING ev_value        = rv_rfc_destination ).
        CATCH zcx_pe_hm.
          RAISE EXCEPTION TYPE zcx_pe_jira_connector MESSAGE e001(zpe_jira_connector).
      ENDTRY.

    END-TEST-SEAM.

  ENDMETHOD.


  METHOD get_host.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 17.10.2022 | 14170     : Jira connector               *
*              |            | DS4K932682                               *
*----------------------------------------------------------------------*
    CALL FUNCTION 'RFC_READ_HTTP_DESTINATION'
      EXPORTING
        destination             = iv_rfc_destination
      IMPORTING
        server                  = rv_host
      EXCEPTIONS
        authority_not_available = 1
        destination_not_exist   = 2
        information_failure     = 3
        internal_failure        = 4
        no_http_destination     = 5
        OTHERS                  = 6.

    IF sy-subrc = 0.
      rv_host = |https://{ rv_host }|.
    ELSE.
      RAISE EXCEPTION TYPE zcx_pe_jira_connector MESSAGE e002(zpe_jira_connector) WITH iv_rfc_destination.
    ENDIF.

  ENDMETHOD.


  METHOD get_http_client.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 17.10.2022 | 14170     : Jira connector               *
*              |            | DS4K932682                               *
*----------------------------------------------------------------------*

    cl_http_client=>create_by_destination( EXPORTING  destination              = iv_rfc_destination
                                           IMPORTING  client                   = rif_http_client
                                           EXCEPTIONS argument_not_found       = 1
                                                      destination_not_found    = 2
                                                      destination_no_authority = 3
                                                      plugin_not_active        = 4
                                                      internal_error           = 5
                                                      OTHERS                   = 6 ).
    CASE sy-subrc.
      WHEN '0'.
        RETURN.
      WHEN '2'.
        RAISE EXCEPTION TYPE zcx_pe_jira_connector MESSAGE e002(zpe_jira_connector) WITH iv_rfc_destination.
      WHEN '3'.
        RAISE EXCEPTION TYPE zcx_pe_jira_connector MESSAGE e003(zpe_jira_connector) WITH iv_rfc_destination.
      WHEN OTHERS.
        RAISE EXCEPTION TYPE zcx_pe_jira_connector MESSAGE e004(zpe_jira_connector) WITH iv_rfc_destination.
    ENDCASE.

  ENDMETHOD.


  METHOD log_message.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 17.10.2022 | 14170     : Jira connector               *
*              |            | DS4K932682                               *
*----------------------------------------------------------------------*
* CANOCAR      | 02.11.2022 | 14981: Bugfixing, exception handling     *
*              |            | DS4K934555                               *
************************************************************************

    GET TIME STAMP FIELD DATA(lv_timestamp).
    DATA(lv_external_id) = CONV balnrext( |{ lv_timestamp ALIGN = LEFT }| ).

    TRY.
        DATA(lif_log)        = cl_bali_log=>create( ).
        DATA(lif_log_header) = cl_bali_header_setter=>create( object      = mc_s_log-object
                                                              subobject   = mc_s_log-subobject
                                                              external_id = lv_external_id ).
        lif_log->set_header( lif_log_header ).
        IF io_exception IS INITIAL.
          lif_log->add_item( cl_bali_message_setter=>create_from_sy( ) ).
        ELSE.
          lif_log->add_item( cl_bali_message_setter=>create( severity    =  if_bali_constants=>c_severity_error
                                                             id          = io_exception->if_t100_message~t100key-msgid
                                                             number      = io_exception->if_t100_message~t100key-msgno
                                                             variable_1  = io_exception->if_t100_dyn_msg~msgv1
                                                             variable_2  = io_exception->if_t100_dyn_msg~msgv2
                                                             variable_3  = io_exception->if_t100_dyn_msg~msgv3
                                                             variable_4  = io_exception->if_t100_dyn_msg~msgv4 ) ).
        ENDIF.


        cl_bali_log_db=>get_instance( )->save_log( log = lif_log ).
        COMMIT WORK.

      CATCH cx_bali_runtime.
        RETURN.
    ENDTRY.

  ENDMETHOD.


  METHOD search_us_by_object.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 02.11.2022 | 14981: Creation                          *
*              |            | DS4K934555                               *
*----------------------------------------------------------------------*
* CANOCAR      | 18.01.2023 | 17080: Optional search by TR             *
*              |            | DS4K940925                               *
*----------------------------------------------------------------------*
* KHADDFAD     | 20.02.2024 | 29227: ATC Code Review - Wrong Open Defect*
*              |            | DS4K980322                               *
************************************************************************

    DATA: lv_jql          TYPE string,
          lif_rest_client TYPE REF TO if_rest_client.


*-- Set API path
    mif_http_client->request->set_header_field( name  = '~request_uri'
                                                value = '/rest/api/latest/search' ).

*-- Set selection fields
    mif_http_client->request->set_form_field( name  = 'fields'
                                              value = 'summary,status' ).

*-- Set query
    lv_jql = |project = { iv_project } |.
    lv_jql = lv_jql && |AND Custom-1 ~ "\\"{ iv_object }\\""|.
    IF iv_transport IS NOT INITIAL.
      lv_jql = lv_jql && |AND "Transport Request" ~ "{ iv_transport }"|.
    ENDIF.


    mif_http_client->request->set_form_field( name  = 'jql'
                                              value = lv_jql ).


*-- Call API
    lif_rest_client = NEW cl_rest_http_client( mif_http_client ).
    lif_rest_client->get( ).
    DATA(lv_status)   = lif_rest_client->get_status( ).
    DATA(lv_response) = lif_rest_client->get_response_entity( )->get_string_data( ).
    IF cl_rest_status_code=>is_error( lv_status ).
      mif_http_client->get_last_error( IMPORTING message = DATA(lv_message) ).
      RAISE EXCEPTION TYPE zcx_pe_jira_connector
        EXPORTING
          iv_http_status   = lv_status
          iv_error_message = lv_message
          iv_response      = lv_response.
    ENDIF.


*-- Map response
    DATA(lo_response_abap) = /ui2/cl_json=>generate( json = lv_response ).
    ASSIGN lo_response_abap->* TO FIELD-SYMBOL(<ls_response_abap>).

    /ui2/cl_json=>deserialize( EXPORTING json = lv_response
                                         pretty_name = /ui2/cl_json=>pretty_mode-camel_case
                                CHANGING data = <ls_response_abap> ).

    ASSIGN COMPONENT 'ISSUES' OF STRUCTURE <ls_response_abap> TO FIELD-SYMBOL(<lv_issues_ref>).
    IF sy-subrc NE 0.
      RAISE EXCEPTION TYPE zcx_pe_jira_connector MESSAGE e005(zpe_jira_connector) WITH 'ISSUES'.
    ENDIF.
    ASSIGN <lv_issues_ref>->* TO FIELD-SYMBOL(<lt_issues>).
    LOOP AT <lt_issues> ASSIGNING FIELD-SYMBOL(<lv_issue_ref>).
      ASSIGN <lv_issue_ref>->* TO FIELD-SYMBOL(<ls_issue>).
      ASSIGN COMPONENT 'FIELDS' OF STRUCTURE <ls_issue> TO FIELD-SYMBOL(<lv_fields_ref>).
      IF sy-subrc NE 0.
        RAISE EXCEPTION TYPE zcx_pe_jira_connector MESSAGE e005(zpe_jira_connector) WITH 'FIELDS'.
      ENDIF.
      ASSIGN <lv_fields_ref>->* TO FIELD-SYMBOL(<ls_fields>).
      ASSIGN COMPONENT 'STATUS' OF STRUCTURE <ls_fields> TO FIELD-SYMBOL(<lo_status_ref>).
      IF sy-subrc NE 0.
        RAISE EXCEPTION TYPE zcx_pe_jira_connector MESSAGE e005(zpe_jira_connector) WITH 'STATUS'.
      ENDIF.
      ASSIGN <lo_status_ref>->* TO FIELD-SYMBOL(<ls_status>).
      ASSIGN COMPONENT 'NAME' OF STRUCTURE <ls_status> TO FIELD-SYMBOL(<lv_status>).
      IF sy-subrc NE 0.
        RAISE EXCEPTION TYPE zcx_pe_jira_connector MESSAGE e005(zpe_jira_connector) WITH 'NAME'.
      ENDIF.
      ASSIGN COMPONENT 'SUMMARY' OF STRUCTURE <ls_fields> TO FIELD-SYMBOL(<lv_summary>).
      IF sy-subrc NE 0.
        RAISE EXCEPTION TYPE zcx_pe_jira_connector MESSAGE e005(zpe_jira_connector) WITH 'SUMMARY'.
      ENDIF.
      ASSIGN COMPONENT 'KEY' OF STRUCTURE <ls_issue> TO FIELD-SYMBOL(<lv_key>).
      IF sy-subrc NE 0.
        RAISE EXCEPTION TYPE zcx_pe_jira_connector MESSAGE e005(zpe_jira_connector) WITH 'KEY'.
      ENDIF.
      ASSIGN COMPONENT 'SELF' OF STRUCTURE <ls_issue> TO FIELD-SYMBOL(<lv_url>).
      IF sy-subrc NE 0.
        RAISE EXCEPTION TYPE zcx_pe_jira_connector MESSAGE e005(zpe_jira_connector) WITH 'SELF'.
      ENDIF.

      INSERT VALUE gtyp_s_user_story( key = <lv_key>->* status = <lv_status>->* summary = <lv_summary>->* url = <lv_url>->* ) INTO TABLE rt_user_stories.

    ENDLOOP.
    lif_rest_client->close( ).
  ENDMETHOD.


  METHOD check_project_access.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 02.11.2022 | 14981: Check read authorization          *
*              |            | DS4K934555                               *
************************************************************************

    DATA: lif_rest_client TYPE REF TO if_rest_client.


*-- Set API path
    mif_http_client->request->set_header_field( name  = '~request_uri'
                                                value = |/rest/api/latest/project/{ iv_project }| ).

*-- Call API
    lif_rest_client = NEW cl_rest_http_client( mif_http_client ).
    lif_rest_client->get( ).
    DATA(lv_status)   = lif_rest_client->get_status( ).
    DATA(lv_response) = lif_rest_client->get_response_entity( )->get_string_data( ).
    IF cl_rest_status_code=>is_error( lv_status ).
      mif_http_client->get_last_error( IMPORTING message = DATA(lv_message) ).
      RAISE EXCEPTION TYPE zcx_pe_jira_connector
        EXPORTING
          iv_http_status   = lv_status
          iv_error_message = lv_message
          iv_response      = lv_response.
    ENDIF.


  ENDMETHOD.


  METHOD search_issues.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 10.02.2023 | 17810: Generic search                    *
*              |            | DS4K943375                               *
*----------------------------------------------------------------------*
* CANOCAR      | 09.03.2023 | 18481: Multiproject activated            *
*              |            | DS4K945164                               *
*----------------------------------------------------------------------*
* CANOCAR      | 13.09.2023 | 24554: Bug fix                           *
*              |            | DS4K961739                               *
*----------------------------------------------------------------------*
* RIOSNAT      | 16.02.2024 | 29155: Bug fix - several WIs, empty team *
*              |            | DS4K980054                               *
************************************************************************

    DATA: lv_jql          TYPE string,
          lif_rest_client TYPE REF TO if_rest_client.

    DATA: lv_team TYPE gtyp_s_user_story-team.



*-- Set API path
    mif_http_client->request->set_header_field( name  = '~request_uri'
                                                value = '/rest/api/latest/search' ).

*-- Set selection fields
    IF iv_issue_fields IS INITIAL.
      mif_http_client->request->set_form_field( name  = 'fields'
                                                value = 'summary,status,customfield_15200' ).
    ELSE.
      mif_http_client->request->set_form_field( name  = 'fields'
                                                value = iv_issue_fields ).
    ENDIF.


*-- Set query
    LOOP AT it_projects ASSIGNING FIELD-SYMBOL(<lv_project>).
      TRY.
          NEW zcl_pe_jira_connector( )->check_project_access( <lv_project> ).
          IF lv_jql IS INITIAL.
            lv_jql = |( project = { <lv_project> } |.
          ELSE.
            lv_jql = lv_jql && |OR project = { <lv_project> } |.
          ENDIF.
        CATCH zcx_pe_jira_connector.
          CONTINUE.
      ENDTRY.
    ENDLOOP.
    lv_jql = lv_jql && | )|.

    IF it_work_items IS NOT INITIAL.
      LOOP AT it_work_items ASSIGNING FIELD-SYMBOL(<lv_work_item>).
        IF sy-tabix = 1.
          lv_jql = lv_jql && |AND ( "SAP Solution Manager ID" ~ "{ <lv_work_item> }"|.
        ELSE.
          lv_jql = lv_jql && |OR "SAP Solution Manager ID" ~ "{ <lv_work_item> }"|.
        ENDIF.
      ENDLOOP.
      lv_jql = lv_jql && | )|.
    ENDIF.

    IF it_issue_keys IS NOT INITIAL.
      LOOP AT it_issue_keys ASSIGNING FIELD-SYMBOL(<lv_issue_key>).
        IF sy-tabix = 1.
          lv_jql = lv_jql && |AND ( key = "{ <lv_issue_key> }"|.
        ELSE.
          lv_jql = lv_jql && |OR key = "{ <lv_issue_key> }"|.
        ENDIF.
      ENDLOOP.
      lv_jql = lv_jql && | )|.
    ENDIF.

    mif_http_client->request->set_form_field( name  = 'jql'
                                              value = lv_jql ).


*-- Call API
    lif_rest_client = NEW cl_rest_http_client( mif_http_client ).
    lif_rest_client->get( ).
    DATA(lv_status)   = lif_rest_client->get_status( ).
    DATA(lv_response) = lif_rest_client->get_response_entity( )->get_string_data( ).
    IF cl_rest_status_code=>is_error( lv_status ).
      mif_http_client->get_last_error( IMPORTING message = DATA(lv_message) ).
      RAISE EXCEPTION TYPE zcx_pe_jira_connector
        EXPORTING
          iv_http_status   = lv_status
          iv_error_message = lv_message
          iv_response      = lv_response.
    ENDIF.


*-- Map response
    DATA(lo_response_abap) = /ui2/cl_json=>generate( json = lv_response ).
    ASSIGN lo_response_abap->* TO FIELD-SYMBOL(<ls_response_abap>).

    /ui2/cl_json=>deserialize( EXPORTING json = lv_response
                                         pretty_name = /ui2/cl_json=>pretty_mode-camel_case
                                CHANGING data = <ls_response_abap> ).

    ASSIGN COMPONENT 'ISSUES' OF STRUCTURE <ls_response_abap> TO FIELD-SYMBOL(<lv_issues_ref>).
    IF sy-subrc NE 0.
      RAISE EXCEPTION TYPE zcx_pe_jira_connector MESSAGE e005(zpe_jira_connector) WITH 'ISSUES'.
    ENDIF.
    ASSIGN <lv_issues_ref>->* TO FIELD-SYMBOL(<lt_issues>).
    LOOP AT <lt_issues> ASSIGNING FIELD-SYMBOL(<lv_issue_ref>).
      ASSIGN <lv_issue_ref>->* TO FIELD-SYMBOL(<ls_issue>).
      ASSIGN COMPONENT 'FIELDS' OF STRUCTURE <ls_issue> TO FIELD-SYMBOL(<lv_fields_ref>).
      IF sy-subrc NE 0.
        RAISE EXCEPTION TYPE zcx_pe_jira_connector MESSAGE e005(zpe_jira_connector) WITH 'FIELDS'.
      ENDIF.
      ASSIGN <lv_fields_ref>->* TO FIELD-SYMBOL(<ls_fields>).
      ASSIGN COMPONENT 'STATUS' OF STRUCTURE <ls_fields> TO FIELD-SYMBOL(<lo_status_ref>).
      IF sy-subrc NE 0.
        RAISE EXCEPTION TYPE zcx_pe_jira_connector MESSAGE e005(zpe_jira_connector) WITH 'STATUS'.
      ENDIF.
      ASSIGN <lo_status_ref>->* TO FIELD-SYMBOL(<ls_status>).
      ASSIGN COMPONENT 'NAME' OF STRUCTURE <ls_status> TO FIELD-SYMBOL(<lv_status>).
      IF sy-subrc NE 0.
        RAISE EXCEPTION TYPE zcx_pe_jira_connector MESSAGE e005(zpe_jira_connector) WITH 'NAME'.
      ENDIF.
      ASSIGN COMPONENT 'SUMMARY' OF STRUCTURE <ls_fields> TO FIELD-SYMBOL(<lv_summary>).
      IF sy-subrc NE 0.
        RAISE EXCEPTION TYPE zcx_pe_jira_connector MESSAGE e005(zpe_jira_connector) WITH 'SUMMARY'.
      ENDIF.
      ASSIGN COMPONENT 'KEY' OF STRUCTURE <ls_issue> TO FIELD-SYMBOL(<lv_key>).
      IF sy-subrc NE 0.
        RAISE EXCEPTION TYPE zcx_pe_jira_connector MESSAGE e005(zpe_jira_connector) WITH 'KEY'.
      ENDIF.
      ASSIGN COMPONENT 'SELF' OF STRUCTURE <ls_issue> TO FIELD-SYMBOL(<lv_url>).
      IF sy-subrc NE 0.
        RAISE EXCEPTION TYPE zcx_pe_jira_connector MESSAGE e005(zpe_jira_connector) WITH 'SELF'.
      ENDIF.
      ASSIGN COMPONENT 'CUSTOMFIELD_15200' OF STRUCTURE <ls_fields> TO FIELD-SYMBOL(<lv_wi>).
      IF sy-subrc = 0 AND <lv_wi> IS ASSIGNED AND <lv_wi> IS BOUND.
        DATA(lv_wi)     = substring_before( val = substring_after( val = <lv_wi>->* sub = '[' ) sub = '|' ).
        DATA(lv_wi_url) = substring_before( val = substring_after( val = <lv_wi>->* sub = '|' ) sub = ']' ).
      ENDIF.

      CLEAR lv_team.
      ASSIGN COMPONENT 'CUSTOMFIELD_13506' OF STRUCTURE <ls_fields> TO FIELD-SYMBOL(<lo_team_ref>).
      IF sy-subrc = 0.
        ASSIGN <lo_team_ref>->* TO FIELD-SYMBOL(<ls_team>).
        IF sy-subrc = 0.
          ASSIGN COMPONENT 'VALUE' OF STRUCTURE <ls_team> TO FIELD-SYMBOL(<lv_team>).
          IF sy-subrc = 0.
            lv_team = <lv_team>->*.
          ENDIF.
        ENDIF.
      ENDIF.

      INSERT VALUE gtyp_s_user_story( key       = <lv_key>->*
                                      status    = <lv_status>->*
                                      summary   = <lv_summary>->*
                                      url       = <lv_url>->*
                                      wi        = lv_wi
                                      wi_url    = lv_wi_url
                                      team      = lv_team )
              INTO TABLE rt_user_stories.

    ENDLOOP.

    lif_rest_client->close( ).

  ENDMETHOD.


  METHOD zif_pe_change_manager~get_issue_url.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 06.11.2023 | 26417: CHARM Integration                 *
*              |            | DS4K968701                               *
************************************************************************
    rv_url = |{ mv_host }/browse/{ mv_key }|.
  ENDMETHOD.
ENDCLASS.