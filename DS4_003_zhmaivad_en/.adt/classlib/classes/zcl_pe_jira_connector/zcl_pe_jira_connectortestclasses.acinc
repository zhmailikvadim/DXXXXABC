CLASS ltc_search_us_by_wi DEFINITION FOR TESTING
  DURATION SHORT
  RISK LEVEL HARMLESS
  FINAL.

  PRIVATE SECTION.

    METHODS wrong_rfc_destination FOR TESTING.
    METHODS one_issue_one_project FOR TESTING.
    METHODS not_found FOR TESTING.
    METHODS multiple_work_items FOR TESTING.
    METHODS multiple_work_items_one_noteam FOR TESTING.

ENDCLASS.

CLASS ltc_check_project_access DEFINITION FOR TESTING
  DURATION SHORT
  RISK LEVEL HARMLESS
  FINAL.

  PRIVATE SECTION.

    METHODS access FOR TESTING.
    METHODS no_access FOR TESTING.
ENDCLASS.

CLASS ltc_check_defect DEFINITION FOR TESTING
  DURATION SHORT
  RISK LEVEL HARMLESS
  FINAL.

  PRIVATE SECTION.

    METHODS similar_name FOR TESTING.
ENDCLASS.

CLASS ltc_search_us_by_wi IMPLEMENTATION.

  METHOD wrong_rfc_destination.

    TRY.
        TEST-INJECTION get_rfc_destination.
          rv_rfc_destination = 'KK'.
        END-TEST-INJECTION.

        NEW zcl_pe_jira_connector( ).

      CATCH zcx_pe_jira_connector.
        cl_abap_unit_assert=>assert_true( abap_true ).
    ENDTRY.

  ENDMETHOD.


  METHOD one_issue_one_project.

    TRY.
        DATA(lo_jira_connector) = NEW zcl_pe_jira_connector( ).

        DATA(lt_work_items) = VALUE zpe_tt_work_items( ( '0000014170' ) ).
        DATA(lt_projects)   = VALUE zpe_tt_work_items( ( 'T4MTEMP' ) ).

        DATA(lt_us) = lo_jira_connector->search_issues( it_work_items = lt_work_items
                                                        it_projects   = lt_projects ).

        cl_abap_unit_assert=>assert_equals( act = lines( lt_us ) exp = 1 ).

      CATCH zcx_pe_jira_connector.
        RETURN.
    ENDTRY.

  ENDMETHOD.


  METHOD not_found.

    TRY.
        DATA(lo_jira_connector) = NEW zcl_pe_jira_connector( ).

        DATA(lt_work_items) = VALUE zpe_tt_work_items( ( 'KK' ) ).
        DATA(lt_projects)   = VALUE zpe_tt_work_items( ( 'T4MTEMP' ) ).

        DATA(lt_us) = lo_jira_connector->search_issues( it_work_items = lt_work_items
                                                        it_projects   = lt_projects ).

        cl_abap_unit_assert=>assert_initial( lt_us ).

      CATCH zcx_pe_jira_connector.
        RETURN.
    ENDTRY.

  ENDMETHOD.


  METHOD multiple_work_items.

    TRY.
        DATA(lo_jira_connector) = NEW zcl_pe_jira_connector( ).

        DATA(lt_work_items) = VALUE zpe_tt_work_items( ( '0000014170' ) ( '0000017810' ) ).
        DATA(lt_projects)   = VALUE zpe_tt_work_items( ( 'T4MTEMP' ) ).

        DATA(lt_us) = lo_jira_connector->search_issues( it_work_items = lt_work_items
                                                        it_projects   = lt_projects ).

        cl_abap_unit_assert=>assert_equals( act = lines( lt_us ) exp = 2 ).

      CATCH zcx_pe_jira_connector.
        RETURN.
    ENDTRY.

  ENDMETHOD.

  METHOD multiple_work_items_one_noteam.
    TRY.
        DATA(lo_jira_connector) = NEW zcl_pe_jira_connector( ).

        DATA(lt_work_items) = VALUE zpe_tt_work_items( ( '0000027325' ) ( '0000022942' ) ).
        DATA(lt_projects)   = VALUE zpe_tt_work_items( ( 'T4MTEMP' ) ).

        DATA(lt_us) = lo_jira_connector->search_issues( it_work_items = lt_work_items
                                                        it_projects   = lt_projects
                                                        iv_issue_fields   = 'summary,status,customfield_15200,customfield_13506' ).

        cl_abap_unit_assert=>assert_equals( act = lt_us[ wi = '0000022942' ]-team exp = '' ).

      CATCH zcx_pe_jira_connector.
        RETURN.
    ENDTRY.

  ENDMETHOD.

ENDCLASS.

CLASS ltc_check_project_access IMPLEMENTATION.

  METHOD access.

*-- Technical user has access to T4MTEMP
    TRY.
        NEW zcl_pe_jira_connector( )->check_project_access( 'T4MTEMP' ).
        cl_abap_unit_assert=>assert_true( abap_true ).
      CATCH zcx_pe_jira_connector.
        cl_abap_unit_assert=>assert_true( abap_false ).
    ENDTRY.

  ENDMETHOD.


  METHOD no_access.

*-- Technical user has no access to O2I
    TRY.
        NEW zcl_pe_jira_connector( )->check_project_access( 'O2I' ).
        cl_abap_unit_assert=>assert_true( abap_false ).
      CATCH zcx_pe_jira_connector.
        cl_abap_unit_assert=>assert_true( abap_true ).
    ENDTRY.

  ENDMETHOD.

ENDCLASS.

CLASS ltc_check_defect IMPLEMENTATION.
  METHOD similar_name.
    TRY.

        DATA(lo_jira_connector) = NEW zcl_pe_jira_connector( ).
* an object with a similar name ZCL_SP_FPC_FIELDS_CDET_V has an open defect

        DATA(lt_defects) = lo_jira_connector->search_us_by_object(
                                            iv_object = 'ZCL_SP_FPC_FIELDS_V'
                                            iv_project = 'SAPPE'
                                            iv_transport = 'DS4K967882' ).
        cl_abap_unit_assert=>assert_equals( act = lines( lt_defects ) exp = 0 ).

      CATCH zcx_pe_jira_connector.
        RETURN.
    ENDTRY.
  ENDMETHOD.
ENDCLASS.