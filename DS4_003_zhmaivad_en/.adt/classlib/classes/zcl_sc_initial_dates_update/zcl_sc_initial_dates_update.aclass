CLASS zcl_sc_initial_dates_update DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES if_badi_interface .
    INTERFACES zif_sc_badi_ue_save_documents .
    TYPES :BEGIN OF gtyp_tab,
             vbeln           TYPE vbeln,
             posnr           TYPE posnr,
             etenr           TYPE vbep-etenr,
             zz1_zcsd_init   TYPE dats,
             zz1_zmbdat_init TYPE dats,
             zz1_bmeng_init  TYPE bmeng,
             zz1_zcdd_init   TYPE dats,
           END OF gtyp_tab,
           gtyp_t_tab type standard TABLE OF gtyp_tab.
protected section.
private section.

  methods GET_CUSTOM_TABLE_DETAILS
    importing
      !IT_XVBEP type VA_VBEPVB_T
    exporting
      value(ET_TAB) type GTYP_T_TAB .
  methods UPDATE_CUSTOM_TABLE
    importing
      !IT_TAB type GTYP_T_TAB
      !IT_XVBEP type VA_VBEPVB_T
      !IV_VBELN type VBELN
      !IT_XVBAP type VA_VBAPVB_T .
ENDCLASS.



CLASS ZCL_SC_INITIAL_DATES_UPDATE IMPLEMENTATION.


  METHOD get_custom_table_details.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* SRIKAVEN     | 02.11.2022 | 14880     : Development - First RDD/CDD/ *
*              |            | DS4K934349                               *
*----------------------------------------------------------------------*

##TOO_MANY_ITAB_FIELDS
    SELECT vbeln, posnr, etenr FROM zsc_t_vbep_dates INTO CORRESPONDING FIELDS OF TABLE @et_tab
    FOR ALL ENTRIES IN @it_xvbep
    WHERE vbeln = @it_xvbep-vbeln
    AND posnr = @it_xvbep-posnr
    AND etenr = @it_xvbep-etenr.
    IF sy-subrc IS NOT INITIAL.
      CLEAR et_tab.
    ENDIF.
"#EC CI_VALPAR
  ENDMETHOD.


  METHOD update_custom_table.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* SRIKAVEN     | 02.11.2022 | 14880     : Development - First RDD/CDD/ *
*              |            | DS4K934349                               *
*----------------------------------------------------------------------*
* ANIPEVIN    | 09 Nov 2023|  DS4K964134   FB_25180_SD_Feature - [CR]  *
*                             Development - STO  custom                *
*----------------------------------------------------------------------*
* ZHMAIVAD     | 18.03.2024 | 30110     : Feature Defect: Saving more that 1 line *
*              |            | DS4K983654                               *
*----------------------------------------------------------------------*


    DATA lt_vbep_date_upd TYPE TABLE OF zsc_t_vbep_dates.
    SELECT salesdocumentitem AS posnr,
           zz1_zrsd_init_sdi FROM i_salesdocumentitem INTO TABLE @DATA(lt_vbap_tab) WHERE salesdocument = @iv_vbeln.
    IF sy-subrc IS NOT INITIAL .
      CLEAR lt_vbap_tab.
    ENDIF.
    LOOP AT it_xvbep ASSIGNING FIELD-SYMBOL(<ls_vbep>) WHERE bmeng  IS NOT INITIAL AND updkz <> 'D'.
      IF line_exists( it_tab[ vbeln = iv_vbeln posnr = <ls_vbep>-posnr  ] ).
        READ TABLE lt_vbap_tab ASSIGNING FIELD-SYMBOL(<ls_vbap_tab>) WITH KEY posnr = <ls_vbep>-posnr.
        IF <ls_vbap_tab> IS ASSIGNED AND sy-subrc IS INITIAL.
          READ TABLE it_xvbap ASSIGNING FIELD-SYMBOL(<ls_xvbap>) WITH KEY posnr = <ls_vbep>-posnr.
          IF sy-subrc IS INITIAL AND <ls_xvbap> IS ASSIGNED AND <ls_xvbap>-zz1_rsd_item NE <ls_vbap_tab>-zz1_zrsd_init_sdi AND <ls_xvbap>-abgru IS INITIAL.
            APPEND VALUE #( vbeln = iv_vbeln
                 posnr = <ls_vbep>-posnr
                 etenr = <ls_vbep>-etenr
                 zz1_zcsd_init = <ls_vbep>-zz1_zcsd
                 zz1_zmbdat_init = <ls_vbep>-mbdat
                 zz1_bmeng_init = <ls_vbep>-bmeng
                 zz1_zcdd_init = <ls_vbep>-edatu ) TO lt_vbep_date_upd.
          ENDIF.
        ENDIF.
      ELSE.
        READ TABLE it_xvbap ASSIGNING <ls_xvbap> WITH KEY posnr = <ls_vbep>-posnr..
        IF sy-subrc IS INITIAL AND <ls_xvbap>-abgru IS INITIAL.
          APPEND VALUE #( vbeln = iv_vbeln
          posnr = <ls_vbep>-posnr
          etenr = <ls_vbep>-etenr
          zz1_zcsd_init = <ls_vbep>-zz1_zcsd
          zz1_zmbdat_init = <ls_vbep>-mbdat
          zz1_bmeng_init = <ls_vbep>-bmeng
          zz1_zcdd_init = <ls_vbep>-edatu ) TO lt_vbep_date_upd.
        ENDIF.
      ENDIF.
    ENDLOOP.
    CALL FUNCTION 'ZSC_FM_SO_ZTABLE_UPDATE' IN UPDATE TASK
      TABLES
        it_tab = lt_vbep_date_upd.
  ENDMETHOD.


  METHOD zif_sc_badi_ue_save_documents~run.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* SRIKAVEN     | 02.11.2022 | 14880     : Development - First RDD/CDD/ *
*              |            | DS4K934349                               *

* SRIKAVEN     | 08.05.2023 | 20724     : Development - First RDD/CDD/ *
*              |            | DS4K951014                               *
*----------------------------------------------------------------------*

*----------------------------------------------------------------------*

    DATA: BEGIN OF ls_filter1,
            auart TYPE auart,
          END OF ls_filter1.
    TRY.
        ls_filter1-auart = cs_vbak-auart.
        IF zcl_pe_hm_switch=>is_active( iv_id     = '1052'
                                         is_filter = ls_filter1 ).

*...// Check if the sales order is required with the validations
*...// Using hardcode manager entries.
          zcl_sd_move_vbak_cusflds=>meth_check_valid_order(
            IMPORTING
              ev_valid = DATA(lv_valid)
            CHANGING
              cs_vbak  =  cs_vbak
              ).
          IF lv_valid IS NOT INITIAL AND ct_xvbep IS NOT INITIAL.
            get_custom_table_details( EXPORTING it_xvbep = ct_xvbep IMPORTING et_tab = DATA(lt_tab) ).

            update_custom_table( it_tab   = lt_tab  it_xvbep = ct_xvbep iv_vbeln = cs_vbak-vbeln it_xvbap = ct_xvbap ).

          ENDIF.
        ENDIF.
      CATCH zcx_pe_hm.
        RETURN.
    ENDTRY.
    CLEAR zcl_sd_move_vbak_cusflds=>gv_copy.
  ENDMETHOD.
ENDCLASS.