class ZCL_SD_AIF_CUT_OFF_TIMS_UPLOAD definition
  public
  final
  create public .

public section.

  class-methods CONVERT_TIME
    importing
      !IV_TIME type ANY
    returning
      value(RV_TIME) type UZEIT .
  class-methods INIT_BEFORE_MAPPING_INTERFACE
    changing
      !CS_DATA type ANY
    returning
      value(RT_BAPIRET2) type BAPIRET2_T .
  class-methods APPEND_BAPI_RETURN_E
    importing
      !IV_NUMBER type SYMSGNO
      !IV_MESSAGE_TYPE type BAPI_MTYPE
      !IV_MESSAGE_1 type CHAR30 optional
      !IV_MESSAGE_2 type CHAR30 optional
    changing
      !CT_BAPIRET2 type BAPIRET2_T .
  class-methods MODIFY_DB_TABLES
    changing
      !CS_DATA type ANY
    returning
      value(RT_BAPIRET2) type BAPIRET2_T .
  class-methods CHECK_BEFORE_MODIFY
    changing
      !CS_DATA type ANY
    returning
      value(RT_BAPIRET2) type BAPIRET2_T .
  class-methods GET_RAW_STRUCT_TABLE_ADAPTER
    importing
      !IV_DATA_BINARY type XSTRING
    changing
      !CO_RAW_STRUCT type ref to DATA
    returning
      value(RT_BAPIRET2) type BAPIRET2_T .
  PROTECTED SECTION.
PRIVATE SECTION.

  CONSTANTS mc_substructure1_name TYPE name_feld VALUE 'HEADERS' ##NO_TEXT.
  CONSTANTS mc_line_number TYPE name_feld VALUE 'LINE_NUMBER' ##NO_TEXT.
  CONSTANTS mc_message_class TYPE name_feld VALUE 'ZCM_SD_AIF_DN_CUTOFF' ##NO_TEXT.
  CONSTANTS mc_mins TYPE name_feld VALUE 60 ##NO_TEXT.
  CONSTANTS mc_hours TYPE name_feld VALUE 24 ##NO_TEXT.
  CONSTANTS:
    BEGIN OF mc_s_structure,
      zvstel        TYPE name_feld VALUE 'ZVSTEL' ##NO_TEXT,
      zvtweg        TYPE name_feld VALUE 'ZVTWEG' ##NO_TEXT,
      bsart         TYPE name_feld VALUE 'BSART' ##NO_TEXT,
      zorderreason  TYPE name_feld VALUE 'ZZ1_ZORDERREASON_PDH' ##NO_TEXT,
      zcut_off_time TYPE name_feld VALUE 'ZCUT_OFF_TIME' ##NO_TEXT,
      time_zone     TYPE name_feld VALUE 'TIME_ZONE' ##NO_TEXT,
    END OF mc_s_structure .
  CONSTANTS:
  BEGIN OF mc_s_message_type,
    error TYPE bapi_mtype VALUE 'E',
    warning TYPE bapi_mtype VALUE 'W',
    END OF mc_s_message_type.
ENDCLASS.



CLASS ZCL_SD_AIF_CUT_OFF_TIMS_UPLOAD IMPLEMENTATION.


  METHOD init_before_mapping_interface.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* ZHMAIVAD     | 16.01.2023 | 16869     : [Feature] 3/3 [Development]  *
*              |            | DS4K940377                               *
*----------------------------------------------------------------------*
* GERTSVIK     | 07.08.2023 | 21551     : FB_24068_SD_Feature - Defect *
*              |            | DS4K954346                               *
*----------------------------------------------------------------------*
    FIELD-SYMBOLS:
             <lt_headers> TYPE STANDARD TABLE.

    ASSIGN COMPONENT mc_substructure1_name OF STRUCTURE cs_data TO <lt_headers>.
    IF  sy-subrc <> 0.
      RETURN.
    ENDIF.

    LOOP AT <lt_headers> ASSIGNING FIELD-SYMBOL(<ls_headers>).
      ASSIGN COMPONENT mc_s_structure-zcut_off_time OF STRUCTURE <ls_headers> TO FIELD-SYMBOL(<ls_field>).
      CHECK sy-subrc = 0.
      <ls_field> = convert_time( <ls_field> ).
    ENDLOOP.
  ENDMETHOD.


  METHOD append_bapi_return_e.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* ZHMAIVAD     | 16.01.2023 | 16869     : [Feature] 3/3 [Development]  *
*              |            | DS4K940377                               *
*----------------------------------------------------------------------*
* GERTSVIK     | 07.08.2023 | 21551     : FB_24068_SD_Feature - Defect *
*              |            | DS4K954346                               *
*----------------------------------------------------------------------*
    APPEND INITIAL LINE TO ct_bapiret2 ASSIGNING FIELD-SYMBOL(<ls_bapiret2>).
    <ls_bapiret2>-id = mc_message_class.
    <ls_bapiret2>-number = iv_number.
    <ls_bapiret2>-type = iv_message_type.
    <ls_bapiret2>-message_v1 = |{ iv_message_1 ALPHA = OUT }|.
    <ls_bapiret2>-message_v2 = |{ iv_message_2 ALPHA = OUT }|.
  ENDMETHOD.


  METHOD convert_time.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* ZHMAIVAD     | 16.01.2023 | 16869     : [Feature] 3/3 [Development]  *
*              |            | DS4K940377                               *
*----------------------------------------------------------------------*
    DATA : lv_hour       TYPE n LENGTH 2,
           lv_min        TYPE n LENGTH 2,
           lv_sec        TYPE n LENGTH 2,
           lv_time_float TYPE decfloat34,
           lv_time_char  TYPE char20.

    lv_time_char = iv_time.

    REPLACE '1900-01-01' WITH ' ' INTO lv_time_char.
    lv_time_char = condense( lv_time_char ).

    IF lv_time_char CO '1234567890. '.
      lv_time_float = lv_time_char.

      IF lv_time_float IS NOT INITIAL.
        lv_time_float = lv_time_float * mc_hours.
        lv_hour = floor( lv_time_float ).
        lv_time_float = lv_time_float - lv_hour.

        lv_time_float = lv_time_float * mc_mins.
        lv_min =  floor( lv_time_float ).
        lv_time_float = lv_time_float - lv_min.

        lv_time_float = lv_time_float  * mc_mins.
        lv_sec =  ceil( lv_time_float ).

        IF lv_sec >= mc_mins.
          lv_sec = lv_sec - mc_mins.
          lv_min = lv_min + 1.
        ENDIF.
        IF lv_min >= mc_mins.
          lv_min = lv_min - mc_mins.
          lv_hour = lv_hour + 1.
        ENDIF.

        rv_time = lv_hour && lv_min && lv_sec.
      ENDIF.
    ELSE.
      CALL FUNCTION 'CONVERT_TIME_INPUT'
        EXPORTING
          input                     = lv_time_char
        IMPORTING
          output                    = rv_time
        EXCEPTIONS
          plausibility_check_failed = 1
          wrong_format_in_input     = 2
          OTHERS                    = 3.

      IF sy-subrc <> 0.
        rv_time = iv_time.
      ENDIF.
    ENDIF.
  ENDMETHOD.


  METHOD get_raw_struct_table_adapter.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* ZHMAIVAD     | 16.01.2023 | 16869     : [Feature] 3/3 [Development]  *
*              |            | DS4K940377                               *
*----------------------------------------------------------------------*
* ZHMAIVAD     | 16.01.2023 | 21551     : [Feature] 3/3 [Development]  *
*              |            | DS4K954346                               *
*----------------------------------------------------------------------*
    TYPES: BEGIN OF ltyp_mapping,
             from TYPE string,
             to   TYPE string,
           END OF ltyp_mapping.
    DATA:
      lt_mapping     TYPE TABLE OF ltyp_mapping,
      lt_sheet_table TYPE TABLE OF zsd_s_os_dn_cut_off_raw.

    FIELD-SYMBOLS:
                   <lt_raw_substructure> TYPE STANDARD TABLE.

    TRY.
        DATA(lo_excel) = NEW cl_fdt_xl_spreadsheet( document_name = ''
                                                    xdocument     = iv_data_binary ).
        lo_excel->if_fdt_doc_spreadsheet~get_worksheet_names(
          IMPORTING
            worksheet_names = DATA(lt_worksheets) ).
      CATCH cx_fdt_excel_core.
        append_bapi_return_e( EXPORTING iv_number = 5
                                        iv_message_type = mc_s_message_type-error
                              CHANGING ct_bapiret2 = rt_bapiret2 ).
        MESSAGE e005(zcm_sd_aif_dn_cutoff) INTO DATA(lv_message1) ##NEEDED ##MG_MISSING.
        RETURN.
    ENDTRY.

    DATA(lo_sheet) = lo_excel->if_fdt_doc_spreadsheet~get_itab_from_worksheet( lt_worksheets[ 1 ] ).

    ASSIGN lo_sheet->* TO FIELD-SYMBOL(<ls_sheet_tab>).

    co_raw_struct = NEW zsd_s_os_dn_cut_raw( ).
    ASSIGN co_raw_struct->* TO FIELD-SYMBOL(<ls_raw_table>).
    ASSIGN COMPONENT mc_substructure1_name OF STRUCTURE <ls_raw_table> TO <lt_raw_substructure>.

    IF  sy-subrc <> 0.
      RETURN.
    ENDIF.

    DATA(lt_sheet_components) = CAST cl_abap_structdescr( CAST cl_abap_tabledescr( cl_abap_tabledescr=>describe_by_data( <ls_sheet_tab> ) )->get_table_line_type( ) )->get_components( ).
    DATA(lt_raw_components)  = CAST cl_abap_structdescr( CAST cl_abap_tabledescr( cl_abap_tabledescr=>describe_by_data( lt_sheet_table ) )->get_table_line_type( ) )->get_components( ).

    LOOP AT lt_sheet_components ASSIGNING FIELD-SYMBOL(<ls_sheet_components>). "#EC CI_NESTED
      READ TABLE lt_raw_components ASSIGNING FIELD-SYMBOL(<ls_raw_components>) INDEX sy-tabix.
      IF sy-subrc = 0.
        APPEND VALUE #( from = <ls_sheet_components>-name to = <ls_raw_components>-name ) TO lt_mapping.
      ENDIF.
    ENDLOOP.

    LOOP AT <ls_sheet_tab> ASSIGNING FIELD-SYMBOL(<ls_sheet>).
      CHECK sy-tabix NE 1.

      APPEND INITIAL LINE TO <lt_raw_substructure> ASSIGNING FIELD-SYMBOL(<ls_raw_substructure_line>).
      LOOP AT lt_raw_components ASSIGNING <ls_raw_components>. "#EC CI_NESTED
        TRY.
            ASSIGN COMPONENT lt_mapping[ to = <ls_raw_components>-name ]-from  OF STRUCTURE <ls_sheet> TO FIELD-SYMBOL(<ls_sheet_field>). "#EC CI_STDSEQ
            CHECK sy-subrc = 0.
            ASSIGN COMPONENT <ls_raw_components>-name OF STRUCTURE <ls_raw_substructure_line> TO FIELD-SYMBOL(<ls_headers_field>).
            CHECK sy-subrc = 0.

            <ls_headers_field> = <ls_sheet_field>.

          CATCH cx_sy_itab_line_not_found.
            append_bapi_return_e( EXPORTING iv_number = 5
                                            iv_message_type = mc_s_message_type-error
                                  CHANGING ct_bapiret2 = rt_bapiret2 ).
            RETURN.
        ENDTRY.
      ENDLOOP.
    ENDLOOP.
  ENDMETHOD.


  METHOD check_before_modify.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* ZHMAIVAD     | 16.01.2023 | 16869     : [Feature] 3/3 [Development]  *
*              |            | DS4K940377                               *
*----------------------------------------------------------------------*
* GERTSVIK     | 07.08.2023 | 21551     : FB_24068_SD_Feature - Defect *
*              |            | DS4K954346                               *
*----------------------------------------------------------------------*
    DATA:
      lv_line_number        TYPE char30,
      lv_value              TYPE char30,
      lt_line_numbers_error TYPE TABLE OF char30.

    FIELD-SYMBOLS:
      <lt_headers> TYPE STANDARD TABLE.

    ASSIGN COMPONENT mc_substructure1_name OF STRUCTURE cs_data TO <lt_headers>.
    IF sy-subrc = 0.
      LOOP AT <lt_headers> ASSIGNING FIELD-SYMBOL(<ls_headers>).
        lv_line_number = sy-tabix.
        ASSIGN COMPONENT mc_line_number  OF STRUCTURE <ls_headers> TO FIELD-SYMBOL(<ls_field>).
        CHECK sy-subrc = 0.
        <ls_field> = lv_line_number.

        DATA(lv_wrong) = abap_false.

        ASSIGN COMPONENT mc_s_structure-zvstel OF STRUCTURE <ls_headers> TO <ls_field>.
        CHECK sy-subrc = 0.
        lv_value = <ls_field>.

        IF <ls_field> = ''.
          MESSAGE e002(zcm_sd_aif_dn_cutoff) INTO DATA(lv_message) ##NEEDED ##MG_MISSING.
          append_bapi_return_e( EXPORTING iv_number = 2
                                          iv_message_type = mc_s_message_type-error
                                          iv_message_1 = lv_line_number
                                CHANGING ct_bapiret2 = rt_bapiret2 ).
          lv_wrong = abap_true.
        ELSEIF zcl_sd_upload_time_validations=>check_zvstel( iv_zvstel = <ls_field> ) = abap_true.
          MESSAGE e006(zcm_sd_aif_dn_cutoff) INTO lv_message ##NEEDED ##MG_MISSING.
          append_bapi_return_e( EXPORTING iv_number = 6
                                          iv_message_type = mc_s_message_type-error
                                          iv_message_1 = lv_value
                                          iv_message_2 = lv_line_number
                                CHANGING ct_bapiret2 = rt_bapiret2 ).
          lv_wrong = abap_true.
        ENDIF.

        ASSIGN COMPONENT mc_s_structure-zvtweg OF STRUCTURE <ls_headers> TO <ls_field>.
        CHECK sy-subrc = 0.
        lv_value = <ls_field>.
        IF <ls_field> = ''.
          MESSAGE e003(zcm_sd_aif_dn_cutoff) INTO lv_message ##NEEDED ##MG_MISSING.
          append_bapi_return_e( EXPORTING iv_number = 3
                                          iv_message_type = mc_s_message_type-error
                                          iv_message_1 = lv_line_number
                                CHANGING ct_bapiret2 = rt_bapiret2 ).
          lv_wrong = abap_true.
        ELSEIF zcl_sd_upload_time_validations=>check_zvtweg( iv_zvtweg = <ls_field> ) = abap_true.
          MESSAGE e007(zcm_sd_aif_dn_cutoff) INTO lv_message ##NEEDED ##MG_MISSING.
          append_bapi_return_e( EXPORTING iv_number = 7
                                          iv_message_type = mc_s_message_type-error
                                          iv_message_1 = lv_value
                                          iv_message_2 = lv_line_number
                                CHANGING ct_bapiret2 = rt_bapiret2 ).
          lv_wrong = abap_true.
        ENDIF.

        ASSIGN COMPONENT mc_s_structure-bsart OF STRUCTURE <ls_headers> TO <ls_field>.
        CHECK sy-subrc = 0.
        lv_value = <ls_field>.
        IF <ls_field> IS NOT INITIAL AND zcl_sd_upload_time_validations=>check_bsart( iv_bsart = <ls_field> ) = abap_true.
          MESSAGE e008(zcm_sd_aif_dn_cutoff) INTO lv_message ##NEEDED ##MG_MISSING.
          append_bapi_return_e( EXPORTING iv_number = 8
                                          iv_message_type = mc_s_message_type-error
                                          iv_message_1 = lv_value
                                          iv_message_2 = lv_line_number
                                CHANGING ct_bapiret2 = rt_bapiret2 ).
          lv_wrong = abap_true.
        ENDIF.

        ASSIGN COMPONENT mc_s_structure-zorderreason OF STRUCTURE <ls_headers> TO <ls_field>.
        CHECK sy-subrc = 0.
        lv_value = <ls_field>.
        IF <ls_field> IS NOT INITIAL AND zcl_sd_upload_time_validations=>check_zorderreason( iv_zorderreason = <ls_field> ) = abap_true.
          MESSAGE e009(zcm_sd_aif_dn_cutoff) INTO lv_message ##NEEDED ##MG_MISSING.
          append_bapi_return_e( EXPORTING iv_number = 9
                                          iv_message_type = mc_s_message_type-error
                                          iv_message_1 = lv_value
                                          iv_message_2 = lv_line_number
                                CHANGING ct_bapiret2 = rt_bapiret2 ).
          lv_wrong = abap_true.
        ENDIF.

        ASSIGN COMPONENT mc_s_structure-zcut_off_time OF STRUCTURE <ls_headers> TO <ls_field>.
        CHECK sy-subrc = 0.
        IF <ls_field> CN '1234567890'.
          MESSAGE e001(zcm_sd_aif_dn_cutoff) INTO lv_message ##NEEDED ##MG_MISSING.
          append_bapi_return_e( EXPORTING iv_number = 1 iv_message_type = mc_s_message_type-error CHANGING ct_bapiret2 = rt_bapiret2 ).
          lv_wrong = abap_true.
        ENDIF.

        ASSIGN COMPONENT mc_s_structure-time_zone OF STRUCTURE <ls_headers> TO <ls_field>.
        CHECK sy-subrc = 0.
        lv_value = <ls_field>.
        IF <ls_field> IS NOT INITIAL AND zcl_sd_upload_time_validations=>check_time_zone( iv_time_zone = <ls_field> ) = abap_true.
          MESSAGE e010(zcm_sd_aif_dn_cutoff) INTO lv_message ##NEEDED ##MG_MISSING.
          append_bapi_return_e( EXPORTING iv_number = 10
                                          iv_message_type = mc_s_message_type-error
                                          iv_message_1 = lv_value
                                          iv_message_2 = lv_line_number
                                CHANGING ct_bapiret2 = rt_bapiret2 ).
          lv_wrong = abap_true.
        ENDIF.

        IF zcl_sd_upload_time_validations=>check_cut_record( iv_record = <ls_headers> ) = abap_true.
          MESSAGE e011(zcm_sd_aif_dn_cutoff) INTO lv_message ##NEEDED ##MG_MISSING.
          append_bapi_return_e( EXPORTING iv_number = 11
                                          iv_message_type = mc_s_message_type-error
                                          iv_message_1 = lv_line_number
                                CHANGING ct_bapiret2 = rt_bapiret2 ).
          lv_wrong = abap_true.
        ENDIF.

        IF lv_wrong = abap_true.
          APPEND lv_line_number TO lt_line_numbers_error.
        ENDIF.
      ENDLOOP.

      SORT lt_line_numbers_error DESCENDING.
      LOOP AT lt_line_numbers_error ASSIGNING FIELD-SYMBOL(<lv_line_numbers_error>).
        DELETE <lt_headers> INDEX <lv_line_numbers_error>.
      ENDLOOP.
    ENDIF.
  ENDMETHOD.


  METHOD modify_db_tables.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* ZHMAIVAD     | 16.01.2023 | 16869     : [Feature] 3/3 [Development]  *
*              |            | DS4K940377                               *
*----------------------------------------------------------------------*
* GERTSVIK     | 07.08.2023 | 21551     : FB_24068_SD_Feature - Defect *
*              |            | DS4K954346                               *
*----------------------------------------------------------------------*
    DATA:
      lt_create TYPE TABLE FOR CREATE zsd_i_os_dn_cut_aif_upload,
      lt_update TYPE TABLE FOR UPDATE zsd_i_os_dn_cut_aif_upload ##NEEDED.

    FIELD-SYMBOLS:
      <lt_headers> TYPE STANDARD TABLE.

    ASSIGN COMPONENT mc_substructure1_name OF STRUCTURE cs_data TO <lt_headers>.
    IF sy-subrc = 0.
      lt_create = CORRESPONDING #( <lt_headers> ).
      LOOP AT lt_create ASSIGNING FIELD-SYMBOL(<ls_create>).
        <ls_create>-created_at = sy-uzeit.
        <ls_create>-created_on = sy-datum.
        <ls_create>-changed_at = sy-uzeit.
        <ls_create>-changed_on = sy-datum.
      ENDLOOP.

      READ ENTITIES OF zsd_i_os_dn_cut_aif_upload
        ENTITY cutofftimesupload
        ALL FIELDS WITH CORRESPONDING #( lt_create )
        RESULT DATA(lt_selected).

      LOOP AT lt_selected ASSIGNING FIELD-SYMBOL(<ls_selected>).
        <ls_selected> = CORRESPONDING #( lt_create[ KEY entity %key = <ls_selected>-%key ] ).
        DELETE lt_create WHERE %key = <ls_selected>-%key. "#EC CI_STDSEQ
      ENDLOOP.

      MODIFY ENTITIES OF zsd_i_os_dn_cut_aif_upload
        ENTITY cutofftimesupload
        CREATE FIELDS ( zvstel zvtweg bsart zz1_zorderreason_pdh zcut_off_time time_zone created_at created_on )
        WITH lt_create
        REPORTED DATA(ls_reported).

      lt_update = CORRESPONDING #( lt_selected ).

      MODIFY ENTITIES OF zsd_i_os_dn_cut_aif_upload
        ENTITY cutofftimesupload
        UPDATE  FIELDS ( zvstel zvtweg bsart zz1_zorderreason_pdh zcut_off_time time_zone changed_at changed_on )
        WITH lt_update
        REPORTED ls_reported.

      COMMIT ENTITIES
        RESPONSE OF zsd_i_os_dn_cut_aif_upload
         ##NEEDED FAILED DATA(ls_failed_er_commit).

      IF ls_failed_er_commit IS NOT INITIAL.
        LOOP AT   ls_failed_er_commit-cutofftimesupload ASSIGNING FIELD-SYMBOL(<ls_failed>).
          MESSAGE e004(zcm_sd_aif_dn_cutoff) INTO DATA(lv_message) ##NEEDED ##MG_MISSING.
          append_bapi_return_e( EXPORTING iv_number    = 4
                                          iv_message_type = mc_s_message_type-error
                                          iv_message_1 = |{ <ls_failed>-zvstel ALPHA = OUT } && { <ls_failed>-zvtweg ALPHA = OUT }|
                                CHANGING  ct_bapiret2  = rt_bapiret2 ).
        ENDLOOP.
      ENDIF.
    ENDIF.
  ENDMETHOD.
ENDCLASS.