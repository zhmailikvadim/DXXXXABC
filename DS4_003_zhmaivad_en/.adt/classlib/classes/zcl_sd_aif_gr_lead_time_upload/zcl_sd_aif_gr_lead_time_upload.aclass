CLASS zcl_sd_aif_gr_lead_time_upload DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    METHODS init_before_mapping_interface
      CHANGING
        !cs_data           TYPE any
      RETURNING
        VALUE(rt_bapiret2) TYPE bapiret2_t .
    METHODS append_bapi_return_e
      IMPORTING
        !iv_number    TYPE symsgno
        !iv_message_1 TYPE char30 OPTIONAL
        !iv_message_2 TYPE char30 OPTIONAL
        !iv_message_3 TYPE char30 OPTIONAL
      CHANGING
        !ct_bapiret2  TYPE bapiret2_t .
    METHODS modify_db_tables
      CHANGING
        !cs_data           TYPE any
      RETURNING
        VALUE(rt_bapiret2) TYPE bapiret2_t .
    METHODS check_before_modify
      CHANGING
        !cs_data           TYPE any
      RETURNING
        VALUE(rt_bapiret2) TYPE bapiret2_t .
    METHODS get_raw_struct_table_adapter
      IMPORTING
        !iv_data_binary    TYPE xstring
      CHANGING
        !co_raw_struct     TYPE REF TO data
      RETURNING
        VALUE(rt_bapiret2) TYPE bapiret2_t .

  PROTECTED SECTION.
  PRIVATE SECTION.
    CONSTANTS mc_substructure1_name TYPE name_feld VALUE 'HEADERS' ##NO_TEXT.
    CONSTANTS mc_line_number TYPE name_feld VALUE 'LINE_NUMBER' ##NO_TEXT.
    CONSTANTS mc_message_class TYPE name_feld VALUE 'ZCM_SD_AIF_GR_LEAD' ##NO_TEXT.

    CONSTANTS:
      BEGIN OF mc_s_structure,
        ekorg                  TYPE name_feld VALUE 'EKORG' ##NO_TEXT,
        zz1_zsales_channel_pdh TYPE name_feld VALUE 'ZZ1_ZSALES_CHANNEL_PDH' ##NO_TEXT,
        bsart                  TYPE name_feld VALUE 'BSART' ##NO_TEXT,
        werks                  TYPE name_feld VALUE 'WERKS' ##NO_TEXT,
        zz1_zorderreason_pdh   TYPE name_feld VALUE 'ZZ1_ZORDERREASON_PDH' ##NO_TEXT,
        zlead_time             TYPE name_feld VALUE 'ZLEAD_TIME' ##NO_TEXT,
        zdeletion_indi 	       TYPE name_feld VALUE 'ZDELETION_INDI' ##NO_TEXT,
      END OF mc_s_structure.
ENDCLASS.



CLASS ZCL_SD_AIF_GR_LEAD_TIME_UPLOAD IMPLEMENTATION.


  METHOD append_bapi_return_e.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* HURTSALE     | 05.06.2023 | 21930     : GR leadtime table Fiori app  *
*              |            | DS4K954488                               *
************************************************************************
* HURTSALE     | 25.10.2023 | 26109     : GR LT - Remove Val From Date  *
*              |            | DS4K967637                               *
*----------------------------------------------------------------------*

    APPEND INITIAL LINE TO ct_bapiret2 ASSIGNING FIELD-SYMBOL(<ls_bapiret2>).
    <ls_bapiret2>-id = mc_message_class.
    <ls_bapiret2>-number = iv_number.
    <ls_bapiret2>-type = sy-msgty.
    <ls_bapiret2>-message_v1 = |{ iv_message_1 ALPHA = OUT }|.
    <ls_bapiret2>-message_v2 = |{ iv_message_2 ALPHA = OUT }|.
    <ls_bapiret2>-message_v3 = |{ iv_message_3 ALPHA = OUT }|.
  ENDMETHOD.


  METHOD check_before_modify.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* HURTSALE     | 05.06.2023 | 21930     : GR leadtime table Fiori app  *
*              |            | DS4K954488                               *
*----------------------------------------------------------------------*
* HURTSALE     | 19.10.2023 | 26109     : GR LT - Remove Val From Date *
*              |            | DS4K967637                               *
*----------------------------------------------------------------------*/
    DATA:
      lv_line_number        TYPE char30,
      lv_value              TYPE char30,
      lv_order_type         TYPE char30,
      lt_line_numbers_error TYPE TABLE OF char30.

    FIELD-SYMBOLS:
             <lt_headers> TYPE STANDARD TABLE.

    ASSIGN COMPONENT mc_substructure1_name OF STRUCTURE cs_data TO <lt_headers>.
    IF sy-subrc = 0.
      LOOP AT <lt_headers> ASSIGNING FIELD-SYMBOL(<ls_headers>).
        ASSIGN COMPONENT mc_line_number OF STRUCTURE <ls_headers> TO FIELD-SYMBOL(<ls_field>).
        CHECK sy-subrc = 0.
        <ls_field> = lv_line_number = sy-tabix.

        DATA(lv_wrong) = abap_false.

        "Validate Purchasing Organization
        ASSIGN COMPONENT mc_s_structure-ekorg OF STRUCTURE <ls_headers> TO <ls_field>.
        CHECK sy-subrc = 0.
        lv_value = <ls_field>.
        IF <ls_field> = ''.
          MESSAGE e004(zcm_sd_aif_gr_lead) INTO DATA(lv_message) ##NEEDED ##MG_MISSING.
          append_bapi_return_e( EXPORTING iv_number = 4 iv_message_1 = lv_line_number CHANGING ct_bapiret2 = rt_bapiret2 ).
          lv_wrong = abap_true.
        ELSEIF zcl_sd_upload_time_validations=>check_ekorg( iv_ekorg = <ls_field> ) = abap_true.
          MESSAGE e009(zcm_sd_aif_gr_lead) INTO lv_message ##NEEDED ##MG_MISSING.
          append_bapi_return_e( EXPORTING iv_number    = 9
                                          iv_message_1 = lv_value
                                          iv_message_2 = lv_line_number
                                CHANGING  ct_bapiret2  = rt_bapiret2 ).
          lv_wrong = abap_true..

        ENDIF.

        "Validate Sales Channel
        ASSIGN COMPONENT mc_s_structure-zz1_zsales_channel_pdh OF STRUCTURE <ls_headers> TO <ls_field>.
        CHECK sy-subrc = 0.
        lv_value = <ls_field>.
        IF <ls_field> IS NOT INITIAL AND
          zcl_sd_upload_time_validations=>check_zvtweg( iv_zvtweg = <ls_field> ) = abap_true.
          MESSAGE e008(zcm_sd_aif_gr_lead) INTO lv_message ##NEEDED ##MG_MISSING.
          append_bapi_return_e( EXPORTING iv_number    = 8
                                          iv_message_1 = lv_value
                                          iv_message_2 = lv_line_number
                                CHANGING  ct_bapiret2  = rt_bapiret2 ).
          lv_wrong = abap_true.
        ENDIF.

        "Validate Plant
        ASSIGN COMPONENT mc_s_structure-werks OF STRUCTURE <ls_headers> TO <ls_field>.
        CHECK sy-subrc = 0.
        lv_order_type = lv_value = <ls_field>.
        IF <ls_field> IS NOT INITIAL AND
          zcl_sd_upload_time_validations=>check_plant( iv_plant = <ls_field> ) = abap_true.
          MESSAGE e010(zcm_sd_aif_gr_lead) INTO lv_message ##NEEDED ##MG_MISSING.
          append_bapi_return_e( EXPORTING iv_number    = 10
                                          iv_message_1 = lv_value
                                          iv_message_2 = lv_line_number
                                CHANGING  ct_bapiret2  = rt_bapiret2 ).
          lv_wrong = abap_true.
        ENDIF.

        "Validate Order Type
        ASSIGN COMPONENT mc_s_structure-bsart OF STRUCTURE <ls_headers> TO <ls_field>.
        CHECK sy-subrc = 0.
        lv_value = <ls_field>.
        IF <ls_field> IS NOT INITIAL AND
           zcl_sd_upload_time_validations=>check_order_type( iv_order_type = <ls_field> ) = abap_true.
          MESSAGE e001(zcm_sd_aif_gr_lead) INTO lv_message ##NEEDED ##MG_MISSING.
          append_bapi_return_e( EXPORTING iv_number    = 1
                                          iv_message_1 = lv_value
                                          iv_message_2 = lv_line_number
                                CHANGING  ct_bapiret2  = rt_bapiret2 ).
          lv_wrong = abap_true.
        ENDIF.

        "Validate Order Reason
        ASSIGN COMPONENT mc_s_structure-zz1_zorderreason_pdh OF STRUCTURE <ls_headers> TO <ls_field>.
        CHECK sy-subrc = 0.
        lv_value = <ls_field>.
        IF lv_order_type IS NOT INITIAL AND
           <ls_field> IS NOT INITIAL AND
           zcl_sd_upload_time_validations=>check_order_reason_linked_sto( iv_order_type = lv_order_type
                                                                          iv_orderreason = <ls_field> ) = abap_true.
          MESSAGE e011(zcm_sd_aif_gr_lead) INTO lv_message ##NEEDED ##MG_MISSING.
          append_bapi_return_e( EXPORTING iv_number    = 11
                                          iv_message_1 = lv_value
                                          iv_message_2 = lv_order_type
                                          iv_message_3 = lv_line_number
                                CHANGING  ct_bapiret2  = rt_bapiret2 ).
          lv_wrong = abap_true.
        ELSEIF <ls_field> IS NOT INITIAL AND
               zcl_sd_upload_time_validations=>check_zorderreason( iv_zorderreason = <ls_field> ) = abap_true.
          MESSAGE e002(zcm_sd_aif_gr_lead) INTO lv_message ##NEEDED ##MG_MISSING.
          append_bapi_return_e( EXPORTING iv_number    = 2
                                          iv_message_1 = lv_value
                                          iv_message_2 = lv_line_number
                                CHANGING  ct_bapiret2  = rt_bapiret2 ).
          lv_wrong = abap_true.
        ENDIF.

        "Validate Lead Time
        ASSIGN COMPONENT mc_s_structure-zlead_time OF STRUCTURE <ls_headers> TO <ls_field>.
        CHECK sy-subrc = 0.
        IF <ls_field> = '' OR
           <ls_field> IS INITIAL.
          MESSAGE e003(zcm_sd_aif_gr_lead) INTO lv_message ##NEEDED ##MG_MISSING.
          append_bapi_return_e( EXPORTING iv_number = 3 iv_message_1 = lv_line_number CHANGING ct_bapiret2 = rt_bapiret2 ).
          lv_wrong = abap_true.
        ENDIF.

        "Validate Deletion Indicator
        ASSIGN COMPONENT mc_s_structure-zdeletion_indi OF STRUCTURE <ls_headers> TO <ls_field>.
        CHECK sy-subrc = 0.
        IF <ls_field> <> abap_true AND
           <ls_field> <> abap_false.
          MESSAGE e007(zcm_sd_aif_gr_lead) INTO lv_message ##NEEDED ##MG_MISSING.
          append_bapi_return_e( EXPORTING iv_number = 7 iv_message_1 = lv_line_number CHANGING ct_bapiret2 = rt_bapiret2 ).
          lv_wrong = abap_true.
        ENDIF.

        IF lv_wrong = abap_true.
          APPEND  lv_line_number TO lt_line_numbers_error.
        ELSE.
          MESSAGE s006(zcm_sd_aif_gr_lead) INTO lv_message ##NEEDED ##MG_MISSING.
          append_bapi_return_e( EXPORTING iv_number    = 6
                                          iv_message_1 = lv_line_number
                                CHANGING  ct_bapiret2  = rt_bapiret2 ).
        ENDIF.
      ENDLOOP.

      SORT lt_line_numbers_error DESCENDING.
      LOOP AT lt_line_numbers_error ASSIGNING FIELD-SYMBOL(<lv_line_numbers_error>).
        DELETE <lt_headers> INDEX <lv_line_numbers_error>.
      ENDLOOP.
    ENDIF.
  ENDMETHOD.


  METHOD get_raw_struct_table_adapter.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* HURTSALE     | 05.06.2023 | 21930     : GR leadtime table Fiori app  *
*              |            | DS4K954488                               *
************************************************************************
* HURTSALE     | 11.06.2023 | 26109     : GR LTime Val From Date Remove *
*              |            | DS4K967637                               *
************************************************************************
    TYPES: BEGIN OF ltyp_mapping,
             from TYPE string,
             to   TYPE string,
           END OF ltyp_mapping.
    DATA:
      lt_mapping     TYPE TABLE OF ltyp_mapping,
      lt_sheet_table TYPE TABLE OF zsd_s_os_gr_lead_raw.

    FIELD-SYMBOLS:
      <lt_raw_substructure> TYPE STANDARD TABLE.

    DATA(lo_excel) = NEW cl_fdt_xl_spreadsheet( document_name = ''
                                                xdocument     = iv_data_binary ).

    lo_excel->if_fdt_doc_spreadsheet~get_worksheet_names(
      IMPORTING
        worksheet_names = DATA(lt_worksheets) ).

    DATA(lo_sheet) = lo_excel->if_fdt_doc_spreadsheet~get_itab_from_worksheet( lt_worksheets[ 1 ] ).

    ASSIGN lo_sheet->* TO FIELD-SYMBOL(<ls_sheet_tab>).

    co_raw_struct = NEW zsd_s_os_gr_raw( ).
    ASSIGN co_raw_struct->* TO FIELD-SYMBOL(<ls_raw_table>).
    ASSIGN COMPONENT mc_substructure1_name OF STRUCTURE <ls_raw_table> TO <lt_raw_substructure>.

    IF sy-subrc <> 0.
      RETURN.
    ENDIF.

    DATA(lt_sheet_components) = CAST cl_abap_structdescr( CAST cl_abap_tabledescr( cl_abap_tabledescr=>describe_by_data( <ls_sheet_tab> ) )->get_table_line_type( ) )->get_components( ).
    DATA(lt_raw_components)  = CAST cl_abap_structdescr( CAST cl_abap_tabledescr( cl_abap_tabledescr=>describe_by_data( lt_sheet_table ) )->get_table_line_type( ) )->get_components( ).


    LOOP AT lt_sheet_components ASSIGNING FIELD-SYMBOL(<ls_sheet_components>). "#EC CI_NESTED
      READ TABLE lt_raw_components ASSIGNING FIELD-SYMBOL(<ls_raw_components>) INDEX sy-tabix.
      IF sy-subrc = 0.
        APPEND VALUE #( from = <ls_sheet_components>-name to = <ls_raw_components>-name ) TO lt_mapping.
      ENDIF.
    ENDLOOP.

    LOOP AT <ls_sheet_tab> ASSIGNING FIELD-SYMBOL(<ls_sheet>).
      CHECK sy-tabix <> 1.

      IF <ls_sheet> IS INITIAL.
        CONTINUE.
      ENDIF.

      APPEND INITIAL LINE TO <lt_raw_substructure> ASSIGNING FIELD-SYMBOL(<ls_raw_substructure_line>).
      LOOP AT lt_raw_components ASSIGNING <ls_raw_components>. "#EC CI_NESTED
        TRY.
            ASSIGN COMPONENT lt_mapping[ to = <ls_raw_components>-name ]-from  OF STRUCTURE <ls_sheet> TO FIELD-SYMBOL(<ls_sheet_field>). "#EC CI_STDSEQ
            CHECK sy-subrc = 0.

            ASSIGN COMPONENT <ls_raw_components>-name OF STRUCTURE <ls_raw_substructure_line> TO FIELD-SYMBOL(<ls_headers_field>).
            CHECK sy-subrc = 0.

            <ls_headers_field> = <ls_sheet_field>.

          CATCH cx_sy_conversion_no_number.
            CLEAR <ls_headers_field>.
          CATCH cx_sy_itab_line_not_found.
            append_bapi_return_e( EXPORTING iv_number = 3 CHANGING ct_bapiret2 = rt_bapiret2 ).
            RETURN.
        ENDTRY.
      ENDLOOP.
    ENDLOOP.
  ENDMETHOD.


  METHOD init_before_mapping_interface.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* HURTSALE     | 05.06.2023 | 21930     : GR leadtime table Fiori app  *
*              |            | DS4K954488                               *
*----------------------------------------------------------------------*/
    FIELD-SYMBOLS: <lt_headers> TYPE STANDARD TABLE.

    ASSIGN COMPONENT mc_substructure1_name OF STRUCTURE cs_data TO <lt_headers>.
    IF  sy-subrc <> 0.
      RETURN.
    ENDIF.

    LOOP AT <lt_headers> ASSIGNING FIELD-SYMBOL(<ls_headers>).
      ASSIGN COMPONENT mc_s_structure-zlead_time OF STRUCTURE <ls_headers> TO FIELD-SYMBOL(<ls_zlead_time>).
      IF sy-subrc = 0.
        <ls_zlead_time> = zcl_sd_upload_time_validations=>convert_time( <ls_zlead_time> ).
      ENDIF.
    ENDLOOP.
  ENDMETHOD.


  METHOD modify_db_tables.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* HURTSALE     | 05.06.2023 | 21930     : GR leadtime table Fiori app  *
*              |            | DS4K954488                               *
*----------------------------------------------------------------------*
* HURTSALE     | 19.10.2023 | 26109     : GR LT - Remove Val From Date *
*              |            | DS4K967637                               *
*----------------------------------------------------------------------*/
    DATA:
      lt_create TYPE TABLE FOR CREATE zsd_i_os_gr_lead_aif_upload,
      lt_update TYPE TABLE FOR UPDATE zsd_i_os_gr_lead_aif_upload ##NEEDED.

    FIELD-SYMBOLS:
             <lt_headers> TYPE STANDARD TABLE.

    ASSIGN COMPONENT mc_substructure1_name OF STRUCTURE cs_data TO <lt_headers>.
    IF sy-subrc = 0.
      lt_create = CORRESPONDING #( <lt_headers> ).

      READ ENTITIES OF zsd_i_os_gr_lead_aif_upload
        ENTITY grleadtimesupload
        ALL FIELDS WITH CORRESPONDING #( lt_create )
        RESULT DATA(lt_selected).

      LOOP AT lt_selected ASSIGNING FIELD-SYMBOL(<ls_selected>).
        <ls_selected> = CORRESPONDING #( lt_create[ KEY entity %key = <ls_selected>-%key ] ).
        <ls_selected>-changed_at = sy-uzeit.
        <ls_selected>-changed_on = sy-datum.

        APPEND CORRESPONDING #( <ls_selected> ) TO lt_update.

        DELETE lt_create WHERE %key = <ls_selected>-%key. "#EC CI_STDSEQ
      ENDLOOP.

      LOOP AT lt_create ASSIGNING FIELD-SYMBOL(<ls_create>).
        <ls_create>-created_at = sy-uzeit.
        <ls_create>-created_on = sy-datum.
        <ls_create>-changed_at = sy-uzeit.
        <ls_create>-changed_on = sy-datum.
      ENDLOOP.

      MODIFY ENTITIES OF zsd_i_os_gr_lead_aif_upload
        ENTITY grleadtimesupload
        CREATE  FIELDS ( ekorg zz1_zsales_channel_pdh bsart zz1_zorderreason_pdh werks zdeletion_indi zlead_time created_at created_on changed_at changed_on )
        WITH lt_create
        REPORTED DATA(ls_reported).

      MODIFY ENTITIES OF zsd_i_os_gr_lead_aif_upload
        ENTITY grleadtimesupload
        UPDATE  FIELDS ( ekorg zz1_zsales_channel_pdh bsart zz1_zorderreason_pdh werks zdeletion_indi zlead_time changed_at changed_on )
        WITH lt_update
        REPORTED ls_reported.

      COMMIT ENTITIES
        RESPONSE OF zsd_i_os_gr_lead_aif_upload
         ##NEEDED FAILED DATA(ls_failed_er_commit).

      IF ls_failed_er_commit IS NOT INITIAL.
        LOOP AT ls_failed_er_commit-grleadtimesupload ASSIGNING FIELD-SYMBOL(<ls_failed>).
          append_bapi_return_e( EXPORTING iv_number    = 1
                                          iv_message_1 = |{ <ls_failed>-ekorg ALPHA = OUT } && { <ls_failed>-werks ALPHA = OUT }|
                                CHANGING  ct_bapiret2  = rt_bapiret2 ).
        ENDLOOP.
      ENDIF.
    ENDIF.
  ENDMETHOD.
ENDCLASS.