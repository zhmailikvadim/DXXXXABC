CLASS zcl_sd_badi_ue_field_to_vbap_1 DEFINITION
  PUBLIC
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES if_badi_interface .
    INTERFACES zif_sd_badi_ue_field_to_vbap .
protected section.

  methods DETERMINE_TRANSPORTATION_ZONE
    importing
      !IT_XVBPA type VA_VBPAVB_T
    changing
      !CS_VBAK type VBAK .
  methods LISTING_EXCLUSION_CHECK
    importing
      !IV_PROCESSING_MODE type INT4
      !IS_KOMKG type KOMKG
      !IS_KOMPG type KOMPG
      !IS_TVAK type TVAK
      !IS_VBAK type VBAK
      !IS_VBKD type VBKD
    changing
      !CS_VBAP type VBAP .
  methods DETERMINE_WERKS
    importing
      !IS_VBAK type VBAK
      !IS_MSR_SALES_ITEM type MSR_S_SALES_ITEM
      !IS_VBAP type VBAP
    changing
      !CV_WERKS type VBAP-WERKS
      !CV_PSTYV type VBAP-PSTYV .
  methods CHECK_REFERENCE_LPD
    importing
      !IS_VBAK type VBAK
    changing
      !CS_VBAP type VBAP .
  methods RETURN_REASON_COPY
    importing
      !IV_TRANSACTION_TYPE type CHAR1
      !IS_VBAK type VBAK
    changing
      !CS_VBAP type VBAP
      !CT_CVBRP type ZSD_TT_CVBRP .
  methods SET_RSD_FROM_IDOC
    changing
      !CS_VBAP type VBAP .
  methods SET_AUFNR_FROM_VBAK
    importing
      !IS_VBAK type VBAK
      !IV_TRANSACTION_TYPE type CHAR1
    changing
      !CS_VBAP type VBAP .
private section.

  methods RETURN_ORDER_DISCREP_UPDATE
    importing
      !IV_BUSINESSOBJEKT type NAST-OBJTYPE
      !IS_VBAK type VBAK
      !IS_VBKD type VBKD
    changing
      !CS_VBAP type VBAP .
ENDCLASS.



CLASS ZCL_SD_BADI_UE_FIELD_TO_VBAP_1 IMPLEMENTATION.


  METHOD determine_werks.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CHULTGIO     | 16.06.2022 | 11241   : WS Returns-Enhance             *
*              |            | DS4K918991                              *
*----------------------------------------------------------------------*
    TYPES: BEGIN OF ltyp_filters,
             vkorg       TYPE vbak-vkorg,
             vtweg       TYPE vbak-vtweg,
             auart       TYPE vbak-auart,
             msr_fu_code TYPE msr_i_chain-fu_code,
           END OF ltyp_filters,

           BEGIN OF ltyp_werks,
             werks_d TYPE vbap-werks,
           END OF ltyp_werks.
    DATA: lt_zwerks TYPE TABLE OF ltyp_werks.

    CHECK is_vbak-vbtyp = 'H'.

    IF is_msr_sales_item-fu_code IS NOT INITIAL.
      TRY.
          zcl_pe_hm_complex=>get_table( EXPORTING iv_id     = '0239FC3B8D041EDCB7B02212357D5F59'
                                                  is_filter = VALUE ltyp_filters( vkorg = is_vbak-vkorg vtweg = is_vbak-vtweg auart = is_vbak-auart msr_fu_code = is_msr_sales_item-fu_code )
                                        IMPORTING et_table  = lt_zwerks ).
        CATCH zcx_pe_hm.
          RETURN.
      ENDTRY.

    ELSE.
      TRY.
          zcl_pe_hm_complex=>get_table( EXPORTING iv_id     = '0239FC3B8D041EDCB7B02212357D5F59'
                                                  is_filter = VALUE ltyp_filters( vkorg = is_vbak-vkorg vtweg = is_vbak-vtweg auart = is_vbak-auart )
                                        IMPORTING et_table  = lt_zwerks ).
        CATCH zcx_pe_hm.
          RETURN.
      ENDTRY.
    ENDIF.

    READ TABLE lt_zwerks INDEX 1 ASSIGNING FIELD-SYMBOL(<ls_zwerks>).

    CHECK sy-subrc = 0.
    cv_werks = <ls_zwerks>-werks_d.

  ENDMETHOD.


  METHOD listing_exclusion_check.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 16.05.2022 | 11241 : O2C - Customer Order - Listing   *
*              |            | and Exclusion Check,                     *
*              |            | DS4K918991                               *
*----------------------------------------------------------------------*

    zcl_sd_o2c_hcm_data_provider=>check_listing_exclusion(
      EXPORTING
        iv_processing_mode = iv_processing_mode
        is_komkg           = is_komkg
        is_kompg           = is_kompg
        is_tvak            = is_tvak
        is_vbak            = is_vbak
        is_vbkd            = is_vbkd
      CHANGING
        cs_vbap            = cs_vbap ).

  ENDMETHOD.


  METHOD zif_sd_badi_ue_field_to_vbap~run.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 16.05.2022 | 11241 : O2C - Customer Order - Listing   *
*              |            | and Exclusion Check,                     *
*              |            | DS4K918991                               *
*----------------------------------------------------------------------*
* KHIZHAND     | 18.10.2022 | 13585     : Customer Order - Pre and     *
*              |            |           Re-order Indicator             *
*              |            | DS4K918991                               *
*----------------------------------------------------------------------*
* KASHTULA     | 09.11.2022 | 15096     :Customer Return - LPD Logic   *
*              |            | adjustment, DS4K935029                   *
*----------------------------------------------------------------------*
* BOBRULA      | 06.12.2022 | 14898     : Customer Returns - ARM Retur *
*              |            | DS4K934398                               *
*----------------------------------------------------------------------*
* MARTIRIA     | 06.03.2023 | 18294     :  Returns - Copy Return       *
*              |            | DS4K944565                               *
*----------------------------------------------------------------------*
* KARPOSER     | 27.03.2023 | 19407     : FF Sourcing Rules            *
*              |            | DS4K948760                               *
*----------------------------------------------------------------------*
* PISHCALI     | 09.05.2023 | 21073: SD_O2C-Contracts Enhancement -    *
*              |            |         Validity check                   *
*              |            | DS4K951737                               *
*----------------------------------------------------------------------*
* PRATAMAN     | 21.06.2023 | 22565: Update(copy) IO AUFNR from        *
*              |            |         VBAK to VBAP                     *
*              |            | DS4K956198                               *
*----------------------------------------------------------------------*
* MUKHAMAK     | 23.11.2023 | 26986     : SO line rejections for       *
*              |            | application check DS4K971290             *
*----------------------------------------------------------------------*
* PLIAVALI     | 18.01.2024 | 28222 (26986): Internal order number not *
*              |            | updated                                  *
*              |            | DS4K976648 (DS4K971290)                  *
*----------------------------------------------------------------------*
* HOMENVAD     | 09.02.2024 | 28837:SD_Returns - ZBOD Price Issue for  *
*              |            |         API and Upload                   *
*              |            | DS4K971290, DS4K978911                   *
*----------------------------------------------------------------------*

    IF iv_idoc_number IS NOT INITIAL.
      set_rsd_from_idoc( CHANGING cs_vbap = cs_vbap ).
    ENDIF.

    zcl_sd_sdoc_ue_data_transfer=>get_instance(
      )->change_field_to_item(
        CHANGING
          cs_vbap = cs_vbap ).

    listing_exclusion_check(
      EXPORTING
        iv_processing_mode = iv_processing_mode
        is_komkg           = is_komkg
        is_kompg           = is_kompg
        is_tvak            = is_tvak
        is_vbak            = is_vbak
        is_vbkd            = is_vbkd
      CHANGING
        cs_vbap            = cs_vbap ).

    zcl_sd_vbap_app_variant_check=>get_instance( )->app_variant_check(
      EXPORTING
        is_vbak = is_vbak
        is_tvak = is_tvak
        it_vbep = ct_vbep
      CHANGING
        cs_vbap = cs_vbap ).

    determine_werks(
      EXPORTING
        is_vbap           = is_vbap
        is_vbak           = is_vbak
        is_msr_sales_item = is_msr_sales_item
      CHANGING
        cv_werks          = cs_vbap-werks
        cv_pstyv          = cs_vbap-pstyv ).

    return_order_discrep_update(
      EXPORTING
        iv_businessobjekt = iv_businessobjekt
        is_vbak           = is_vbak
        is_vbkd           = is_vbkd
      CHANGING
        cs_vbap           = cs_vbap ).

    zcl_sd_pre_re_indication=>indication_pre_re_order( "13585
      EXPORTING
        is_vbak = is_vbak
      CHANGING
        cs_vbap = cs_vbap ).

    check_reference_lpd(
      EXPORTING
        is_vbak = is_vbak
      CHANGING
        cs_vbap = cs_vbap ).

    return_reason_copy(
      EXPORTING
        iv_transaction_type = iv_transaction_type                 " Processing Mode
        is_vbak             = is_vbak                 " Sales Document: Header Data
      CHANGING
        cs_vbap             = cs_vbap                 " Sales Document: Item Data
        ct_cvbrp            = ct_cvbrp
    ).
    set_aufnr_from_vbak(
      EXPORTING
        is_vbak             = is_vbak
        iv_transaction_type = iv_transaction_type
      CHANGING
        cs_vbap             = cs_vbap
    ).

    determine_transportation_zone(
      EXPORTING
        it_xvbpa = it_xvbpa
      CHANGING
        cs_vbak  = cs_vbak ).
  ENDMETHOD.


  METHOD return_order_discrep_update.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 02.08.2022 | 11241     : Enhance return order update  *
*              |            | DS4K918991                               *
*----------------------------------------------------------------------*
    CHECK iv_businessobjekt = 'BUS2102' AND
          is_vbak-vbtyp = 'H' AND
          cs_vbap-bstkd_ana = zcl_sd_aif_returns_create=>gc_ref_code-new_item.

    cs_vbap-ext_ref_item_id = cs_vbap-posnr.
    cs_vbap-bstkd_ana = is_vbkd-bstkd.
  ENDMETHOD.


  METHOD check_reference_lpd.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 16.05.2022 | 11241 : O2C - Customer Order - Listing   *
*              |            | and Exclusion Check,                     *
*              |            | DS4K918991                               *
*----------------------------------------------------------------------*
* KASHTULA     | 09.11.2022 | 15096     :Customer Return - LPD Logic   *
*              |            | adjustment, DS4K935029                   *
*----------------------------------------------------------------------*
* HOMENVAD     | 13.02.2024 | 28965:CustomerOrder-Return Upload        *
*              |            |       Template Enrichme                  *
*              |            | DS4K979313                               *
*----------------------------------------------------------------------*

    DATA:
      ls_ref_invoice  TYPE zsd_s_return_inv,
      ls_legacy_price TYPE zsd_s_return_legacy_price,
      ls_header       TYPE zsd_s_return_header.

    ls_header = VALUE #( auart = is_vbak-auart  vkorg = is_vbak-vkorg
                         vtweg = is_vbak-vtweg  kunnr = is_vbak-kunnr ).

    " Check that LPD logic is active
    CHECK NEW zcl_sd_return_data_provider( )->is_active( is_header = ls_header ) = abap_true.

    DATA(lo_invoice_provider) = NEW zcl_sd_badi_sd_ref_doc_cust_1( ).

    " Define reference invoice from Legacy system if it exists
    lo_invoice_provider->search_for_ref_invoice(
      EXPORTING
        is_vbak        = is_vbak
        is_vbap        = cs_vbap
      CHANGING
        cs_ref_invoice = ls_ref_invoice ).

    " Check if reference inboice was found in current system
    READ TABLE zcl_sd_return_data_provider=>gts_referenced_materials ASSIGNING FIELD-SYMBOL(<ls_ref_matnt>)
                                                                    WITH KEY posnr = cs_vbap-posnr
                                                                             matnr = cs_vbap-matnr
                                                                             vgbel = cs_vbap-vgbel
                                                                             vgpos = cs_vbap-vgpos.
    IF sy-subrc = 0.
      cs_vbap-zz1_invref_id_sdi = <ls_ref_matnt>-invref_id.
    ELSEIF cs_vbap-zz1_invref_id_sdi IS INITIAL.
      cs_vbap-zz1_invref_id_sdi = zcl_sd_return_data_provider=>mc_manual_reference.
    ENDIF.

    IF zcl_sd_return_data_provider=>gv_api_proxy_call = abap_true.
      " API call is ongoing -> save legacy price
      DATA(lo_lpd_provider) = NEW zcl_sd_return_data_provider( ).
      lo_lpd_provider->save_legacy_price( is_header    = ls_header
                                          iv_matnr     = cs_vbap-matnr
                                          iv_mat_posnr = cs_vbap-posnr
                                          iv_invoice   = cs_vbap-zz1_ref_invoice_sdi
                                          iv_inv_posnr = cs_vbap-zz1_ref_inv_item_sdi ).
    ELSEIF  ls_ref_invoice IS NOT INITIAL
    AND     cs_vbap-zz1_ref_invoice_sdi IS INITIAL.
      " Reference invoice is provided from legacy system then set custom fields
      cs_vbap-zz1_ref_invoice_sdi  = ls_ref_invoice-vbeln.
      cs_vbap-zz1_ref_inv_item_sdi = ls_ref_invoice-posnr.
      cs_vbap-zz1_invref_id_sdi    = zcl_sd_return_data_provider=>gv_inv_reference_indicator.

      ls_legacy_price = VALUE #( matnr = cs_vbap-matnr        posnr = cs_vbap-posnr
                                 netpr = ls_ref_invoice-netpr waerk = ls_ref_invoice-waerk ).
      INSERT ls_legacy_price INTO TABLE zcl_sd_return_data_provider=>gts_legacy_price.
    ELSEIF cs_vbap-zz1_ref_invoice_sdi IS NOT INITIAL
       AND zcl_sd_return_data_provider=>gts_legacy_price[] IS INITIAL.
      lo_lpd_provider = NEW zcl_sd_return_data_provider( ).
      lo_lpd_provider->save_legacy_price( is_header    = ls_header
                                          iv_matnr     = cs_vbap-matnr
                                          iv_mat_posnr = cs_vbap-posnr
                                          iv_invoice   = cs_vbap-zz1_ref_invoice_sdi
                                          iv_inv_posnr = cs_vbap-zz1_ref_inv_item_sdi ).
    ENDIF.

    " If there references to invoices from the current system and legacy one - clear reference to invoice from current system
    " (the user manually inserted reference to legacy system reference invoice)
    IF  cs_vbap-vgbel IS NOT INITIAL
    AND cs_vbap-vgpos IS NOT INITIAL
    AND cs_vbap-zz1_ref_invoice_sdi IS NOT INITIAL
    AND cs_vbap-zz1_ref_inv_item_sdi IS NOT INITIAL.
      CLEAR: cs_vbap-vgbel, cs_vbap-vgpos.
      cs_vbap-zz1_invref_id_sdi = zcl_sd_return_data_provider=>mc_manual_reference.
    ENDIF.

  ENDMETHOD.


  METHOD return_reason_copy.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MARTIRIA     | 06.03.2023 | 18294 : Return reason copy from header   *
*              |            | DS4K944565                               *
*              |            |                                          *
*----------------------------------------------------------------------*
* MARTIRIA     | 23.05.2023 | 21545 & Copy the Order reason from       *
*              |            | Return reason in case of returns scenario*
*              |            | DS4K953184                               *
*----------------------------------------------------------------------*
    TYPES: BEGIN OF ltyp_brf_filter,
             auart TYPE auart,
             vkorg TYPE vkorg,
             vtweg TYPE vtweg,
           END OF ltyp_brf_filter.

    IF iv_transaction_type EQ 'H' OR iv_transaction_type EQ 'V'.
      TRY.

          DATA(lv_is_active) = zcl_pe_hm_complex=>is_active(
            iv_id           = '0239FC3B8D041EDDACA53E6555355F59'
            is_filter       = VALUE ltyp_brf_filter( auart = is_vbak-auart vkorg = is_vbak-vkorg vtweg = is_vbak-vtweg )
            iv_mapping_type = 'D' ).

          IF lv_is_active EQ abap_true AND is_vbak-augru IS NOT INITIAL.
            LOOP AT ct_cvbrp ASSIGNING FIELD-SYMBOL(<ls_cvbrp>) WHERE msr_ret_reason IS INITIAL. "#EC CI_STDSEQ
              <ls_cvbrp>-msr_ret_reason = is_vbak-augru.
              cs_vbap-msr_ret_reason = is_vbak-augru.
            ENDLOOP.

          ENDIF.
        CATCH zcx_pe_hm .
          RETURN.
      ENDTRY.

    ENDIF.
  ENDMETHOD.


  METHOD determine_transportation_zone.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 27.03.2023 | 19407     : FF Sourcing Rules            *
*              |            | DS4K948760                               *
*----------------------------------------------------------------------*
* KARPOSER     | 03.07.2023 | 22904     : FF Sourcing Rules Trzone f4  *
*              |            | DS4K957256                               *
*----------------------------------------------------------------------*


    CHECK it_xvbpa IS NOT INITIAL.

    READ TABLE it_xvbpa ASSIGNING FIELD-SYMBOL(<ls_vbpa>)
     WITH KEY posnr = '000000'
              parvw = 'WE'.
    CHECK sy-subrc = 0.

    cs_vbak-zz1_ffsr_trzn_sdh  = <ls_vbpa>-lzone.
  ENDMETHOD.


  METHOD set_rsd_from_idoc.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* PISHCALI     | 09.05.2023 | 21073: SD_O2C-Contracts Enhancement -    *
*              |            |         Validity check                   *
*              |            | DS4K951737                               *
*----------------------------------------------------------------------*

    CONSTANTS:
      lc_repid      TYPE sy-repid VALUE 'SAPMV45A',
      lc_field_name TYPE dynfnam VALUE 'VBAP-POSEX'.

    DATA:
      lv_posex      TYPE vbap-posex,
      lt_dynpfields TYPE STANDARD TABLE OF dynpread.

    zcl_sd_rsd_contract_data=>get_instance( )->get_contract_data(
      IMPORTING
        ev_rsd_header     = DATA(lv_rsd_header) ##NEEDED
        et_contract_items = DATA(lt_contract_items) ).

    " The document is created from an IDOC via a batch-input.
    " The field POSIX is not yet transferred from the screen to the structure when the user-exit is called.
    lt_dynpfields = VALUE #( ( fieldname = lc_field_name ) ).

    CALL FUNCTION 'DYNP_VALUES_READ'
      EXPORTING
        dyname               = lc_repid
        dynumb               = sy-dynnr
      TABLES
        dynpfields           = lt_dynpfields
      EXCEPTIONS
        invalid_abapworkarea = 1
        invalid_dynprofield  = 2
        invalid_dynproname   = 3
        invalid_dynpronummer = 4
        invalid_request      = 5
        no_fielddescription  = 6
        invalid_parameter    = 7
        undefind_error       = 8
        double_conversion    = 9
        stepl_not_found      = 10
        OTHERS               = 11.
    IF sy-subrc = 0.
      lv_posex = VALUE #( lt_dynpfields[ fieldname = lc_field_name ]-fieldvalue OPTIONAL ). "#EC CI_STDSEQ
      IF lv_posex IS NOT INITIAL.
        cs_vbap-zz1_rsd_item = VALUE #( lt_contract_items[ posex = lv_posex ]-rsd OPTIONAL ). "#EC CI_STDSEQ
      ENDIF.
    ENDIF.

  ENDMETHOD.


  METHOD set_aufnr_from_vbak.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* PRATAMAN     | 21.06.2023 | 22565: Update(copy) IO AUFNR from        *
*              |            |         VBAK to VBAP                     *
*              |            | DS4K956198                               *
*----------------------------------------------------------------------*
* PLIAVALI     | 18.01.2024 | 28222 (26986): Internal order number not *
*              |            | updated                                  *
*              |            | DS4K976648 (DS4K971290)                  *
*----------------------------------------------------------------------*
    TYPES: BEGIN OF ltyp_brf_filter,
             vkorg TYPE vkorg,
             vtweg TYPE vtweg,
           END OF ltyp_brf_filter.

    TRY.
        DATA(lt_auart) = zcl_pe_hm_basic=>get_table( iv_id = '672' ).
        DATA(lv_is_active) = zcl_pe_hm_complex=>is_active(
          iv_id           = '024F85009E261EEE8486C6C20C2580D2'
          is_filter       = VALUE ltyp_brf_filter( vkorg = is_vbak-vkorg vtweg = is_vbak-vtweg )
          iv_mapping_type = 'D' ).

        IF line_exists( lt_auart[ field1 = is_vbak-auart ] ) AND is_vbak-aufnr IS NOT INITIAL
                                                             AND lv_is_active EQ abap_true
                                                             AND ( iv_transaction_type EQ cl_lord_co=>sc_create_mode
                                                             OR  iv_transaction_type EQ cl_lord_co=>sc_change_mode ).
          cs_vbap-aufnr = is_vbak-aufnr.
        ENDIF.
      CATCH zcx_pe_hm.
        RETURN.
    ENDTRY.
  ENDMETHOD.
ENDCLASS.