CLASS zcl_sd_deliv_note_quan_check DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES if_badi_interface .
    INTERFACES if_ex_le_shp_delivery_proc .

    CLASS-METHODS:
      save_log_external
        IMPORTING
          iv_update_task TYPE abap_bool DEFAULT abap_true.
  PROTECTED SECTION.
  PRIVATE SECTION.
    TYPES: BEGIN OF gtyp_threshold_filter,
             bsart             TYPE bsart,
             fsh_mg_attribute1 TYPE fsh_mg_attribute1,
             vkorg             TYPE vkorg,
             vstel             TYPE vstel,
             vtweg             TYPE vtweg,
             zsc_orderreason   TYPE zsc_orderreason,
             zsd_minid         TYPE zsd_minid,
             zz1_wwpri         TYPE zz1_wwpri,
           END OF gtyp_threshold_filter,
           BEGIN OF gtyp_mmeng,
             number TYPE mmeng,
             unit   TYPE meins,
           END OF gtyp_mmeng,
           BEGIN OF gtyp_wertv8,
             number   TYPE zsd_minwr,
             currency TYPE waers,
           END OF gtyp_wertv8,
           BEGIN OF gtyp_threshold_cust,
             mmeng      TYPE gtyp_mmeng,
             wertv8     TYPE gtyp_wertv8,
             zsd_qtyval TYPE zsd_qtyval,
           END OF gtyp_threshold_cust.
    CONSTANTS:
      BEGIN OF gc_operation,
        none   TYPE updkz_d  VALUE ' ',
        insert TYPE updkz_d  VALUE 'I',
        update TYPE updkz_d  VALUE 'U',
        delete TYPE updkz_d  VALUE 'D',
      END OF gc_operation,

      BEGIN OF gc_aufer,
        so  TYPE tvlk-aufer VALUE 'X',
        sto TYPE tvlk-aufer VALUE 'B',
      END OF gc_aufer,

      BEGIN OF gc_qtyval,
        quan    TYPE zsd_qtyval VALUE '1',
        val     TYPE zsd_qtyval VALUE '2',
        q_and_v TYPE zsd_qtyval VALUE '3',
        q_or_v  TYPE zsd_qtyval VALUE '4',
      END OF gc_qtyval,
      gc_memory_id TYPE char30 VALUE 'Z_DELIV_NOTE_CHECK_LOG'.

    METHODS get_min_dn
      IMPORTING
        iv_object        TYPE objnum
      RETURNING
        VALUE(rv_zminid) TYPE zsd_minid.

    METHODS sy_to_finchdel
      IMPORTING
        iv_vbeln           TYPE likp-vbeln
        iv_msgty           TYPE sy-msgty DEFAULT sy-msgty
        iv_msgid           TYPE sy-msgid DEFAULT sy-msgid
        iv_msgno           TYPE sy-msgno DEFAULT sy-msgno
        iv_msgv1           TYPE sy-msgv1 DEFAULT sy-msgv1
        iv_msgv2           TYPE sy-msgv2 DEFAULT sy-msgv2
        iv_msgv3           TYPE sy-msgv3 DEFAULT sy-msgv3
        iv_msgv4           TYPE sy-msgv4 DEFAULT sy-msgv4
      RETURNING
        VALUE(rs_finchdel) TYPE finchdel .

    METHODS convert_amount
      IMPORTING
        iv_vbeln        TYPE vbap-vbeln
        iv_posnr        TYPE vbap-posnr
        iv_in           TYPE vbap-waerk
        iv_out          TYPE vbap-waerk
        iv_amount       TYPE vbap-cmpre
      EXPORTING
        ev_local_amount TYPE any
      RAISING
        zcx_sd_fulfillment_operations.

    METHODS get_threshold_cust
      IMPORTING
        is_filter        TYPE gtyp_threshold_filter
      RETURNING
        VALUE(rs_result) TYPE gtyp_threshold_cust.

    METHODS get_so_data
      IMPORTING
        is_xlikp     TYPE likpvb
        is_xlips     TYPE lipsvb
      EXPORTING
        ev_waers     TYPE vbap-waerk
        ev_amount    TYPE vbap-cmpre
        es_threshold TYPE zcl_sd_deliv_note_quan_check=>gtyp_threshold_cust.

    METHODS get_sto_data
      IMPORTING
        is_xlikp     TYPE likpvb
        is_xlips     TYPE lipsvb
      EXPORTING
        ev_waers     TYPE vbap-waerk
        ev_amount    TYPE vbap-cmpre
        es_threshold TYPE zcl_sd_deliv_note_quan_check=>gtyp_threshold_cust.

    METHODS calc_totals
      IMPORTING
        is_xlips         TYPE lipsvb
        iv_waers         TYPE vbap-waerk
        VALUE(iv_amount) TYPE vbap-cmpre
      CHANGING
        cv_total_qty     TYPE lfimg
        cv_total         TYPE vlcur12
        cs_threshold     TYPE zcl_sd_deliv_note_quan_check=>gtyp_threshold_cust
      RAISING
        zcx_sd_fulfillment_operations.

    METHODS check_totals
      IMPORTING
        iv_tcode     TYPE le_shp_tcode
        iv_total     TYPE vlcur12
        iv_total_qty TYPE lfimg
        is_xlikp     TYPE likpvb
        is_threshold TYPE zcl_sd_deliv_note_quan_check=>gtyp_threshold_cust
      EXPORTING
        es_finchdel  TYPE finchdel.

    METHODS save_log
      IMPORTING
        VALUE(it_xlips) TYPE shp_lips_t
        ith_finchdel    TYPE finchdel_t.
ENDCLASS.



CLASS ZCL_SD_DELIV_NOTE_QUAN_CHECK IMPLEMENTATION.


  METHOD if_ex_le_shp_delivery_proc~change_delivery_header ##NEEDED.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*

  ENDMETHOD.


  METHOD if_ex_le_shp_delivery_proc~change_delivery_item ##NEEDED.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*

  ENDMETHOD.


  METHOD if_ex_le_shp_delivery_proc~change_fcode_attributes ##NEEDED.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*

  ENDMETHOD.


  METHOD if_ex_le_shp_delivery_proc~change_field_attributes ##NEEDED.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*

  ENDMETHOD.


  METHOD if_ex_le_shp_delivery_proc~check_item_deletion ##NEEDED.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*

  ENDMETHOD.


  METHOD if_ex_le_shp_delivery_proc~delivery_deletion ##NEEDED.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*

  ENDMETHOD.


  METHOD if_ex_le_shp_delivery_proc~delivery_final_check.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*
    CONSTANTS lc_outbound_delivery TYPE vbtyp VALUE 'J' ##NO_TEXT.

    DATA: lv_total     TYPE vlcur12,
          lv_total_qty TYPE lfimg,
          lth_finchdel LIKE ct_finchdel.

    CHECK zcl_sd_deliv_note_quan_switch=>is_check_active( ) = abap_true.

    LOOP AT it_xlikp ASSIGNING FIELD-SYMBOL(<ls_xlikp>)
     WHERE vbtyp = lc_outbound_delivery
       AND updkz = gc_operation-insert.

      CLEAR: lv_total, lv_total_qty.

      SELECT SINGLE aufer FROM tvlk INTO @DATA(lv_aufer)
         WHERE lfart = @<ls_xlikp>-lfart.
      CHECK sy-subrc = 0  AND
            ( lv_aufer = gc_aufer-so OR lv_aufer = gc_aufer-sto ).

      TRY.
          LOOP AT it_xlips INTO DATA(ls_xlips)           "#EC CI_NESTED
           WHERE vbeln = <ls_xlikp>-vbeln
            AND updkz <> gc_operation-delete
            AND uecha IS INITIAL " High level
            AND vgbel IS NOT INITIAL.

* Obtain Actual Qty Delivered
            IF ls_xlips-lfimg IS INITIAL.
              LOOP AT it_xlips ASSIGNING FIELD-SYMBOL(<ls_xlips_split>)
               WHERE vbeln = ls_xlips-vbeln
                 AND updkz <> gc_operation-delete
                 AND uecha = ls_xlips-posnr.             "#EC CI_NESTED

                ls_xlips-lfimg = ls_xlips-lfimg + <ls_xlips_split>-lfimg.
              ENDLOOP.
            ENDIF.

* Get Treshold cust and currency/amount
            CASE lv_aufer.
              WHEN gc_aufer-so.
                get_so_data(
                  EXPORTING
                    is_xlikp     = <ls_xlikp>
                    is_xlips     = ls_xlips
                  IMPORTING
                    ev_waers     = DATA(lv_waers)
                    ev_amount    = DATA(lv_amount)
                    es_threshold = DATA(ls_threshold) ).
              WHEN gc_aufer-sto.
                get_sto_data(
                  EXPORTING
                    is_xlikp     = <ls_xlikp>
                    is_xlips     = ls_xlips
                  IMPORTING
                    ev_waers     = lv_waers
                    ev_amount    = lv_amount
                    es_threshold = ls_threshold ).
            ENDCASE.

            CHECK lv_amount IS NOT INITIAL AND
                  ls_threshold IS NOT INITIAL.


            calc_totals(
              EXPORTING
                is_xlips     = ls_xlips
                iv_waers     = lv_waers
                iv_amount    = lv_amount
              CHANGING
                cv_total_qty = lv_total_qty
                cv_total     = lv_total
                cs_threshold = ls_threshold ).

          ENDLOOP.

        CATCH zcx_sd_fulfillment_operations INTO DATA(lo_cx).
          cl_message_helper=>set_msg_vars_for_if_t100_msg( lo_cx ).
          INSERT sy_to_finchdel( <ls_xlikp>-vbeln ) INTO TABLE ct_finchdel.
          CONTINUE.
      ENDTRY.

      check_totals(
        EXPORTING
          iv_tcode     = if_tcode
          iv_total     = lv_total
          iv_total_qty = lv_total_qty
          is_xlikp     = <ls_xlikp>
          is_threshold = ls_threshold
        IMPORTING
          es_finchdel  = DATA(ls_finchdel) ).
      IF ls_finchdel IS NOT INITIAL.
        INSERT ls_finchdel INTO TABLE lth_finchdel.
      ENDIF.
    ENDLOOP.

    save_log(
      it_xlips     = it_xlips
      ith_finchdel = lth_finchdel ).

    LOOP AT lth_finchdel ASSIGNING FIELD-SYMBOL(<ls_finchdel>).
      INSERT <ls_finchdel> INTO TABLE ct_finchdel.
    ENDLOOP.
  ENDMETHOD.


  METHOD if_ex_le_shp_delivery_proc~document_number_publish ##NEEDED.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*

  ENDMETHOD.


  METHOD if_ex_le_shp_delivery_proc~fill_delivery_header ##NEEDED.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*

  ENDMETHOD.


  METHOD if_ex_le_shp_delivery_proc~fill_delivery_item ##NEEDED.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*

  ENDMETHOD.


  METHOD if_ex_le_shp_delivery_proc~initialize_delivery ##NEEDED.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*

  ENDMETHOD.


  METHOD if_ex_le_shp_delivery_proc~item_deletion ##NEEDED.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*

  ENDMETHOD.


  METHOD if_ex_le_shp_delivery_proc~publish_delivery_item ##NEEDED.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*

  ENDMETHOD.


  METHOD if_ex_le_shp_delivery_proc~read_delivery ##NEEDED.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*

  ENDMETHOD.


  METHOD if_ex_le_shp_delivery_proc~save_and_publish_before_output ##NEEDED.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*

  ENDMETHOD.


  METHOD if_ex_le_shp_delivery_proc~save_and_publish_document ##NEEDED.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*

  ENDMETHOD.


  METHOD if_ex_le_shp_delivery_proc~save_document_prepare ##NEEDED.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*

  ENDMETHOD.


  METHOD get_min_dn.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*
    CONSTANTS: lc_charact TYPE atnam VALUE 'MIN_DN_THRESHOLD_IDENTIFIER'.

    DATA: lt_num    TYPE STANDARD TABLE OF bapi1003_alloc_values_num,
          lt_objval TYPE STANDARD TABLE OF bapi1003_alloc_values_char,
          lt_curr   TYPE STANDARD TABLE OF bapi1003_alloc_values_curr,
          lt_return TYPE STANDARD TABLE OF bapiret2.

    CALL FUNCTION 'BAPI_OBJCL_GETDETAIL'
      EXPORTING
        objectkey        = iv_object
        objecttable      = 'KNA1'
        classnum         = 'STANDARD-CLASS'
        classtype        = '011'
        unvaluated_chars = abap_true
        keydate          = sy-datum
      TABLES
        allocvaluesnum   = lt_num
        allocvalueschar  = lt_objval
        allocvaluescurr  = lt_curr
        return           = lt_return.

    IF NOT line_exists( lt_return[ type = if_msg_output=>msgtype_error ] ).
      SORT lt_objval ASCENDING BY charact.
      READ TABLE lt_objval ASSIGNING FIELD-SYMBOL(<ls_objval>)
        WITH KEY charact = lc_charact
        BINARY SEARCH.
      IF sy-subrc = 0.
        rv_zminid = <ls_objval>-value_neutral.
      ENDIF.
    ENDIF.
  ENDMETHOD.


  METHOD convert_amount.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*
    DATA: lt_vbkd_key TYPE STANDARD TABLE OF vbup_key,
          ls_vbkd_key TYPE vbup_key,
          lt_vbkd     TYPE STANDARD TABLE OF vbkd,
          ls_vbkd     TYPE vbkd,
          lv_date     TYPE d.

    CLEAR ev_local_amount.

    ls_vbkd_key-vbeln = iv_vbeln.
    ls_vbkd_key-posnr = iv_posnr. " item level
    INSERT ls_vbkd_key INTO TABLE lt_vbkd_key.
    IF iv_posnr IS NOT INITIAL.
      CLEAR ls_vbkd_key-posnr. " header level
      INSERT ls_vbkd_key INTO TABLE lt_vbkd_key.
    ENDIF.

    " date for exchange
    CALL FUNCTION 'SD_VBKD_ARRAY_READ'
      TABLES
        it_vbkd_key           = lt_vbkd_key
        et_vbkd               = lt_vbkd
      EXCEPTIONS
        records_not_found     = 1
        records_not_requested = 2
        OTHERS                = 3.

    IF sy-subrc IS INITIAL AND
       NOT lt_vbkd IS INITIAL.
      " item level date is more preferred
      SORT lt_vbkd BY posnr DESCENDING.                "#EC CI_SORTLOOP
      READ TABLE lt_vbkd INTO ls_vbkd INDEX 1.
      IF sy-subrc IS INITIAL.
        lv_date = ls_vbkd-prsdt.
      ENDIF.
    ELSE.
      lv_date = sy-datum.
    ENDIF.

    CALL FUNCTION 'CONVERT_TO_LOCAL_CURRENCY'
      EXPORTING
        date             = lv_date
        foreign_amount   = iv_amount
        foreign_currency = iv_in
        local_currency   = iv_out
      IMPORTING
        local_amount     = ev_local_amount
      EXCEPTIONS
        no_rate_found    = 1
        overflow         = 2
        no_factors_found = 3
        no_spread_found  = 4
        derived_2_times  = 5
        OTHERS           = 6.
    IF sy-subrc <> 0.
      RAISE EXCEPTION TYPE zcx_sd_fulfillment_operations USING MESSAGE.
    ENDIF.
  ENDMETHOD.


  METHOD sy_to_finchdel.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*
    rs_finchdel-vbeln    = iv_vbeln.
    rs_finchdel-pruefung = '99'.
    rs_finchdel-msgty    = iv_msgty.
    rs_finchdel-msgid    = iv_msgid.
    rs_finchdel-msgno    = iv_msgno.
    rs_finchdel-msgv1    = iv_msgv1.
    rs_finchdel-msgv2    = iv_msgv2.
    rs_finchdel-msgv3    = iv_msgv3.
    rs_finchdel-msgv4    = iv_msgv4.
  ENDMETHOD.


  METHOD get_threshold_cust.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*
    DATA: lt_cust TYPE TABLE OF gtyp_threshold_cust.

    TRY.
        zcl_pe_hm_complex=>get_table( EXPORTING iv_id     = '024F85009E261EED8695911FC97E20D2'
                                                is_filter = is_filter
                                      IMPORTING et_table  = lt_cust ).
      CATCH zcx_pe_hm.
        RETURN.
    ENDTRY.
    CHECK lt_cust IS NOT INITIAL.

    rs_result = lt_cust[ 1 ].
  ENDMETHOD.


  METHOD get_so_data.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*
    DATA ls_vbap TYPE vbap.
    DATA: ls_mara TYPE mara.

    CLEAR: ev_waers, ev_amount, es_threshold.

    CALL FUNCTION 'MARA_SINGLE_READ'
      EXPORTING
        matnr             = is_xlips-matnr
      IMPORTING
        wmara             = ls_mara
      EXCEPTIONS
        lock_on_material  = 1
        lock_system_error = 2
        wrong_call        = 3
        not_found         = 4
        OTHERS            = 5.
    IF sy-subrc <> 0.
      CLEAR ls_mara.
    ENDIF.

    CALL FUNCTION 'SD_VBAP_SINGLE_READ'
      EXPORTING
        i_vbeln          = is_xlips-vgbel
        i_posnr          = is_xlips-vgpos
      IMPORTING
        e_vbap           = ls_vbap
      EXCEPTIONS
        record_not_found = 1
        OTHERS           = 2.
    IF sy-subrc <> 0.
      CLEAR ls_vbap.
    ENDIF.
    CHECK ls_vbap-cmpre IS NOT INITIAL.

    ev_waers  = ls_vbap-waerk.
    ev_amount  = ls_vbap-cmpre.

    es_threshold  =  get_threshold_cust( VALUE #( vkorg = is_xlikp-vkorg
                                                  vtweg = is_xlips-vtweg
                                                  vstel = is_xlikp-vstel
                                                  fsh_mg_attribute1 = ls_mara-fsh_mg_at1
                                                  zz1_wwpri = ls_vbap-zz1_wwpri_sdi
                                                  zsd_minid = get_min_dn( CONV #( is_xlikp-kunnr ) ) ) ).
    IF es_threshold IS INITIAL.
      es_threshold = get_threshold_cust( VALUE #( vkorg = is_xlikp-vkorg
                                                  vtweg = is_xlips-vtweg
                                                  vstel = is_xlikp-vstel
                                                  fsh_mg_attribute1 = ls_mara-fsh_mg_at1
                                                  zz1_wwpri = ls_vbap-zz1_wwpri_sdi
                                                  zsd_minid = get_min_dn( CONV #( is_xlikp-kunag ) ) ) ).
    ENDIF.

  ENDMETHOD.


  METHOD get_sto_data.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*
    DATA: ls_ekko TYPE ekko,
          ls_ekpo TYPE ekpo,
          ls_mara TYPE mara.

    CLEAR: ev_waers, ev_amount, es_threshold.

    CALL FUNCTION 'MARA_SINGLE_READ'
      EXPORTING
        matnr             = is_xlips-matnr
      IMPORTING
        wmara             = ls_mara
      EXCEPTIONS
        lock_on_material  = 1
        lock_system_error = 2
        wrong_call        = 3
        not_found         = 4
        OTHERS            = 5.
    IF sy-subrc <> 0.
      CLEAR ls_mara.
    ENDIF.

    CALL FUNCTION 'ME_EKPO_SINGLE_READ'
      EXPORTING
        pi_ebeln         = is_xlips-vgbel
        pi_ebelp         = CONV ebelp( is_xlips-vgpos )
      IMPORTING
        po_ekpo          = ls_ekpo
      EXCEPTIONS
        no_records_found = 1
        OTHERS           = 2.
    IF sy-subrc <> 0.
      CLEAR ls_ekpo.
    ENDIF.
    CHECK ls_ekpo-netpr IS NOT INITIAL.

    CALL FUNCTION 'ME_EKKO_SINGLE_READ'
      EXPORTING
        pi_ebeln         = is_xlips-vgbel
      IMPORTING
        po_ekko          = ls_ekko
      EXCEPTIONS
        no_records_found = 1
        OTHERS           = 2.
    IF sy-subrc <> 0.
      CLEAR ls_ekko.
    ENDIF.

    ev_waers = ls_ekko-waers.
    ev_amount = ls_ekpo-netpr.

    es_threshold = get_threshold_cust( VALUE #( vkorg = is_xlikp-vkorg
                                                vtweg = ls_ekko-zz1_zsales_channel_pdh
                                                vstel = is_xlikp-vstel
                                                bsart = ls_ekko-bsart
                                                zsc_orderreason = ls_ekko-zz1_zorderreason_pdh
                                                fsh_mg_attribute1 = ls_mara-fsh_mg_at1
                                                zsd_minid = get_min_dn( CONV #( is_xlikp-kunnr ) ) ) ).

  ENDMETHOD.


  METHOD calc_totals.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*
    IF cs_threshold-wertv8-currency IS INITIAL.
      cs_threshold-wertv8-currency = iv_waers.
    ENDIF.

    IF cs_threshold-wertv8-currency <> iv_waers.
      convert_amount(
        EXPORTING
          iv_vbeln        = is_xlips-vgbel
          iv_posnr        = is_xlips-vgpos
          iv_in           = iv_waers
          iv_out          = cs_threshold-wertv8-currency
          iv_amount       = iv_amount
        IMPORTING
          ev_local_amount = iv_amount ).
    ENDIF.

* Calculate the total value
    cv_total = cv_total + iv_amount * is_xlips-lfimg.
    cv_total_qty = cv_total_qty + is_xlips-lfimg.
  ENDMETHOD.


  METHOD check_totals.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*
    CONSTANTS: lc_tcode_single_proc TYPE sy-tcode VALUE 'VL01N'.

    CLEAR es_finchdel.
* Min Quantity check
    DATA(lv_err_quan) = xsdbool( iv_total_qty < is_threshold-mmeng-number AND
                                 iv_total_qty IS NOT INITIAL AND
                                 is_threshold-mmeng-number IS NOT INITIAL ).

* Min Value check
    DATA(lv_err_val) = xsdbool( iv_total < is_threshold-wertv8-number AND
                                iv_total IS NOT INITIAL AND
                                is_threshold-wertv8-number IS NOT INITIAL ).

    IF ( is_threshold-zsd_qtyval = gc_qtyval-quan AND lv_err_quan = abap_true ) OR
       ( is_threshold-zsd_qtyval = gc_qtyval-q_or_v AND lv_err_quan = abap_true AND lv_err_val = abap_false ).

      IF iv_tcode = lc_tcode_single_proc.
        MESSAGE w001 WITH is_threshold-mmeng-number.
      ELSE.
        MESSAGE e002 WITH is_threshold-mmeng-number
                          iv_total_qty INTO DATA(lv_msg) ##NEEDED.
        es_finchdel = sy_to_finchdel( is_xlikp-vbeln ).
      ENDIF.

    ELSEIF ( is_threshold-zsd_qtyval = gc_qtyval-val AND lv_err_val = abap_true ) OR
           ( is_threshold-zsd_qtyval = gc_qtyval-q_or_v AND lv_err_val = abap_true AND lv_err_quan = abap_false ).

      IF iv_tcode = lc_tcode_single_proc.
        MESSAGE w003 WITH is_threshold-wertv8-number.
      ELSE.
        MESSAGE e004 WITH is_threshold-wertv8-number
                          iv_total INTO lv_msg.
        es_finchdel = sy_to_finchdel( is_xlikp-vbeln ).
      ENDIF.

    ELSEIF   ( is_threshold-zsd_qtyval = gc_qtyval-q_and_v OR is_threshold-zsd_qtyval = gc_qtyval-q_or_v ) AND
               lv_err_quan = abap_true AND lv_err_val = abap_true.

      IF iv_tcode = lc_tcode_single_proc.
        MESSAGE w005 WITH is_threshold-wertv8-number
                          is_threshold-mmeng-number
                          |{ 'Press Enter to save DN.'(001) }|.
      ELSE.
        MESSAGE e005 WITH is_threshold-wertv8-number
                          is_threshold-mmeng-number
                          |{ 'Total value'(002) } { iv_total }|
                          |{ 'total quantity'(003) } { iv_total_qty }.| INTO lv_msg.
        es_finchdel = sy_to_finchdel( is_xlikp-vbeln ).
      ENDIF.
    ENDIF.

  ENDMETHOD.


  METHOD save_log.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 18.08.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*
    CONSTANTS lc_smart TYPE tvsa-smart VALUE 'L'.

    DATA: lt_vbfs  TYPE STANDARD TABLE OF vbfs,
          lt_vbss  TYPE STANDARD TABLE OF vbss,
          lv_sammg TYPE vbsk-sammg.

    CHECK ith_finchdel IS NOT INITIAL.

* Finally prepare data to use in delivery error log
    SELECT SINGLE numki FROM tvsa INTO @DATA(lv_numki)
     WHERE smart = @lc_smart.
    CHECK sy-subrc = 0.

    CALL FUNCTION 'NUMBER_GET_NEXT'
      EXPORTING
        nr_range_nr = lv_numki
        object      = 'RV_SAMMG'
      IMPORTING
        number      = lv_sammg
      EXCEPTIONS
        OTHERS      = 1.
    CHECK sy-subrc = 0.

    DATA(ls_vbsk) = VALUE vbsk( smart = lc_smart
                                ernam = sy-uname
                                erdat = sy-datum
                                uzeit = sy-uzeit
                                sammg = lv_sammg ).

    lt_vbss = VALUE #(  FOR GROUPS <ls_xlips>  OF <ls_grp>  IN it_xlips
                        GROUP BY ( vgpos = <ls_grp>-vgbel ) WITHOUT MEMBERS
                       (  mandt = sy-mandt
                          sammg = lv_sammg
                          vbeln = <ls_xlips>-vgpos ) ).

    SORT it_xlips BY vbeln.
    LOOP AT ith_finchdel ASSIGNING FIELD-SYMBOL(<ls_finchdel>).
      READ TABLE it_xlips INTO DATA(ls_xlips) TRANSPORTING vgbel
        WITH KEY vbeln = <ls_finchdel>-vbeln BINARY SEARCH.
     IF sy-subrc <> 0.
      CLEAR  ls_xlips-vgbel.
     ENDIF.

      APPEND VALUE #(  vbeln = ls_xlips-vgbel
                       mandt = sy-mandt
                       msgty = <ls_finchdel>-msgty
                       msgno = <ls_finchdel>-msgno
                       msgid = <ls_finchdel>-msgid
                       msgv1 = <ls_finchdel>-msgv1
                       msgv2 = <ls_finchdel>-msgv2
                       msgv3 = <ls_finchdel>-msgv3
                       msgv4 = <ls_finchdel>-msgv4
                       sammg = lv_sammg
                       smart = lc_smart ) TO lt_vbfs.
    ENDLOOP.

    IF sy-tcode = 'ARUNITA'.
      EXPORT p1 = ls_vbsk
         p2 = lt_vbfs
         p3 = lt_vbss TO MEMORY ID gc_memory_id.
    ELSE.
      CALL FUNCTION 'RV_DELIVERY_CC_ERRORLOG_ADD'
        EXPORTING
          fvbsk = ls_vbsk
        TABLES
          fvbfs = lt_vbfs
          fvbss = lt_vbss.
    ENDIF.
  ENDMETHOD. "#EC CI_VALPAR


  METHOD save_log_external.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 16.09.2022 | 12819     : [Development] [Backend] Min Delivery Not *
*              |            | DS4K926648                               *
*----------------------------------------------------------------------*
    DATA: lt_vbfs TYPE STANDARD TABLE OF vbfs,
          lt_vbss TYPE STANDARD TABLE OF vbss,
          ls_vbsk TYPE vbsk.

    IMPORT p1 = ls_vbsk
           p2 = lt_vbfs
           p3 = lt_vbss FROM MEMORY ID gc_memory_id.
    CHECK sy-subrc = 0.

    DELETE FROM MEMORY ID gc_memory_id.

    IF iv_update_task = abap_true.
      CALL FUNCTION 'RV_DELIVERY_CC_ERRORLOG_ADD' IN UPDATE TASK
        EXPORTING
          fvbsk = ls_vbsk
        TABLES
          fvbfs = lt_vbfs
          fvbss = lt_vbss.
    ELSE.
      CALL FUNCTION 'RV_DELIVERY_CC_ERRORLOG_ADD'
        EXPORTING
          fvbsk = ls_vbsk
        TABLES
          fvbfs = lt_vbfs
          fvbss = lt_vbss.
    ENDIF.
  ENDMETHOD.
ENDCLASS.