class ZCL_SD_INB_DELIVERY_ADD_FIELDS definition
  public
  final
  create public .

public section.

  interfaces IF_BADI_INTERFACE .
  interfaces ZIF_SD_BADI_EXIT_SAPLV56K_002 .
  PROTECTED SECTION.
private section.

  constants:
    BEGIN OF gc_segname,
      control                TYPE edidd-segnam VALUE 'E1EDL18',
      header                 TYPE edidd-segnam VALUE 'E1EDL20',
      item                   TYPE edidd-segnam VALUE 'E1EDL24',
      header_add             TYPE edidd-segnam VALUE 'ZE1EDL20_ID',
      item_add               TYPE edidd-segnam VALUE 'ZE1EDL24_ID',
      sched_add              TYPE edidd-segnam VALUE 'ZSE1EDL24',
      handling_unit          TYPE edidd-segnam VALUE 'E1EDL37',
      handling_unit_item     TYPE edidd-segnam VALUE 'E1EDL44',
      handling_unit_item_add TYPE edidd-segnam VALUE 'ZSC_S_E1EDL44',
      hu_header_dscr         TYPE edidd-segnam VALUE 'E1EDL38',
      control_hu             TYPE edidd-segnam VALUE 'E1EDL39',
      express_dlv_comp       TYPE edidd-segnam VALUE 'E1EDL49',
      express_dlv_comp_add   TYPE edidd-segnam VALUE 'E1EDL50',
      serial_numbers         TYPE edidd-segnam VALUE 'E1EDL46',

    END OF gc_segname .
  constants GC_CUSTSUPPLIER_YES type CHAR01 value 'Y' ##NO_TEXT.
  constants GC_CUSTSUPPLIER_NO type CHAR01 value 'N' ##NO_TEXT.

  class-methods FILL_CONTROL_ADD_FIELDS
    importing
      !IV_SEGMENT_NAME type EDIDD-SEGNAM
      !IS_DATA type TR_IDOC_SHPMNT_INDATA
    changing
      !CT_IDOC_DATA type EDIDD_TT .
  class-methods FILL_ITEM_ADD_FIELDS
    importing
      !IV_SEGMENT_NAME type EDIDD-SEGNAM
      !IS_DATA type TR_IDOC_SHPMNT_INDATA
    changing
      !CT_IDOC_DATA type EDIDD_TT .
  class-methods FILL_HEADER_ADD_FIELDS
    importing
      !IV_SEGMENT_NAME type EDIDD-SEGNAM
      !IS_DATA type TR_IDOC_SHPMNT_INDATA
    changing
      !CT_IDOC_DATA type EDIDD_TT .
  class-methods FILL_HU_ITEM_ADD_FIELDS
    changing
      !CT_IDOC_DATA type EDIDD_TT .
  class-methods DELETE_HU
    importing
      !IV_SEGMENT_NAME type EDIDD-SEGNAM
    changing
      !CT_IDOC_DATA type EDIDD_TT .
  class-methods CHECK_HU_SEGMENTS
    importing
      !IV_SEGMENT_NAME type EDIDD-SEGNAM
    changing
      !CT_IDOC_DATA type EDIDD_TT .
ENDCLASS.



CLASS ZCL_SD_INB_DELIVERY_ADD_FIELDS IMPLEMENTATION.


METHOD zif_sd_badi_exit_saplv56k_002~run.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 26.07.2022 | 11926     : [Platform-IDoc extension] S4 to WMS - AT *
*              |            | DS4K922955                               *
*----------------------------------------------------------------------*
* RAPANKON     | 25.01.2023 | 17364     : FB_17364_SD_comASN Authorization to receive *
*              |            | DS4K941847                               *
*----------------------------------------------------------------------*
* ISAICSVI     | 21.12.2023 | 27683     : Feature - CR ATR -Restrict HU*
*              |            | DS4K974206                               *
*----------------------------------------------------------------------*


  CASE iv_segment_name.
    WHEN gc_segname-header.

      fill_header_add_fields(
        EXPORTING
          iv_segment_name = iv_segment_name
          is_data         = is_data
        CHANGING
          ct_idoc_data    = ct_idoc_data ).
    WHEN gc_segname-item.

      fill_item_add_fields(
        EXPORTING
          iv_segment_name = iv_segment_name
          is_data         = is_data
        CHANGING
          ct_idoc_data    = ct_idoc_data ).

    WHEN gc_segname-control.

      fill_control_add_fields(
        EXPORTING
          iv_segment_name = iv_segment_name
          is_data         = is_data
        CHANGING
          ct_idoc_data    = ct_idoc_data
      ).

    WHEN gc_segname-handling_unit.
      delete_hu(
        EXPORTING
          iv_segment_name =   iv_segment_name
        CHANGING
          ct_idoc_data    =   ct_idoc_data
      ).

    WHEN gc_segname-handling_unit_item OR
         gc_segname-control_hu OR
         gc_segname-express_dlv_comp OR
         gc_segname-express_dlv_comp_add  OR
         gc_segname-serial_numbers OR
         gc_segname-hu_header_dscr.

      check_hu_segments(
        EXPORTING
          iv_segment_name = iv_segment_name
        CHANGING
          ct_idoc_data    = ct_idoc_data
      ).

  ENDCASE.
ENDMETHOD.


METHOD fill_header_add_fields.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 26.07.2022 | 11926     : [Platform-IDoc extension] S4 to WMS - AT *
*              |            | DS4K922955                               *
*----------------------------------------------------------------------*
* RAZMYEGO     | 24.10.2022 | 14712     : [Platform Build] S4 to WMS - Custom Field *
*              |            | DS4K933615                               *
*----------------------------------------------------------------------*
* BEGMUAZI     | 6.07.2023 | 22999_SD_Change IBD# sequence for A-container process*
*              |            | DS4K957494                               *
*----------------------------------------------------------------------*
  DATA: ls_header_add TYPE ze1edl20_id,
        ls_lfa1       TYPE lfa1,
        ls_e1adrm1    TYPE e1adrm1,
        ls_vbc06      TYPE vbco6,
        lv_count      TYPE n LENGTH 3,
        lv_ibd_suff   TYPE zsd_vbeln,
        lt_lines      TYPE tline_tab.
  CHECK iv_segment_name = gc_segname-header.

* Assume that VGBEL is the same for all positions
  READ TABLE is_data-tab_lips INDEX 1 ASSIGNING FIELD-SYMBOL(<ls_lips>).
  IF sy-subrc = 0.
* EKKO buffered
    SELECT SINGLE purchaseorder, purchaseorderdate, purchaseordertype, purchasinggroup, purchasingorganization, correspncexternalreference
     FROM i_purchaseorderapi01
     INTO @DATA(ls_ekko)
     WHERE purchaseorder = @<ls_lips>-vgbel.
    IF sy-subrc = 0.
      ls_header_add-bedat = ls_ekko-purchaseorderdate.
      ls_header_add-bsart = ls_ekko-purchaseordertype.
      ls_header_add-ekgrp = ls_ekko-purchasinggroup.
      ls_header_add-ekorg = ls_ekko-purchasingorganization.
      ls_header_add-ihrez = ls_ekko-correspncexternalreference.
    ENDIF.
  ENDIF.

  LOOP AT ct_idoc_data ASSIGNING FIELD-SYMBOL(<ls_idoc_data>).
    CHECK <ls_idoc_data>-segnam = 'E1ADRM1'.

    ls_e1adrm1 = <ls_idoc_data>-sdata.
    CHECK ls_e1adrm1-partner_q = 'LF'.
* LFA1 buffered
    CALL FUNCTION 'READ_TABLE_BUFFERED'
      EXPORTING
        i_table          = 'LFA1'
        i_key1           = 'LIFNR'
        i_value1         = CONV lifnr( ls_e1adrm1-partner_id )
      IMPORTING
        e_table_workarea = ls_lfa1
      EXCEPTIONS
        no_entry_found   = 1
        no_table_name    = 2
        OTHERS           = 3.
    IF sy-subrc = 0.
      ls_header_add-name1 = ls_lfa1-name1.
      ls_header_add-land1 = ls_lfa1-land1.
    ENDIF.
    EXIT.
  ENDLOOP.

  READ TABLE is_data-tab_likp INDEX 1 ASSIGNING FIELD-SYMBOL(<ls_likp>).
  IF sy-subrc = 0.
* VTTK
    SELECT
      vttk~tknum,
      vttk~dalbg,
      vttk~signi,
      vttk~tndr_trkid,
      vttk~erdat
      INTO @DATA(ls_vttk) UP TO 1 ROWS
      FROM vttp
      JOIN vttk
        ON vttk~tknum = vttp~tknum
      WHERE vttp~vbeln = @<ls_likp>-vbeln
      ORDER BY vttk~tknum.

      ls_header_add-tknum = ls_vttk-tknum.
      ls_header_add-dalbg = ls_vttk-dalbg.
      ls_header_add-signi = ls_vttk-signi.
      ls_header_add-tndr_trkid = ls_vttk-tndr_trkid.
      ls_header_add-erdat = ls_vttk-erdat.
    ENDSELECT.                                            "#EC CI_SUBRC

* MSR_D_EXECUTED
    SELECT
      ret_reason
      INTO @ls_header_add-ret_reason UP TO 1 ROWS
      FROM msr_d_executed
      WHERE doc_nr = @<ls_likp>-vbeln
      ORDER BY msr_id,
               item,
               split_id,
               executed_step_id,
               doc_type,
               doc_nr,
               doc_item.

    ENDSELECT.                                            "#EC CI_SUBRC

* Calculate the number of entries of partial inbound delivery or goods receipt posted

    ls_header_add-wbstk = <ls_likp>-wbstk.

    ls_vbc06-vbeln = <ls_likp>-vbeln.

    SELECT  precedingdocument, precedingdocumentitem, subsequentdocumentcategory
      FROM i_sddocumentmultilevelprocflow     WITH PRIVILEGED ACCESS
      WHERE precedingdocument = @ls_vbc06-vbeln
      INTO TABLE @DATA(lt_vbfa).

    IF sy-subrc = 0.

      DATA(ls_line) = VALUE tline( tdformat = '*' ).

      LOOP AT lt_vbfa ASSIGNING FIELD-SYMBOL(<ls_vbfa>).
        CHECK <ls_vbfa>-subsequentdocumentcategory = 'R'.
        lv_count = lv_count + 1.
        lv_ibd_suff = |{ <ls_likp>-vbeln }_{ lv_count }|.
        ls_line-tdline = lv_ibd_suff.
        APPEND ls_line TO lt_lines.
      ENDLOOP.

      IF lv_ibd_suff IS NOT INITIAL.

        ls_header_add-zvbeln = lv_ibd_suff.

        DATA(ls_header) = VALUE thead( tdid     = '0102'
                                       tdspras  = sy-langu
                                       tdobject = 'VBBK'
                                       tdname   = ls_vbc06-vbeln ).

        CALL FUNCTION 'SAVE_TEXT'
          EXPORTING
            header          = ls_header
            savemode_direct = abap_true
          TABLES
            lines           = lt_lines
          EXCEPTIONS
            id              = 1
            language        = 2
            name            = 3
            object          = 4
            OTHERS          = 5.
        IF sy-subrc <> 0.
          CLEAR lt_lines.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDIF.

  ls_header_add-sysid = |{ sy-sysid }{ sy-mandt }{ sy-langu }|.

  APPEND VALUE #( segnam = gc_segname-header_add
                sdata = ls_header_add ) TO ct_idoc_data.
ENDMETHOD.


  METHOD fill_item_add_fields.
    " -----------------------------------------------------------------------
    "  R E V I S I O N   H I S T O R Y                                     -
    " -----------------------------------------------------------------------
    " AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              -
    "              |            | TRANSPORT REQUESTS                       -
    " -----------------------------------------------------------------------
    " KARPOSER     | 26.07.2022 | 11926     : [Platform-IDoc extension] S4 to WMS - AT -
    "              |            | DS4K922955                               -
    " -----------------------------------------------------------------------
    " ZHMAIVAD     | 12.11.2023 | 26507     : P&FE - [Build] - [CR][51977] ATR IDOC extension -
    "              |            | DS4K969148                               -
    " -----------------------------------------------------------------------
    " ISAICSVI     | 18.12.2023 | 27683     : Feature - [Build] - CR ATR - Restrict HU
    "              |            | DS4K974206                               -
    " -----------------------------------------------------------------------


    DATA ls_item                     TYPE e1edl24.
    DATA ls_ekpo                     TYPE ekpo.
    DATA ls_item_add                 TYPE ze1edl24_id.
    DATA lt_ekkn                     TYPE STANDARD TABLE OF ekkn.
    DATA ls_kna1                     TYPE kna1.
    DATA lt_eket                     TYPE STANDARD TABLE OF eket.
    DATA ls_sched_add                TYPE zse1edl24.
    DATA lt_shed_idoc_data           TYPE edidd_tt.
    DATA lv_sum_goods_receipt        TYPE rfmng.
    DATA lv_sum_for_po_reversal      TYPE rfmng.
    DATA lv_lgmng                    TYPE rfmng.
    DATA lv_lfimg                    TYPE rfmng.
    DATA ls_header                   TYPE e1edl20.
    DATA ls_ze1edl20                 TYPE ze1edl20_id.
    DATA ls_e1edl24                  TYPE e1edl24.
    DATA lv_accountassignmencategory TYPE zsd_i_customersupplieridentifr-accountassignmencategory.
    DATA lt_converted                TYPE fsh_t_sc_val.

    READ TABLE is_data-tab_likp INDEX 1 TRANSPORTING NO FIELDS.
    IF sy-subrc <> 0.
      RETURN.
    ENDIF.

    IF iv_segment_name <> gc_segname-item.
      RETURN.
    ENDIF.
    FINAL(ls_idoc_data_curr) = VALUE #( ct_idoc_data[ lines( ct_idoc_data ) ] OPTIONAL ).
    IF ls_idoc_data_curr-segnam <> iv_segment_name.
      RETURN.
    ENDIF.

    ls_item = ls_idoc_data_curr-sdata.

    ls_header = VALUE #( ct_idoc_data[
                                 segnam = cl_abap_typedescr=>describe_by_data( ls_header )->absolute_name+6 ]-sdata OPTIONAL ) ##WARN_OK.

    ls_ze1edl20 = VALUE #( ct_idoc_data[ segnam = gc_segname-header_add ]-sdata OPTIONAL ).

    IF ls_ze1edl20-zvbeln IS NOT INITIAL.

      TRY .
          DATA(lr_vbtyp) = zcl_pe_hm_basic=>get_range(  iv_id = '2832' ).
        CATCH zcx_pe_hm.
          RETURN.
      ENDTRY.

      SELECT docrelationshipuuid AS ruuid,
             precedingdocument AS vbelv,
             precedingdocumentitem AS posnv,
             subsequentdocumentcategory AS vbtyp_n,
             quantityinbaseunit AS rfmng,
             zbwart AS bwart
      FROM i_sddocumentmultilevelprocflow WITH PRIVILEGED ACCESS
      WHERE precedingdocument = @ls_header-vbeln
        AND precedingdocumentitem = @ls_item-posnr
        AND subsequentdocumentcategory IN @lr_vbtyp
        INTO TABLE @DATA(lt_vbfa).



      IF sy-subrc = 0.

        LOOP AT lt_vbfa ASSIGNING FIELD-SYMBOL(<ls_goods_receipt>) WHERE bwart = '101'.
          lv_sum_goods_receipt = lv_sum_goods_receipt + <ls_goods_receipt>-rfmng.
        ENDLOOP.

        LOOP AT lt_vbfa ASSIGNING FIELD-SYMBOL(<ls_po_reversal>) WHERE bwart = '102'.
          lv_sum_for_po_reversal = lv_sum_for_po_reversal + <ls_po_reversal>-rfmng.
        ENDLOOP.

      ENDIF.

      lv_lgmng = ls_item-lgmng - lv_sum_goods_receipt + lv_sum_for_po_reversal.
      lv_lfimg = ls_item-lfimg - lv_sum_goods_receipt + lv_sum_for_po_reversal.

      READ TABLE ct_idoc_data ASSIGNING FIELD-SYMBOL(<ls_idoc_data>) WITH KEY segnam = gc_segname-item.

      IF sy-subrc = 0.
        ls_e1edl24 = <ls_idoc_data>-sdata.
        ls_e1edl24-lgmng = CONV #(  lv_lgmng  ).
        ls_e1edl24-lgmng = condense( ls_e1edl24-lgmng ).
        ls_e1edl24-lfimg = CONV #( lv_lfimg ).
        ls_e1edl24-lfimg = condense( ls_e1edl24-lfimg ).
        <ls_idoc_data>-sdata = ls_e1edl24.
      ENDIF.

    ENDIF.

    " EKPO
    CALL FUNCTION 'ME_EKPO_SINGLE_READ'
      EXPORTING
        pi_ebeln         = ls_item-vgbel
        pi_ebelp         = CONV ebelp( ls_item-vgpos )
      IMPORTING
        po_ekpo          = ls_ekpo
      EXCEPTIONS
        no_records_found = 1
        OTHERS           = 2.
    IF sy-subrc = 0.
      ls_item_add-knttp = ls_ekpo-knttp.
    ENDIF.
    " EKKN
    CALL FUNCTION 'MMPUR_EKKN_READ_EBELN_EBELP'
      EXPORTING
        pi_ebeln             = ls_item-vgbel
        pi_ebelp             = CONV ebelp( ls_item-vgpos )
      TABLES
        pto_ekkn_po          = lt_ekkn
      EXCEPTIONS
        no_records_requested = 1
        OTHERS               = 2.
    IF sy-subrc = 0.
      READ TABLE lt_ekkn INDEX 1 ASSIGNING FIELD-SYMBOL(<ls_ekkn>).
      IF sy-subrc = 0.
        ls_item_add-vbeln = <ls_ekkn>-vbeln.
        ls_item_add-vbelp = <ls_ekkn>-vbelp.
        " VBPA
        SELECT SINGLE kunnr FROM vbpa INTO @ls_item_add-kunnr
          WHERE vbeln = @<ls_ekkn>-vbeln
            AND posnr = @<ls_ekkn>-vbelp
            AND parvw = 'SH'.
        IF sy-subrc = 0 AND ls_item_add-kunnr IS NOT INITIAL.
          " KNA1
          CALL FUNCTION 'READ_TABLE_BUFFERED'
            EXPORTING
              i_table          = 'KNA1'
              i_key1           = 'KUNNR'
              i_value1         = ls_item_add-kunnr
            IMPORTING
              e_table_workarea = ls_kna1
            EXCEPTIONS
              no_entry_found   = 1
              no_table_name    = 2
              OTHERS           = 3.
          IF sy-subrc = 0.
            ls_item_add-name1 = ls_kna1-name1.
            ls_item_add-ort01 = ls_kna1-ort01.
            ls_item_add-pstlz = ls_kna1-pstlz.
            ls_item_add-land1 = ls_kna1-land1.
          ENDIF.
        ENDIF.
      ENDIF.
    ENDIF.

    " EKET ( schedule lines )

    CALL FUNCTION 'ME_EKET_SINGLE_READ_ITEM'
      EXPORTING
        pi_ebeln            = ls_item-vgbel
        pi_ebelp            = CONV ebelp( ls_item-vgpos )
      TABLES
        pto_eket            = lt_eket
      EXCEPTIONS
        err_no_record_found = 1
        OTHERS              = 2.
    IF sy-subrc = 0.
      LOOP AT lt_eket ASSIGNING FIELD-SYMBOL(<ls_eket>).
        CLEAR ls_sched_add.

        ls_item_add-unqty += <ls_eket>-menge.

        ls_sched_add-etenr = <ls_eket>-etenr.
        ls_sched_add-menge = <ls_eket>-menge.

        APPEND VALUE #( segnam = gc_segname-sched_add
                        sdata  = ls_sched_add ) TO lt_shed_idoc_data.
      ENDLOOP.
    ENDIF.

    ls_item_add-unqty -= ls_item-lfimg.

    IF ls_item_add-knttp IS INITIAL.
      lv_accountassignmencategory = gc_custsupplier_yes.
    ELSE.
      lv_accountassignmencategory = gc_custsupplier_no.
    ENDIF.

    SELECT customersupplieridentifier, material, materialconversionid
      UP TO 1 ROWS
      INTO @DATA(ls_customersupplieridentifier)
      FROM zsd_i_customersupplieridentifr
      WHERE deliverydocument = @ls_header-vbeln
        AND deliverydocumentitem = @ls_item-posnr
        AND accountassignmencategory = @lv_accountassignmencategory.
    ENDSELECT.

    IF sy-subrc = 0.
      CALL FUNCTION 'FSH_SC_CONVERT_SIZE'
        EXPORTING
          it_matnr     = VALUE pre03_tab( ( matnr = ls_customersupplieridentifier-material ) )
          iv_mid       = ls_customersupplieridentifier-materialconversionid
          iv_cid       = ls_customersupplieridentifier-customersupplieridentifier
        IMPORTING
          et_converted = lt_converted.

      ls_item_add-zsalessizedesc = VALUE #( lt_converted[ 1 ]-conversion[ 1 ]-fsh_sc_entx8 OPTIONAL ).
    ENDIF.

    APPEND VALUE #( segnam = gc_segname-item_add
                    sdata  = ls_item_add ) TO ct_idoc_data.
    IF lt_shed_idoc_data IS NOT INITIAL.
      APPEND LINES OF lt_shed_idoc_data TO ct_idoc_data.
    ENDIF.
  ENDMETHOD.


METHOD fill_control_add_fields.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* RAPANKON     | 25.01.2023 | 17364     : FB_17364_SD_comASN Authorization to receive *
*              |            | DS4K941847                               *
*----------------------------------------------------------------------*

  DATA: ls_e1edl18 TYPE e1edl18.

  IF iv_segment_name <> gc_segname-control.
    RETURN.
  ENDIF.

  TRY.
      DATA(ls_likp) = is_data-tab_likp[ 1 ].
    CATCH cx_sy_itab_line_not_found.
      RETURN.
  ENDTRY.

  IF ls_likp-spe_loekz <> abap_true.
    RETURN.
  ENDIF.

  READ TABLE ct_idoc_data ASSIGNING FIELD-SYMBOL(<ls_idoc_data>) WITH KEY
    segnam = gc_segname-control. "#EC CI_STDSEQ
  IF sy-subrc = 0.
    ls_e1edl18 = <ls_idoc_data>-sdata.
    ls_e1edl18-qualf = zcl_sd_inbdel_util=>get_hm_qual_auth_to_receive( ).
    <ls_idoc_data>-sdata = ls_e1edl18.
  ENDIF.

ENDMETHOD.


  METHOD check_hu_segments.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* ISAICSVI     | 20.12.2023 | 27683     : Feature - CR ATR -Restrict HU*
*              |            | DS4K974206                               *
*----------------------------------------------------------------------*

    DATA ls_e1edl37 TYPE e1edl37.

    ls_e1edl37 = VALUE #( ct_idoc_data[ segnam = gc_segname-handling_unit ]-sdata OPTIONAL ).

    IF ls_e1edl37 IS INITIAL.
      DELETE ct_idoc_data WHERE segnam = iv_segment_name.
      RETURN.
    ENDIF.

    IF iv_segment_name = gc_segname-handling_unit_item.

      fill_hu_item_add_fields(
       CHANGING
         ct_idoc_data    = ct_idoc_data
     ).

    ENDIF.

  ENDMETHOD.


  METHOD delete_hu.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* ISAICSVI     | 20.12.2023 | 27683     : Feature - CR ATR -Restrict HU*
*              |            | DS4K974206                               *
*----------------------------------------------------------------------*

    DATA ls_ze1edl20                 TYPE ze1edl20_id.

    ls_ze1edl20 = VALUE #( ct_idoc_data[ segnam = gc_segname-header_add ]-sdata OPTIONAL ).

    IF ls_ze1edl20-zvbeln IS NOT INITIAL.
      DELETE ct_idoc_data WHERE segnam = iv_segment_name.
    ENDIF.

  ENDMETHOD.


  METHOD fill_hu_item_add_fields.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* ISAICSVI     | 20.12.2023 | 27683     : Feature - CR ATR -Restrict HU*
*              |            | DS4K974206                               *
*----------------------------------------------------------------------*

    DATA ls_ze1edl44 TYPE zsc_s_e1edl44.
    DATA ls_e1edl37 TYPE e1edl37.

    LOOP AT ct_idoc_data ASSIGNING FIELD-SYMBOL(<ls_e1edl37>) WHERE segnam = gc_segname-handling_unit.
      ls_e1edl37 = <ls_e1edl37>-sdata.
    ENDLOOP.

    SELECT SINGLE zzspe_idplate
      FROM i_handlingunititem
      WHERE handlingunitexternalid = @ls_e1edl37-exidv
      INTO @DATA(lv_spe_idplate).

    IF sy-subrc = 0.

      ls_ze1edl44-spe_idplate = lv_spe_idplate.

      APPEND VALUE #( segnam = gc_segname-handling_unit_item_add
                      sdata  = ls_ze1edl44 ) TO ct_idoc_data.

    ENDIF.

  ENDMETHOD.
ENDCLASS.