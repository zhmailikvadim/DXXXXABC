class ZCL_SD_MMPUR_BASE_MAPPER definition
  public
  abstract
  create public .

public section.

  interfaces ZIF_SD_PO_BTP_MAPPER_CONST .

  aliases GC_CREATE
    for ZIF_SD_PO_BTP_MAPPER_CONST~GC_CREATE .
  aliases GC_DELETE
    for ZIF_SD_PO_BTP_MAPPER_CONST~GC_DELETE .
  aliases GC_NO_CONV_EXIT
    for ZIF_SD_PO_BTP_MAPPER_CONST~GC_NO_CONV_EXIT .
  aliases GC_UPDATE
    for ZIF_SD_PO_BTP_MAPPER_CONST~GC_UPDATE .

  data GO_KAFKA_MESSAGE type ref to ZCL_SD_BTP_RS_BASE .
  data GV_DOCUMENT_ACTION type I .
  data GS_PURCHASE_ORDER type PORDER_HEADER .
  data GV_EBELP type EBELP value 0 ##NO_TEXT.
  data GIF_INBOUND_HELPER type ref to IF_MMPUR_INTEGR_HELPER_INT_IN .
  data GV_MESSAGE_ID type SXMSMGUID .
  data GS_PO type PORDER_HEADER .
  data GV_PO_ID type EBELN .
  data GIF_MSG_LOG type ref to IF_MMPUR_PO_MSG_LOG .
  data GV_ITEM_NUMBER_INTERVAL type PINCR .
  data GV_BSART type ESART .
  data GV_PROCESS_TYPE type ZSD_PROCESS_TYPE .
  data GV_CHNGREASON type ZZ1_CHNGREASON .

  methods EXECUTE_BTP_UPDATE
  abstract
    importing
      !IS_INBOUND_MESSAGE type MMPUR_S_PO_MESSAGE_INBOUND
    exporting
      !ET_RETURN_TAB type BAPIRETTAB
    changing
      !CV_SUCCESS type ABAP_BOOL .
  methods CONSTRUCTOR
    importing
      !IO_KAFKA_MESSAGE type ref to ZCL_SD_BTP_RS_BASE .
  methods MAP_HEADER_BTP
    importing
      !IS_PRX_INBOUND_MESSAGE type MMPUR_S_PO_MESSAGE_INBOUND
    changing
      !CS_PO_HEADER type PORDER_HEADER
    raising
      CX_MMPUR_INTERGRATION_PO_LOG
      CX_MMPUR_INTEGRATION_SOA_EXC .
  methods INITIALIZE_ITEM_NUMBER
    importing
      !IT_ITEM type PORDER_T_ITEM .
  methods VALIDATE_DOCUMENT_TYPE
    importing
      !IV_BSART type ESART
    raising
      CX_MMPUR_INTERGRATION_PO_LOG .
  methods MAP_ITEMS
  abstract
    importing
      !IT_PRX_PO_ITEM type MMPUR_T_PO_ITEM_IN
    changing
      !CT_PO_ITEM type PORDER_T_ITEM
    raising
      CX_MMPUR_INTERGRATION_PO_LOG .
  methods MAP_ITEM
    importing
      !IV_TAKE_EBELP_FROM_XML type ABAP_BOOL
      !IS_PRX_PO_ITEM type MMPUR_S_PO_ITEM
      !IS_REF_ITEM type PORDER_ITEM optional
    changing
      !CT_PO_ITEM type PORDER_T_ITEM
    raising
      CX_MMPUR_INTERGRATION_PO_LOG .
  methods MAP_FIELD
    importing
      !IV_PRX_FIELD type ANY
      !IV_CONV_EXIT type CONVEXIT
    exporting
      !EV_CHANGED_INDICATOR type ABAP_BOOL
    changing
      !CV_PO_FIELD type ANY .
  methods IS_PRX_VALUE_SUPPLIED
    importing
      !IS_PRX_STRUC type DATA
      !IV_PRX_FIELD_NAME type STRING
    returning
      value(RV_SUPPLIED) type ABAP_BOOL .
  methods GET_MESSAGE_ID
    returning
      value(RV_MESSAGE_ID) type GUID_32 .
  methods OVERWRITE_AUTODETERMINED_PRICE
    importing
      !IT_PO_ITEM_MAPPED type PORDER_T_ITEM
    changing
      !CS_PO type PORDER_HEADER
    raising
      CX_MMPUR_INTERGRATION_PO_LOG .
  methods COPY_ITEM
    importing
      !IS_OLD_ITEM type PORDER_ITEM
    returning
      value(RS_NEW_ITEM) type PORDER_ITEM
    raising
      CX_MMPUR_INTERGRATION_PO_LOG .
  methods GET_NEXT_ITEM_NUMBER
    returning
      value(RV_EBELP) type EBELP .
  methods CHECK_NUMERIC_ONLY_ID
    importing
      !IV_INPUT_STRING type MMPUR_PURCHASE_ORDER_ITEM_ID
    returning
      value(RV_OUTPUT_NUMBER) type EBELP
    raising
      CX_NOT_ONLY_NUMERIC .
  methods SET_ITEM_COMPONENT_ID
    changing
      !CS_ITEM type PORDER_ITEM .
  methods DELETE_ITEMS
    changing
      !CT_PO_ITEM type PORDER_T_ITEM
    raising
      CX_MMPUR_INTERGRATION_PO_LOG .
  methods CREATE_PO
    raising
      CX_MMPUR_INTERGRATION_PO_LOG .
  methods CHANGE_PO
    raising
      CX_MMPUR_INTERGRATION_PO_LOG .
  methods SET_PO_DATA
    raising
      CX_MMPUR_INTERGRATION_PO_LOG .
  methods POST_PO
    raising
      CX_MMPUR_INTERGRATION_PO_LOG .
  methods NOTIFY .
  methods READ_CHANGE_REASON .
  methods SET_PO_ID
    importing
      !IS_INBOUND_MESSAGE type MMPUR_S_PO_MESSAGE_INBOUND
    returning
      value(RV_EBELN) type EBELN .
  methods SET_CHANGE_REASON
    changing
      !CS_POORDER_ITEM type PORDER_ITEM .
  PROTECTED SECTION.
  PRIVATE SECTION.
    DATA gif_ext_api TYPE REF TO lif_ext_api.
ENDCLASS.



CLASS ZCL_SD_MMPUR_BASE_MAPPER IMPLEMENTATION.


  METHOD change_po.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 31.08.2023 | 23979     : Feature - [BUILD]Operational *
*              |            | DS4K959907                               *
*----------------------------------------------------------------------*
    DATA:
          lt_message       TYPE mepo_t_messages_bapi.

    "========================================================================================
    " Initialize the API in Edit mode and read PO data
    gif_ext_api->lif_po_handler~change_po(
       EXPORTING iv_po_number = gv_po_id     " Purchasing Document Number
                 iv_api_call  = mmpur_yes    " Call from CRUD API
       IMPORTING et_messages  = lt_message
    ).
    gif_msg_log->add_messages_to_log( it_mepo_message          = lt_message
                                               check_msg_log_for_errors = abap_true
    ).

    " Read PO data
    gif_ext_api->lif_po_handler~get_data( IMPORTING es_po = gs_purchase_order ).

    " In case no data is returned, the PO is currently locked in another session. Exit here.
    IF gs_purchase_order-data-ebeln IS INITIAL.
      gif_msg_log->add_messages_to_log(
           is_mepo_message  = VALUE #(
                       msgty = if_mmpur_po_constants=>gc_msg-type_error
                       msgid = if_mmpur_po_constants=>gc_msg-id
                       msgno = if_mmpur_po_constants=>gc_msg-no_002
                       msgv1 = CONV #( gv_po_id )
                     )
                     check_msg_log_for_errors = abap_true
      ).
    ENDIF.
  ENDMETHOD.


  METHOD check_numeric_only_id.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 01.09.2023 | 23979     : Feature - [BUILD]Operational *
*              |            | DS4K959907                               *
*----------------------------------------------------------------------*
    DATA lv_input TYPE string.
    lv_input = condense( iv_input_string ).

    IF ( lv_input CO '0123456789' ) AND ( lv_input CA '123456789' ).
      rv_output_number = lv_input.
    ELSE.
      RAISE EXCEPTION TYPE cx_not_only_numeric.
    ENDIF.
  ENDMETHOD.


  METHOD constructor.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 04.09.2023 | 23979     : Feature - [BUILD]Operational *
*              |            | DS4K959907                               *
*----------------------------------------------------------------------*

    gif_inbound_helper = cl_mmpur_integr_soa_helper_in=>get_instance( ).

    gif_msg_log = NEW cl_mmpur_po_msg_log( ).

    gif_ext_api = lcl_ext_api_factory=>get_ext_api( ).
    go_kafka_message = io_kafka_message.
  ENDMETHOD.


  METHOD copy_item.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 01.09.2023 | 23979     : Feature - [BUILD]Operational *
*              |            | DS4K959907                               *
*----------------------------------------------------------------------*
    rs_new_item = is_old_item.
    DATA(lo_po_util) = cl_mmpur_utilities=>get_instance( ).
    lo_po_util->set_x(
      EXPORTING im_data = rs_new_item-data
      IMPORTING ex_data = rs_new_item-datax ).
    lo_po_util->set_x(
      EXPORTING im_data = rs_new_item-data-ext
      IMPORTING ex_data = rs_new_item-datax-ext ).

    LOOP AT rs_new_item-account_items ASSIGNING FIELD-SYMBOL(<ls_account_items>).
      lo_po_util->set_x(
        EXPORTING im_data = <ls_account_items>-data
        IMPORTING ex_data = <ls_account_items>-datax ).
    ENDLOOP.
    LOOP AT rs_new_item-schedule_items ASSIGNING FIELD-SYMBOL(<ls_schedule_items>).
      lo_po_util->set_x(
        EXPORTING im_data = <ls_schedule_items>-data
        IMPORTING ex_data = <ls_schedule_items>-datax ).

      LOOP AT <ls_schedule_items>-components ASSIGNING FIELD-SYMBOL(<ls_components>). "#EC CI_NESTED
        lo_po_util->set_x(
         EXPORTING im_data = <ls_components>-data
         IMPORTING ex_data = <ls_components>-datax ).
      ENDLOOP.

      LOOP AT <ls_schedule_items>-ext_links ASSIGNING FIELD-SYMBOL(<ls_ext_links>). "#EC CI_NESTED
        lo_po_util->set_x(
         EXPORTING im_data = <ls_ext_links>-data
         IMPORTING ex_data = <ls_ext_links>-datax ).
      ENDLOOP.
    ENDLOOP.

    LOOP AT rs_new_item-account_items ASSIGNING FIELD-SYMBOL(<ls_cond_items>).
      lo_po_util->set_x(
        EXPORTING im_data = <ls_cond_items>-data
        IMPORTING ex_data = <ls_cond_items>-datax ).
    ENDLOOP.

    LOOP AT rs_new_item-ext_links ASSIGNING FIELD-SYMBOL(<ls_ext_links2>).
      lo_po_util->set_x(
        EXPORTING im_data = <ls_ext_links2>-data
        IMPORTING ex_data = <ls_ext_links2>-datax ).
    ENDLOOP.

    lo_po_util->set_x(
      EXPORTING im_data = rs_new_item-item_address-data
      IMPORTING ex_data = rs_new_item-item_address-datax ).

    clear rs_new_item-data-ext-zz1_mm_siden_pdi.
    clear rs_new_item-datax-ext-zz1_mm_siden_pdi.
  ENDMETHOD.


  METHOD create_po.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 31.08.2023 | 23979     : Feature - [BUILD]Operational *
*              |            | DS4K959907                               *
*----------------------------------------------------------------------*
    DATA:
          lt_message       TYPE mepo_t_messages_bapi.

    gif_ext_api->lif_po_handler~create_po( IMPORTING et_messages = lt_message ).
    gif_msg_log->add_messages_to_log( it_mepo_message = lt_message ).
  ENDMETHOD.


  METHOD delete_items.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 04.10.2023 | 23979     : Feature - [BUILD]Operational *
*              |            | DS4K959907                               *
*----------------------------------------------------------------------*

    DATA:
         lv_po_item_ebelp_included TYPE abap_bool.

    LOOP AT ct_po_item ASSIGNING FIELD-SYMBOL(<ls_item>).
      map_item( EXPORTING
                           iv_take_ebelp_from_xml = lv_po_item_ebelp_included
                           is_prx_po_item = VALUE #( purchase_order_item_id  = <ls_item>-data-ebelp action_code = gc_delete )
                         CHANGING
                           ct_po_item     = ct_po_item
               ).
      go_kafka_message->set_item_updated( <ls_item>-data-ebelp ).
    ENDLOOP.
  ENDMETHOD.


  METHOD get_message_id.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 01.09.2023 | 23979     : Feature - [BUILD]Operational *
*              |            | DS4K959907                               *
*----------------------------------------------------------------------*
    IF gv_message_id IS INITIAL.
      gif_inbound_helper->get_ws_message_id( ).
    ENDIF.

    rv_message_id = gv_message_id.
  ENDMETHOD.


  METHOD get_next_item_number.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 01.09.2023 | 23979     : Feature - [BUILD]Operational *
*              |            | DS4K959907                               *
*----------------------------------------------------------------------*

    gv_ebelp = gv_ebelp + gv_item_number_interval.
    rv_ebelp = gv_ebelp.
  ENDMETHOD.


  METHOD initialize_item_number.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 04.09.2023 | 23979     : Feature - [BUILD]Operational *
*              |            | DS4K959907                               *
*----------------------------------------------------------------------*

    CLEAR gv_ebelp.

    " Determine the highest item number used in the PO
    LOOP AT it_item ASSIGNING FIELD-SYMBOL(<ls_item>).
      IF <ls_item>-data-ebelp > gv_ebelp.
        gv_ebelp = <ls_item>-data-ebelp.
      ENDIF.
    ENDLOOP.
  ENDMETHOD.


  METHOD is_prx_value_supplied.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 01.09.2023 | 23979     : Feature - [BUILD]Operational *
*              |            | DS4K959907                               *
*----------------------------------------------------------------------*
    FIELD-SYMBOLS: <lt_prx_cntrl> TYPE prxctrltab.

    rv_supplied = abap_false.

    ASSIGN COMPONENT iv_prx_field_name OF STRUCTURE is_prx_struc TO FIELD-SYMBOL(<ls_prx_field>).
    CHECK sy-subrc EQ 0  AND <ls_prx_field> IS ASSIGNED.

    IF <ls_prx_field> IS INITIAL.
      " Check if the value was provided in the input xml for this proxy field
      ASSIGN COMPONENT 'CONTROLLER' OF STRUCTURE is_prx_struc TO <lt_prx_cntrl>.
      CHECK sy-subrc EQ 0  AND <lt_prx_cntrl> IS ASSIGNED.

      " Translate field name to the upper case
      DATA lv_field_name TYPE fieldname.
      lv_field_name = to_upper( iv_prx_field_name ).

      " Check if the field value was supplied in the input xml (extended xml processing is active)
      READ TABLE <lt_prx_cntrl> WITH KEY field = lv_field_name ASSIGNING FIELD-SYMBOL(<ls_prx_cntrl>).
      IF sy-subrc = 0.
        CHECK <ls_prx_cntrl>-value = sai_ctrl_initial OR <ls_prx_cntrl>-value = sai_ctrl_nil.
      ENDIF.
    ENDIF.

    rv_supplied = abap_true.
  ENDMETHOD.


  METHOD map_field.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 01.09.2023 | 23979     : Feature - [BUILD]Operational *
*              |            | DS4K959907                               *
*----------------------------------------------------------------------*

* Move invound value to the PO field.
* The inbound value has to be converted to the PO internal format

    DATA: lv_conversion_fm TYPE string VALUE 'CONVERSION_EXIT_XXXXX_INPUT'.

    ev_changed_indicator = abap_false.

    IF iv_prx_field IS NOT INITIAL.

      DATA lo_dref TYPE REF TO data.
      CREATE DATA lo_dref LIKE cv_po_field.
      ASSIGN lo_dref->* TO FIELD-SYMBOL(<lv_value_internal>).

      IF iv_conv_exit IS NOT INITIAL.
        lv_conversion_fm = replace( val = lv_conversion_fm sub = 'XXXXX' with = iv_conv_exit ).
        CALL FUNCTION lv_conversion_fm
          EXPORTING
            input  = iv_prx_field
          IMPORTING
            output = <lv_value_internal>.
      ELSE.
        <lv_value_internal> = iv_prx_field.
      ENDIF.

      " Input value is provided in the inbound message
      IF <lv_value_internal> <> cv_po_field.
        cv_po_field          = <lv_value_internal>.  "iv_prx_field.
        ev_changed_indicator = abap_true.
      ENDIF.

    ELSEIF iv_prx_field IS INITIAL AND cv_po_field IS NOT INITIAL.
*      IF the inbound FIELD is initial the target po FIELD will be cleared as
*      po service supports only the FULL transmision mode (no delta changes)

      LOG-POINT ID mmpur_po_inbound
         SUBKEY  get_message_id( )
         FIELDS 'PO field cleared ' cv_po_field.

      CLEAR cv_po_field.
      ev_changed_indicator = abap_true.
    ENDIF.
  ENDMETHOD.


  METHOD map_header_btp.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 31.08.2023 | 23979     : Feature - [BUILD]Operational *
*              |            | DS4K959907                               *
*----------------------------------------------------------------------*
    FIELD-SYMBOLS: <ls_order_in> TYPE mmpur_s_puchase_order_in.

    ASSIGN is_prx_inbound_message-purchase_order TO <ls_order_in>.
    IF <ls_order_in> IS ASSIGNED.
      " Check if the document type is supported by the service
*   @MAPPING-CALL-METHOD: VALIDATE_DOCUMENT_TYPE
      gv_bsart = cs_po_header-data-bsart.
      gv_process_type = is_prx_inbound_message-purchase_order-zz_process_type_codes.
      read_change_reason( ).
      validate_document_type( cs_po_header-data-bsart ).
    ENDIF.

    IF gv_document_action EQ gc_delete.
      cs_po_header-data-loekz = abap_true.
      cs_po_header-datax-loekz = abap_true.
    ENDIF.
  ENDMETHOD.


  METHOD map_item.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 01.09.2023 | 23979     : Feature - [BUILD]Operational *
*              |            | DS4K959907                               *
*----------------------------------------------------------------------*
* KURAPAND     | 09.02.2024 | 23979     : Feature - [BUILD]Operational *
*              |            | DS4K959907                               *
*----------------------------------------------------------------------*
* KURAPAND     | 23.02.2024 | 28840: Adding New Item to Contract off PO*
*              |            | DS4K979024                               *
*----------------------------------------------------------------------*

    DATA: lv_item_action_code  TYPE mmpur_po_action_code,
          lv_po_item_old_ebelp TYPE string, "needed to prevent problems in if-statement comparion with is_prx_po_item-purchase_order_item_id
          lv_prx_ebelp         TYPE string.

    FIELD-SYMBOLS: <ls_po_item>                     TYPE porder_item.

*=================================================================================
* Process action code

    lv_item_action_code = is_prx_po_item-action_code.
    " In create use case the item action code is optional
    IF lv_item_action_code IS INITIAL AND gv_document_action = gc_create.
      lv_item_action_code = gc_create.
    ENDIF.

    " Try to find existing PO item using either internal and/or external item IDs
    IF is_prx_po_item-purchase_order_item_id IS NOT INITIAL OR
       is_prx_po_item-purchase_order_item_ext_ref_id IS NOT INITIAL.

      LOOP AT ct_po_item ASSIGNING FIELD-SYMBOL(<ls_po_item_old>).
        CLEAR lv_po_item_old_ebelp.
        CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
          EXPORTING
            input  = is_prx_po_item-purchase_order_item_id
          IMPORTING
            output = lv_prx_ebelp.
        lv_po_item_old_ebelp = <ls_po_item_old>-data-ebelp.
*     @mapping-application-interface: PURCHASE_ORDER_ITEM_ID = MEPOITEM-EBELP
*     @mapping-map: PURCHASE_ORDER_ITEM_ID = can be used as reference ID in the update use case
*     @mapping-application-interface: PURCHASE_ORDER_ITEM_EXT_REF_ID = EXTERNALREFERENCEID
*     @mapping-map: PURCHASE_ORDER_ITEM_EXT_REF_ID = can be used as reference ID in the update use case
        IF ( lv_po_item_old_ebelp = lv_prx_ebelp
             AND is_prx_po_item-purchase_order_item_ext_ref_id IS INITIAL )
            OR ( <ls_po_item_old>-data-externalreferenceid = is_prx_po_item-purchase_order_item_ext_ref_id
                 AND is_prx_po_item-purchase_order_item_id IS INITIAL )
            OR ( lv_po_item_old_ebelp = lv_prx_ebelp
                 AND <ls_po_item_old>-data-externalreferenceid = is_prx_po_item-purchase_order_item_ext_ref_id ).
          ASSIGN <ls_po_item_old> TO <ls_po_item>.
          EXIT.
        ENDIF.
      ENDLOOP.

    ENDIF.

    IF <ls_po_item> IS ASSIGNED AND <ls_po_item>-data-loekz IS NOT INITIAL.
      MESSAGE e002(zsd_btp_integ) WITH <ls_po_item>-data-ebelp
      INTO DATA(lv_message).
      gif_msg_log->add_messages_to_log(
                    is_mepo_message  = VALUE #(
                                msgty = if_mmpur_po_constants=>gc_msg-type_error
                                msgid = 'ZSD_BTP_INTEG'
                                msgno = '002'
                                msgv1 = CONV #( <ls_po_item>-data-ebelp )
                                objtxt = lv_message
                              )
                    ).
      CLEAR lv_message.
      RETURN.
    ENDIF.
    IF is_ref_item IS NOT INITIAL AND is_ref_item-data-loekz IS NOT INITIAL.
      MESSAGE e002(zsd_btp_integ) WITH is_ref_item-data-ebelp
      INTO lv_message.
      gif_msg_log->add_messages_to_log(
                    is_mepo_message  = VALUE #(
                                msgty = if_mmpur_po_constants=>gc_msg-type_error
                                msgid = 'ZSD_BTP_INTEG'
                                msgno = '002'
                                msgv1 = CONV #( is_ref_item-data-ebelp )
                                objtxt = lv_message
                              )
                    ).
      CLEAR lv_message.
      RETURN.
    ENDIF.
    " Process action code
    CASE lv_item_action_code.

        " Create
      WHEN gc_create.
        "Purchase Order Item External Reference ID is mandatory.
        IF is_prx_po_item-purchase_order_item_ext_ref_id IS INITIAL.
          gif_msg_log->add_messages_to_log(
               is_mepo_message  = VALUE #(
                           msgty = if_mmpur_po_constants=>gc_msg-type_error
                           msgid = if_mmpur_po_constants=>gc_msg-id
                           msgno = if_mmpur_po_constants=>gc_msg-no_011
                         )
          ).
        ENDIF.

        " An item with the same external ID found
        IF <ls_po_item> IS ASSIGNED.
          gif_msg_log->add_messages_to_log(
               is_mepo_message  = VALUE #(
                           msgty = if_mmpur_po_constants=>gc_msg-type_error
                           msgid = if_mmpur_po_constants=>gc_msg-id
                           msgno = if_mmpur_po_constants=>gc_msg-no_010
                           msgv1 = CONV #( is_prx_po_item-purchase_order_item_ext_ref_id ) " External ID
                         )
          ).
        ENDIF.

        "Initialize new item
        APPEND INITIAL LINE TO ct_po_item ASSIGNING <ls_po_item>.
        IF is_ref_item IS NOT INITIAL.
          <ls_po_item> = is_ref_item.
        ENDIF.
        <ls_po_item>-id = gif_ext_api->lif_po_handler~get_id( ).
        <ls_po_item>-data-ebeln = gv_po_id.


        "Set EBELP either from incoming XML-message or from internal numbering
        IF iv_take_ebelp_from_xml EQ abap_true.

          "Check that the is_prx_po_item-purchase_order_item_id is really filled
          IF is_prx_po_item-purchase_order_item_id IS INITIAL.
            gif_msg_log->add_messages_to_log(
               is_mepo_message  = VALUE #(
                           msgty = if_mmpur_po_constants=>gc_msg-type_error
                           msgid = if_mmpur_po_constants=>gc_msg-id
                           msgno = if_mmpur_po_constants=>gc_msg-no_023
                           msgv1 = CONV #( is_prx_po_item-purchase_order_item_ext_ref_id ) " External ID
                         )
               ).
          ELSE.

            TRY.
                "Check if internal ID from XML only contains numeric characters and is not zero
                <ls_po_item>-data-ebelp = check_numeric_only_id( iv_input_string = is_prx_po_item-purchase_order_item_id ).

              CATCH cx_not_only_numeric.
                gif_msg_log->add_messages_to_log(
                  is_mepo_message  = VALUE #(
                             msgty = if_mmpur_po_constants=>gc_msg-type_error
                             msgid = if_mmpur_po_constants=>gc_msg-id
                             msgno = if_mmpur_po_constants=>gc_msg-no_025
                             msgv1 = CONV #( is_prx_po_item-purchase_order_item_id ) " Internal ID
                           )
                 ).
            ENDTRY.
          ENDIF.

        ELSE.

          "Check that the is_prx_po_item-purchase_order_item_id is really empty
          IF is_prx_po_item-purchase_order_item_id IS NOT INITIAL.
            gif_msg_log->add_messages_to_log(
                 is_mepo_message  = VALUE #(
                             msgty = if_mmpur_po_constants=>gc_msg-type_error
                             msgid = if_mmpur_po_constants=>gc_msg-id
                             msgno = if_mmpur_po_constants=>gc_msg-no_022
                             msgv1 = CONV #( is_prx_po_item-purchase_order_item_ext_ref_id ) " External ID
                           )
                 ).
          ENDIF.
          <ls_po_item>-data-ebelp  = get_next_item_number( ).

        ENDIF.
        <ls_po_item>-datax-ebelp = abap_true.
        IF is_ref_item IS NOT INITIAL.
          set_item_component_id( CHANGING cs_item = <ls_po_item> ).
        ENDIF.


        " Update & Delete
      WHEN gc_update OR gc_delete.

        " Check if the specified item is found
        IF <ls_po_item> IS NOT ASSIGNED.
          IF is_prx_po_item-purchase_order_item_id IS NOT INITIAL
            AND is_prx_po_item-purchase_order_item_ext_ref_id IS NOT INITIAL.
            gif_msg_log->add_messages_to_log(
               is_mepo_message  = VALUE #(
                           msgty = if_mmpur_po_constants=>gc_msg-type_error
                           msgid = if_mmpur_po_constants=>gc_msg-id
                           msgno = if_mmpur_po_constants=>gc_msg-no_024
                           msgv1 = CONV #( is_prx_po_item-purchase_order_item_id ) " Internal ID
                           msgv2 = CONV #( is_prx_po_item-purchase_order_item_ext_ref_id ) " External ID
                         )
                         check_msg_log_for_errors = abap_true
          ).
          ELSEIF is_prx_po_item-purchase_order_item_id IS NOT INITIAL.
            gif_msg_log->add_messages_to_log(
                 is_mepo_message  = VALUE #(
                             msgty = if_mmpur_po_constants=>gc_msg-type_error
                             msgid = if_mmpur_po_constants=>gc_msg-id
                             msgno = if_mmpur_po_constants=>gc_msg-no_007
                             msgv1 = CONV #( is_prx_po_item-purchase_order_item_id ) " Internal ID
                           )
                           check_msg_log_for_errors = abap_true
            ).
          ELSEIF is_prx_po_item-purchase_order_item_ext_ref_id IS NOT INITIAL.
            gif_msg_log->add_messages_to_log(
                 is_mepo_message  = VALUE #(
                             msgty = if_mmpur_po_constants=>gc_msg-type_error
                             msgid = if_mmpur_po_constants=>gc_msg-id
                             msgno = if_mmpur_po_constants=>gc_msg-no_008
                             msgv1 = CONV #( is_prx_po_item-purchase_order_item_ext_ref_id ) " External ID
                           )
                           check_msg_log_for_errors = abap_true
            ).
          ELSE.
            gif_msg_log->add_messages_to_log(
                 is_mepo_message  = VALUE #(
                             msgty = if_mmpur_po_constants=>gc_msg-type_error
                             msgid = if_mmpur_po_constants=>gc_msg-id
                             msgno = if_mmpur_po_constants=>gc_msg-no_009
                           )
                           check_msg_log_for_errors = abap_true
            ).
          ENDIF.
        ENDIF.

        IF lv_item_action_code = gc_delete OR gv_document_action = gc_delete.   " note 2937646
          "  Remark: deletion indicator is set to "L" since MEPO logic does not react correctly on "X" (see include LMEPOF2B)
          <ls_po_item>-data-loekz = 'L'.
          <ls_po_item>-datax-loekz = abap_true.
          set_change_reason( CHANGING cs_poorder_item = <ls_po_item> ).
        ENDIF.

      WHEN OTHERS.
        " Invalid action code
        gif_msg_log->add_messages_to_log(
            is_mepo_message  = VALUE #(
                         msgty = if_mmpur_po_constants=>gc_msg-type_error
                         msgid = if_mmpur_po_constants=>gc_msg-id
                         msgno = if_mmpur_po_constants=>gc_msg-no_006
                         msgv1 = CONV #( is_prx_po_item-purchase_order_item_id )
                       )
                       check_msg_log_for_errors = abap_true
        ).
    ENDCASE.

    " Set X-fields for "technical" fields
    <ls_po_item>-datax-ebelp_key = <ls_po_item>-data-ebelp.

*=================================================================================
* For deleted itesm no changes are accepted

    IF lv_item_action_code = gc_delete OR gv_document_action = gc_delete.  " note 2937646

      gif_msg_log->add_messages_to_log(
          is_mepo_message  = VALUE #(
                       ebeln = <ls_po_item>-data-ebeln
                       ebelp = <ls_po_item>-data-ebelp
                       msgty = if_mmpur_po_constants=>gc_msg-type_warning
                       msgid = if_mmpur_po_constants=>gc_msg-id
                       msgno = if_mmpur_po_constants=>gc_msg-no_026
                       msgv1 = CONV #( <ls_po_item>-data-ebelp )
                       msgv2 = CONV #( is_prx_po_item-purchase_order_item_id )
                     )
                     check_msg_log_for_errors = abap_false
      ).
      RETURN.

    ENDIF.
*=================================================================================
* Item fields mapping

    TRY.

        " External Reference Item ID
*       @mapping-application-interface: PURCHASE_ORDER_ITEM_EXT_REF_ID = MEPOITEM-EXTERNALREFERENCEID
        map_prx_field is_prx_po_item   purchase_order_item_ext_ref_id
                      <ls_po_item>-data externalreferenceid
                      space            gc_no_conv_exit.


        " Material ID
*       @mapping-application-interface: MATERIAL = MEPOITEM-EMATN
        IF is_prx_po_item-material IS NOT INITIAL.
          DATA lv_material TYPE matnr.
          gif_inbound_helper->convert_material(
                     EXPORTING iv_material = is_prx_po_item-material
                     IMPORTING ev_material = lv_material
          ).
          map_prx_field is_prx_po_item   material
                               <ls_po_item>-data ematn
                               lv_material      gc_no_conv_exit.
        ENDIF.
        " Requested quantity
        IF is_prx_po_item-requested_quantity IS NOT INITIAL.

          " Quantity
*         @mapping-application-interface: REQUESTED_QUANTITY-CONTENT = MEPOITEM-MENGE
          map_prx_field is_prx_po_item-requested_quantity content
                        <ls_po_item>-data                  menge
                        space                             gc_no_conv_exit.

        ENDIF.

        "LastProductionDate
        IF is_prx_po_item-zz1_lprod_da_pdi IS NOT INITIAL.

          map_field( EXPORTING iv_prx_field         = is_prx_po_item-zz1_lprod_da_pdi
                      iv_conv_exit         = gc_no_conv_exit
            IMPORTING ev_changed_indicator = <ls_po_item>-datax-ext-zz1_lprod_da_pdi
            CHANGING  cv_po_field          = <ls_po_item>-data-ext-zz1_lprod_da_pdi
         ).

*             <ls_po_item>-datax-ext-zz1_lprod_da_pdi = abap_true.

        ENDIF.

        "PoDeliveryDate
        IF is_prx_po_item-zz1_lexfct_da_pdi IS NOT INITIAL.

          map_field( EXPORTING iv_prx_field         = is_prx_po_item-zz1_lexfct_da_pdi
                      iv_conv_exit         = gc_no_conv_exit
            IMPORTING ev_changed_indicator = <ls_po_item>-datax-ext-zz1_lexfct_da_pdi
            CHANGING  cv_po_field          = <ls_po_item>-data-ext-zz1_lexfct_da_pdi
         ).

*             <ls_po_item>-datax-ext-zz1_lprod_da_pdi = abap_true.

        ENDIF.

        "DelayReasonDelivery
        IF is_prx_po_item-zz1_delay_po_pdi IS NOT INITIAL.

          map_field( EXPORTING iv_prx_field         = is_prx_po_item-zz1_delay_po_pdi
                      iv_conv_exit         = gc_no_conv_exit
            IMPORTING ev_changed_indicator = <ls_po_item>-datax-ext-zz1_delay_po_pdi
            CHANGING  cv_po_field          = <ls_po_item>-data-ext-zz1_delay_po_pdi
         ).

*             <ls_po_item>-datax-ext-zz1_lprod_da_pdi = abap_true.

        ENDIF.

        "DelayReasonDeliveryPd
        IF is_prx_po_item-zz1_delay_pln_wip_pdi IS NOT INITIAL.

          map_field( EXPORTING iv_prx_field         = is_prx_po_item-zz1_delay_pln_wip_pdi
                      iv_conv_exit         = gc_no_conv_exit
            IMPORTING ev_changed_indicator = <ls_po_item>-datax-ext-zz1_delay_pln_wip_pdi
            CHANGING  cv_po_field          = <ls_po_item>-data-ext-zz1_delay_pln_wip_pdi
         ).

*             <ls_po_item>-datax-ext-zz1_lprod_da_pdi = abap_true.

        ENDIF.
        "Shipping Instruction
        IF is_prx_po_item-zzevers IS NOT INITIAL.

          map_field( EXPORTING iv_prx_field         = is_prx_po_item-zzevers
                                             iv_conv_exit         = gc_no_conv_exit
                                   IMPORTING ev_changed_indicator = <ls_po_item>-datax-evers
                                   CHANGING  cv_po_field          = <ls_po_item>-data-evers
           ).
        ENDIF.


        "Purchase Contract
        IF is_prx_po_item-zzkonnr IS NOT INITIAL.
          zcl_sd_btp_contract=>check_contract_doctype( is_prx_po_item-zzkonnr ).

          IF zcl_sd_btp_contract=>gv_btp_contract = abap_true.
            map_field( EXPORTING iv_prx_field         = is_prx_po_item-zzkonnr
                                               iv_conv_exit         = gc_no_conv_exit
                                     IMPORTING ev_changed_indicator = <ls_po_item>-datax-konnr
                                     CHANGING  cv_po_field          = <ls_po_item>-data-konnr
             ).
            zcl_sd_btp_contract=>get_contract( <ls_po_item>-data-konnr ).
          ENDIF.
        ENDIF.

        "Purchase Contract Item
        IF is_prx_po_item-zzktpnr IS NOT INITIAL.
          IF zcl_sd_btp_contract=>gv_btp_contract = abap_true.
            map_field( EXPORTING iv_prx_field         = is_prx_po_item-zzktpnr
                                               iv_conv_exit         = gc_no_conv_exit
                                     IMPORTING ev_changed_indicator = <ls_po_item>-datax-ktpnr
                                     CHANGING  cv_po_field          = <ls_po_item>-data-ktpnr
             ).

            zcl_sd_btp_contract=>get_contract_item( <ls_po_item>-data-ktpnr ).
          ENDIF.
        ENDIF.

        IF is_prx_po_item-zzkonnr IS INITIAL AND
          <ls_po_item>-data-konnr IS NOT INITIAL AND
          <ls_po_item>-data-ktpnr IS NOT INITIAL.
          SELECT Material  "#EC CI_SEL_NESTED
            FROM I_PurchaseContractAPI01 AS icontr_head
              JOIN I_PurchaseContractItemAPI01 AS icontr_item
                ON icontr_head~PurchaseContract = icontr_item~PurchaseContract
            WHERE icontr_head~PurchaseContract     = @<ls_po_item>-data-konnr AND
                  icontr_item~PurchaseContractItem = @<ls_po_item>-data-ktpnr AND
                  icontr_head~PurchaseContractType = 'ZMTF'
            INTO @DATA(lv_size) UP TO 1 ROWS.
          ENDSELECT.
          IF sy-subrc = 0.
            IF lv_size <> <ls_po_item>-data-ematn.
              CLEAR: <ls_po_item>-data-konnr, <ls_po_item>-data-ktpnr.
              map_field( EXPORTING iv_prx_field         = is_prx_po_item-zzkonnr
                                                 iv_conv_exit         = gc_no_conv_exit
                                       IMPORTING ev_changed_indicator = <ls_po_item>-datax-konnr
                                       CHANGING  cv_po_field          = <ls_po_item>-data-konnr
               ).
              map_field( EXPORTING iv_prx_field         = is_prx_po_item-zzktpnr
                                                 iv_conv_exit         = gc_no_conv_exit
                                       IMPORTING ev_changed_indicator = <ls_po_item>-datax-ktpnr
                                       CHANGING  cv_po_field          = <ls_po_item>-data-ktpnr
               ).
            ENDIF.
          ENDIF.
        ENDIF.

        "Shipping Instruction
        IF is_prx_po_item-zz1_custom_stat_pdi IS NOT INITIAL.

          map_field( EXPORTING iv_prx_field         = is_prx_po_item-zz1_custom_stat_pdi
                                             iv_conv_exit         = gc_no_conv_exit
                                   IMPORTING ev_changed_indicator = <ls_po_item>-datax-zz1_custom_stat_pdi
                                   CHANGING  cv_po_field          = <ls_po_item>-data-zz1_custom_stat_pdi
           ).
        ENDIF.

        set_change_reason( CHANGING cs_poorder_item = <ls_po_item> ).
      CATCH cx_mmpur_integration_soa_exc INTO DATA(lo_mmpur_integration_soa_exc). " Exception class for Purchase Order integration
        DATA(ls_bapiret2) = lo_mmpur_integration_soa_exc->convert_me_to_bapiret2( ).
        gif_msg_log->add_messages_to_log( is_mepo_message =
            VALUE #( ebeln = <ls_po_item>-data-ebeln
                     ebelp = <ls_po_item>-data-ebelp
                     msgty = ls_bapiret2-type
                     msgid = ls_bapiret2-id
                     msgno = ls_bapiret2-number
                     msgv1 = ls_bapiret2-message_v1
                     msgv2 = ls_bapiret2-message_v2
                     msgv3 = ls_bapiret2-message_v3
                     msgv4 = ls_bapiret2-message_v4
            )
        ).
    ENDTRY.
    UNASSIGN <ls_po_item>.
  ENDMETHOD.


  METHOD notify.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 31.08.2023 | 23979     : Feature - [BUILD]Operational *
*              |            | DS4K959907                               *
*----------------------------------------------------------------------*
    " Notify PO feature engine about PO processing
    DATA(lv_feature) =  SWITCH purchasing_document_feature( gv_document_action
            WHEN gc_create THEN cl_mm_pur_po_api_feature_chk_2=>gc_created_ok " PO created by OData API
            WHEN gc_update THEN cl_mm_pur_po_api_feature_chk_2=>gc_updated_ok " PO updated by OData API
            WHEN gc_delete THEN cl_mm_pur_po_api_feature_chk_2=>gc_deleted_ok " PO deleted by OData API
    ).
    gif_ext_api->lif_mm_po_feature_engine~send_ok_notification(
                   iv_document_id = gs_po-data-ebeln
                   iv_feature     = lv_feature
    ).
  ENDMETHOD.


  METHOD overwrite_autodetermined_price.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 01.09.2023 | 23979     : Feature - [BUILD]Operational *
*              |            | DS4K959907                               *
*----------------------------------------------------------------------*
    CONSTANTS:
      lc_gross TYPE kntyp VALUE 'H',
      lc_intpr TYPE kntyp VALUE 'G',
      lc_inact TYPE kinak VALUE 'K'.

    CONSTANTS: lc_bonus TYPE c VALUE 'C'.


    FIELD-SYMBOLS: <ls_po_item_updated> LIKE LINE OF cs_po-po_items.

*=========================================================================

    " Read corresponding PO item
    LOOP AT  cs_po-po_items  ASSIGNING <ls_po_item_updated>.
      LOOP AT <ls_po_item_updated>-cond_items            "#EC CI_NESTED
              ASSIGNING FIELD-SYMBOL(<ls_item_cond>).

        " Set key fields
        <ls_item_cond>-datax-knumv_key = <ls_item_cond>-data-knumv.
        <ls_item_cond>-datax-kposn_key = <ls_item_cond>-data-kposn.
        <ls_item_cond>-datax-stunr_key = <ls_item_cond>-data-stunr.

        " Read corresponding PO item mapped in the first API call
        READ TABLE it_po_item_mapped  ASSIGNING FIELD-SYMBOL(<ls_po_item>)
                   WITH KEY data-ebelp = <ls_po_item_updated>-data-ebelp.
        IF sy-subrc <> 0.
          " unexpected situation
        ENDIF.

        " Check if the input price is different from the calculated price
        CHECK <ls_po_item>-data-netpr <> <ls_po_item_updated>-data-netpr OR
              cs_po-data-waers       <> <ls_po_item_updated>-data-waers OR
              <ls_po_item>-data-bprme <> <ls_po_item_updated>-data-bprme OR
              <ls_po_item>-data-peinh <> <ls_po_item_updated>-data-peinh.

        IF <ls_item_cond>-data-kntyp <> lc_gross       " not gross price"1659181
          AND <ls_item_cond>-data-kntyp <> lc_intpr    " not internal price"1835071
          AND <ls_item_cond>-data-koaid <> lc_bonus             " not bonus
          AND <ls_item_cond>-data-kstat IS INITIAL.             " not stat.

          gif_ext_api->lif_po_handler~delete_condition(
              is_komv        = <ls_item_cond>-data             " Pricing Communications-Condition Record
              iv_item_number = <ls_po_item>-data-ebelp    " Item Number of Purchasing Document
          ).
        ELSE.
          " validate header data
          IF "ls_header-waers NE <ls_cond>-waers AND
            <ls_po_item>-data-netpr IS NOT INITIAL   AND    "1659181
            <ls_item_cond>-data-kntyp EQ lc_gross    AND
            <ls_item_cond>-data-kinak NE lc_inact.

            " Price
            <ls_item_cond>-data-kbetr  = <ls_po_item>-data-netpr.
            <ls_item_cond>-datax-kbetr = abap_true.

            " Currency
            <ls_item_cond>-data-waers  = cs_po-data-waers.
            <ls_item_cond>-datax-waers = abap_true.

            " manual update.                                           "1085146
            <ls_item_cond>-data-ksteu  = 'C'.               "1085146
            <ls_item_cond>-datax-ksteu = abap_true.
            <ls_item_cond>-data-kmprs  = 'X'.               "1085146
            <ls_item_cond>-datax-kmprs = abap_true.

            " Order Price Unit (Purchasing) different
            IF <ls_item_cond>-data-kmein <> <ls_po_item>-data-bprme AND "932236
               <ls_po_item>-data-bprme IS NOT INITIAL.
              <ls_item_cond>-data-kmein  = <ls_po_item>-data-bprme.
              <ls_item_cond>-datax-kmein = abap_true.
            ENDIF.

            " Price unit is different
            IF <ls_item_cond>-data-kpein <> <ls_po_item>-data-peinh AND
               <ls_po_item>-data-peinh IS NOT INITIAL.
              <ls_item_cond>-data-kpein  = <ls_po_item>-data-peinh.
              <ls_item_cond>-datax-kpein = abap_true.
            ENDIF.
                                                            "932236
          ENDIF.
        ENDIF.

      ENDLOOP.
    ENDLOOP.

*====================================================================================

    gif_ext_api->lif_po_handler~set_data( is_po = cs_po ).

    DATA lt_message TYPE mepo_t_messages_bapi.

    gif_ext_api->lif_po_handler~check_and_enrich_po(
       EXPORTING iv_single_flush             = abap_true
                 iv_single_condition_process = abap_true
       IMPORTING es_po                       = cs_po
                 et_messages                 = lt_message
    ).
    gif_msg_log->add_messages_to_log( it_mepo_message          = lt_message
                                               check_msg_log_for_errors = abap_true
    ).
  ENDMETHOD.


  METHOD post_po.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 31.08.2023 | 23979     : Feature - [BUILD]Operational *
*              |            | DS4K959907                               *
*----------------------------------------------------------------------*
    DATA:
          lt_message       TYPE mepo_t_messages_bapi.
    gif_ext_api->lif_po_handler~post_po( IMPORTING es_porder_result  = gs_po
                                                              et_messages       = lt_message ).
    gif_msg_log->add_messages_to_log( it_mepo_message          = lt_message
                                               check_msg_log_for_errors = abap_true
    ).

    " Close the po-handler
    gif_ext_api->lif_po_handler~close_po( ).
  ENDMETHOD.


  METHOD set_item_component_id.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 01.09.2023 | 23979     : Feature - [BUILD]Operational *
*              |            | DS4K959907                               *
*----------------------------------------------------------------------*

    cs_item-datax-ebelp_key = cs_item-data-ebelp.
    IF cs_item-account_items IS NOT INITIAL.
      LOOP AT cs_item-account_items ASSIGNING FIELD-SYMBOL(<ls_account_items>).
        <ls_account_items>-id = gif_ext_api->lif_po_handler~get_id( ).
      ENDLOOP.
    ENDIF.

    IF cs_item-schedule_items IS NOT INITIAL.
      LOOP AT cs_item-schedule_items ASSIGNING FIELD-SYMBOL(<ls_schedule_items>).
        <ls_schedule_items>-id = gif_ext_api->lif_po_handler~get_id( ).
        <ls_schedule_items>-data-ebelp = cs_item-data-ebelp.
        <ls_schedule_items>-datax-ebelp_key = cs_item-data-ebelp.
        <ls_schedule_items>-data-menge = cs_item-data-menge.
      ENDLOOP.
    ENDIF.

    IF cs_item-vas_items IS NOT INITIAL.
      LOOP AT cs_item-vas_items ASSIGNING FIELD-SYMBOL(<ls_vas_items>).
        <ls_vas_items>-id = gif_ext_api->lif_po_handler~get_id( ).
      ENDLOOP.
    ENDIF.
  ENDMETHOD.


  METHOD set_po_data.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 31.08.2023 | 23979     : Feature - [BUILD]Operational *
*              |            | DS4K959907                               *
*----------------------------------------------------------------------*
    DATA:
          lt_message       TYPE mepo_t_messages_bapi.
*===========================================================================================
* Create / Update PO

    gif_ext_api->lif_po_handler~set_data( is_po = gs_purchase_order ).

    gif_ext_api->lif_po_handler~check_and_enrich_po( EXPORTING iv_single_flush = abap_false
                                                     IMPORTING es_po           = gs_po
                                                              et_messages     = lt_message ).
    gif_msg_log->add_messages_to_log( it_mepo_message          = lt_message
                                               check_msg_log_for_errors = abap_true
    ).
  ENDMETHOD.


  METHOD validate_document_type.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 04.09.2023 | 23979     : Feature - [BUILD]Operational *
*              |            | DS4K959907                               *
*----------------------------------------------------------------------*
    " Initialize the item interval counter
    IF gv_item_number_interval IS INITIAL.
      gv_item_number_interval = 10.
    ENDIF.
  ENDMETHOD.


  METHOD read_change_reason.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 20.12.2023 | 23979     : Feature - [BUILD]Operational *
*              |            | DS4K959907                               *
*----------------------------------------------------------------------*
    TYPES: BEGIN OF ltyp_s_data,
             zz1_chngreason TYPE zz1_chngreason,
           END OF ltyp_s_data.

    DATA: BEGIN OF ls_filter,
            esart            TYPE esart,
            zsd_process_type TYPE zsd_process_type,
          END OF ls_filter.

    DATA: lt_out   TYPE STANDARD TABLE OF ltyp_s_data.
    TRY.
        ls_filter-esart = gv_bsart.
        ls_filter-zsd_process_type = gv_process_type.
        zcl_pe_hm_complex=>get_table( EXPORTING iv_id           = 'EB209CAFFE131EDEA7C8926E6F101F5E'
                                        is_filter = ls_filter
                                        iv_mapping_type = zcl_pe_hm_complex=>gc_s_mapping_type-names
                              IMPORTING et_table        = lt_out ).
      CATCH zcx_pe_hm.
        CLEAR lt_out.
    ENDTRY.

    IF lt_out IS NOT INITIAL.
      GV_CHNGREASON = lt_out[ 1 ].
    ENDIF.
  ENDMETHOD.


  METHOD set_po_id.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 23.01.2024 | 23979     : Feature - [BUILD]Operational *
*              |            | DS4K959907                               *
*----------------------------------------------------------------------*

    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        input  = is_inbound_message-purchase_order-purchase_order_id
      IMPORTING
        output = rv_ebeln.
  ENDMETHOD.


  METHOD set_change_reason.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 19.02.2024 | 23979     : Feature - [BUILD]Operational *
*              |            | DS4K959907                               *
*----------------------------------------------------------------------*

    IF gv_chngreason IS NOT INITIAL.
      map_field( EXPORTING iv_prx_field         = gv_chngreason
                                        iv_conv_exit         = gc_no_conv_exit
                              IMPORTING ev_changed_indicator = CS_POORDER_ITEM-datax-zz1_chngreason_pdi
                              CHANGING  cv_po_field          = CS_POORDER_ITEM-data-zz1_chngreason_pdi
      ).
    ENDIF.
  ENDMETHOD.
ENDCLASS.