class ZCL_SD_PAL_SO_PACKING_TYPE definition
  public
  final
  create public .

public section.

  interfaces IF_BADI_INTERFACE .
  interfaces IF_SD_SLS_FIELDPROP_ITEM .
  interfaces IF_SD_SLS_MODIFY_ITEM .
protected section.
private section.
ENDCLASS.



CLASS ZCL_SD_PAL_SO_PACKING_TYPE IMPLEMENTATION.


  METHOD if_sd_sls_modify_item~modify_fields.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 08.12.2022 | 15624     : [Development] PAL Enhancemen *
*              |            | DS4K937655                               *
*----------------------------------------------------------------------*
* KALSHZHA     | 12.05.2023 | 21261     :CR PAL Enhancement Piece Pick & Full Cas *
*              |            | DS4K952194                               *
*----------------------------------------------------------------------*
    CONSTANTS lc_ldb_pernr_tab   TYPE string VALUE `(SAPMV45A)XVBEP[]`.

    DATA: lo_atp_pal_tsrs_chk_imp TYPE REF TO zcl_sd_atp_pal_tsrs_chk_imp ##NEEDED,
          lt_order_schedule_lines TYPE TABLE OF vbep.
    FIELD-SYMBOLS <lt_pernr_tab> TYPE ANY TABLE.

    DATA lv_vbtyp TYPE vbak-vbtyp.

    IF documentprocessingmode NE 'CREATE'
    AND documentprocessingmode NE 'CHANGE'.
      RETURN.
    ENDIF.
    IF documentitemprocessingstep NE 'END'.
      RETURN.
    ENDIF.

    ASSIGN (lc_ldb_pernr_tab) TO <lt_pernr_tab>.
    IF sy-subrc = 0.

      lt_order_schedule_lines = CORRESPONDING #( <lt_pernr_tab> ).
      DELETE lt_order_schedule_lines WHERE posnr <> salesdocumentitem-salesdocumentitem.

      IF lt_order_schedule_lines IS NOT INITIAL.
        SORT lt_order_schedule_lines BY req_dlvdate ASCENDING.
        READ TABLE lt_order_schedule_lines ASSIGNING FIELD-SYMBOL(<ls_order_schedule_lines>) INDEX 1.
        IF sy-subrc = 0.

          SELECT SINGLE sddocumentcategory
            INTO @lv_vbtyp
            FROM i_salesdocumenttype
            WHERE salesdocumenttype EQ @salesdocument-salesdocumenttype.
          IF sy-subrc EQ 0.
            salesdocumentitem_extension_o = salesdocumentitem_extension_i.
            DATA(lo_helper) = NEW zcl_sd_packing_type_logic( ).
            salesdocumentitem_extension_o-zz1_zpacking_type_sdi = lo_helper->get_packing_type(
              iv_vkorg = salesdocument-salesorganization
              iv_vtweg = salesdocument_extension-zz1_zsup_vtweg_sdh
              iv_matdiv = salesdocumentitem_extension_i-zzfsh_mg_at1
              iv_matnr = salesdocumentitem-material
              iv_doccat =  CONV #( lv_vbtyp )
              iv_doctype = salesdocument-salesdocumenttype
              iv_quant = salesdocumentitem-orderquantity
              iv_werks =  salesdocumentitem-productionplant
              iv_pstyv = salesdocumentitem-salesdocumentitemcategory
              iv_delivery_date = <ls_order_schedule_lines>-req_dlvdate
            ).
            IF salesdocumentitem_extension_o-zz1_zpacking_type_sdi IS NOT INITIAL.
              DATA(lif_buffer) = cl_atp_buffer_manager=>get_vbap_buffer( ).
              DATA lo_key      TYPE REF TO data.
              DATA lt_vbap_key TYPE TABLE OF vbap.
              lt_vbap_key = VALUE #( ( vbeln = salesdocumentitem-salesdocument posnr = salesdocumentitem-salesdocumentitem ) ).
              lo_key = lif_buffer->convert_to_buffer_key( REF #( lt_vbap_key ) ).
              DATA: lo_data          TYPE REF TO data,
                    lo_key_not_found TYPE REF TO data.
              FIELD-SYMBOLS <lt_key_not_found> TYPE ANY TABLE.
              lif_buffer->get(
                 EXPORTING
                   it_key           = lo_key
                 IMPORTING
                   et_data          = lo_data
                   et_key_not_found = lo_key_not_found
              ).

              ASSIGN lo_key_not_found->* TO <lt_key_not_found>.
              IF 0 < lines( <lt_key_not_found> ).
                RETURN.
              ENDIF.

              FIELD-SYMBOLS <lt_vbap> TYPE ANY TABLE.
              FIELD-SYMBOLS <ls_vbap> TYPE vbap.
              ASSIGN lo_data->* TO <lt_vbap>.
              LOOP AT <lt_vbap> ASSIGNING <ls_vbap> ##GEN_OK.
                <ls_vbap>-zz1_zpacking_type_sdi = salesdocumentitem_extension_o-zz1_zpacking_type_sdi.
              ENDLOOP.
              IF sy-subrc EQ 0.
                lif_buffer->set( <lt_vbap> ).
              ENDIF.
            ENDIF.
          ENDIF.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDMETHOD.


  METHOD if_sd_sls_fieldprop_item~set_field_prop.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 08.12.2022 | 15624     : [Development] PAL Enhancemen *
*              |            | DS4K937655                               *
*----------------------------------------------------------------------*
    DATA:
      lv_pt_filed TYPE sd_fieldname,
      ls_tvak     TYPE tvak.

    DATA(lo_helper) = NEW zcl_sd_packing_type_logic( ).

    TRY.
        lv_pt_filed = zcl_pe_hm_basic=>get_value( '1143' ).
      CATCH zcx_pe_hm INTO DATA(lo_exc).
        MESSAGE lo_exc.
        RETURN.
    ENDTRY.

    CALL FUNCTION 'READ_TVAK'
      EXPORTING
        iv_auart = salesdocument-salesdocumenttype
      IMPORTING
        es_tvak  = ls_tvak.

    IF lo_helper->is_excluded( iv_doccat =  CONV #( ls_tvak-vbtyp )  iv_doctype = salesdocument-salesdocumenttype ) EQ abap_true.
      READ TABLE field_properties ASSIGNING FIELD-SYMBOL(<ls_fields>) WITH KEY field_name = lv_pt_filed.
      IF sy-subrc = 0.
        <ls_fields>-invisible = abap_true.
      ENDIF.
    ENDIF.
  ENDMETHOD.
ENDCLASS.