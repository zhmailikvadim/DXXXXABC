class ZCL_SD_RETURN_DATA_PROVIDER definition
  public
  create public .

public section.

  class-data GV_INV_REFERENCE_INDICATOR type CHAR2 .
  class-data GV_WMS_SPECIFIC type ZSD_WMS_SPECIFIC .
  class-data GV_WMS_CALL type ZSD_WMS_SPECIFIC .
  class-data GV_ACTIVE type ABAP_BOOLEAN .
  constants MC_SRC_CURRENT_SYSTEM type CHAR1 value 'I' ##NO_TEXT.
  constants MC_SRC_LEGACY_SYSTEM type CHAR1 value 'L' ##NO_TEXT.
  constants MC_MANUAL_REFERENCE type ZZ1_INVREF_ID value '05' ##NO_TEXT.
  class-data GTS_LEGACY_PRICE type ZSD_TT_S_RETURN_LEGACY_PRICE .
  class-data GTS_REFERENCED_MATERIALS type ZSD_TT_S_RETURN_REF_MATNR .
  class-data GV_API_PROXY_CALL type BOOLEAN value ABAP_FALSE ##NO_TEXT.

  methods PROCESS_MATERIALS_API
    importing
      !IS_REQUEST type ZSD_S_RETURN_MAT_REQUEST
    exporting
      !ES_RESPONSE type ZSD_S_RETURN_MAT_RESPONSE .
  methods CHECK_MATERIALS_GUI
    importing
      !IS_HEADER type ZSD_S_RETURN_HEADER
      !IV_MATERIAL_QTY type KWMENG optional
      !IT_MATNR type VBAP_T
    exporting
      !EV_ERROR_MESS type STRING
    changing
      !CS_MATNR type VBAP optional
      !CT_XVBAP type TAB_XYVBAP .
  methods GET_REFERENCE_INVOICES
    importing
      !IS_HEADER type ZSD_S_RETURN_HEADER
      !IT_PROCESSED_MATNR type TAB_XYVBAP
      !IS_VBAP type VBAP
    exporting
      !ET_REFERENCE_INVOICES type ZSD_TT_RETURN_INV .
  methods IS_ACTIVE
    importing
      !IS_HEADER type ZSD_S_RETURN_HEADER
    returning
      value(RV_ACTIVE) type ABAP_BOOLEAN .
  methods SAVE_LEGACY_PRICE
    importing
      !IS_HEADER type ZSD_S_RETURN_HEADER
      !IV_MATNR type MATNR
      !IV_MAT_POSNR type POSNR
      !IV_INVOICE type VBELN
      !IV_INV_POSNR type POSNR .
protected section.
private section.

  types:
    BEGIN OF gtyp_s_legacy_so,
      zsd_leg_vkorg TYPE zsd_leg_vkorg,
      zsd_leg_vtweg TYPE zsd_leg_vtweg,
    END OF gtyp_s_legacy_so .
  types:
    BEGIN OF gtyp_s_filter,
      vkorg TYPE vkorg,
      vtweg TYPE vtweg,
      auart TYPE auart,
    END OF gtyp_s_filter .
  types:
    BEGIN OF gtyp_s_filter_so,
      vkorg TYPE vkorg,
      vtweg TYPE vtweg,
    END OF gtyp_s_filter_so .
  types:
    BEGIN OF gtyp_s_lpd_data,
      zsd_lpd_type                TYPE zsd_lpd_type,
      zsd_cons                    TYPE zsd_cons,
      zsd_leg_inv                 TYPE zsd_leg_inv,
      zsd_lpd_history_period      TYPE zsd_lpd_history_period,
      zsd_lpd_create_wo_reference TYPE zsd_lpd_create_wo_reference,
      zsd_wms_specific            TYPE zsd_wms_specific,
    END OF gtyp_s_lpd_data .

  class-data GV_VKORG type VKORG .
  class-data GV_VTWEG type VTWEG .
  class-data GV_AUART type AUART .
  class-data GV_KUNNR type KUNNR .
  class-data GV_LPD_TYPE type CHAR1 .
  class-data GV_CONS_CHECK type CHAR1 .
  class-data GV_LEG_INV type CHAR1 .
  class-data GV_MONTHS type I value 24 ##NO_TEXT.
  class-data GV_CREATION_WO_REF_ALLOWED type BOOLEAN value ABAP_FALSE ##NO_TEXT.
  constants MC_LOWEST_PRICE type CHAR1 value 1 ##NO_TEXT.
  constants MC_LATEST_PRICE type CHAR1 value 2 ##NO_TEXT.
  class-data GR_FKART type ZSD_TT_BILLING_TYPE_RANGE .
  constants MC_LOPD type ZZ1_INVREF_ID value '01' ##NO_TEXT.
  constants MC_LAPD type ZZ1_INVREF_ID value '02' ##NO_TEXT.
  constants MC_LOPD_CONS type ZZ1_INVREF_ID value '03' ##NO_TEXT.
  constants MC_LAPD_CONS type ZZ1_INVREF_ID value '04' ##NO_TEXT.
  constants MC_KAPPL_V type KAPPL value 'V' ##NO_TEXT.
  constants MC_KSCHL_ZLST type KSCHA value 'ZLST' ##NO_TEXT.

  methods GET_SO_DATA
    importing
      !IS_HEADER type ZSD_S_RETURN_HEADER
      !IT_MATNR type ZSD_TT_MATNR
    returning
      value(RT_SO_LIST) type ZSD_TT_RETURN_INV .
  methods GET_LEGACY_SO_DATA
    importing
      !IS_HEADER type ZSD_S_RETURN_HEADER   ##NEEDED
      !IV_LATEST_DATE type DATS
      !IT_MATNR type ZSD_TT_MATNR
    returning
      value(RT_SO_LIST) type ZSD_TT_RETURN_INV .
  methods SET_REFERENCE_INDICATOR .
  methods AGGREGATE_INVOICES
    importing
      !IT_INVOICES_IN type ZSD_TT_RETURN_INV
      !IV_SYSTEM type CHAR1
    returning
      value(RT_INVOICES_OUT) type ZSD_TT_RETURN_INV .
  methods GET_LEGACY_PARAMETERS
    importing
      !IS_HEADER type ZSD_S_RETURN_HEADER
    exporting
      !EV_KUNAG type KUNAG
      !ET_LEGACY_SO type ZSD_TT_RETURN_LEGACY_SO .
  methods GET_LEGACY_MATERIALS
    importing
      !IT_MATNR type ZSD_TT_MATNR
    exporting
      !ET_LEGACY_MATNR type ZSD_TT_RETURN_MATNR_MAPPING .
  methods CHECK_USED_LEGACY_INVOICES
    changing
      !CT_SO_LIST type ZSD_TT_RETURN_INV .
  methods CREATE_INVOICE_REFERENCE_API
    changing
      !CS_MATNR type ZSD_S_RETURN_MATERIALS_IN
      !CS_INVOICE type ZSD_S_RETURN_INV
      !CT_MAT_REF type ZSD_TT_RETURN_INV_RESULTS .
  methods CHECK_INVOICE_REFERENCE_GUI
    importing
      !IT_MATNR type VBAP_T
    exporting
      !EV_ERROR_MESS type STRING
    changing
      !CT_INVOICES type ZSD_TT_RETURN_INV
      !CT_XVBAP type TAB_XYVBAP .
  methods GET_LIST_PRICE
    changing
      !CS_RESPONSE type ZSD_S_RETURN_MAT_RESPONSE .
  methods GET_GENERAL_ARTICLES
    changing
      !CT_MATERIALS type ZSD_TT_RETURN_MAT_PRICING .
  methods GET_PRICES_A545
    changing
      !CT_MATERIALS type ZSD_TT_RETURN_MAT_PRICING
      !CS_RESPONSE type ZSD_S_RETURN_MAT_RESPONSE .
  methods GET_PRICES_A515
    changing
      !CT_MATERIALS type ZSD_TT_RETURN_MAT_PRICING
      !CS_RESPONSE type ZSD_S_RETURN_MAT_RESPONSE .
  methods GET_PRICES_A977
    changing
      !CT_MATERIALS type ZSD_TT_RETURN_MAT_PRICING
      !CS_RESPONSE type ZSD_S_RETURN_MAT_RESPONSE .
  methods MOVE_PRICING_DATA
    importing
      !IT_PRICING_DATA type ZSD_TT_RETURN_PRICING_DATA
    changing
      !CT_MATERIALS type ZSD_TT_RETURN_MAT_PRICING
      !CS_RESPONSE type ZSD_S_RETURN_MAT_RESPONSE .
  methods GET_LEGACY_INVOICE
    importing
      !IS_HEADER type ZSD_S_RETURN_HEADER
      !IV_MATNR type MATNR
      !IV_INVOICE type VBELN
      !IV_POSITION type POSNR
    returning
      value(RS_INVOICE) type ZSD_S_RETURN_INV .
ENDCLASS.



CLASS ZCL_SD_RETURN_DATA_PROVIDER IMPLEMENTATION.


  METHOD aggregate_invoices.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 10.08.2022 | 11866     : Customer Return - LPD Invoice*
*              |            | standalone search, DS4K922540            *
*----------------------------------------------------------------------*
    DATA:
      lt_invoices TYPE zsd_tt_return_inv.

    IF it_invoices_in IS NOT INITIAL.
      lt_invoices = it_invoices_in.
      SORT lt_invoices BY vbeln posnr.
      CLEAR rt_invoices_out.

      DATA(lv_lines) = lines( lt_invoices ).
      DATA(ls_line)  = lt_invoices[ 1 ].
      LOOP AT lt_invoices ASSIGNING FIELD-SYMBOL(<ls_so_list>).
        IF  ls_line-vbeln = <ls_so_list>-vbeln
        AND ls_line-posnr = <ls_so_list>-posnr
        AND sy-tabix > 1.
          ls_line-kbmeng = ls_line-kbmeng + <ls_so_list>-kbmeng.
          ls_line-rfmng  = ls_line-rfmng  + <ls_so_list>-rfmng.
        ELSEIF sy-tabix > 1.
          ls_line-zinv_source = iv_system.
          ls_line-opqty       = ls_line-fklmg - ls_line-rfmng.
          ls_line-netpr       = ls_line-netwr / ls_line-fklmg.
          APPEND ls_line TO rt_invoices_out.
          ls_line = <ls_so_list>.
        ENDIF.
      ENDLOOP.
      IF  lv_lines > 1
      AND ( ls_line-vbeln = <ls_so_list>-vbeln AND ls_line-posnr = <ls_so_list>-posnr )
      AND ( ls_line-vbeln = lt_invoices[ lv_lines - 1 ]-vbeln AND ls_line-posnr = lt_invoices[ lv_lines - 1 ]-posnr ).
        ls_line-kbmeng = ls_line-kbmeng + <ls_so_list>-kbmeng.
        ls_line-rfmng  = ls_line-rfmng  + <ls_so_list>-rfmng.
      ENDIF.
      ls_line-zinv_source = iv_system.
      ls_line-opqty       = ls_line-fklmg - ls_line-rfmng.
      ls_line-netpr       = ls_line-netwr / ls_line-fklmg.
      APPEND ls_line TO rt_invoices_out.
    ENDIF.

  ENDMETHOD.


  METHOD set_reference_indicator.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 21.06.2022 | 11866     : Customer Return - LPD Invoice*
*              |            | standalone search, DS4K922540            *
*----------------------------------------------------------------------*

    CASE gv_lpd_type.
      WHEN mc_lowest_price.
        IF gv_cons_check = abap_true.
          gv_inv_reference_indicator = mc_lopd_cons.
        ELSE.
          gv_inv_reference_indicator = mc_lopd.
        ENDIF.
      WHEN mc_latest_price.
        IF gv_cons_check = abap_true.
          gv_inv_reference_indicator = mc_lapd_cons.
        ELSE.
          gv_inv_reference_indicator = mc_lapd.
        ENDIF.
    ENDCASE.

  ENDMETHOD.


  METHOD get_legacy_parameters.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 10.08.2022 | 11866     :Customer Return - LPD Invoice *
*              |            | standalone search, DS4K922540            *
*----------------------------------------------------------------------*
* KASHTULA     | 21.03.2023 | 19218     : Customer Return LPD logic    *
*              |            | adjustment, DS4K947763                   *
*----------------------------------------------------------------------*

    CONSTANTS:
      lc_zcuafs             TYPE bu_id_type VALUE 'ZCUAFS'.

    DATA:
      lt_legacy_so TYPE STANDARD TABLE OF gtyp_s_legacy_so.

    CLEAR: ev_kunag, et_legacy_so.
    SELECT SINGLE idnumber ##WARN_OK
      FROM but0id
      WHERE partner          = @is_header-kunnr
        AND type             = @lc_zcuafs
        AND valid_date_from <= @sy-datlo
        AND valid_date_to   >= @sy-datlo
      INTO @ev_kunag.

    IF sy-subrc = 0.
      TRY.
          zcl_pe_hm_complex=>get_table(
            EXPORTING
              iv_id           = '024F85009E261EED8591944D69A540D2'
              is_filter       = VALUE gtyp_s_filter_so( vkorg = is_header-vkorg
                                                        vtweg = is_header-vtweg )
              iv_mapping_type = zcl_pe_hm_complex=>gc_s_mapping_type-names
            IMPORTING
              et_table        = lt_legacy_so ).

          IF lt_legacy_so IS NOT INITIAL.
            LOOP AT lt_legacy_so ASSIGNING FIELD-SYMBOL(<ls_legacy_so>).
              APPEND VALUE #( vkorg = <ls_legacy_so>-zsd_leg_vkorg
                              vtweg = <ls_legacy_so>-zsd_leg_vtweg ) TO et_legacy_so.
            ENDLOOP.
          ENDIF.
        CATCH zcx_pe_hm.
          RETURN.
      ENDTRY.
    ENDIF.

  ENDMETHOD.


  METHOD get_reference_invoices.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 25.08.2022 | 11866     : FB_11866_SD - O2C - Customer *
*              |            | Return - LPD In, DS4K922540              *
*----------------------------------------------------------------------*
* KASHTULA     | 09.11.2022 | 15096     :Customer Return - LPD Logic   *
*              |            | adjustment, DS4K935029                   *
*----------------------------------------------------------------------*

    DATA:
      lt_matnr TYPE zsd_tt_matnr.

    CLEAR: et_reference_invoices.
    CHECK is_active( is_header = is_header ) = abap_true.

    lt_matnr = VALUE #( ( matnr = is_vbap-matnr ) ).
    et_reference_invoices = get_so_data( is_header = is_header
                                         it_matnr  = lt_matnr ).

    LOOP AT it_processed_matnr INTO DATA(ls_material).
      " For item may be only one reference invoice.
      " If reference invoice is absent or open Qty is less than item quantity - there will be error message on SAVE stage
      IF ls_material-vgbel IS NOT INITIAL
      OR ls_material-zz1_ref_invoice_sdi IS NOT INITIAL.
        LOOP AT et_reference_invoices ASSIGNING FIELD-SYMBOL(<ls_inv>) WHERE matnr = ls_material-matnr "#EC CI_NESTED
                                                                         AND  ( ( vbeln = ls_material-vgbel AND
                                                                                  posnr = ls_material-vgpos )
                                                                             OR ( vbeln = ls_material-zz1_ref_invoice_sdi AND
                                                                                  posnr = ls_material-zz1_ref_inv_item_sdi ) ).
          IF gv_cons_check = abap_true.
            <ls_inv>-opqty  = <ls_inv>-opqty  - ls_material-kwmeng.
            <ls_inv>-rfmng  = <ls_inv>-rfmng  + ls_material-kwmeng.
            <ls_inv>-kbmeng = <ls_inv>-kbmeng + ls_material-kwmeng.
            CLEAR ls_material-kwmeng.
          ENDIF.
        ENDLOOP.
      ENDIF.
    ENDLOOP.

    IF gv_cons_check = abap_true.
      DELETE et_reference_invoices WHERE opqty <= 0.
      " Provide reference invoice only in case when requested qty <= open qty
      IF  et_reference_invoices IS NOT INITIAL
      AND et_reference_invoices[ 1 ]-opqty < is_vbap-kwmeng.
        CLEAR et_reference_invoices.
      ENDIF.
    ENDIF.

  ENDMETHOD.


  METHOD get_list_price.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 21.06.2022 | 11866     : Customer Return - LPD Invoice*
*              |            | standalone search, DS4K922540            *
*----------------------------------------------------------------------*
* KASHTULA     | 09.11.2022 | 15096     :Customer Return - LPD Logic   *
*              |            | adjustment, DS4K935029                   *
*----------------------------------------------------------------------*
* MARTIRIA     | 15.09.2024 | 29078 : Adopt B2B programs for reading ZLST
*              |            | DS4K979724                               *
*----------------------------------------------------------------------*


    DATA:
     lt_mat_for_pricing TYPE zsd_tt_return_mat_pricing.

    SORT cs_response-materiallist BY pricing-pendingqty DESCENDING.
    LOOP AT cs_response-materiallist ASSIGNING FIELD-SYMBOL(<ls_matlist>) WHERE pricing-pendingqty IS NOT INITIAL.
      APPEND VALUE #( matnr = <ls_matlist>-material waerk = <ls_matlist>-pricing-currency ) TO lt_mat_for_pricing.
    ENDLOOP.
    SORT lt_mat_for_pricing BY matnr.

    get_general_articles(
      CHANGING
        ct_materials = lt_mat_for_pricing ).

    SORT cs_response-materiallist BY material.

    get_prices_a545(
      CHANGING
        ct_materials = lt_mat_for_pricing
        cs_response  = cs_response ).

    get_prices_a515(
      CHANGING
        ct_materials = lt_mat_for_pricing
        cs_response  = cs_response ).

    get_prices_a977(
      CHANGING
        ct_materials = lt_mat_for_pricing
        cs_response  = cs_response ).

    LOOP AT cs_response-materiallist ASSIGNING <ls_matlist> WHERE pricing-listprice = 0.
      CLEAR <ls_matlist>-pricing.
    ENDLOOP.

  ENDMETHOD.


  METHOD get_legacy_invoice.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 09.11.2022 | 15096     :Customer Return - LPD Logic   *
*              |            | adjustment, DS4K935029                   *
*----------------------------------------------------------------------*
* KASHTULA     | 21.03.2023 | 19218     : Customer Return LPD logic    *
*              |            | adjustment, DS4K947763                   *
*----------------------------------------------------------------------*

    DATA:
      lt_so_list TYPE zsd_tt_return_inv,
      lt_matnr   TYPE zsd_tt_matnr.

    DATA:
      lv_min_date  TYPE dats.

    CHECK ( iv_matnr IS NOT INITIAL AND iv_invoice IS NOT INITIAL AND iv_position IS NOT INITIAL ).

    TRY.
        lv_min_date = cl_bs_period_toolset_basics=>subtract_months_from_date(
                        iv_date   = sy-datlo
                        iv_months = gv_months ).
      CATCH cx_bs_period_toolset_basics.
        RETURN.
    ENDTRY.

    APPEND VALUE #( matnr = iv_matnr ) TO lt_matnr.

    get_legacy_parameters(
      EXPORTING
        is_header    = is_header
      IMPORTING
        ev_kunag     = DATA(lv_kunag)
        et_legacy_so = DATA(lt_legacy_so) ).

    get_legacy_materials(
      EXPORTING
        it_matnr        = lt_matnr
      IMPORTING
        et_legacy_matnr = DATA(lt_legacy_matnr)  ).

    IF  lv_kunag IS NOT INITIAL
    AND lt_legacy_so IS NOT INITIAL
    AND lt_legacy_matnr IS NOT INITIAL.
      TRY.
          zcl_sd_lpd_legacy_data=>get_legacy_invoice(
            EXPORTING
              iv_customer     = lv_kunag
              iv_invoice      = iv_invoice
              iv_position     = iv_position
              it_matnr        = lt_legacy_matnr
              iv_latest_date  = lv_min_date
              it_billing_type = gr_fkart
              it_legacy_so    = lt_legacy_so
            IMPORTING
              et_invoices     = lt_so_list ).
        CATCH cx_amdp_error.
          CLEAR lt_so_list.
      ENDTRY.
    ENDIF.

    IF lt_so_list IS INITIAL.
      RETURN.
    ELSE.
      lt_so_list = aggregate_invoices( it_invoices_in = lt_so_list
                                       iv_system      = mc_src_legacy_system ).

      SORT lt_so_list BY matnr vbeln posnr.
      READ TABLE lt_so_list INTO rs_invoice WITH KEY  matnr = iv_matnr
                                                      vbeln = iv_invoice
                                                      posnr = iv_position BINARY SEARCH.
      IF  sy-subrc <> 0.
        CLEAR rs_invoice.
      ENDIF.
    ENDIF.

  ENDMETHOD.


  METHOD get_prices_a515.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 09.11.2022 | 15096     :Customer Return - LPD Logic   *
*              |            | adjustment, DS4K935029                   *
*----------------------------------------------------------------------*
* MARTIRIA     | 15.09.2024 | 29078 : Adopt B2B programs for reading ZLST
*              |            | DS4K979724                               *
*----------------------------------------------------------------------*



    TRY.
        DATA(lv_pltyp) = zcl_pe_hm_basic=>get_value( iv_id = '418' ).
      CATCH zcx_pe_hm. " Harcode Manager
        RETURN.
    ENDTRY.

    " Select variant articles
    IF ct_materials IS NOT INITIAL.
      SORT ct_materials BY matnr.

      SELECT a~matnr, a~knumh
         FROM a515 AS a
         FOR ALL ENTRIES IN @ct_materials
         WHERE kappl = @mc_kappl_v
           AND kschl = @mc_kschl_zlst
           AND vkorg = @cs_response-salesorganization
           AND waerk = @ct_materials-waerk
           AND pltyp = @lv_pltyp
           AND matnr = @ct_materials-matnr
           AND datab <= @sy-datum
           AND datbi >= @sy-datum
         INTO TABLE @DATA(lt_a515).

      IF sy-subrc = 0.
        SORT lt_a515 BY knumh.
      SELECT conditionrecord, conditionratevalue, conditionratevalueunit
         FROM i_slsprcgconditionrecord
         FOR ALL ENTRIES IN @lt_a515
       WHERE conditionrecord = @lt_a515-knumh
       INTO TABLE @DATA(lt_price_data).

        IF sy-subrc = 0.
          LOOP AT lt_price_data ASSIGNING FIELD-SYMBOL(<ls_price>).
            READ TABLE lt_a515 ASSIGNING FIELD-SYMBOL(<ls_a515>) WITH KEY knumh = <ls_price>-conditionrecord BINARY SEARCH.
            IF sy-subrc = 0.
              LOOP AT cs_response-materiallist ASSIGNING FIELD-SYMBOL(<ls_matlist>) "#EC CI_NESTED
                                   WHERE material = <ls_a515>-matnr.
                <ls_matlist>-pricing-currency  = <ls_price>-conditionratevalueunit.
                <ls_matlist>-pricing-listprice = <ls_price>-conditionratevalue.
              ENDLOOP.
              DELETE ct_materials WHERE matnr = <ls_a515>-matnr. "#EC CI_STDSEQ
            ENDIF.
          ENDLOOP.
        ENDIF.
      ENDIF.
    ENDIF.

    " Select general articles
    IF ct_materials IS NOT INITIAL.
      CLEAR: lt_a515, lt_price_data.

      SELECT a~matnr, a~knumh
         FROM a515 AS a
         FOR ALL ENTRIES IN @ct_materials
         WHERE kappl = @mc_kappl_v
           AND kschl = @mc_kschl_zlst
           AND vkorg = @cs_response-salesorganization
           AND waerk = @ct_materials-waerk
           AND pltyp = @lv_pltyp
           AND matnr = @ct_materials-gen_matnr
           AND datab <= @sy-datum
           AND datbi >= @sy-datum
         INTO TABLE @lt_a515.

      IF sy-subrc = 0.
        SORT ct_materials BY gen_matnr.
        LOOP AT lt_a515 ASSIGNING <ls_a515>.
          LOOP AT ct_materials ASSIGNING FIELD-SYMBOL(<ls_material>) WHERE gen_matnr = <ls_a515>-matnr. "#EC CI_NESTED
            <ls_material>-knumh = <ls_a515>-knumh.
          ENDLOOP.
        ENDLOOP.

        SORT lt_a515 BY knumh.
        SELECT conditionrecord, conditionratevalue, conditionratevalueunit
         FROM i_slsprcgconditionrecord
          FOR ALL ENTRIES IN @lt_a515
          WHERE conditionrecord = @lt_a515-knumh
          INTO TABLE @lt_price_data.

        IF sy-subrc = 0.
          move_pricing_data(
            EXPORTING
              it_pricing_data = CONV zsd_tt_return_pricing_data( lt_price_data )
            CHANGING
              ct_materials    = ct_materials
              cs_response     = cs_response ).
        ENDIF.
      ENDIF.
    ENDIF.

  ENDMETHOD.


  METHOD get_prices_a545.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 09.11.2022 | 15096     :Customer Return - LPD Logic   *
*              |            | adjustment, DS4K935029                   *
*----------------------------------------------------------------------*

    " Variant articles
    IF ct_materials IS NOT INITIAL.
      SORT ct_materials BY matnr.

      SELECT a~matnr, a~knumh
         FROM a545 AS a
         FOR ALL ENTRIES IN @ct_materials
         WHERE kappl = @mc_kappl_v
           AND kschl = @mc_kschl_zlst
           AND vkorg = @cs_response-salesorganization
           AND vtweg = @cs_response-distributionchannel
           AND kunnr = @cs_response-soldtoparty
           AND matnr = @ct_materials-matnr
           AND datab <= @sy-datum
           AND datbi >= @sy-datum
         INTO TABLE @DATA(lt_a545).

      IF sy-subrc = 0.
        SORT lt_a545 BY knumh.
        SELECT knumh, kbetr, konwa
          FROM konp
          FOR ALL ENTRIES IN @lt_a545
          WHERE knumh = @lt_a545-knumh
          INTO TABLE @DATA(lt_price_data).

        IF sy-subrc = 0.
          LOOP AT lt_price_data ASSIGNING FIELD-SYMBOL(<ls_price>).
            READ TABLE lt_a545 ASSIGNING FIELD-SYMBOL(<ls_a545>) WITH KEY knumh = <ls_price>-knumh BINARY SEARCH.
            IF sy-subrc = 0.
              LOOP AT cs_response-materiallist ASSIGNING FIELD-SYMBOL(<ls_matlist>) "#EC CI_NESTED
                                                  WHERE material = <ls_a545>-matnr.
                <ls_matlist>-pricing-currency  = <ls_price>-konwa.
                <ls_matlist>-pricing-listprice = <ls_price>-kbetr.
              ENDLOOP.
              DELETE ct_materials WHERE matnr = <ls_a545>-matnr. "#EC CI_STDSEQ
            ENDIF.
          ENDLOOP.
        ENDIF.
      ENDIF.
    ENDIF.

    " General articles
    IF ct_materials IS NOT INITIAL.
      CLEAR:lt_a545, lt_price_data.

      SELECT a~matnr AS gen_matnr, a~knumh
         FROM a545 AS a
         FOR ALL ENTRIES IN @ct_materials
         WHERE kappl = @mc_kappl_v
           AND kschl = @mc_kschl_zlst
           AND vkorg = @cs_response-salesorganization
           AND vtweg = @cs_response-distributionchannel
           AND kunnr = @cs_response-soldtoparty
           AND matnr = @ct_materials-gen_matnr
           AND datab <= @sy-datum
           AND datbi >= @sy-datum
         INTO TABLE @lt_a545.

      IF sy-subrc = 0.
        SORT ct_materials BY gen_matnr.
        LOOP AT lt_a545 ASSIGNING <ls_a545>.
          LOOP AT ct_materials ASSIGNING FIELD-SYMBOL(<ls_material>) WHERE gen_matnr = <ls_a545>-matnr. "#EC CI_NESTED
            <ls_material>-knumh = <ls_a545>-knumh.
          ENDLOOP.
        ENDLOOP.

        SORT lt_a545 BY knumh.
        SELECT knumh, kbetr, konwa
          FROM konp
          FOR ALL ENTRIES IN @lt_a545
          WHERE knumh = @lt_a545-knumh
          INTO TABLE @lt_price_data.

        IF sy-subrc = 0.
          move_pricing_data(
            EXPORTING
              it_pricing_data = CONV zsd_tt_return_pricing_data( lt_price_data )
            CHANGING
              ct_materials    = ct_materials
              cs_response     = cs_response ).
        ENDIF.
      ENDIF.
    ENDIF.

  ENDMETHOD.


  METHOD move_pricing_data.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 09.11.2022 | 15096     :Customer Return - LPD Logic   *
*              |            | adjustment, DS4K935029                   *
*----------------------------------------------------------------------*

    SORT ct_materials BY matnr.
    LOOP AT ct_materials ASSIGNING FIELD-SYMBOL(<ls_material>) WHERE knumh IS NOT INITIAL.
      READ TABLE it_pricing_data ASSIGNING FIELD-SYMBOL(<ls_price>) WITH KEY knumh = <ls_material>-knumh.
      IF sy-subrc = 0.
        LOOP AT cs_response-materiallist ASSIGNING FIELD-SYMBOL(<ls_matlist>) "#EC CI_NESTED
                                             WHERE material = <ls_material>-matnr.
          <ls_matlist>-pricing-currency  = <ls_price>-konwa.
          <ls_matlist>-pricing-listprice = <ls_price>-kbetr.
        ENDLOOP.
        DELETE ct_materials WHERE matnr = <ls_material>-matnr AND knumh = <ls_material>-knumh. "#EC CI_STDSEQ
      ELSE.
        CLEAR <ls_material>-knumh.
      ENDIF.
    ENDLOOP.

  ENDMETHOD.


  METHOD create_invoice_reference_api.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 10.08.2022 | 11866     : Customer Return - LPD Invoice*
*              |            | standalone search, DS4K922540            *
*----------------------------------------------------------------------*

    DATA:
      ls_mat_ref TYPE zsd_s_return_inv_results.

    ls_mat_ref-billingdocument = cs_invoice-vbeln.
    ls_mat_ref-billingdocumentitem = cs_invoice-posnr.
    ls_mat_ref-billingdocumentdate = cs_invoice-erdat.
    ls_mat_ref-billingdocumentnetprice = cs_invoice-netpr.
    ls_mat_ref-billingdocumentcurrency = cs_invoice-waerk.
    ls_mat_ref-billingdocumentsource = cs_invoice-zinv_source.

    CASE gv_cons_check.
      WHEN abap_true.
        IF cs_invoice-opqty <= 0.
          RETURN.
        ELSEIF cs_invoice-opqty >= cs_matnr-requestedquantity.
          ls_mat_ref-billingdocumentopenqty = cs_matnr-requestedquantity.
          cs_invoice-opqty  = cs_invoice-opqty - cs_matnr-requestedquantity.
          cs_invoice-rfmng  = cs_invoice-rfmng + cs_matnr-requestedquantity.
          cs_invoice-kbmeng = cs_invoice-kbmeng + cs_matnr-requestedquantity.
          CLEAR cs_matnr-requestedquantity.
        ELSE.
          ls_mat_ref-billingdocumentopenqty = cs_invoice-opqty.
          cs_invoice-rfmng            = cs_invoice-rfmng + cs_invoice-opqty.
          cs_invoice-kbmeng           = cs_invoice-kbmeng + cs_invoice-opqty.
          cs_matnr-requestedquantity  = cs_matnr-requestedquantity - cs_invoice-opqty.
          CLEAR cs_invoice-opqty.
        ENDIF.

      WHEN abap_false.
        ls_mat_ref-billingdocumentopenqty = cs_matnr-requestedquantity.
        CLEAR cs_matnr-requestedquantity.
    ENDCASE.
    APPEND ls_mat_ref TO ct_mat_ref.

  ENDMETHOD.


  METHOD save_legacy_price.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 09.11.2022 | 15096     :Customer Return - LPD Logic   *
*              |            | adjustment, DS4K935029                   *
*----------------------------------------------------------------------*

    DATA(ls_legacy_invoice) = get_legacy_invoice(
                                is_header   = is_header
                                iv_matnr    = iv_matnr
                                iv_invoice  = iv_invoice
                                iv_position = iv_inv_posnr ).

    IF ls_legacy_invoice IS NOT INITIAL.
      INSERT VALUE #( matnr = iv_matnr
                      posnr = iv_mat_posnr
                      netpr = ls_legacy_invoice-netpr
                      waerk = ls_legacy_invoice-waerk ) INTO TABLE gts_legacy_price.
    ENDIF.

  ENDMETHOD.


  METHOD check_invoice_reference_gui.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 10.08.2022 | 11866     : Customer Return - LPD Invoice*
*              |            | standalone search, DS4K922540            *
*----------------------------------------------------------------------*
* KASHTULA     | 09.11.2022 | 15096     :Customer Return - LPD Logic   *
*              |            | adjustment, DS4K935029                   *
*----------------------------------------------------------------------*
* IAPRYALE     | 26.09.2023 | 25485_: O2C - Returns - LPD check        *
*              |            | DS4K965248                               *
*----------------------------------------------------------------------*
* HOMENVAD     | 22.02.2024 | 29345:O2C CustomerOrderConsumption Logic *
*              |            | DS4K980732                               *
*----------------------------------------------------------------------*

    DATA:
      lv_open_qty     TYPE kwmeng.

    CLEAR ev_error_mess.

    LOOP AT it_matnr INTO DATA(ls_material).
      IF ls_material-kwmeng = 0.
        MESSAGE e012(zsd_o2i_lpd) WITH ls_material-posnr INTO ev_error_mess.
        RETURN.
      ENDIF.

      " Customer manually set legacy invoice reference
      IF  ls_material-vgbel IS NOT INITIAL
      AND ls_material-vgpos IS NOT INITIAL
      AND ls_material-zz1_ref_invoice_sdi IS NOT INITIAL
      AND ls_material-zz1_ref_inv_item_sdi IS NOT INITIAL.
        CLEAR: ls_material-vgbel, ls_material-vgpos.
        READ TABLE ct_xvbap ASSIGNING FIELD-SYMBOL(<ls_xvbap>) WITH KEY posnr = ls_material-posnr
                                                                        matnr = ls_material-matnr.
        IF sy-subrc = 0.
          CLEAR: <ls_xvbap>-vgbel, <ls_xvbap>-vgpos.
          <ls_xvbap>-zz1_invref_id_sdi = mc_manual_reference.
        ENDIF.
      ENDIF.

      " Reference invoice provided
      IF ls_material-vgbel IS NOT INITIAL
      OR ls_material-zz1_ref_invoice_sdi IS NOT INITIAL.
        LOOP AT ct_invoices ASSIGNING FIELD-SYMBOL(<ls_inv>) WHERE matnr = ls_material-matnr "#EC CI_NESTED
                                                               AND  ( ( vbeln = ls_material-vgbel AND
                                                                        posnr = ls_material-vgpos )
                                                                   OR ( vbeln = ls_material-zz1_ref_invoice_sdi AND
                                                                        posnr = ls_material-zz1_ref_inv_item_sdi ) ).
          lv_open_qty = <ls_inv>-opqty.
          IF <ls_inv>-opqty <= 0 AND gv_cons_check = abap_true.
            LOOP AT ct_invoices ASSIGNING FIELD-SYMBOL(<ls_inv_ref>) WHERE matnr = ls_material-matnr "#EC CI_NESTED
                                                                       AND opqty > 0.
              IF <ls_inv_ref>-zinv_source = mc_src_current_system.
                MESSAGE e009(zsd_o2i_lpd) WITH ls_material-posnr <ls_inv_ref>-vbeln <ls_inv_ref>-posnr <ls_inv_ref>-opqty
                                                         INTO ev_error_mess.
              ELSEIF <ls_inv>-zinv_source = mc_src_legacy_system.
                MESSAGE e010(zsd_o2i_lpd) WITH ls_material-posnr <ls_inv_ref>-vbeln <ls_inv_ref>-posnr <ls_inv_ref>-opqty
                                                         INTO ev_error_mess.
              ENDIF.
              RETURN.
            ENDLOOP.
            IF ls_material-vgbel IS NOT INITIAL.
              MESSAGE e001(zsd_o2i_lpd) WITH ls_material-posnr ls_material-vgbel INTO ev_error_mess.
            ELSEIF ls_material-zz1_ref_invoice_sdi IS NOT INITIAL.
              MESSAGE e001(zsd_o2i_lpd) WITH ls_material-posnr ls_material-zz1_ref_invoice_sdi INTO ev_error_mess.
            ENDIF.
            RETURN.
          ELSEIF <ls_inv>-opqty > 0 AND gv_cons_check = abap_true.
            IF <ls_inv>-opqty >= ls_material-kwmeng.
              <ls_inv>-opqty  = <ls_inv>-opqty  - ls_material-kwmeng.
              <ls_inv>-rfmng  = <ls_inv>-rfmng  + ls_material-kwmeng.
              <ls_inv>-kbmeng = <ls_inv>-kbmeng + ls_material-kwmeng.
              CLEAR ls_material-kwmeng.
            ELSE.
              <ls_inv>-rfmng       = <ls_inv>-rfmng     + <ls_inv>-opqty.
              <ls_inv>-kbmeng      = <ls_inv>-kbmeng    + <ls_inv>-opqty.
              ls_material-kwmeng   = ls_material-kwmeng - <ls_inv>-opqty.
              CLEAR <ls_inv>-opqty.
            ENDIF.
          ELSE.
            CLEAR ls_material-kwmeng.
          ENDIF.
          " Provided reference invoice does not contain necessary quantity
          IF ls_material-kwmeng > 0.
            IF ls_material-vgbel IS NOT INITIAL.
              MESSAGE e002(zsd_o2i_lpd) WITH ls_material-posnr lv_open_qty ls_material-vgbel ls_material-vgpos INTO ev_error_mess.
            ELSEIF ls_material-zz1_ref_invoice_sdi IS NOT INITIAL.
              MESSAGE e002(zsd_o2i_lpd) WITH ls_material-posnr lv_open_qty
                      ls_material-zz1_ref_invoice_sdi ls_material-zz1_ref_inv_item_sdi INTO ev_error_mess.
            ENDIF.
            RETURN.
          ENDIF.
          EXIT.
        ENDLOOP.
      ENDIF.

      " No reference invoice provided
      IF ls_material-kwmeng > 0.
        IF gv_creation_wo_ref_allowed = abap_true
           OR ( gv_wms_specific   = abap_true AND gv_wms_call  = abap_true ).
          READ TABLE ct_xvbap ASSIGNING <ls_xvbap> WITH KEY posnr = ls_material-posnr
                                                            matnr = ls_material-matnr.
          IF sy-subrc = 0.
            CLEAR: <ls_xvbap>-vgbel, <ls_xvbap>-vgpos, <ls_xvbap>-zz1_ref_invoice_sdi,
                   <ls_xvbap>-zz1_ref_inv_item_sdi, <ls_xvbap>-zz1_invref_id_sdi.
          ENDIF.
          CONTINUE.
        ENDIF.
        IF gv_cons_check = abap_true.
          LOOP AT ct_invoices ASSIGNING <ls_inv> WHERE matnr = ls_material-matnr "#EC CI_NESTED
                                                   AND opqty > 0.
            IF zcl_sd_return_data_provider=>gv_api_proxy_call = abap_false.
              " Creation from SAP GUI
              IF <ls_inv>-zinv_source = mc_src_current_system.
                MESSAGE e005(zsd_o2i_lpd) WITH ls_material-posnr <ls_inv>-vbeln <ls_inv>-posnr <ls_inv>-opqty INTO ev_error_mess.
              ELSEIF <ls_inv>-zinv_source = mc_src_legacy_system.
                IF ls_material-zz1_ref_invoice_sdi IS NOT INITIAL.
                  MESSAGE  e014(zsd_o2i_lpd) WITH ls_material-posnr <ls_inv>-vbeln <ls_inv>-posnr <ls_inv>-opqty INTO ev_error_mess.
                ELSE.
                  MESSAGE e007(zsd_o2i_lpd) WITH ls_material-posnr <ls_inv>-vbeln <ls_inv>-posnr <ls_inv>-opqty INTO ev_error_mess.
                ENDIF.
              ENDIF.
            ELSE.
              " Creation from API
              IF <ls_inv>-zinv_source = mc_src_current_system.
                MESSAGE  e013(zsd_o2i_lpd) WITH ls_material-posnr <ls_inv>-vbeln <ls_inv>-posnr <ls_inv>-opqty INTO ev_error_mess.
              ELSEIF <ls_inv>-zinv_source = mc_src_legacy_system.
                MESSAGE  e014(zsd_o2i_lpd) WITH ls_material-posnr <ls_inv>-vbeln <ls_inv>-posnr <ls_inv>-opqty INTO ev_error_mess.
              ENDIF.
            ENDIF.
            RETURN.
          ENDLOOP.
          IF ls_material-kwmeng > 0.
            MESSAGE e004(zsd_o2i_lpd) WITH ls_material-posnr INTO ev_error_mess.
            RETURN.
          ENDIF.
        ELSE.
          LOOP AT ct_invoices ASSIGNING <ls_inv> WHERE matnr = ls_material-matnr. "#EC CI_NESTED
            IF zcl_sd_return_data_provider=>gv_api_proxy_call = abap_false.
              " Creation from SAP GUI
              IF <ls_inv>-zinv_source = mc_src_current_system.
                MESSAGE e006(zsd_o2i_lpd) WITH ls_material-posnr <ls_inv>-vbeln <ls_inv>-posnr INTO ev_error_mess.
              ELSEIF <ls_inv>-zinv_source = mc_src_legacy_system.
                MESSAGE e008(zsd_o2i_lpd) WITH ls_material-posnr <ls_inv>-vbeln <ls_inv>-posnr INTO ev_error_mess.
              ENDIF.
            ELSE.
              " Creation from API
              IF <ls_inv>-zinv_source = mc_src_current_system.
                MESSAGE  e015(zsd_o2i_lpd) WITH ls_material-posnr <ls_inv>-vbeln <ls_inv>-posnr INTO ev_error_mess.
              ELSEIF <ls_inv>-zinv_source = mc_src_legacy_system.
                MESSAGE  e016(zsd_o2i_lpd) WITH ls_material-posnr  <ls_inv>-vbeln  <ls_inv>-posnr INTO ev_error_mess.
              ENDIF.
            ENDIF.
            RETURN.
          ENDLOOP.
          MESSAGE e004(zsd_o2i_lpd) WITH ls_material-posnr INTO ev_error_mess.
          RETURN.
        ENDIF.
      ENDIF.
    ENDLOOP.

  ENDMETHOD.


  METHOD check_materials_gui.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 21.06.2022 | 11866     : Customer Return - LPD Invoice*
*              |            | standalone search, DS4K922540            *
*----------------------------------------------------------------------*
* KASHTULA     | 09.11.2022 | 15096     :Customer Return - LPD Logic   *
*              |            | adjustment, DS4K935029                   *
*----------------------------------------------------------------------*

    DATA:
      lt_invoices TYPE zsd_tt_return_inv,
      lt_matnr    TYPE zsd_tt_matnr.

    CLEAR: ev_error_mess.
    IF gv_inv_reference_indicator IS INITIAL.
      gv_inv_reference_indicator = mc_manual_reference.
    ENDIF.

    CHECK is_active( is_header = is_header ) = abap_true.

    lt_matnr = VALUE #( FOR ls_wa IN it_matnr ( matnr = ls_wa-matnr ) ).
    IF  cs_matnr IS SUPPLIED
    AND cs_matnr IS NOT INITIAL.
      APPEND VALUE #( matnr = cs_matnr-matnr ) TO lt_matnr.
    ENDIF.

    lt_invoices = get_so_data( is_header = is_header
                               it_matnr  = lt_matnr ).

    check_invoice_reference_gui(
     EXPORTING
       it_matnr      = it_matnr
     IMPORTING
       ev_error_mess = ev_error_mess
     CHANGING
       ct_invoices   = lt_invoices
       ct_xvbap      = ct_xvbap ).

  ENDMETHOD.


  METHOD check_used_legacy_invoices.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 10.08.2022 | 11866     :Customer Return - LPD Invoice *
*              |            | standalone search, DS4K922540            *
*----------------------------------------------------------------------*
* HOMENVAD     | 22.02.2024 | 29345:O2C CustomerOrderConsumption Logic *
*              |            | DS4K980732                               *
*----------------------------------------------------------------------*
    TRY.
        DATA(lr_auart) = zcl_pe_hm_basic=>get_range( iv_id = '217' ).
        LOOP AT lr_auart ASSIGNING FIELD-SYMBOL(<ls_auart>).
          CLEAR <ls_auart>-high.
        ENDLOOP.
      CATCH zcx_pe_hm.
        CLEAR lr_auart.
    ENDTRY.

    IF ct_so_list IS NOT INITIAL.

      SELECT p~material AS matnr, p~orderquantity AS kwmeng, p~zz1_ref_invoice_sdi, p~zz1_ref_inv_item_sdi
        FROM i_salesdocumentitem AS p
        INNER JOIN @ct_so_list AS l
         ON  p~material            = l~matnr
         AND p~zz1_ref_invoice_sdi = l~vbeln
         AND p~zz1_ref_inv_item_sdi = l~posnr
       WHERE \_SalesDocument-salesdocumenttype IN @lr_auart
         INTO TABLE @DATA(lt_vbap).

      IF sy-subrc = 0.

        LOOP AT ct_so_list ASSIGNING FIELD-SYMBOL(<ls_so_list>).
          LOOP AT lt_vbap ASSIGNING FIELD-SYMBOL(<ls_vbap>) "#EC CI_NESTED
                                   WHERE matnr                   = <ls_so_list>-matnr
                                     AND zz1_ref_invoice_sdi     = <ls_so_list>-vbeln
                                     AND zz1_ref_inv_item_sdi    = <ls_so_list>-posnr.
            <ls_so_list>-opqty  = <ls_so_list>-opqty  - <ls_vbap>-kwmeng.
            <ls_so_list>-rfmng  = <ls_so_list>-rfmng  + <ls_vbap>-kwmeng.
            <ls_so_list>-kbmeng = <ls_so_list>-kbmeng + <ls_vbap>-kwmeng.
          ENDLOOP.
        ENDLOOP.
      ENDIF.
    ENDIF.

  ENDMETHOD.


  METHOD get_general_articles.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 09.11.2022 | 15096     :Customer Return - LPD Logic   *
*              |            | adjustment, DS4K935029                   *
*----------------------------------------------------------------------*

    IF ct_materials IS NOT INITIAL.
      SELECT matnr, satnr
        FROM mara
        FOR ALL ENTRIES IN @ct_materials
        WHERE matnr = @ct_materials-matnr
        INTO TABLE @DATA(lt_result).

      IF sy-subrc = 0.
        SORT lt_result BY matnr.
        LOOP AT ct_materials ASSIGNING FIELD-SYMBOL(<ls_material>).
          READ TABLE lt_result ASSIGNING FIELD-SYMBOL(<ls_result>)
                                WITH KEY matnr = <ls_material>-matnr BINARY SEARCH.
          IF sy-subrc = 0.
            <ls_material>-gen_matnr = <ls_result>-satnr.
          ENDIF.
        ENDLOOP.
      ENDIF.
    ENDIF.

  ENDMETHOD.


  METHOD get_legacy_materials.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 10.08.2022 | 11866     :Customer Return - LPD Invoice *
*              |            | standalone search, DS4K922540            *
*----------------------------------------------------------------------*
    CLEAR et_legacy_matnr.

    IF it_matnr IS NOT INITIAL.
      SELECT matnr, satnr, size1
        FROM mara
        FOR ALL ENTRIES IN @it_matnr
        WHERE matnr = @it_matnr-matnr
        INTO TABLE @et_legacy_matnr.
      IF sy-subrc <> 0.
        RETURN.
      ENDIF.
    ENDIF.

  ENDMETHOD.


  METHOD get_legacy_so_data.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 21.06.2022 | 11866     : Customer Return - LPD Invoice*
*              |            | standalone search, DS4K922540            *
*----------------------------------------------------------------------*
* KASHTULA     | 21.03.2023 | 19218     : Customer Return LPD logic    *
*              |            | adjustment, DS4K947763                   *
*----------------------------------------------------------------------*

    DATA:
      lt_so_list TYPE zsd_tt_return_inv.

    CLEAR rt_so_list.
    CHECK it_matnr IS NOT INITIAL.

    get_legacy_parameters(
      EXPORTING
        is_header    = is_header
      IMPORTING
        ev_kunag     = DATA(lv_kunag)
        et_legacy_so = DATA(lt_legacy_so) ).

    get_legacy_materials(
      EXPORTING
        it_matnr        = it_matnr
      IMPORTING
        et_legacy_matnr = DATA(lt_legacy_matnr)  ).

    IF  lv_kunag IS NOT INITIAL
    AND lt_legacy_so IS NOT INITIAL
    AND lt_legacy_matnr IS NOT INITIAL.
      TRY.
          zcl_sd_lpd_legacy_data=>get_legacy_data(
            EXPORTING
              iv_customer     = lv_kunag
              iv_latest_date  = iv_latest_date
              it_billing_type = gr_fkart
              it_matnr        = lt_legacy_matnr
              it_legacy_so    = lt_legacy_so
            IMPORTING
              et_so_list      = lt_so_list ).
        CATCH cx_amdp_error.
          CLEAR lt_so_list.
      ENDTRY.
    ENDIF.

    IF lt_so_list IS INITIAL.
      RETURN.
    ELSE.
      rt_so_list = aggregate_invoices( it_invoices_in = lt_so_list
                                       iv_system      = mc_src_legacy_system ).

      check_used_legacy_invoices(
        CHANGING
          ct_so_list = rt_so_list ).
    ENDIF.

  ENDMETHOD.


  METHOD get_so_data.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 21.06.2022 | 11866     : Customer Return - LPD Invoice*
*              |            | standalone search, DS4K922540            *
*----------------------------------------------------------------------*
* IAPRYALE     | 19.10.2023 | 26064     : Rejected line items in return*
*              |            | order to be considered, DS4K967485       *
*----------------------------------------------------------------------*

    TYPES:
      BEGIN OF ltyp_s_returned,
        vbelv  TYPE vbelv,
        posnv  TYPE posnv,
        vbeln  TYPE vbeln_nach,
        posnn  TYPE posnr_nach,
        abgru  TYPE abgru_va,
        kbmeng TYPE kbmeng,
      END OF ltyp_s_returned.

    DATA:
      lv_min_date  TYPE dats,
      lt_matnr     TYPE zsd_tt_matnr,
      lts_returned TYPE SORTED TABLE OF ltyp_s_returned WITH NON-UNIQUE KEY primary_key COMPONENTS vbelv posnv.

    CHECK it_matnr IS NOT INITIAL.
    TRY.
        lv_min_date = cl_bs_period_toolset_basics=>subtract_months_from_date(
                        iv_date   = sy-datlo
                        iv_months = gv_months ).
      CATCH cx_bs_period_toolset_basics.
        RETURN.
    ENDTRY.
    lt_matnr = it_matnr.
    DELETE ADJACENT DUPLICATES FROM lt_matnr COMPARING matnr.

    SELECT vbrp~material AS matnr, vbrp~billingdocument AS vbeln, vbrp~billingdocumentitem AS posnr, "#EC CI_SEL_DEL
       vbrp~creationdate AS erdat, vbrp~creationtime AS erzet,
       vbrp~billingquantityinbaseunit AS fklmg, vbrp~baseunit AS meins, vbrp~netamount AS netwr,
       vbrk~transactioncurrency AS waerk
       FROM i_billingdocumentitem AS vbrp
       JOIN i_billingdocument AS vbrk ON vbrk~billingdocument = vbrp~billingdocument
       FOR ALL ENTRIES IN @lt_matnr
       WHERE vbrp~material                   = @lt_matnr-matnr
         AND vbrk~salesorganization          = @gv_vkorg
         AND vbrk~distributionchannel        = @gv_vtweg
         AND vbrk~soldtoparty                = @gv_kunnr
         AND vbrk~billingdocumenttype        IN @gr_fkart
         AND vbrp~billingquantityinbaseunit  <> 0
         AND vbrk~overallbillingstatus       = 'A'
         AND vbrk~billingdocumentiscancelled = ''
         AND vbrp~creationdate               >= @lv_min_date
      INTO CORRESPONDING FIELDS OF TABLE @rt_so_list ##TOO_MANY_ITAB_FIELDS.

    IF sy-subrc = 0.
      " Get already returned Qty
      SELECT vbfa~vbelv, vbfa~posnv, vbfa~vbeln, vbfa~posnn, vbap~salesdocumentrjcnreason AS abgru,
             vbap~confddelivqtyinorderqtyunit AS kbmeng "#EC CI_NO_TRANSFORM
        FROM vbfa
        JOIN i_salesdocumentitem AS vbap ON vbap~salesdocument     = vbfa~vbeln
                                        AND vbap~salesdocumentitem = vbfa~posnn
        FOR ALL ENTRIES IN @rt_so_list
        WHERE vbfa~vbelv = @rt_so_list-vbeln
          AND vbfa~posnv = @rt_so_list-posnr
          AND vbfa~vbtyp_n = 'H'
          AND vbfa~vbtyp_v = 'M'
          AND vbfa~rfmng                        <> 0
          AND vbap~confddelivqtyinorderqtyunit  <> 0
        INTO TABLE @lts_returned.

      IF sy-subrc <> 0.
        CLEAR lts_returned.
      ENDIF.

      LOOP AT rt_so_list ASSIGNING FIELD-SYMBOL(<ls_ref>).
        <ls_ref>-zinv_source = 'I'.
        <ls_ref>-opqty = <ls_ref>-fklmg.
        <ls_ref>-netpr = <ls_ref>-netwr / <ls_ref>-fklmg.
        LOOP AT lts_returned ASSIGNING FIELD-SYMBOL(<ls_returned>) WHERE vbelv = <ls_ref>-vbeln "#EC CI_NESTED
                                                                     AND posnv = <ls_ref>-posnr.

          <ls_ref>-rfmng  = <ls_ref>-rfmng  + <ls_returned>-kbmeng.

          IF <ls_returned>-abgru IS INITIAL.
            <ls_ref>-opqty  = <ls_ref>-opqty - <ls_returned>-kbmeng.
            <ls_ref>-kbmeng = <ls_ref>-kbmeng + <ls_returned>-kbmeng.
          ENDIF.
        ENDLOOP.
      ENDLOOP.
    ENDIF.

    IF gv_leg_inv = abap_true.
      APPEND LINES OF get_legacy_so_data( is_header       = is_header
                                          iv_latest_date  = lv_min_date
                                          it_matnr        = lt_matnr )    TO rt_so_list.
    ENDIF.

    CASE gv_lpd_type.
      WHEN mc_lowest_price.
        SORT rt_so_list BY matnr netpr ASCENDING.
      WHEN mc_latest_price.
        SORT rt_so_list BY matnr ASCENDING erdat DESCENDING erzet DESCENDING.
    ENDCASE.

  ENDMETHOD.


  METHOD is_active.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 21.06.2022 | 11866     : Customer Return - LPD Invoice*
*              |            | standalone search, DS4K922540            *
*----------------------------------------------------------------------*
* KASHTULA     | 09.11.2022 | 15096     :Customer Return - LPD Logic   *
*              |            | adjustment, DS4K935029                   *
*----------------------------------------------------------------------*
* KASHTULA     | 19.04.2023 | 19766: Return Mass Upload - automatic LPD*
*              |            | referencing, DS4K949284                  *
*----------------------------------------------------------------------*
* IAPRYALE     | 17.08.2023 | 21530: O2C - Returns - LPD check         *
*              |            | DS4K953169                               *
*----------------------------------------------------------------------*
* IAPRYALE     | 26.09.2023 | 25485_: O2C - Returns - LPD check        *
*              |            | DS4K965248                               *
*----------------------------------------------------------------------*

    CONSTANTS:
      lc_lpd_function       TYPE if_fdt_types=>id VALUE '024F85009E261EECBCADBD456EBEA0D2'.

    DATA:
      lt_lpd_data  TYPE STANDARD TABLE OF gtyp_s_lpd_data.

    IF  gv_vkorg  = is_header-vkorg
    AND gv_vtweg  = is_header-vtweg
    AND gv_auart  = is_header-auart
    AND gv_active = abap_true.
      rv_active = gv_active.
    ELSE.
      TRY.
          rv_active = gv_active = abap_false.

          zcl_pe_hm_complex=>get_table(
            EXPORTING
              iv_id           = lc_lpd_function
              is_filter       = VALUE gtyp_s_filter( vkorg = is_header-vkorg
                                                     vtweg = is_header-vtweg
                                                     auart = is_header-auart )
              iv_mapping_type = zcl_pe_hm_complex=>gc_s_mapping_type-names
            IMPORTING
              et_table        = lt_lpd_data ).

          IF  lt_lpd_data IS NOT INITIAL
          AND lt_lpd_data[ 1 ]-zsd_lpd_type IS NOT INITIAL.
            gv_lpd_type                 = lt_lpd_data[ 1 ]-zsd_lpd_type.
            gv_cons_check               = lt_lpd_data[ 1 ]-zsd_cons.
            gv_leg_inv                  = lt_lpd_data[ 1 ]-zsd_leg_inv.
            gv_months                   = lt_lpd_data[ 1 ]-zsd_lpd_history_period.
            gv_creation_wo_ref_allowed  = lt_lpd_data[ 1 ]-zsd_lpd_create_wo_reference.
            gv_wms_specific             = lt_lpd_data[ 1 ]-zsd_wms_specific.

            DATA(lt_fkart) = zcl_pe_hm_basic=>get_table( iv_id = '217' ).
            SORT lt_fkart BY field1.
            LOOP AT lt_fkart ASSIGNING FIELD-SYMBOL(<ls_fkart>) WHERE field1 = is_header-auart. "#EC CI_STDSEQ
              APPEND VALUE #( sign = 'I' option = 'EQ' low = <ls_fkart>-field2 ) TO gr_fkart.
              rv_active = gv_active = abap_true.
            ENDLOOP.

            gv_vkorg = is_header-vkorg.
            gv_vtweg = is_header-vtweg.
            gv_auart = is_header-auart.
          ELSE.
            rv_active = gv_active = abap_false.
          ENDIF.

        CATCH zcx_pe_hm.
          rv_active = gv_active = abap_false.
          RETURN.
      ENDTRY.
    ENDIF.

    IF rv_active = abap_true.
      gv_kunnr = is_header-kunnr.
    ENDIF.

    IF gv_inv_reference_indicator IS INITIAL.
      set_reference_indicator( ).
    ENDIF.

  ENDMETHOD.


  METHOD process_materials_api.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 21.06.2022 | 11866     : Customer Return - LPD Invoice*
*              |            | standalone search, DS4K922540            *
*----------------------------------------------------------------------*

    DATA:
      lt_invoices TYPE zsd_tt_return_inv,
      ls_header   TYPE zsd_s_return_header,
      ls_matlist  TYPE zsd_s_return_materials_out,
      lv_currency TYPE waerk.

    FIELD-SYMBOLS:
      <ls_inv> TYPE zsd_s_return_inv.

    CLEAR: es_response.
    ls_header = VALUE #( auart = is_request-salesordertype
                         vkorg = is_request-salesorganization
                         vtweg = is_request-distributionchannel
                         kunnr = is_request-soldtoparty ).

    CHECK is_active( is_header = ls_header ) = abap_true.

    es_response-salesordertype       = is_request-salesordertype.
    es_response-salesorganization    = is_request-salesorganization.
    es_response-distributionchannel  = is_request-distributionchannel.
    es_response-soldtoparty          = is_request-soldtoparty.

    lt_invoices = get_so_data( is_header = ls_header
                               it_matnr  = VALUE #( FOR ls_wa IN is_request-materiallist ( matnr = ls_wa-material ) ) ).

    DATA(lt_materials) = is_request-materiallist.

    SELECT SINGLE currency ##WARN_OK                      "#EC CI_SUBRC
      FROM i_customersalesarea
      WHERE customer            = @is_request-soldtoparty
        AND salesorganization   = @is_request-salesorganization
        AND distributionchannel = @is_request-distributionchannel
      INTO @lv_currency.

    " Check materials and create invoice references
    LOOP AT lt_materials ASSIGNING FIELD-SYMBOL(<ls_material_in>).
      CLEAR ls_matlist.
      ls_matlist-material = <ls_material_in>-material.
      UNASSIGN <ls_inv>.
      IF <ls_material_in>-requestedquantity > 0.
        LOOP AT lt_invoices ASSIGNING <ls_inv> WHERE matnr = <ls_material_in>-material. "#EC CI_NESTED
          create_invoice_reference_api(
            CHANGING
              cs_invoice  = <ls_inv>
              cs_matnr    = <ls_material_in>
              ct_mat_ref  = ls_matlist-invoiceresults ).

          IF <ls_material_in>-requestedquantity = 0.
            EXIT.
          ENDIF.
        ENDLOOP.
        " Reference invoice not found or not found for the rest of quantity
        IF <ls_material_in>-requestedquantity > 0.
          ls_matlist-pricing-pendingqty = <ls_material_in>-requestedquantity.
          IF <ls_inv> IS ASSIGNED.
            ls_matlist-pricing-currency = <ls_inv>-waerk.
          ELSE.
            ls_matlist-pricing-currency = lv_currency.
          ENDIF.
        ENDIF.
        APPEND ls_matlist TO es_response-materiallist.
      ELSE.
        CONTINUE.
      ENDIF.
    ENDLOOP.

    SORT es_response-materiallist BY material.
    get_list_price(
      CHANGING
        cs_response = es_response ).

  ENDMETHOD.


  METHOD get_prices_a977.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 09.11.2022 | 15096     :Customer Return - LPD Logic   *
*              |            | adjustment, DS4K935029                   *
*----------------------------------------------------------------------*
* MARTIRIA     | 15.09.2024 | 29078 : Adopt B2B programs for reading ZLST
*              |            | DS4K979724                               *
*----------------------------------------------------------------------*

    " Select variant articles
    IF ct_materials IS NOT INITIAL.
      SORT ct_materials BY matnr.

      SELECT a~matnr, a~knumh
         FROM a977 AS a
         FOR ALL ENTRIES IN @ct_materials
         WHERE kappl = @mc_kappl_v
           AND kschl = @mc_kschl_zlst
           AND vkorg = @cs_response-salesorganization
           AND matnr = @ct_materials-matnr
           AND datab <= @sy-datum
           AND datbi >= @sy-datum
         INTO TABLE @DATA(lt_a977).

      IF sy-subrc = 0.
        SORT lt_a977 BY knumh.
        SELECT conditionrecord, conditionratevalue, conditionratevalueunit
          FROM i_slsprcgconditionrecord
          FOR ALL ENTRIES IN @lt_a977
          WHERE conditionrecord = @lt_a977-knumh
          INTO TABLE @DATA(lt_price_data).

        IF sy-subrc = 0.
          LOOP AT lt_price_data ASSIGNING FIELD-SYMBOL(<ls_price>).
            READ TABLE lt_a977 ASSIGNING FIELD-SYMBOL(<ls_a977>) WITH KEY knumh = <ls_price>-conditionrecord BINARY SEARCH.
            IF sy-subrc = 0.
              LOOP AT cs_response-materiallist ASSIGNING FIELD-SYMBOL(<ls_matlist>) "#EC CI_NESTED
                                                  WHERE material = <ls_a977>-matnr.
                <ls_matlist>-pricing-currency  = <ls_price>-conditionratevalueunit.
                <ls_matlist>-pricing-listprice = <ls_price>-conditionratevalue.
              ENDLOOP.
              DELETE ct_materials WHERE matnr = <ls_a977>-matnr. "#EC CI_STDSEQ
            ENDIF.
          ENDLOOP.
        ENDIF.
      ENDIF.
    ENDIF.

    " Select general articles
    IF ct_materials IS NOT INITIAL.
      CLEAR: lt_a977, lt_price_data.

      SELECT a~matnr, a~knumh
         FROM a977 AS a
         FOR ALL ENTRIES IN @ct_materials
         WHERE kappl = @mc_kappl_v
           AND kschl = @mc_kschl_zlst
           AND vkorg = @cs_response-salesorganization
           AND matnr = @ct_materials-gen_matnr
           AND datab <= @sy-datum
           AND datbi >= @sy-datum
         INTO TABLE @lt_a977.

      IF sy-subrc = 0.
        SORT ct_materials BY gen_matnr.
        LOOP AT lt_a977 ASSIGNING <ls_a977>.
          LOOP AT ct_materials ASSIGNING FIELD-SYMBOL(<ls_material>) WHERE gen_matnr = <ls_a977>-matnr. "#EC CI_NESTED
            <ls_material>-knumh = <ls_a977>-knumh.
          ENDLOOP.
        ENDLOOP.

        SORT lt_a977 BY knumh.

        SELECT conditionrecord, conditionratevalue, conditionratevalueunit
         FROM i_slsprcgconditionrecord AS knop
          FOR ALL ENTRIES IN @lt_a977
          WHERE conditionrecord = @lt_a977-knumh
          INTO TABLE @lt_price_data.
        IF sy-subrc = 0.
          move_pricing_data(
            EXPORTING
              it_pricing_data = CONV zsd_tt_return_pricing_data( lt_price_data )
            CHANGING
              ct_materials    = ct_materials
              cs_response     = cs_response  ).
        ENDIF.

      ENDIF.
    ENDIF.

  ENDMETHOD.
ENDCLASS.