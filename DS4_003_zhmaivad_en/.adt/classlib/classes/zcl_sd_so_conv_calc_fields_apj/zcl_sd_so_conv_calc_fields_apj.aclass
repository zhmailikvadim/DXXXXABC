************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 18.04.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*
CLASS zcl_sd_so_conv_calc_fields_apj DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.
    INTERFACES if_apj_dt_exec_object.
    INTERFACES if_apj_rt_exec_object.


    CONSTANTS:
      "! Application Job Template name
      gc_apj_template TYPE apj_job_template_name VALUE 'ZSD_JT_SO_CONVERSION_FIELD_CLC'.

    CONSTANTS:
      "! Application Job parameter names
      BEGIN OF gc_apj_parameter,
        "! Sales Organization
        sales_organization TYPE if_apj_dt_exec_object=>ty_templ_def-selname VALUE 'P_SLSORG' ##NO_TEXT,
        "! Order Item Plant
        item_plant         TYPE if_apj_dt_exec_object=>ty_templ_def-selname VALUE 'P_IPLANT' ##NO_TEXT,
      END OF gc_apj_parameter.

  PROTECTED SECTION.
  PRIVATE SECTION.
    CONSTANTS:
      mc_lock_argument_base TYPE string VALUE 'ZSD_SO_CONVERSION_FIELD_CLC'.
    CONSTANTS:
      BEGIN OF mc_update_flag,
        insert TYPE c LENGTH 1 VALUE 'I',
        update TYPE c LENGTH 1 VALUE 'U',
        delete TYPE c LENGTH 1 VALUE 'D',
      END OF mc_update_flag.

    TYPES:
      BEGIN OF mtyp_s_order_item,
        ordernumber TYPE zsd_i_so_conversion_tool-ordernumber,
        itemnumber  TYPE zsd_i_so_conversion_tool-orderitemnumber,
        itemplant   TYPE zsd_i_so_conversion_tool-orderitemplant,
        itemproduct TYPE zsd_i_so_conversion_tool-orderitemproduct,
      END OF mtyp_s_order_item.
    TYPES:
      mtyp_t_order_items TYPE SORTED TABLE OF mtyp_s_order_item WITH UNIQUE KEY ordernumber itemnumber.
    TYPES:
      BEGIN OF mtyp_s_earliest_avail_date,
        ordernumber              TYPE zsd_i_so_conv_avail_date-ordernumber,
        orderitemnumber          TYPE zsd_i_so_conv_avail_date-orderitemnumber,
        earliestavailabilitydate TYPE zsd_i_so_conv_avail_date-earliestavailabilitydate,
      END OF mtyp_s_earliest_avail_date.
    TYPES:
      BEGIN OF mtyp_s_calc_fields.
        INCLUDE TYPE zsd_t_soconv_clc.
    TYPES upd_flag TYPE c LENGTH 1.
    TYPES END OF mtyp_s_calc_fields.
    TYPES:
      mtyp_t_calc_fields TYPE STANDARD TABLE OF mtyp_s_calc_fields
                         WITH DEFAULT KEY
                         WITH NON-UNIQUE SORTED KEY upd COMPONENTS upd_flag.

    DATA:
      mif_appl_log TYPE REF TO if_bali_log.
    DATA:
      BEGIN OF ms_parameters,
        sales_org  TYPE if_apj_dt_exec_object=>ty_templ_val,
        item_plant TYPE if_apj_dt_exec_object=>ty_templ_val,
      END OF ms_parameters.
    DATA:
      mts_earliest_avail_dates TYPE SORTED TABLE OF mtyp_s_earliest_avail_date
                               WITH UNIQUE KEY primary_key COMPONENTS ordernumber orderitemnumber.

    METHODS save_log
      RAISING
        cx_bali_runtime.
    METHODS create_log
      RAISING
        cx_bali_runtime.
    METHODS add_log_message
      IMPORTING
        iv_severity TYPE cl_bali_message_setter=>ty_severity DEFAULT zif_sd_so_conversion_constants=>gc_msg_type-information
        iv_number   TYPE cl_bali_message_setter=>ty_number
        iv_var1     TYPE cl_bali_message_setter=>ty_variable OPTIONAL
        iv_var2     TYPE cl_bali_message_setter=>ty_variable OPTIONAL
        iv_var3     TYPE cl_bali_message_setter=>ty_variable OPTIONAL
        iv_var4     TYPE cl_bali_message_setter=>ty_variable OPTIONAL
      RAISING
        cx_bali_runtime.
    METHODS set_parameters
      IMPORTING
        it_parameters TYPE if_apj_rt_exec_object=>tt_templ_val.
    METHODS execute
      RAISING
        cx_bali_runtime.
    METHODS get_lock_name
      RETURNING
        VALUE(rv_lock_name) TYPE string.
    METHODS set_application_lock
      RETURNING
        VALUE(rv_success) TYPE abap_bool
      RAISING
        cx_bali_runtime.
    METHODS get_earliest_avail_dates
      IMPORTING
        its_items TYPE mtyp_t_order_items.
    METHODS check_replenishment_lead_time
      IMPORTING
        iv_order_number        TYPE zsd_i_so_conversion_tool-ordernumber
        iv_item_number         TYPE zsd_i_so_conversion_tool-orderitemnumber
        iv_item_plant          TYPE zsd_i_so_conversion_tool-orderitemplant
        iv_item_product        TYPE zsd_i_so_conversion_tool-orderitemproduct
      RETURNING
        VALUE(rv_is_satisfied) TYPE zsd_t_soconv_clc-rlt_check.
    METHODS get_order_cutoff_date
      IMPORTING
        iv_order_number       TYPE zsd_i_so_conversion_tool-ordernumber
        iv_item_number        TYPE zsd_i_so_conversion_tool-orderitemnumber
        iv_item_plant         TYPE zsd_i_so_conversion_tool-orderitemplant
        iv_item_product       TYPE zsd_i_so_conversion_tool-orderitemproduct
      RETURNING
        VALUE(rv_cutoff_date) TYPE zsd_t_soconv_clc-cutoff_date_sord.
    METHODS get_next_cutoff_date
      IMPORTING
        iv_item_plant         TYPE zsd_i_so_conversion_tool-orderitemplant
        iv_item_product       TYPE zsd_i_so_conversion_tool-orderitemproduct
      RETURNING
        VALUE(rv_cutoff_date) TYPE zsd_t_soconv_clc-cutoff_date_next.
    METHODS get_due_in_next_cutoff
      IMPORTING
        iv_cutoff_sord   TYPE zsd_t_soconv_clc-cutoff_date_sord
        iv_cutoff_next   TYPE zsd_t_soconv_clc-cutoff_date_next
      RETURNING
        VALUE(rv_is_due) TYPE zsd_t_soconv_clc-due_in_next_cutoff.

ENDCLASS.

CLASS zcl_sd_so_conv_calc_fields_apj IMPLEMENTATION.

  METHOD if_apj_dt_exec_object~get_parameters.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 04.04.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

    "Sales Organization
    INSERT INITIAL LINE INTO TABLE et_parameter_def ASSIGNING FIELD-SYMBOL(<ls_parameter_def>).
    <ls_parameter_def>-selname = gc_apj_parameter-sales_organization.
    <ls_parameter_def>-param_text = 'Sales Organization'(001).
    <ls_parameter_def>-kind = CONV #( if_apj_dt_exec_object=>parameter ).
    <ls_parameter_def>-datatype = 'C'.
    <ls_parameter_def>-length = 4.
    <ls_parameter_def>-changeable_ind = abap_true.

    "Order Item Plant
    INSERT INITIAL LINE INTO TABLE et_parameter_def ASSIGNING <ls_parameter_def>.
    <ls_parameter_def>-selname = gc_apj_parameter-item_plant.
    <ls_parameter_def>-param_text = 'Order Item Plant'(002).
    <ls_parameter_def>-kind = CONV #( if_apj_dt_exec_object=>parameter ).
    <ls_parameter_def>-datatype = 'C'.
    <ls_parameter_def>-length = 4.
    <ls_parameter_def>-changeable_ind = abap_true.


  ENDMETHOD.

  METHOD if_apj_rt_exec_object~execute.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 04.04.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

    TRY.
        " Get application job parameter values
        set_parameters( it_parameters ).

        " Create log instance
        create_log( ).

        " Prevent parallel calculation runs
        IF set_application_lock( ) = abap_true.
          " Execute main data update logic
          execute( ).
        ENDIF.

        " Save log
        save_log( ).

        " Trigger Fiori notification
        zcl_sd_so_conv_calc_fields_ntf=>create_notification( ).


        " Commit all changes
        CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
          EXPORTING
            wait = abap_true.


      CATCH cx_bali_runtime INTO DATA(lo_bali_exception).
        RAISE EXCEPTION NEW cx_apj_rt_content( previous = lo_bali_exception ).
    ENDTRY.


  ENDMETHOD.

  METHOD create_log.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 18.04.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

    mif_appl_log = cl_bali_log=>create_with_header(
      header = cl_bali_header_setter=>create(
        object      = zif_sd_so_conversion_constants=>gc_appl_log_object
        subobject   = zif_sd_so_conversion_constants=>gc_appl_log_subobject-calc_fields
        external_id = CONV #( get_lock_name( ) )
      )
    ).

  ENDMETHOD.

  METHOD save_log.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 12.04.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

    cl_bali_log_db=>get_instance( )->save_log(
      log = mif_appl_log
      assign_to_current_appl_job = abap_true
    ).

  ENDMETHOD.

  METHOD add_log_message.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 12.04.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

    mif_appl_log->add_item(
      item = cl_bali_message_setter=>create(
        severity   = iv_severity
        id         = zif_sd_so_conversion_constants=>gc_message_class
        number     = iv_number
        variable_1 = iv_var1
        variable_2 = iv_var2
        variable_3 = iv_var3
        variable_4 = iv_var4
      )
    ).

  ENDMETHOD.

  METHOD set_parameters.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 11.04.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

    LOOP AT it_parameters REFERENCE INTO DATA(lo_parameter).
      CASE lo_parameter->selname.
        WHEN gc_apj_parameter-sales_organization.
          ms_parameters-sales_org = lo_parameter->*.

        WHEN gc_apj_parameter-item_plant.
          ms_parameters-item_plant = lo_parameter->*.

      ENDCASE.

    ENDLOOP.


  ENDMETHOD.

  METHOD execute.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 11.04.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

    DATA:
      lt_sales_org    TYPE RANGE OF zsd_i_so_conversion_tool-salesorganization,
      lt_item_plant   TYPE RANGE OF zsd_i_so_conversion_tool-orderitemplant,
      lts_order_items TYPE mtyp_t_order_items,
      lt_calc_fields  TYPE mtyp_t_calc_fields.


    IF ms_parameters-sales_org IS NOT INITIAL.
      INSERT CORRESPONDING #( ms_parameters-sales_org ) INTO TABLE lt_sales_org.
    ENDIF.

    IF ms_parameters-item_plant IS NOT INITIAL.
      INSERT CORRESPONDING #( ms_parameters-item_plant ) INTO TABLE lt_item_plant.
    ENDIF.


    SELECT ordernumber, orderitemnumber, orderitemplant, orderitemproduct
      FROM zsd_i_so_conversion_tool
     WHERE salesorganization IN @lt_sales_org
       AND orderitemplant    IN @lt_item_plant
      INTO TABLE @lts_order_items.

    IF sy-subrc <> 0.
      RETURN.
    ENDIF.

    SELECT * ##TOO_MANY_ITAB_FIELDS                "#EC CI_NO_TRANSFORM
      FROM zsd_t_soconv_clc
       FOR ALL ENTRIES IN @lts_order_items
     WHERE vbeln = @lts_order_items-ordernumber
       AND posnr = @lts_order_items-itemnumber
      INTO CORRESPONDING FIELDS OF TABLE @lt_calc_fields. "#EC CI_SUBRC


    " Get earliest availability dates
    get_earliest_avail_dates( its_items = lts_order_items ).


    LOOP AT lts_order_items REFERENCE INTO DATA(lo_order_item).

      READ TABLE lt_calc_fields
        WITH KEY vbeln = lo_order_item->ordernumber
                 posnr = lo_order_item->itemnumber
       ASSIGNING FIELD-SYMBOL(<ls_calc_fields>).

      IF sy-subrc = 0.
        <ls_calc_fields>-upd_flag = mc_update_flag-update.
      ELSE.
        INSERT VALUE #( vbeln    = lo_order_item->ordernumber
                        posnr    = lo_order_item->itemnumber
                        upd_flag = mc_update_flag-insert )
          INTO TABLE lt_calc_fields ASSIGNING <ls_calc_fields>
          ELSE UNASSIGN.
      ENDIF.

      " Update calculation date
      <ls_calc_fields>-changed_on = sy-datum.

      " Perform Replenishement Lead Time Check
      <ls_calc_fields>-rlt_check = check_replenishment_lead_time(
        iv_order_number = lo_order_item->ordernumber
        iv_item_number  = lo_order_item->itemnumber
        iv_item_plant   = lo_order_item->itemplant
        iv_item_product = lo_order_item->itemproduct
      ).

      " Get Cut-off Date for the order item
      <ls_calc_fields>-cutoff_date_sord = get_order_cutoff_date(
        iv_order_number = lo_order_item->ordernumber
        iv_item_number  = lo_order_item->itemnumber
        iv_item_plant   = lo_order_item->itemplant
        iv_item_product = lo_order_item->itemproduct
      ).

      " Get next Cut-off Date
      <ls_calc_fields>-cutoff_date_next = get_next_cutoff_date(
        iv_item_plant   = lo_order_item->itemplant
        iv_item_product = lo_order_item->itemproduct
      ).

      " Check order item is due in next Cut-off date
      <ls_calc_fields>-due_in_next_cutoff = get_due_in_next_cutoff(
        iv_cutoff_sord = <ls_calc_fields>-cutoff_date_sord
        iv_cutoff_next = <ls_calc_fields>-cutoff_date_next
      ).


    ENDLOOP.

    IF lt_calc_fields IS INITIAL.
      RETURN.
    ENDIF.


    DATA(lts_insert) = FILTER zsd_tt_soconv_clc( lt_calc_fields USING KEY upd WHERE upd_flag = mc_update_flag-insert ).
    DATA(lts_update) = FILTER zsd_tt_soconv_clc( lt_calc_fields USING KEY upd WHERE upd_flag = mc_update_flag-update ).


    " &1 records to be &2
    MESSAGE ID     zif_sd_so_conversion_constants=>gc_message_class
            TYPE   zif_sd_so_conversion_constants=>gc_msg_type-success
            NUMBER '016'
            WITH   CONV string( lines( lts_insert ) )
            INTO   DATA(lv_update_message) ##NEEDED.

    add_log_message(
      iv_severity = zif_sd_so_conversion_constants=>gc_msg_type-success
      iv_number   = '016'
      iv_var1     = CONV #( lines( lts_insert ) )
      iv_var2     = 'inserted'(003)
    ).

    add_log_message(
      iv_severity = zif_sd_so_conversion_constants=>gc_msg_type-success
      iv_number   = '016'
      iv_var1     = CONV #( lines( lts_update ) )
      iv_var2     = 'updated'(004)
    ).


    CALL FUNCTION 'ZSD_FM_SOCONV_CALC_FIELDS_UPD'
      EXPORTING
        it_insert = lts_insert
        it_update = lts_update.


  ENDMETHOD.

  METHOD get_lock_name.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 12.04.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

    IF ms_parameters-sales_org IS NOT INITIAL.
      DATA(lv_sales_org) = ms_parameters-sales_org-low.
    ELSE.
      lv_sales_org = '*'.
    ENDIF.

    IF ms_parameters-item_plant IS NOT INITIAL.
      DATA(lv_item_plant) = ms_parameters-item_plant-low.
    ELSE.
      lv_item_plant = '*'.
    ENDIF.


    rv_lock_name = |{ mc_lock_argument_base }/{ lv_sales_org }/{ lv_item_plant }|.


  ENDMETHOD.

  METHOD set_application_lock.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 11.04.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

    DATA(lv_lock_name) = CONV progname( get_lock_name( ) ).


    CALL FUNCTION 'ENQUEUE_ES_PROG'
      EXPORTING
        mode_trdir   = 'E' " exclusive lock
        name         = lv_lock_name
        _wait        = abap_true
      EXCEPTIONS
        foreign_lock = 1
        OTHERS       = 9.

    CASE sy-subrc.
      WHEN 0.
        rv_success = abap_true.

      WHEN 1.
        " Calculation already running for S.Org &1, Plant &2. Cancelling.
        MESSAGE ID     zif_sd_so_conversion_constants=>gc_message_class
                TYPE   zif_sd_so_conversion_constants=>gc_msg_type-information
                NUMBER '014'
                WITH   ms_parameters-sales_org-low ms_parameters-item_plant-low
                INTO   DATA(lv_lock_message) ##NEEDED.

        add_log_message(
          iv_number   = '014'
          iv_var1     = CONV #( ms_parameters-sales_org-low )
          iv_var2     = CONV #( ms_parameters-item_plant-low )
        ).

      WHEN OTHERS.
        " Failed to set calculation lock for S.Org &1, Plant &2. Cancelling.
        MESSAGE ID     zif_sd_so_conversion_constants=>gc_message_class
                TYPE   zif_sd_so_conversion_constants=>gc_msg_type-error
                NUMBER '015'
                WITH   ms_parameters-sales_org-low ms_parameters-item_plant-low
                INTO   lv_lock_message ##NEEDED.

        add_log_message(
          iv_severity = zif_sd_so_conversion_constants=>gc_msg_type-error
          iv_number   = '015'
          iv_var1     = CONV #( ms_parameters-sales_org-low )
          iv_var2     = CONV #( ms_parameters-item_plant-low )
        ).

    ENDCASE.


  ENDMETHOD.

  METHOD get_earliest_avail_dates.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 04.04.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

    " Select earliest availability dates for all items
    SELECT ordernumber, orderitemnumber, earliestavailabilitydate "#EC CI_NO_TRANSFORM
      FROM zsd_i_so_conv_avail_date
       FOR ALL ENTRIES IN @its_items
     WHERE ordernumber     = @its_items-ordernumber
       AND orderitemnumber = @its_items-itemnumber
      INTO TABLE @mts_earliest_avail_dates.               "#EC CI_SUBRC


  ENDMETHOD.

  METHOD check_replenishment_lead_time.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 04.04.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

    " Get earliest availability date for item
    DATA(lv_earliest_avail_date) = VALUE #(
      mts_earliest_avail_dates[ ordernumber = iv_order_number orderitemnumber = iv_item_number ]-earliestavailabilitydate
      OPTIONAL ).

    IF lv_earliest_avail_date IS INITIAL.
      RETURN.
    ENDIF.


    DATA(lv_item_product) = iv_item_product.
    DATA(lo_rlt_info) = zcl_sd_get_rlt_info=>get_instance( iv_matnr = iv_item_product iv_plant = iv_item_plant ).
    DATA(lv_end_of_rlt) = lo_rlt_info->get_end_of_rlt( EXPORTING iv_plant = iv_item_plant
                                                       CHANGING  cv_matnr = lv_item_product ).


    " End of RLT needs to be before earliest availability date
    IF lv_end_of_rlt < lv_earliest_avail_date.
      rv_is_satisfied = abap_true.
    ENDIF.


  ENDMETHOD.

  METHOD get_order_cutoff_date.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 07.04.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

    " Get earliest availability date for item
    DATA(lv_earliest_avail_date) = VALUE #(
      mts_earliest_avail_dates[ ordernumber = iv_order_number orderitemnumber = iv_item_number ]-earliestavailabilitydate
      OPTIONAL ).

    IF lv_earliest_avail_date IS INITIAL.
      RETURN.
    ENDIF.

    " Get cut-off date
    zcl_sp_release_date_calc=>determine_release_date_for_mad(
      EXPORTING
        iv_werks                      = iv_item_plant
        iv_v_article                  = iv_item_product
        iv_material_availability_date = lv_earliest_avail_date
      IMPORTING
        ev_cutoff_date                = rv_cutoff_date
    ).


  ENDMETHOD.

  METHOD get_next_cutoff_date.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 07.04.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

    " Get next cut-off date from today
    DATA(lo_rlt_info) = zcl_sd_get_rlt_info=>get_instance( iv_matnr = iv_item_product iv_plant = iv_item_plant ).
    rv_cutoff_date = lo_rlt_info->get_cutoff_date( sy-datum ).


  ENDMETHOD.

  METHOD get_due_in_next_cutoff.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MOTOLANT     | 07.04.2023 | FB_19718_SD_[Feature] [BUILD] - SO conversion tool t *
*              |            | DS4K949140                               *
*----------------------------------------------------------------------*

    IF iv_cutoff_sord = iv_cutoff_next.
      rv_is_due = abap_true.
    ENDIF.


  ENDMETHOD.

ENDCLASS.