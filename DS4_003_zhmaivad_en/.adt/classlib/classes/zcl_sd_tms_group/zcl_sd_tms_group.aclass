CLASS zcl_sd_tms_group DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    TYPES:
      BEGIN OF gtyp_s_instances,
        tms_loadid TYPE zz1_tms_loadid,
        object     TYPE REF TO zcl_sd_tms_group,
      END OF  gtyp_s_instances .

    CLASS-DATA:
      gt_instances TYPE STANDARD TABLE OF gtyp_s_instances .
    DATA gv_tms_loadid TYPE zz1_tms_loadid .
    DATA:
      gt_worktab TYPE STANDARD TABLE OF lipov .
    DATA gv_smart TYPE smart .

    METHODS constructor
      IMPORTING
        !iv_tms_loadid TYPE zz1_tms_loadid .
    CLASS-METHODS get_instance
      IMPORTING
        !iv_tms_loadid   TYPE zz1_tms_loadid
      RETURNING
        VALUE(ro_object) TYPE REF TO zcl_sd_tms_group .
    CLASS-METHODS remove_instance
      IMPORTING
        !iv_tms_loadid TYPE zz1_tms_loadid.
    METHODS add_delivery
      IMPORTING
        !is_delivery TYPE lipov .
    METHODS create_group
      RETURNING
        VALUE(rt_return) TYPE bapiret2_tab .

  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS zcl_sd_tms_group IMPLEMENTATION.


  METHOD add_delivery.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 02.03.2023 | 18316     : [Platform] - Inbound interfa *
*              |            | DS4K944595                               *
*----------------------------------------------------------------------*

    INSERT is_delivery INTO TABLE gt_worktab.
  ENDMETHOD.


  METHOD constructor.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 02.03.2023 | 18316     : [Platform] - Inbound interfa *
*              |            | DS4K944595                               *
*----------------------------------------------------------------------*

    gv_tms_loadid = iv_tms_loadid.
    TRY.
        gv_smart = zcl_pe_hm_basic=>get_value( '1290' ).
      CATCH zcx_pe_hm.
        CLEAR gv_smart.
    ENDTRY.
  ENDMETHOD.

  METHOD create_group.
    " -----------------------------------------------------------------------
    "  R E V I S I O N   H I S T O R Y                                     -
    " -----------------------------------------------------------------------
    " AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              -
    "              |            | TRANSPORT REQUESTS                       -
    " -----------------------------------------------------------------------
    " KALSHZHA     | 02.03.2023 | 18316     : [Platform] - Inbound interfa -
    "              |            | DS4K944595                               -
    " -----------------------------------------------------------------------
    " KALSHZHA     | 27.02.2023 | 19930     : [Defect] Defect for Load Infor-
    "              |            | DS4K949496                               -
    " -----------------------------------------------------------------------
    " ZHMAIVAD     | 12.01.2023 | 26115     : [Defect] Defect for Load Infor-
    "              |            | DS4K967671                               -
    " ----------------------------------------------------------------------*

    DATA ls_vbsk TYPE vbsk.

    IF lines( gt_worktab ) = 0.
      MESSAGE e006(zsd_tsm_delv_update) WITH gv_tms_loadid INTO FINAL(lv_message_no_delivery).
      rt_return = VALUE #( ( type       = 'E'
                             id         = 'ZSD_TSM_DELV_UPDATE'
                             number     = '006'
                             message_v1 = gv_tms_loadid
                             message    = lv_message_no_delivery ) ).
      RETURN.
    ENDIF.

    IF gv_smart IS NOT INITIAL.
      CALL FUNCTION 'WS_LM_GROUP_CREATE'
        EXPORTING
          if_vtext                 = CONV vbsk-vtext( gv_tms_loadid )
          if_smart                 = gv_smart
        IMPORTING
          es_vbsk                  = ls_vbsk
        TABLES
          ct_worktab               = gt_worktab
        EXCEPTIONS
          no_pick_wave_permission  = 1
          no_pick_wave_possible    = 2
          refnum_assigned          = 3
          refnum_assigned_all      = 4
          locking_error            = 5
          no_pick_wave_created     = 6
          no_group_number_assigned = 7
          group_already_existing   = 8
          no_wm_group_created      = 9
          no_group_posted          = 10
          no_output_found          = 11
          no_output_posted         = 12
          wrong_group_type         = 13
          warehouse_number_missing = 14
          no_deliveries_selected   = 15
          wrong_warehouse_number   = 16
          wrong_document_type      = 17
          later_not_aktive         = 18
          no_spanning_to_possible  = 19
          OTHERS                   = 20.
      IF sy-subrc = 0.
        COMMIT WORK.
        MESSAGE s000(zsd_tsm_delv_update) WITH ls_vbsk-sammg gv_tms_loadid INTO DATA(lv_message).
        rt_return = VALUE #( ( type       = 'S'
                               id         = 'ZSD_TSM_DELV_UPDATE'
                               number     = '000'
                               message_v1 = ls_vbsk-sammg
                               message_v2 = gv_tms_loadid
                               message    = lv_message ) ).
      ELSE.
        FINAL(lv_subrc) = sy-subrc.
        ROLLBACK WORK.
        MESSAGE  e001(zsd_tsm_delv_update) WITH gv_tms_loadid INTO lv_message.
        rt_return = VALUE #( ( type       = 'E'
                               id         = 'ZSD_TSM_DELV_UPDATE'
                               number     = '001'
                               message_v1 = gv_tms_loadid
                               message    = lv_message ) ).

        MESSAGE e005(zsd_tsm_delv_update) WITH lv_subrc INTO lv_message.
        INSERT VALUE #( type       = 'E'
                        id         = 'ZSD_TSM_DELV_UPDATE'
                        number     = '005'
                        message_v1 = lv_subrc
                        message    = lv_message )
               INTO TABLE rt_return.

      ENDIF.
    ELSE.
      MESSAGE e004(zsd_tsm_delv_update) INTO lv_message.
      rt_return = VALUE #( ( type    = 'E'
                             id      = 'ZSD_TSM_DELV_UPDATE'
                             number  = '004'
                             message = lv_message ) ).
    ENDIF.
  ENDMETHOD.


  METHOD get_instance.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 02.03.2023 | 18316     : [Platform] - Inbound interfa *
*              |            | DS4K944595                               *
*----------------------------------------------------------------------*

    READ TABLE gt_instances ASSIGNING FIELD-SYMBOL(<ls_instance>)
    WITH KEY tms_loadid = iv_tms_loadid.
    IF sy-subrc NE 0.
      DATA ls_instance LIKE LINE OF gt_instances.
      ls_instance-tms_loadid = iv_tms_loadid.
      ls_instance-object = NEW zcl_sd_tms_group( iv_tms_loadid ).
      INSERT ls_instance INTO TABLE gt_instances ASSIGNING <ls_instance>.
    ENDIF.
    IF <ls_instance> IS ASSIGNED.
      ro_object = <ls_instance>-object.
    ENDIF.
  ENDMETHOD.


  METHOD remove_instance.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* ZHMAIVAD     | 20.11.2023 | 26115     : [Defect] Defect for Load Infor*
*              |            | DS4K967671                               *
*----------------------------------------------------------------------*

    DELETE gt_instances WHERE tms_loadid = iv_tms_loadid.
  ENDMETHOD.
ENDCLASS.