CLASS zcl_sd_ue_move_field_to_vbep DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES if_badi_interface .
    INTERFACES zif_sd_badi_ue_field_to_vbep .
  PROTECTED SECTION.
private section.

  methods COPY_EDATU_TO_PRSDT
    importing
      !IS_VBEP type VBEP
      !IV_PROCESSING_MODE type CHAR1
      !IS_VBAK type VBAK
      !IS_VBAP type VBAP
    changing
      !CT_XVBKD type VA_VBKDVB_T .
  methods RETURN_ORDER_DISCREP_UPDATE
    importing
      !IV_BUSINESSOBJEKT type NAST-OBJTYPE
      !IS_VBAK type VBAK
      !IT_VBEP type VA_VBEPVB_T
      !IS_VBKD type VBKD
    changing
      !CS_VBEP type VBEP
      !CS_VBAP type VBAP
      !CT_XVBKD type VA_VBKDVB_T .
  methods SET_QUANTITY_LPD
    importing
      !IV_MODE type SYST_TABIX
      !IS_VBAP type VBAP
    changing
      !CS_VBEP type VBEP .
  methods SET_SCHEDULE_LINE_CATEGORY
    importing
      !IV_MODE type SYST_TABIX
      !IS_VBKD type VBKD
      !IS_VBAP type VBAP
    changing
      !CS_VBEP type VBEP
      !CT_VBEP type VA_VBEPVB_T .
  methods SET_RDD
    importing
      !IT_XVBPA type VA_VBPAVB_T
    changing
      !CS_VBEP type VBEP
      !CS_VBAP type VBAP .
  methods SET_SCHEDULE_LINE_CATEGORY_NEW
    importing
      !IV_MODE type SYST_TABIX
      !IS_VBKD type VBKD
      !IS_VBAK type VBAK
      !IV_PROCESSING_MODE type TRTYP
    changing
      !CS_VBEP type VBEP
      !CT_VBEP type VA_VBEPVB_T .
ENDCLASS.



CLASS ZCL_SD_UE_MOVE_FIELD_TO_VBEP IMPLEMENTATION.


  METHOD copy_edatu_to_prsdt.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KHIZHAND     | 03.06.2022 | 11272     : Pricing Enhancements - Copy RDD to Pricing Dates *
*              |            | DS4K919120                               *
*----------------------------------------------------------------------*
* IAPRYALE     | 14.11.2022 | 15214 : Copy Header/Item RSD             *
*              |            | to Pricing Date                          *
*              |            | DS4K935308                               *
*----------------------------------------------------------------------*
* TATSISTA     | 23.02.2023 | 18383 : Returns - LPD logic update &     *
*              |            | Over Return flag                         *
*              |            | DS4K944852                               *
*----------------------------------------------------------------------*

    CONSTANTS lc_header_nr TYPE posnr VALUE '000000'.

    IF is_vbap-vgbel IS NOT INITIAL.
      RETURN.
    ENDIF.

    IF iv_processing_mode = cl_lord_co=>sc_create_mode
      AND is_vbak-zz1_rsd_head IS INITIAL.
      CHECK : is_vbak-vgbel IS INITIAL.

      READ TABLE ct_xvbkd[] INTO DATA(ls_xvbkd) WITH KEY posnr = lc_header_nr.
      IF sy-subrc = 0.
        READ TABLE ct_xvbkd[] ASSIGNING FIELD-SYMBOL(<ls_xvbkd_position>) WITH KEY posnr = is_vbep-posnr. "#EC CI_STDSEQ
        IF sy-subrc = 0
          AND is_vbep-edatu <>  <ls_xvbkd_position>-prsdt
          AND is_vbep-etenr = 0001 .
          <ls_xvbkd_position>-prsdt = is_vbep-edatu.
        ELSEIF sy-subrc <> 0 .
          ls_xvbkd-posnr = is_vbep-posnr.
          ls_xvbkd-prsdt = is_vbep-edatu.
          INSERT ls_xvbkd INTO TABLE ct_xvbkd[].
        ENDIF.
      ENDIF.
    ENDIF.

  ENDMETHOD.


  METHOD zif_sd_badi_ue_field_to_vbep~run.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KHIZHAND     | 03.06.2022 | 11272     : Pricing Enhancements - Copy RDD to Pricing Dates *
*              |            | DS4K919120                               *
*----------------------------------------------------------------------*
* KARPOSER     | 28.07.2022 | 12528     : FB_12528_SD_Development - Enhance return order updat*
*              |            | DS4K925688                               *
*----------------------------------------------------------------------*
* KASHTULA     | 24.08.2022 | 12798     : O2C - Customer Return - LPD  *
*              |            | validations DS4K926536                   *
*----------------------------------------------------------------------*
* MUKHAMAK     | 30.01.2023 | 17291     : _SD_Customer Order -         *
*              |            | Change schedule  line DS4K941579         *
*----------------------------------------------------------------------*
* TATSISTA     | 23.02.2023 | 18383 : Returns - LPD logic update &     *
*              |            | Over Return flag                         *
*              |            | DS4K944852                               *
* SRIKAVEN     | 08.05.2023 | 20724     : Development - First RDD/CDD/ *
*              |            | DS4K951014                               *
*----------------------------------------------------------------------*
* NEVMYOLE     | 17.07.2023 | FB_23250_SP_Feature - How to Cre         *
*              |            | Change schedule  line DS4K958155         *
*----------------------------------------------------------------------*
* NEVMYOLE     | 29.08.2023 | FB_24704_SP_Feature - CR - Customer group*
*              |            | DS4K962165                               *
*----------------------------------------------------------------------*
* NAGARSOW     | 10.10.2023 | FB_25828_SP_Feature - Defect - Restrict Automati*
*              |            | DS4K966396                               *
*----------------------------------------------------------------------*
* NAGARSOW     | 03.01.2024 | 25957     : [Defect] Store First MAD/CDD/*
*              |            | DS4K967089
*----------------------------------------------------------------------*
* MUKHAMAK     | 17.01.2024 | 26986     : SO line rejections for       *
*              |            | application check DS4K971290             *
*----------------------------------------------------------------------*
    DATA ls_vbak TYPE vbak.
    ls_vbak = is_vbak.
    zcl_sd_move_vbak_cusflds=>meth_check_valid_order(
    IMPORTING
           ev_valid = DATA(lv_valid)
            CHANGING
           cs_vbak  = ls_vbak
           ).
    IF lv_valid IS NOT INITIAL.
      set_rdd(
          EXPORTING
              it_xvbpa = it_vbpa
          CHANGING
              cs_vbep  = cs_vbep
              cs_vbap  = cs_vbap ).
    ENDIF.
    CLEAR ls_vbak.
    copy_edatu_to_prsdt( EXPORTING is_vbep            = is_vbep
                                   is_vbak            = is_vbak
                                   iv_processing_mode = iv_processing_mode
                                   is_vbap            = cs_vbap
                         CHANGING  ct_xvbkd           = ct_xvbkd ).

    return_order_discrep_update(
      EXPORTING
        iv_businessobjekt = iv_businessobjekt
        is_vbak           = is_vbak
        it_vbep           = it_vbep
        is_vbkd           = is_vbkd
      CHANGING
        cs_vbep           = cs_vbep
        cs_vbap           = cs_vbap
        ct_xvbkd          = ct_xvbkd ).

    set_quantity_lpd(
      EXPORTING
        iv_mode = iv_mode
        is_vbap = cs_vbap
      CHANGING
        cs_vbep = cs_vbep ).

    set_schedule_line_category(
      EXPORTING
        iv_mode = iv_mode
        is_vbkd = is_vbkd
        is_vbap = cs_vbap
      CHANGING
        cs_vbep = cs_vbep
        ct_vbep = ct_vbep
    ).

    set_schedule_line_category_new(
      EXPORTING
        iv_mode = iv_mode
        is_vbkd = is_vbkd
        is_vbak = is_vbak
        iv_processing_mode = iv_processing_mode
      CHANGING
        cs_vbep = cs_vbep
        ct_vbep = ct_vbep
    ).

    zcl_sd_vbap_app_variant_check=>get_instance( )->app_variant_check(
      EXPORTING
        is_vbak = is_vbak
        is_tvak = is_tvak
        is_vbep = is_vbep
        it_vbep = ct_vbep
      CHANGING
        cs_vbap = cs_vbap ).

  ENDMETHOD.


  METHOD set_quantity_lpd.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KASHTULA     | 24.08.2022 | 12528     : O2C - Customer Return - LPD  *
*              |            | validations (12798), DS4K925688          *
*----------------------------------------------------------------------*

    CONSTANTS:
       lc_create TYPE syst_tabix VALUE 0.

    DATA:
      lv_memory TYPE char40,
      lv_kwmeng TYPE kwmeng.

    CHECK iv_mode = lc_create.

    lv_memory = is_vbap-matnr.
    IMPORT lv_kwmeng TO lv_kwmeng FROM MEMORY ID lv_memory.
    IF sy-subrc = 0 AND lv_kwmeng > 0.
      cs_vbep-cmeng = cs_vbep-wmeng = lv_kwmeng.
      CLEAR lv_kwmeng.
      EXPORT lv_kwmeng FROM lv_kwmeng TO MEMORY ID lv_memory.
    ENDIF.

  ENDMETHOD.


  METHOD set_schedule_line_category.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* MUKHAMAK     | 30.01.2023 | 17291     : _SD_Customer Order -         *
*              |            | Change schedule  line DS4K941579         *
*----------------------------------------------------------------------*
* KASHTULA     | 28.11.2023 | 27151     : POD program in clearance is  *
*              |            | not working, DS4K971990                  *
*----------------------------------------------------------------------*
* MUKHAMAK     | 21.02.2024 | 29268     : AssistReceivingErrorFromS4   *
*              |            | DS4K980501                               *
*----------------------------------------------------------------------*

    IF iv_mode <> 0.
      " It is not a new item. This logic can be called for the phase 'Save Document Prepare' (the second call).
      " If Item exists already -> redetermine schedule line category
      " IV_MODE contains index of existing Item that is being processed now
      IF lines( ct_vbep ) >= iv_mode.
        READ TABLE ct_vbep ASSIGNING FIELD-SYMBOL(<ls_vbep>) INDEX iv_mode.
        IF sy-subrc <> 0
        OR ( sy-subrc = 0 AND <ls_vbep>-posnr <> cs_vbep-posnr ).
          RETURN.
        ENDIF.
      ELSE.
        RETURN.
      ENDIF.
    ENDIF.

    DATA(lo_set_schedule_line_category) = zcl_sd_set_sched_line_cat=>get_instance( ).
    lo_set_schedule_line_category->set_schedule_line_category(
      EXPORTING
        iv_podkz = is_vbkd-podkz
        iv_matnr = is_vbap-matnr
        iv_werks = is_vbap-werks
        iv_pstyv = is_vbap-pstyv
        iv_posnr = cs_vbep-posnr
      CHANGING
        cs_vbep  = cs_vbep ).

  ENDMETHOD.


  METHOD return_order_discrep_update.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KARPOSER     | 02.08.2022 | 12528     : Enhance return order update  *
*              |            | DS4K925688                               *
*----------------------------------------------------------------------*
* DOLYADMI     | 09.03.2023 | 18455     : Feature - Development - O2C- *
*              |            | DS4K945140                               *
*----------------------------------------------------------------------*
* DOLYADMI     | 28.03.2023 | 19423     : Feature - Missing Delivery D *
*              |            | DS4K948823                               *
*----------------------------------------------------------------------*
* DOLYADMI     | 30.05.2023 | 20730     : Feature - Development - O2C- *
*              |            | DS4K951058                               *
*----------------------------------------------------------------------*
* DOLYADMI     | 07.08.2023 | 24094     : [Investigation] - ShipTo par *
*              |            | DS4K960110                               *
*----------------------------------------------------------------------*
* DOLYADMI     | 26.08.2023 | 24464     : Return order confirmation in *
*              |            | DS4K961548                               *
*----------------------------------------------------------------------*
* ANIPEVIN     | 13.09.2023 | 25135     : Defect-Test-Return order conf*
*              |            | DS4K963930                               *
*----------------------------------------------------------------------*
* ACHISLRIM    | 13.02.2024 | 2FB_29031_SD_Feature Issue by adding new *
*              |            | DS4K979595                               *
*----------------------------------------------------------------------*
* ZHMAIVAD     | 17.01.2024 | 26986     : SO line rejections for       *
*              |            | application check DS4K971290             *
*----------------------------------------------------------------------*

    CONSTANTS: lc_method     TYPE string VALUE 'METHOD',
               lc_methodname TYPE string VALUE 'SAVE'.

    CHECK iv_businessobjekt = 'BUS2102' AND
          is_vbak-vbtyp = 'H'.

    IF zcl_sd_o2c_posex_share=>is_item_exists( cs_vbap-posnr ).
      cs_vbap-posex = zcl_sd_o2c_posex_share=>get_item( cs_vbap-posnr ).
    ENDIF.

    READ TABLE it_vbep ASSIGNING FIELD-SYMBOL(<ls_xvbep>)
        WITH KEY vbeln = cs_vbep-vbeln
                 posnr = cs_vbep-posnr.
    IF sy-subrc = 0.
      READ TABLE ct_xvbkd ASSIGNING FIELD-SYMBOL(<ls_xvbkd>)
        WITH KEY vbeln = cs_vbep-vbeln
                 posnr = cs_vbep-posnr.
      IF sy-subrc <> 0.
        APPEND VALUE vbkdvb( BASE ct_xvbkd[ posnr = '000000' ]
                             posnr = <ls_xvbep>-posnr
                             updkz = 'I' ) TO ct_xvbkd.
      ENDIF.
    ELSEIF sy-subrc <> 0 AND is_vbak-vbeln IS NOT INITIAL.
      READ TABLE ct_xvbkd ASSIGNING FIELD-SYMBOL(<ls_xvbkd1>)
        WITH KEY vbeln = cs_vbep-vbeln
                 posnr = cs_vbep-posnr.
      IF sy-subrc <> 0.
        APPEND VALUE vbkdvb( BASE ct_xvbkd[ posnr = '000000' ]
                             posnr = cs_vbep-posnr
                             updkz = 'I' ) TO ct_xvbkd.
      ENDIF.
    ELSE.
      RETURN.
    ENDIF.

    CASE is_vbkd-bstkd.
      WHEN zcl_sd_aif_returns_create=>gc_ref_code-ndlv_under OR
           zcl_sd_aif_returns_create=>gc_ref_code-ndlv_over.

        cs_vbep-bmeng = cs_vbep-wmeng.
        cs_vbep-wmeng = <ls_xvbep>-wmeng.

        READ TABLE ct_xvbkd ASSIGNING <ls_xvbkd>
          WITH KEY vbeln = cs_vbep-vbeln
                   posnr = cs_vbep-posnr.
        IF sy-subrc = 0.
          <ls_xvbkd>-bstkd = cs_vbap-bstkd_ana.
        ENDIF.
      WHEN zcl_sd_aif_returns_create=>gc_ref_code-dlv_under OR
           zcl_sd_aif_returns_create=>gc_ref_code-dlv_over OR
           zcl_sd_aif_returns_create=>gc_ref_code-dlv_happy.
        IF is_vbkd-bstkd = zcl_sd_aif_returns_create=>gc_ref_code-dlv_over.
          cs_vbep-bmeng = cs_vbep-wmeng.
        ELSE.
          cs_vbep-bmeng = cs_vbep-wmeng + cs_vbep-dlvqty_bu.
          IF <ls_xvbep> IS ASSIGNED.
            cs_vbep-wmeng = <ls_xvbep>-wmeng.
          ENDIF.
        ENDIF.

        READ TABLE ct_xvbkd ASSIGNING <ls_xvbkd>
          WITH KEY vbeln = cs_vbep-vbeln
                   posnr = cs_vbep-posnr.
        IF sy-subrc = 0.
          <ls_xvbkd>-bstkd = cs_vbap-bstkd_ana.
        ENDIF.
    ENDCASE.

    IF zcl_sd_aux_read_call_stack=>is_valid( iv_method = lc_method
                                         iv_methodname = lc_methodname ).
      TRY.
          IF is_vbkd-bstkd <> zcl_sd_aif_returns_create=>gc_ref_code-dlv_over.
            cs_vbep-bmeng = it_vbep[ posnr = cs_vbep-posnr ]-bmeng.
            cs_vbep-wmeng = it_vbep[ posnr = cs_vbep-posnr ]-wmeng.
          ENDIF.
        CATCH  cx_sy_itab_line_not_found.
          RETURN.
      ENDTRY.
      RETURN.
    ENDIF.
  ENDMETHOD.


  METHOD set_rdd.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* SRIKAVEN     | 08.05.2023 | 20724     : Development - First RDD/CDD/ *
*              |            | DS4K951014                               *
* SRIKAVEN     | 07.08.2023 | 23500     : Development - O2C - Delivery *
*              |            | DS4K958665                               *
* SRIKAVEN     | 07.08.2023 | 23500     : Development - O2C - Delivery *
*              |            | DS4K958665                               *
*----------------------------------------------------------------------*

    CONSTANTS : lc_we                TYPE char2 VALUE 'WE',
                lc_ag                TYPE char2 VALUE 'AG',
                lc_customer_dispatch TYPE char20 VALUE 'CUSTOMER_DISPATCH_LT'.
    DATA : lv_customer_dipatch_time TYPE atflv,
           lv_customer_dipatch_conv TYPE cha_class_view-sollwert.

    DATA(lv_shipto) = VALUE #( it_xvbpa[  parvw = lc_we ]-kunnr OPTIONAL ).
    DATA(lv_soldto) = VALUE #( it_xvbpa[  parvw = lc_ag ]-kunnr OPTIONAL ).
    DATA : lv_customer_dt TYPE atinn.

    CALL FUNCTION 'CONVERSION_EXIT_ATINN_INPUT'
      EXPORTING
        input  = lc_customer_dispatch
      IMPORTING
        output = lv_customer_dt.
*...// Change in Partner
    DATA(lt_partner) = it_xvbpa.
    DELETE lt_partner WHERE posnr IS INITIAL.
    IF lt_partner IS NOT INITIAL.
      READ TABLE it_xvbpa ASSIGNING FIELD-SYMBOL(<ls_vbpa>)
      WITH KEY parvw = lc_we posnr = cs_vbep-posnr.
      IF sy-subrc IS INITIAL.
        lv_shipto = <ls_vbpa>-kunnr.
        UNASSIGN <ls_vbpa>.
      ENDIF.
      READ TABLE it_xvbpa ASSIGNING <ls_vbpa>
      WITH KEY parvw = lc_ag posnr = cs_vbep-posnr.
      IF sy-subrc IS INITIAL.
        lv_soldto = <ls_vbpa>-kunnr.
        UNASSIGN <ls_vbpa>.
      ENDIF.
    ENDIF.
*...// Ship to party
    IF lv_shipto IS NOT INITIAL.
      SELECT atinn,
             atwrt,
             atflv
             FROM ausp
             INTO TABLE @DATA(lt_atwrt)
             WHERE objek =  @lv_shipto
             AND (  atinn = @lv_customer_dt ).
      IF sy-subrc IS NOT INITIAL.
        SELECT atinn,
               atwrt,
               atflv
               FROM ausp INTO TABLE @lt_atwrt
               WHERE objek = @lv_soldto
               AND   atinn = @lv_customer_dt  .
        IF sy-subrc IS INITIAL.
          CLEAR sy-subrc.
        ENDIF.
      ENDIF.
    ENDIF.
*...// Get the Customer Dispatch Lead Time
    IF lt_atwrt IS NOT INITIAL.
      lv_customer_dipatch_time =  VALUE #( lt_atwrt[ 1 ]-atflv OPTIONAL ).
      CALL FUNCTION 'QSS0_FLTP_TO_CHAR_CONVERSION'
        EXPORTING
          i_number_of_digits = 0
          i_fltp_value       = lv_customer_dipatch_time
        IMPORTING
          e_char_field       = lv_customer_dipatch_conv.
    ENDIF.

    IF cs_vbap IS NOT INITIAL.
      cs_vbep-edatu =    cs_vbap-zz1_rsd_item - lv_customer_dipatch_conv.
    ENDIF.
  ENDMETHOD.


  METHOD set_schedule_line_category_new.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* NEVMYOLE     | 17.07.2023 | FB_23250_SP_Feature - How to Cre         *
*              |            | Change schedule  line DS4K958155         *
************************************************************************
* NEVMYOLE     | 29.08.2023 | FB_24704_SP_Feature - CR - Customer group*
*              |            | DS4K962165                               *
*----------------------------------------------------------------------*


    IF iv_mode <> 0. RETURN. ENDIF.

    TYPES: BEGIN OF ltyp_s_active,
             vkorg TYPE vkorg,
             vtweg TYPE vtweg,
           END OF ltyp_s_active,
           BEGIN OF ltyp_s_schedule_line_cat,
             ettyp TYPE ettyp,
           END OF ltyp_s_schedule_line_cat,
           ltyp_t_schedule_line_cat TYPE STANDARD TABLE OF ltyp_s_schedule_line_cat,
           BEGIN OF ltyp_s_line,
             abrvw      TYPE abrvw,
             vkgrp      TYPE vkgrp,
             zsd_ordoff TYPE zsd_ordoff,
           END OF ltyp_s_line.

    DATA:
      lt_schedule_line_cat TYPE ltyp_t_schedule_line_cat,
      lv_ordoff            TYPE zsd_ordoff,
      ls_e1edk01_02        TYPE zsd_s_e1edk01_02.

    TRY.
        DATA(lv_active) = zcl_pe_hm_complex=>is_active(
            iv_id           = '0239FC3B8D041EDE88C1E9307CFF9F59'
            is_filter       = VALUE ltyp_s_active(  vkorg    = is_vbak-vkorg
                                                    vtweg    = is_vbak-vtweg  ) ).
      CATCH zcx_pe_hm.
        RETURN.
    ENDTRY.

    IF iv_processing_mode = 'H' AND cs_vbep-banfn IS INITIAL AND lv_active = abap_true
    AND ( zcl_sd_order_intake_interface=>gv_intake_interface_processing = abap_true OR zcl_sp_component_so_create=>gv_ettyp IS NOT INITIAL ).

      IF line_exists( zcl_sd_order_intake_interface=>gt_idoc_data[ segnam = 'ZSD_S_E1EDK01_02' ] ). "#EC CI_STDSEQ
        DATA(ls_idoc_data) = zcl_sd_order_intake_interface=>gt_idoc_data[ segnam = 'ZSD_S_E1EDK01_02' ]. "#EC CI_STDSEQ
        ls_e1edk01_02 = ls_idoc_data-sdata.
        lv_ordoff = ls_e1edk01_02-zz1_orofc.
      ENDIF.

      TRY.
          zcl_pe_hm_complex=>get_table(
            EXPORTING
              iv_id           = '0239FC3B8D041EDE88C561B1A06CDF59'
              is_filter       = VALUE ltyp_s_line( vkgrp = is_vbkd-kdgrp zsd_ordoff = lv_ordoff abrvw = space )
            IMPORTING
              et_table        = lt_schedule_line_cat ).

          DATA(lv_new_sch_line_cat) = lt_schedule_line_cat[ 1 ]-ettyp.
        CATCH zcx_pe_hm.
          RETURN.
      ENDTRY.

      IF zcl_sp_component_so_create=>gv_ettyp IS NOT INITIAL.
        lv_new_sch_line_cat = zcl_sp_component_so_create=>gv_ettyp.
      ENDIF.

      IF lv_new_sch_line_cat IS NOT INITIAL.
        cs_vbep-ettyp = lv_new_sch_line_cat.
        LOOP AT ct_vbep ASSIGNING FIELD-SYMBOL(<ls_vbep>)
          WHERE posnr = cs_vbep-posnr. <ls_vbep>-ettyp = lv_new_sch_line_cat. "#EC CI_STDSEQ
          IF <ls_vbep>-updkz IS INITIAL.
            <ls_vbep>-updkz = 'U'.
          ENDIF.
        ENDLOOP.
      ENDIF.

    ENDIF.

  ENDMETHOD.
ENDCLASS.