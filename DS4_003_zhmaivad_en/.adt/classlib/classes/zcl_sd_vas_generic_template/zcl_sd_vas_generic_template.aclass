CLASS zcl_sd_vas_generic_template DEFINITION
  PUBLIC
  INHERITING FROM zcl_sd_vas_template_base
  CREATE PUBLIC .

  PUBLIC SECTION.

  PROTECTED SECTION.

    METHODS prepare_columns_info_list REDEFINITION.
    METHODS prepare_rows_data REDEFINITION.
    METHODS: create_excel_template_headers REDEFINITION.
    METHODS: fill_template_rows REDEFINITION.
  PRIVATE SECTION.

    METHODS determine_vas_columns_info
      IMPORTING it_cond_tables_range TYPE mtyp_t_cond_tables_range
      RETURNING VALUE(rt_result)     TYPE mtyp_t_cond_tables_fields
      RAISING   cx_static_check.

    METHODS get_vas_ser_columns_info
      RETURNING VALUE(rs_result) TYPE mtyp_s_vas_service_columns.
    METHODS get_overall_columns
      RETURNING
        VALUE(rt_result) TYPE mtyp_t_columns_info.
ENDCLASS.



CLASS ZCL_SD_VAS_GENERIC_TEMPLATE IMPLEMENTATION.


  METHOD create_excel_template_headers.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* ADAKHIKB     | 05.01.2023 | 16257  : VAS condition record mass       *
*              |            | DS4K938452                               *
*----------------------------------------------------------------------*
    DATA: lo_excel     TYPE REF TO zcl_excel,
          lo_worksheet TYPE REF TO zcl_excel_worksheet.


    " Creates active sheet
    lo_excel = NEW #( ).

    " Get active sheet
    lo_worksheet = lo_excel->get_active_worksheet( ).
    lo_worksheet->set_title( ip_title = 'VAS_Table' ).

    " Text alignments
    DATA(lo_alignment) = NEW zcl_excel_style_alignment( ).
    lo_alignment->horizontal   = zcl_excel_style_alignment=>c_horizontal_center.
    lo_alignment->vertical     = zcl_excel_style_alignment=>c_vertical_center.
    lo_alignment->wraptext     = abap_true.
    lo_alignment->shrinktofit  = abap_true.

    " Cell borders
    DATA(lo_border_dark) = NEW zcl_excel_style_border( ).
    lo_border_dark->border_color-rgb = zcl_excel_style_color=>c_black.
    lo_border_dark->border_style   = zcl_excel_style_border=>c_border_thin.

    " Cell color
    DATA(lo_cell_color) = NEW zcl_excel_style_fill( ).
    lo_cell_color->filltype = zcl_excel_style_fill=>c_fill_solid.
    lo_cell_color->fgcolor-rgb  = zcl_excel_style_color=>c_gray.

    " Middle / Centered / Wrap
    DATA(lo_style_mixed) = lo_excel->add_new_style( ).
    lo_style_mixed->font->bold = abap_true.
    lo_style_mixed->alignment = lo_alignment.

    " Create border object
    lo_style_mixed->borders->top   = lo_border_dark.
    lo_style_mixed->borders->left  = lo_border_dark.
    lo_style_mixed->borders->right = lo_border_dark.

    lo_style_mixed->fill           = lo_cell_color.
    DATA(lv_style_mixed_guid) = lo_style_mixed->get_guid( ).

    " Mixed style for column header descr
    DATA(lo_style_mixed_down_border) = lo_excel->add_new_style( ).
    lo_style_mixed_down_border->font->bold = abap_true.
    lo_style_mixed_down_border->alignment = lo_alignment.
    " Create border object
    lo_style_mixed_down_border->borders->down   = lo_border_dark.
    lo_style_mixed_down_border->borders->left  = lo_border_dark.
    lo_style_mixed_down_border->borders->right = lo_border_dark.
    lo_style_mixed_down_border->fill           = lo_cell_color.
    DATA(lv_style_mixed_down_bord_guid) = lo_style_mixed_down_border->get_guid( ).


    " Small italic font for Column name description
    DATA(lo_style_small) = lo_excel->add_new_style( ).
    lo_style_small->alignment = lo_alignment.
    lo_style_small->font->italic = abap_true.
    lo_style_small->fill         = lo_cell_color.
    lo_style_small->fill->fgcolor-rgb  = zcl_excel_style_color=>c_gray.
    lo_style_small->borders->down  = lo_border_dark.
    lo_style_small->borders->left  = lo_border_dark.
    lo_style_small->borders->right = lo_border_dark.
    lo_style_small->font->size = 8.
    DATA(lv_style_small_guid) = lo_style_small->get_guid( ).

    " Small italic font for Column name description without borders
    DATA(lo_style_small_no_down_border) = lo_excel->add_new_style( ).
    lo_style_small_no_down_border->alignment = lo_alignment.
    lo_style_small_no_down_border->font->italic = abap_true.
    lo_style_small_no_down_border->fill         = lo_cell_color.
    lo_style_small_no_down_border->fill->fgcolor-rgb  = zcl_excel_style_color=>c_gray.
    lo_style_small_no_down_border->borders->top  = lo_border_dark.
    lo_style_small_no_down_border->borders->left  = lo_border_dark.
    lo_style_small_no_down_border->borders->right = lo_border_dark.
    lo_style_small_no_down_border->font->size = 8.
    DATA(lv_style_small_no_down_guid) = lo_style_small_no_down_border->get_guid( ).





    DATA lv_column_no TYPE i.
    LOOP AT ms_vas_template_content-all_columns ASSIGNING FIELD-SYMBOL(<ls_column>).
      lv_column_no = sy-tabix.
      IF <ls_column>-field_name CP 'FSH_*'  OR <ls_column>-field_name CP 'ZZ+FSH_*' OR <ls_column>-field_name CP 'ZZFSH_*' OR lv_column_no <= 3.
        lo_worksheet->set_cell( ip_row    = 1
                                ip_column = lv_column_no
                                ip_value  =  <ls_column>-field_descr
                                ip_style  = lv_style_mixed_guid
                                                        ).

        lo_worksheet->set_cell( ip_row    = 2
                                ip_column = lv_column_no
                                ip_value  = |{  <ls_column>-field_name }|
                                ip_style  = lv_style_small_guid
                                ).

      ELSE.
        lo_worksheet->set_cell( ip_row    = 1
                                ip_column = lv_column_no
                                ip_value  =  <ls_column>-field_name
                                ip_style  = lv_style_small_no_down_guid
                                                 ).

        lo_worksheet->set_cell( ip_row    = 2
                                ip_column = lv_column_no
                                ip_value  = |{  <ls_column>-field_descr }|
                                ip_style  = lv_style_mixed_down_bord_guid
                                ).
      ENDIF.

      lo_worksheet->set_cell( ip_row    = 3
                              ip_column = lv_column_no
                              ip_value  = <ls_column>-data_element
                              ip_style  = lv_style_small_guid
                              ).

    ENDLOOP.

    DATA(lo_row) = lo_worksheet->get_row( ip_row = 3 ).
    lo_row->set_visible( abap_false ).

    DATA(lo_col_iterator) = lo_worksheet->get_columns_iterator( ).

    WHILE lo_col_iterator->has_next( ).
      lo_col_iterator->get_next( ).
      lo_worksheet->set_column_width( ip_column = lo_col_iterator->get_index( )    ip_width_fix = '15' ).

    ENDWHILE.

    DATA(lo_style_all_borders) = lo_excel->add_new_style( ).
    lo_style_all_borders->alignment = lo_alignment.
    lo_style_all_borders->fill      = lo_cell_color.
    lo_style_all_borders->borders->allborders   = lo_border_dark.



    " Add sheet for each VAS Services
    LOOP AT ms_vas_template_content-vas_ser_rows_data ASSIGNING FIELD-SYMBOL(<ls_vas_service>).
      lo_worksheet = lo_excel->add_new_worksheet( ).
      lo_worksheet->set_title( ip_title = |{ <ls_vas_service>-vas_ser } - { <ls_vas_service>-vas_ser_desc }| ).
      LOOP AT ms_vas_template_content-vas_ser_columns-vas_sub_service_columns ASSIGNING FIELD-SYMBOL(<ls_vas_sub_ser_column>). "#EC CI_NESTED
        lv_column_no = sy-tabix.
        lo_worksheet->set_cell( ip_row    = 1
                                ip_column = lv_column_no
                                ip_value  = <ls_vas_sub_ser_column>-field_name
                                ip_style  = lv_style_small_guid
                                ).


        lo_worksheet->set_cell( ip_row    = 2
                                ip_column = lv_column_no
                                ip_value  = <ls_vas_sub_ser_column>-field_descr
                                ip_style  = lo_style_all_borders
                                ).

        lo_worksheet->set_cell( ip_row    = 3
                                ip_column = lv_column_no
                                ip_value  = <ls_vas_sub_ser_column>-data_element
                                ip_style  = lv_style_small_guid
                                ).


      ENDLOOP.

      lo_row = lo_worksheet->get_row( ip_row = 1 ).
      lo_row->set_visible( abap_false ).

      lo_row = lo_worksheet->get_row( ip_row = 2 ).
      lo_row->set_row_height( ip_row_height = '35' ).

      lo_row = lo_worksheet->get_row( ip_row = 3 ).
      lo_row->set_visible( abap_false ).

      lo_worksheet->set_column_width( ip_column = 1 ip_width_fix = '10' ).
      lo_worksheet->set_column_width( ip_column = 2 ip_width_fix = '30' ).
    ENDLOOP.

    mo_excel = lo_excel.

  ENDMETHOD.


  METHOD determine_vas_columns_info.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* ADAKHIKB     | 05.01.2023 | 16257  : VAS condition record mass       *
*              |            | DS4K938452                               *
*----------------------------------------------------------------------*
    DATA lt_table_columns    TYPE mtyp_t_columns_info.
    DATA lt_base_columns     TYPE mtyp_t_columns_info.
    DATA lt_sub_serv_columns TYPE mtyp_t_columns_info.
    DATA lt_vas_cond_tab_columns TYPE mtyp_t_cond_tables_fields.
    DATA lo_struct_descr     TYPE REF TO cl_abap_structdescr.
    DATA lo_element_descr    TYPE REF TO cl_abap_elemdescr.



    lt_base_columns = VALUE #( BASE lt_base_columns
                               ( field_name   = 'KSCHL'        data_element = '/SAPCND/COND_TYPE' field_descr = 'Condition type'  )     "#EC NOTEXT
                               ( field_name   = 'DATE_FROM'    data_element = '/SAPCND/DATE_FROM' field_descr = 'Valid date from' )     "#EC NOTEXT
                               ( field_name   = 'DATE_TO'      data_element = '/SAPCND/DATE_TO'   field_descr = 'Valid date to' ) ).    "#EC NOTEXT

    " Read table from importing range table and get the fields which are starting from "FSH_"
    IF it_cond_tables_range IS NOT INITIAL.
      SELECT tabname
        FROM dd02v
        WHERE tabname IN @it_cond_tables_range
        INTO TABLE @DATA(lt_cond_tables).
      IF sy-subrc = 0.
        lo_struct_descr ?= cl_abap_structdescr=>describe_by_name( 'ZSD_S_VAS_COND' ).

        CLEAR: lo_struct_descr.
        LOOP AT lt_cond_tables ASSIGNING FIELD-SYMBOL(<ls_cond_table>).

          lo_struct_descr ?= cl_abap_structdescr=>describe_by_name( <ls_cond_table>-tabname ).

          DATA(lt_components) = lo_struct_descr->get_components( ).

          LOOP AT lt_components ASSIGNING FIELD-SYMBOL(<ls_component>) WHERE name CP 'FSH_*'   "#EC CI_NESTED
                                                                          OR name CP 'ZZ+FSH_*'
                                                                          OR name CP 'ZZFSH_*'.

            lo_element_descr = CAST cl_abap_elemdescr( <ls_component>-type ) .
            DATA(ls_ddic_field) = lo_element_descr->get_ddic_field( ).


            " Collect participating columns from the table
            lt_table_columns = VALUE #( BASE lt_table_columns (
                                       field_name  = <ls_component>-name
                                       data_element = ls_ddic_field-rollname
                                       field_descr  = ls_ddic_field-scrtext_m ) ).

            CLEAR: ls_ddic_field, lo_element_descr.
          ENDLOOP.

          lt_vas_cond_tab_columns = VALUE #( BASE lt_vas_cond_tab_columns (
                                         table_name           = <ls_cond_table>-tabname
                                         vas_cond_columns     = lt_table_columns
                                         base_columns         = lt_base_columns
                                         vas_sub_serv_columns = lt_sub_serv_columns  ) ).

          CLEAR: lo_struct_descr,lt_table_columns.
        ENDLOOP.

      ENDIF.
    ENDIF.

    rt_result = lt_vas_cond_tab_columns.

  ENDMETHOD.


  METHOD get_vas_ser_columns_info.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* ADAKHIKB     | 05.01.2023 | 16257  : VAS condition record mass       *
*              |            | DS4K938452                               *
*----------------------------------------------------------------------*
    DATA ls_vas_cond_ser_columns LIKE rs_result.

    ls_vas_cond_ser_columns-vas_service_columns = VALUE #(
                               ( field_name   = 'FSH_VAS_SER'      data_element = 'FSH_VAS_SER'      field_descr = 'VAS Service Types' )                  "#EC NOTEXT
                               ( field_name   = 'FSH_SER_DESC'     data_element = 'FSH_SER_DESC'     field_descr = 'VAS Service Types Description' ) ).   "#EC NOTEXT

    ls_vas_cond_ser_columns-vas_sub_service_columns = VALUE #(
                               ( field_name   = 'FSH_VAS_SUB_SER'  data_element = 'FSH_VAS_SUB_SER'  field_descr = 'VAS Sub Services'  )                  "#EC NOTEXT
                               ( field_name   = 'FSH_SUB_SER_DESC' data_element = 'FSH_SUB_SER_DESC' field_descr = 'VAS Sub Services Description' ) ).    "#EC NOTEXT

    rs_result  = ls_vas_cond_ser_columns.

  ENDMETHOD.


  METHOD fill_template_rows.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* ADAKHIKB     | 05.01.2023 | 16257  : VAS condition record mass       *
*              |            | DS4K938452                               *
*----------------------------------------------------------------------*
    DATA lo_worksheet TYPE REF TO zcl_excel_worksheet.
    DATA lv_column_no TYPE i.
    DATA lv_row_no TYPE i.

    FIELD-SYMBOLS : <ls_field_value> TYPE any.

    TRY.
        lo_worksheet = mo_excel->get_worksheet_by_name( ip_sheet_name = 'VAS_Table'  ).
        IF ms_vas_template_content-all_columns_data IS BOUND.
          LOOP AT ms_vas_template_content-all_columns_data->* ASSIGNING FIELD-SYMBOL(<ls_vas_cond_row_record>).
            lv_row_no = sy-tabix + 3.
            DO.
              ASSIGN COMPONENT sy-index OF STRUCTURE <ls_vas_cond_row_record> TO <ls_field_value>.
              IF sy-subrc = 0.
                lv_column_no = sy-index.
                lo_worksheet->set_cell( ip_row    = lv_row_no
                                        ip_column = lv_column_no
                                        ip_value  = |{ <ls_field_value> }| ).

              ELSE.
                EXIT.
              ENDIF.
            ENDDO.
            CLEAR: lv_row_no, lv_column_no.
          ENDLOOP.
        ENDIF.

        " Fill VAS Services Sheets rows
        LOOP AT ms_vas_template_content-vas_ser_rows_data ASSIGNING FIELD-SYMBOL(<ls_vas_service>).
          lo_worksheet = mo_excel->get_worksheet_by_name( ip_sheet_name = |{ <ls_vas_service>-vas_ser } - { <ls_vas_service>-vas_ser_desc }|  ).
          LOOP AT <ls_vas_service>-vas_sub_services ASSIGNING FIELD-SYMBOL(<ls_vas_sub_ser_row>).  "#EC CI_NESTED
            lv_row_no = sy-tabix + 3.
            lo_worksheet->set_cell( ip_row    = lv_row_no
                                    ip_column = 1
                                    ip_value  = |{  <ls_vas_sub_ser_row>-vas_sub_ser }| ).

            lo_worksheet->set_cell( ip_row    = lv_row_no
                                    ip_column = 2
                                    ip_value  = |{  <ls_vas_sub_ser_row>-vas_sub_ser_desc }| ).

            CLEAR: lv_row_no.
          ENDLOOP.
        ENDLOOP.
      CATCH zcx_excel  INTO DATA(lo_exc).
        MESSAGE lo_exc->get_longtext( ) TYPE 'E'.
    ENDTRY.

    mo_excel->set_active_sheet_index_by_name( 'VAS_Table' ).
  ENDMETHOD.


  METHOD get_overall_columns.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* ADAKHIKB     | 05.01.2023 | 16257  : VAS condition record mass       *
*              |            | DS4K938452                               *
*----------------------------------------------------------------------*

    DATA lt_overall_columns TYPE mtyp_t_columns_info.

    " Visit all columns information, and collect columns which are not repeated in the overall columns table
    LOOP AT ms_vas_template_content-vas_cond_tab_columns ASSIGNING FIELD-SYMBOL(<ls_cond_table_columns>).

      LOOP AT <ls_cond_table_columns>-base_columns ASSIGNING FIELD-SYMBOL(<ls_base_column>)  . "#EC CI_NESTED
        IF line_exists( lt_overall_columns[ field_name = <ls_base_column>-field_name ] )  .
          CONTINUE.
        ELSE.
          APPEND <ls_base_column> TO  lt_overall_columns.
        ENDIF.
      ENDLOOP.

      LOOP AT <ls_cond_table_columns>-vas_cond_columns ASSIGNING FIELD-SYMBOL(<ls_vas_cond_column>). "#EC CI_NESTED

        IF line_exists( lt_overall_columns[ field_name = <ls_vas_cond_column>-field_name ] ).
          CONTINUE.
        ELSE.
          APPEND <ls_vas_cond_column> TO  lt_overall_columns.
        ENDIF.
      ENDLOOP.

    ENDLOOP.

    " Append some subservice columns as draft columns
    LOOP AT ms_vas_template_content-vas_ser_rows_data ASSIGNING FIELD-SYMBOL(<ls_vas_service_column>).
      LOOP AT <ls_vas_service_column>-vas_sub_services ASSIGNING FIELD-SYMBOL(<ls_vas_sub_service>) TO 1.  "#EC CI_NESTED
        lt_overall_columns = VALUE #( BASE lt_overall_columns
                                      ( field_descr   = <ls_vas_sub_service>-vas_sub_ser
                                        field_name  = 'VAS SubService'                      "#EC NOTEXT
                                        data_element = 'FSH_VAS_CUSTF1' ) ).                "#EC NOTEXT

      ENDLOOP.
    ENDLOOP.

    rt_result = lt_overall_columns.

  ENDMETHOD.


  METHOD prepare_columns_info_list.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* ADAKHIKB     | 05.01.2023 | 16257  : VAS condition record mass       *
*              |            | DS4K938452                               *
*----------------------------------------------------------------------*

    " Determine vas VAS condition participating columns info
    ms_vas_template_content-vas_cond_tab_columns = determine_vas_columns_info( it_cond_tables_range ).

    " Get VAS Services columns info
    ms_vas_template_content-vas_ser_columns = get_vas_ser_columns_info( ).

    " Get overall/not repeated columns information
    ms_vas_template_content-all_columns = get_overall_columns(  ).

  ENDMETHOD.


  METHOD prepare_rows_data.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* ADAKHIKB     | 05.01.2023 | 16257  : VAS condition record mass       *
*              |            | DS4K938452                               *
*----------------------------------------------------------------------*
    " Get data from corresponding tables
    get_vas_cond_ser_data( ).


  ENDMETHOD.
ENDCLASS.