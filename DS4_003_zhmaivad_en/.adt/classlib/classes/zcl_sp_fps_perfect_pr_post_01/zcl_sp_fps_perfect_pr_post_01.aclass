CLASS zcl_sp_fps_perfect_pr_post_01 DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    TYPES:
      gtyp_t_err_gr TYPE STANDARD TABLE OF zsp_t_pr_err_gr.
    TYPES:
      gtyp_t_pr_match TYPE STANDARD TABLE OF zsp_t_pr_match WITH EMPTY KEY .
    TYPES:
      BEGIN OF gtyp_s_division,
        werks       TYPE zsp_pr_plant_id,
        matnr       TYPE zsp_article_gen_small,
        division_id TYPE zsp_division_id,
      END OF gtyp_s_division .
    TYPES:
      gtyp_t_division TYPE STANDARD TABLE OF gtyp_s_division WITH DEFAULT KEY .
    TYPES:
      BEGIN OF gtyp_s_pr_match_key,
        werks TYPE zsp_pr_plant_id,
        matnr TYPE zsp_article_gen_small,
      END OF gtyp_s_pr_match_key .
    TYPES:
      gtyp_t_pr_match_key TYPE SORTED TABLE OF gtyp_s_pr_match_key WITH UNIQUE KEY werks matnr .
    TYPES:
      gtyp_t_pr_group TYPE STANDARD TABLE OF zsp_t_pr_group.
    TYPES:
      BEGIN OF gtyp_s_pprod_source_key,
        matnr          TYPE zsd_i_ibp_prod_source-matnr,
        lifnr          TYPE zsd_i_ibp_prod_source-lifnr,
        sourceid_lifnr TYPE zsd_i_ibp_prod_source-sourceid_lifnr,
        planned_date   TYPE datum,
      END OF gtyp_s_pprod_source_key .
    TYPES:
      gtyp_t_pprod_source_key TYPE SORTED TABLE OF gtyp_s_pprod_source_key
                    WITH UNIQUE KEY matnr lifnr sourceid_lifnr planned_date .
    TYPES:
      BEGIN OF gtyp_s_pprod_source,
        matnr          TYPE zsd_i_ibp_prod_source-matnr,
        lifnr          TYPE zsd_i_ibp_prod_source-lifnr,
        sourceid_lifnr TYPE zsd_i_ibp_prod_source-sourceid_lifnr,
        pvalidfrm      TYPE zsd_i_ibp_prod_source-pvalidfrm,
        pvalidto       TYPE zsd_i_ibp_prod_source-pvalidto,
        pleadtime      TYPE zsd_i_ibp_prod_source-pleadtime,
      END OF gtyp_s_pprod_source .
    TYPES:
      gtyp_t_pprod_source TYPE STANDARD TABLE OF gtyp_s_pprod_source WITH EMPTY KEY .
    TYPES:
      gtyp_t_pr_gr_pack TYPE SORTED TABLE OF zsp_t_pr_gr_pack WITH UNIQUE KEY werks matnr .

    CLASS-DATA:
      BEGIN OF gs_hm_constants,
        zz1_mm_scmsegment   TYPE zsp_t_pr_group-zz1_mm_scmsegment,
        zz1_ordprio         TYPE zsp_t_pr_group-zz1_ordprio,
        zz1_adi_m_promoflag TYPE zsp_t_pr_group-zz1_adi_m_promoflag,
        package_size        TYPE zsp_pr_package_size,
      END OF gs_hm_constants .

    CLASS-METHODS class_constructor .
    METHODS process .
protected section.
private section.

  methods CREATE_GROUPING_DB
    importing
      !IT_PR_GROUP type GTYP_T_PR_GROUP
      !ITS_PR_GR_PACK type GTYP_T_PR_GR_PACK
      !IV_COMMIT type ABAP_BOOLEAN .
  methods SET_DEFAULT_VALUES
    changing
      !CT_PR_GROUP type GTYP_T_PR_GROUP .
  methods FETCH_PR_MATCH
    importing
      !ITS_PR_MATCH_KEY type GTYP_T_PR_MATCH_KEY
    exporting
      !ET_PR_MATCH type GTYP_T_PR_MATCH
      !ET_DIVISION type GTYP_T_DIVISION .
  methods SET_CORRECT_DATES
    exporting
      !ET_ERR type GTYP_T_ERR_GR
    changing
      !CT_PR_GROUP type GTYP_T_PR_GROUP .
  methods FETCH_PLEADTIME
    importing
      !ITS_PPROD_SOURCE_KEY type GTYP_T_PPROD_SOURCE_KEY
    exporting
      !ET_PPROD_SOURCE type GTYP_T_PPROD_SOURCE .
  methods MAP_MATCH_TO_GROUP
    importing
      !IT_PR_MATCH type GTYP_T_PR_MATCH
    exporting
      !ET_PR_GROUP type GTYP_T_PR_GROUP .
  methods SET_PLEADTIME
    changing
      !CT_PR_GROUP type GTYP_T_PR_GROUP .
  methods PROCESS_PACKAGE
    importing
      !ITS_PR_MATCH_KEY type GTYP_T_PR_MATCH_KEY
    exporting
      !ET_PR_GROUP type GTYP_T_PR_GROUP
      !ET_ERR type GTYP_T_ERR_GR .
  methods CLEAR_GROUPING_DB
    importing
      !IV_COMMIT type BOOLEAN default ''
      !IV_UPDATE_TASK type BOOLEAN default '' .
  methods CREATE_PACKAGES_DB
    importing
      !IV_COMMIT type BOOLEAN default ''
    returning
      value(RV_NUMBER_OF_PACKAGES) type INT4 .
  methods FETCH_PACKAGE_BY_NUM
    importing
      !IV_PACKAGE_NUMBER type ZSP_PR_PACKAGE_NUM
    exporting
      !ETS_GR_PACK type GTYP_T_PR_GR_PACK
      !ETS_PR_MATCH_KEY type GTYP_T_PR_MATCH_KEY .
  methods SET_LOCK
    returning
      value(RV_SUCCESS) type ABAP_BOOLEAN .
  methods DELETE_LOCK .
ENDCLASS.



CLASS ZCL_SP_FPS_PERFECT_PR_POST_01 IMPLEMENTATION.


  METHOD fetch_package_by_num.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* RAPANKON     | 13.12.2022 | 15688     : [Build] - FPS-WRICEF-011 - P *
*              |            | DS4K936867                               *
*----------------------------------------------------------------------*

    CLEAR: ets_gr_pack, ets_pr_match_key.

    IF iv_package_number IS INITIAL.
      RETURN.
    ENDIF.

    SELECT zsp_t_pr_gr_pack~*
      FROM zsp_t_pr_gr_pack
     WHERE zsp_t_pr_gr_pack~pckg_num = @iv_package_number
      INTO TABLE @ets_gr_pack.                       "#EC CI_SEL_NESTED
    IF sy-subrc <> 0.
      CLEAR: ets_gr_pack.
      RETURN.
    ENDIF.

    ets_pr_match_key = CORRESPONDING #( ets_gr_pack ).

  ENDMETHOD.


  METHOD create_grouping_db.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* RAPANKON     | 13.12.2022 | 15688     : [Build] - FPS-WRICEF-011 - P *
*              |            | DS4K936867                               *
*----------------------------------------------------------------------*

    CALL FUNCTION 'ZSP_FM_PR_GROUP_UPD' IN UPDATE TASK
      EXPORTING
        it_pr_group = it_pr_group.

    CALL FUNCTION 'ZSP_FM_PR_GR_PACK_UPD' IN UPDATE TASK
      EXPORTING
        it_pr_gr_pack = its_pr_gr_pack.

    IF iv_commit = abap_true.
      COMMIT WORK AND WAIT.
    ENDIF.

  ENDMETHOD.


  METHOD delete_lock.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* RAPANKON     | 13.12.2022 | 15688     : [Build] - FPS-WRICEF-011 - P *
*              |            | DS4K936867                               *
*----------------------------------------------------------------------*

    CALL FUNCTION 'DEQUEUE_EZ_PR_GROUP1'.

  ENDMETHOD.


  method set_pleadtime.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* RAPANKON     | 07.12.2022 | 15688     : [Build] - FPS-WRICEF-011 - P *
*              |            | DS4K936867                               *
*----------------------------------------------------------------------*
* ISAICSVI     | 01.08.2023 | 23222     : Feature - [CR] - FPS-WRICEF- *
*              |            | DS4K958022                               *
*----------------------------------------------------------------------*
* USTINKON     | 04.09.2023 | 24838     : Feature - [Build] - [CR] - Ad*
*              |            | DS4K962813                               *
*----------------------------------------------------------------------*

    data: lv_start_index type i.
    select customer, BPCustomerNumber from I_CustSalesPartnerFunc into table @data(lt_cust)
      where PartnerFunction = 'ZG'. "#EC CI_SEL_NESTED
    if sy-subrc = 0.
      loop at lt_cust assigning field-symbol(<ls_func>).
        if <ls_func>-customer = <ls_func>-BPCustomerNumber.
          delete lt_cust.
        else.
          continue.
        endif.
      endloop.
      sort lt_cust.
    endif.

    data(lts_key) = value gtyp_t_pprod_source_key(
      for groups ls_group_gr of <ls_group_gr> in ct_pr_group
      group by ( matnr          = <ls_group_gr>-matnr
                 lifnr          = <ls_group_gr>-lifnr
                 sourceid_lifnr = <ls_group_gr>-sourceid_lifnr
                 planned_date   = <ls_group_gr>-planned_date )
      without members
      ( matnr          = ls_group_gr-matnr
        lifnr          = ls_group_gr-lifnr
        sourceid_lifnr = ls_group_gr-sourceid_lifnr
        planned_date   = ls_group_gr-planned_date )
    ).

    fetch_pleadtime( exporting its_pprod_source_key = lts_key
                     importing et_pprod_source      = data(lt_pprod_source) ).

    sort lt_pprod_source by matnr lifnr sourceid_lifnr pvalidfrm pvalidto.

    loop at ct_pr_group assigning field-symbol(<ls_pr_group>).
      clear lv_start_index.

      read table lt_pprod_source transporting no fields
        with key matnr          = <ls_pr_group>-matnr
                 lifnr          = <ls_pr_group>-lifnr
                 sourceid_lifnr = conv #( <ls_pr_group>-sourceid_lifnr )
        binary search.
      if sy-subrc = 0.
        lv_start_index = sy-tabix.
      else.
        continue.
      endif.

      loop at lt_pprod_source assigning field-symbol(<ls_pprod_source>) from lv_start_index "#EC CI_NESTED
        where matnr          = <ls_pr_group>-matnr
          and lifnr          = <ls_pr_group>-lifnr
          and sourceid_lifnr = <ls_pr_group>-sourceid_lifnr. "#EC CI_NESTED

        <ls_pr_group>-pleadtime = <ls_pprod_source>-pleadtime.
        exit.
      endloop.


      if <ls_pr_group>-custid is not initial.
        read table lt_cust assigning field-symbol(<ls_cust>)
        with key BPCustomerNumber = conv #( <ls_pr_group>-custid ).
        if sy-subrc = 0.
          <ls_pr_group>-custid_t4m = <ls_cust>-customer.
        endif.
      endif.
    endloop.

  endmethod.


  METHOD fetch_pleadtime.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* RAPANKON     | 06.12.2022 | 15688     : [Build] - FPS-WRICEF-011 - P *
*              |            | DS4K936867                               *
*----------------------------------------------------------------------*
* ISAICSVI     | 13.07.2023 | 23222     : Feature - [CR] - FPS-WRICEF- *
*              |            | DS4K958022                               *
*----------------------------------------------------------------------*
    CLEAR et_pprod_source.

    IF its_pprod_source_key IS INITIAL.
      RETURN.
    ENDIF.

* the table will have no overlapping validity windows for the same product-lifnr-sourceid
    SELECT zps~matnr,
           zps~lifnr,
           zps~sourceid_lifnr,
           zps~pvalidfrm,
           zps~pvalidto,
           zps~pleadtime
      FROM zsd_i_ibp_prod_source AS zps
      FOR ALL ENTRIES IN @its_pprod_source_key
     WHERE zps~matnr = @its_pprod_source_key-matnr
       AND zps~lifnr = @its_pprod_source_key-lifnr
       AND zps~sourceid_lifnr = @its_pprod_source_key-sourceid_lifnr
      INTO CORRESPONDING FIELDS OF TABLE @et_pprod_source. "#EC CI_SEL_NESTED
    IF sy-subrc <> 0.
      CLEAR et_pprod_source.
    ENDIF.

  ENDMETHOD.


  METHOD process_package.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* RAPANKON     | 07.12.2022 | 15688     : [Build] - FPS-WRICEF-011 - P *
*              |            | DS4K936867                               *
* ISAICSVI     | 10.04.2023 | 19902     : [CR] - FPS-WRICEF-011-Perfec *
*              |            | DS4K949449                               *
*----------------------------------------------------------------------*

    CLEAR: et_pr_group, et_err.

    fetch_pr_match( EXPORTING its_pr_match_key = its_pr_match_key
                    IMPORTING et_pr_match      = DATA(lt_pr_match)
                              et_division      = DATA(lt_division) ).
    IF lt_pr_match IS INITIAL.
      RETURN.
    ENDIF.

    map_match_to_group( EXPORTING it_pr_match = lt_pr_match
                        IMPORTING et_pr_group = et_pr_group ).

    "Fixing days
    set_correct_dates( IMPORTING et_err = et_err
                       CHANGING ct_pr_group = et_pr_group ).

    "Add manufacturing lead time
    set_pleadtime( CHANGING ct_pr_group = et_pr_group ).

    "Set default values
    set_default_values( CHANGING ct_pr_group = et_pr_group ).

    "Set grouping
    DATA(lo_grouping) = NEW zcl_sp_fps_perfect_pr_grouping( ).
    lo_grouping->processing( EXPORTING it_division = lt_division
                             CHANGING  ct_pr_group = et_pr_group
                                       ct_err      = et_err ).

  ENDMETHOD.


  METHOD set_lock.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* RAPANKON     | 13.12.2022 | 15688     : [Build] - FPS-WRICEF-011 - P *
*              |            | DS4K936867                               *
*----------------------------------------------------------------------*
    CALL FUNCTION 'ENQUEUE_EZ_PR_GROUP1'
      EXPORTING
        mode_zsp_t_pr_group = 'X'              " Lock mode for table ZSP_T_PR_GROUP
        mandt               = sy-mandt         " Enqueue argument 01
        _scope              = '3'
        _wait               = space
      EXCEPTIONS
        foreign_lock        = 1                " Object already locked
        system_failure      = 2                " Internal error from enqueue server
        OTHERS              = 3.
    IF sy-subrc = 0.
      rv_success = abap_true.
    ELSE.
      rv_success = abap_false.
    ENDIF.

  ENDMETHOD.


  METHOD class_constructor.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* RAPANKON     | 14.12.2022 | 15688     : [Build] - FPS-WRICEF-011 - P *
*              |            | DS4K936867                               *
*----------------------------------------------------------------------*

    gs_hm_constants-zz1_ordprio         = zcl_sp_fps_perfect_pr_util=>get_hm_zz1_ordprio( ).
    gs_hm_constants-zz1_adi_m_promoflag = zcl_sp_fps_perfect_pr_util=>get_hm_zz1_adi_m_promoflag( ).
    gs_hm_constants-zz1_mm_scmsegment   = zcl_sp_fps_perfect_pr_util=>get_hm_zz1_mm_scmsegment( ).
    gs_hm_constants-package_size        = zcl_sp_fps_perfect_pr_util=>get_hm_package_size( ).

  ENDMETHOD.


METHOD clear_grouping_db.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* RAPANKON     | 13.12.2022 | 15688     : [Build] - FPS-WRICEF-011 - P *
*              |            | DS4K936867                               *
*----------------------------------------------------------------------*
  IF iv_update_task = abap_true.
    CALL FUNCTION 'ZSP_FM_PR_GROUP_DELALL' IN UPDATE TASK.
  ELSE.
    CALL FUNCTION 'ZSP_FM_PR_GROUP_DELALL'.
  ENDIF.

  IF iv_commit = abap_true.
    COMMIT WORK.
  ENDIF.

ENDMETHOD.


  METHOD process.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* RAPANKON     | 13.12.2022 | 15688     : [Build] - FPS-WRICEF-011 - P *
*              |            | DS4K936867                               *
*----------------------------------------------------------------------*
* ISAICSVI     | 19.04.2023 | 19902     : [CR] - FPS-WRICEF-011-Perfec *
*              |            | DS4K949449                               *
*----------------------------------------------------------------------*
    DATA: lv_package_number TYPE zsp_pr_package_num VALUE 0,
          lt_err_gr         TYPE STANDARD TABLE OF zsp_t_pr_err_gr,
          lv_error_id       TYPE zsp_error_id,
          ls_error          TYPE zsp_t_pr_err_gr.

    IF set_lock( ) = abap_false.
      RETURN.
    ENDIF.

    clear_grouping_db( iv_commit = abap_true ).

    DATA(lv_quantity) = create_packages_db( iv_commit = abap_true ).
    IF lv_quantity IS INITIAL.
      RETURN.
    ENDIF.

    DO lv_quantity TIMES.

      lv_package_number = lv_package_number + 1.
      fetch_package_by_num( EXPORTING iv_package_number = lv_package_number
                            IMPORTING ets_gr_pack       = DATA(lts_gr_pack)
                                      ets_pr_match_key  = DATA(lts_match_key) ).

      CHECK lts_match_key IS NOT INITIAL.
      process_package( EXPORTING its_pr_match_key = lts_match_key
                       IMPORTING et_pr_group      = DATA(lt_pr_group)
                                 et_err           = DATA(lt_err) ).

      IF lt_err IS NOT INITIAL.
        APPEND LINES OF lt_err TO lt_err_gr.
      ENDIF.

      CHECK lt_pr_group IS NOT INITIAL.

      LOOP AT lts_gr_pack ASSIGNING FIELD-SYMBOL(<ls_gr_pack>).
        <ls_gr_pack>-status = abap_true.
      ENDLOOP.

      create_grouping_db( it_pr_group    = lt_pr_group
                          its_pr_gr_pack = lts_gr_pack
                          iv_commit      = abap_true ).

    ENDDO.

    IF lt_err_gr IS NOT INITIAL.

      LOOP AT lt_err_gr ASSIGNING FIELD-SYMBOL(<ls_err>).

        CLEAR ls_error.

        lv_error_id = lv_error_id + 1.
        ls_error-error_id = lv_error_id.

        MODIFY lt_err_gr FROM ls_error TRANSPORTING error_id.

      ENDLOOP.

      INSERT zsp_t_pr_err_gr FROM TABLE lt_err_gr .

      IF sy-subrc = 0.
        COMMIT WORK AND WAIT.
      ENDIF.
    ENDIF.

    delete_lock( ).

  ENDMETHOD.


  METHOD set_correct_dates.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* RAPANKON     | 06.12.2022 | 15688     : [Build] - FPS-WRICEF-011 - P *
*              |            | DS4K936867                               *
* ISAICSVI     | 10.05.2023 | 19902     : [CR] - FPS-WRICEF-011-Perfec *
*              |            | DS4K949449                               *
*----------------------------------------------------------------------*
    DATA: ls_err TYPE zsp_t_pr_err_gr.

    LOOP AT ct_pr_group ASSIGNING FIELD-SYMBOL(<ls_pr_group>).
      " Start Production Date	Same week as in ZSP_T_PR_MATCH but on Monday
      TRY.
          <ls_pr_group>-startprod_date =
            zcl_sp_fps_perfect_pr_util=>get_weekday_by_number( iv_date   = <ls_pr_group>-startprod_date
                                                               iv_number = 1 ).
        CATCH zcx_sp_fps_pr_creation.
          CLEAR <ls_pr_group>-startprod_date.
      ENDTRY.
      " MAD	Same week as in ZSP_T_PR_MATCH but on Thursday
      TRY.
          <ls_pr_group>-mad_date =
            zcl_sp_fps_perfect_pr_util=>get_weekday_by_number( iv_date   = <ls_pr_group>-mad_date
                                                               iv_number = 4 ).
        CATCH zcx_sp_fps_pr_creation.
          CLEAR <ls_pr_group>-mad_date.
      ENDTRY.
      " Plan Date  Depending on which half of the month the week is,
      " the day could be the 15th or last day of the month (31st, 30th or 28th depending on the month).
      <ls_pr_group>-planned_date =
        zcl_sp_fps_perfect_pr_util=>get_lastday_of_halfofmonth( iv_date = <ls_pr_group>-planned_date ).

      " Ex-Factory Date	Starting from the Sunday of the week coming from ZSP_T_PR_MATCH,
      " get the closest day in the same month:
      " last day of the month., 21th, 14th or 7th (even if it is a non-working day).
      <ls_pr_group>-xfactory_date =
        zcl_sp_fps_perfect_pr_util=>get_closest_multiple_of_seven( iv_date = <ls_pr_group>-xfactory_date ).
      IF <ls_pr_group>-xfactory_date < <ls_pr_group>-planned_date.
        <ls_pr_group>-xfactory_date = <ls_pr_group>-planned_date.
      ENDIF.

      TRY.
          zcl_sp_release_date_calc=>determine_release_date_for_psd(
            EXPORTING
              iv_g_article              = CONV matnr( <ls_pr_group>-matnr )
              iv_werks                  = <ls_pr_group>-werks
              iv_first_production_date  = <ls_pr_group>-startprod_date
            IMPORTING
              ev_realistic_release_date = <ls_pr_group>-rel_date ).

        CATCH zcx_sp_release_date_calc.

          MESSAGE e001(zsp_release_date) INTO DATA(lv_msg).
          ls_err-matnr = <ls_pr_group>-matnr.
          ls_err-startprod_date = <ls_pr_group>-startprod_date.
          ls_err-werks = <ls_pr_group>-werks.
          ls_err-message = lv_msg.
          ls_err-erdat = sy-datum.
          ls_err-erzet = sy-uzeit.
          ls_err-ernam = sy-uname.

          APPEND ls_err TO et_err.

          DELETE ct_pr_group WHERE matnr = <ls_pr_group>-matnr AND
                         werks = <ls_pr_group>-werks AND
                         startprod_date = <ls_pr_group>-startprod_date.

      ENDTRY.
    ENDLOOP.

  ENDMETHOD.


  METHOD create_packages_db.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* RAPANKON     | 13.12.2022 | 15688     : [Build] - FPS-WRICEF-011 - P *
*              |            | DS4K936867                               *
*----------------------------------------------------------------------*

    DATA: lts_gr_pack TYPE gtyp_t_pr_gr_pack,
          lv_pckg_num TYPE zsp_pr_package_num VALUE 1,
          lv_curr_num TYPE int4 VALUE 0.

    SELECT DISTINCT werks matnr ##TOO_MANY_ITAB_FIELDS  "#EC CI_NOWHERE
      FROM zsp_t_pr_match
      INTO CORRESPONDING FIELDS OF TABLE lts_gr_pack.
    IF sy-subrc <> 0.
      CLEAR rv_number_of_packages.
      RETURN.
    ENDIF.

    LOOP AT lts_gr_pack ASSIGNING FIELD-SYMBOL(<ls_gr_pack>).
      lv_curr_num = lv_curr_num + 1.

      IF lv_curr_num > gs_hm_constants-package_size.
        lv_pckg_num = lv_pckg_num + 1.
        lv_curr_num = 1.
      ENDIF.

      <ls_gr_pack>-pckg_num = lv_pckg_num.
    ENDLOOP.

    rv_number_of_packages = lv_pckg_num.

    CALL FUNCTION 'ZSP_FM_PR_GR_PACK_UPD'
      EXPORTING
        it_pr_gr_pack = lts_gr_pack.

    IF iv_commit = abap_true.
      COMMIT WORK.
    ENDIF.

  ENDMETHOD.


  METHOD fetch_pr_match.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* RAPANKON     | 06.12.2022 | 15688     : [Build] - FPS-WRICEF-011 - P *
*              |            | DS4K936867                               *
* ISAICSVI     | 10.04.2023 | 19902     : [CR] - FPS-WRICEF-011-Perfec *
*              |            | DS4K949449                               *
*----------------------------------------------------------------------*

    CLEAR et_pr_match.

    IF its_pr_match_key IS INITIAL.
      RETURN.
    ENDIF.

    SELECT zsp_t_pr_match~*
      FROM zsp_t_pr_match
      FOR ALL ENTRIES IN @its_pr_match_key
     WHERE zsp_t_pr_match~matnr = @its_pr_match_key-matnr
       AND zsp_t_pr_match~werks = @its_pr_match_key-werks
      INTO CORRESPONDING FIELDS OF TABLE @et_pr_match. "#EC CI_SEL_NESTED
    IF sy-subrc <> 0.
      CLEAR et_pr_match.
    ENDIF.

    SELECT DISTINCT werks, matnr, zdivisionid
      FROM zsp_t_pr_match
      FOR ALL ENTRIES IN @its_pr_match_key
      WHERE zsp_t_pr_match~matnr = @its_pr_match_key-matnr
      AND zsp_t_pr_match~werks = @its_pr_match_key-werks
    INTO TABLE @et_division.                         "#EC CI_SEL_NESTED
    IF sy-subrc <> 0.
      CLEAR et_division.
    ENDIF.

  ENDMETHOD.


  METHOD map_match_to_group.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* RAPANKON     | 07.12.2022 | 15688     : [Build] - FPS-WRICEF-011 - P *
*              |            | DS4K936867                               *
*----------------------------------------------------------------------*
    et_pr_group = CORRESPONDING #( it_pr_match EXCEPT ebeln ebelp ).

  ENDMETHOD.


  METHOD set_default_values.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* RAPANKON     | 07.12.2022 | 15688     : [Build] - FPS-WRICEF-011 - P *
*              |            | DS4K936867                               *
*----------------------------------------------------------------------*

    LOOP AT ct_pr_group ASSIGNING FIELD-SYMBOL(<ls_pr_group>).
      <ls_pr_group>-zz1_ordprio         = gs_hm_constants-zz1_ordprio.
      <ls_pr_group>-zz1_adi_m_promoflag = gs_hm_constants-zz1_adi_m_promoflag.
      <ls_pr_group>-zz1_mm_scmsegment   = gs_hm_constants-zz1_mm_scmsegment.
    ENDLOOP.

  ENDMETHOD.
ENDCLASS.