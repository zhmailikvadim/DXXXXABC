CLASS zcl_sp_pochginformation DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES if_badi_interface .
    INTERFACES if_pur_se_pochginfo_asyn .
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS ZCL_SP_POCHGINFORMATION IMPLEMENTATION.


  METHOD if_pur_se_pochginfo_asyn~inbound_processing ##NEEDED .
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KALSHZHA     | 02.09.2022 | 13264     : PO from S/4 to P2            *
*              |            | DS4K928751                               *
*----------------------------------------------------------------------*

  ENDMETHOD.


  METHOD if_pur_se_pochginfo_asyn~outbound_processing.
    " -----------------------------------------------------------------------
    "  R E V I S I O N   H I S T O R Y                                     -
    " -----------------------------------------------------------------------
    " AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              -
    "              |            | TRANSPORT REQUESTS                       -
    " -----------------------------------------------------------------------
    " KALSHZHA     | 28.08.2022 | 13264     : PO from S/4 to P2            -
    "              |            | DS4K928751                               -
    " -----------------------------------------------------------------------
    " KALSHZHA     | 07.02.2023 | 17752     : PO from S/4 to P2            -
    "              |            | DS4K943088                               -
    " -----------------------------------------------------------------------
    " TARUSVIT     | 07.02.2023 | 16876 Extension &  Data fe               -
    "              |            | DS4K940329                               -
    " -----------------------------------------------------------------------
    " IVANOKON     | 24.05.2023 | 21662 [DEFECT] - PO Interface - inco     -
    "              |            | DS4K953520                               -
    " -----------------------------------------------------------------------
    " DADABBEK     | 05.07.2023 | 22955: PO interface adaptions            -
    "              |            | DS4K957434                               -
    " -----------------------------------------------------------------------
    " DADABBEK     | 15.07.2023 | 20957_SP_[Feature] [PF&E] Create custom  -
    "              |            | DS4K951468                               -
    " SRIKAVEN     | 10.10.2023 | 20957_SP_[Feature] [PF&E] Create custom  -
    "              |            | DS4K964719
    "----------------------------------------------------------------------
    " ZHMAIVAD     | 11.09.2023 | 24101: PO interface adaptions            -
    "              |            | DS4K964057                               -
    " -----------------------------------------------------------------------
    CONSTANTS: lc_true TYPE char4 VALUE 'true'.
    DATA lv_do   TYPE ddleng.

    DATA: BEGIN OF ls_filter1,
            bsart TYPE bsart,
          END OF ls_filter1.

    ls_filter1-bsart = is_poheader-doc_type.
    TRY.
        IF zcl_pe_hm_switch=>is_active( iv_id     = '2168'
                                                 is_filter = ls_filter1 ).

          DATA(lt_poaddrdelivery) = it_poaddrdelivery.
          TRY.
              DATA(lv_cet) = zcl_pe_hm_basic=>get_value( iv_id = '2476' ).
            CATCH zcx_pe_hm.
              RETURN.
          ENDTRY.
          IF lt_poaddrdelivery IS NOT INITIAL.
            LOOP AT lt_poaddrdelivery ASSIGNING FIELD-SYMBOL(<ls_poaddrdelivery>).
              <ls_poaddrdelivery>-time_zone = lv_cet.
            ENDLOOP.
          ENDIF.
        ENDIF.
      CATCH zcx_pe_hm.
        CLEAR lt_poaddrdelivery .
    ENDTRY.

    DATA(lo_datader) = NEW zcl_sd_data_derivation( is_poheader         = is_poheader
                                                   it_poitem           = it_poitem
                                                   it_poaddrdelivery   = lt_poaddrdelivery
                                                   it_poschedule       = it_poschedule
                                                   it_poaccount        = it_poaccount
                                                   it_pocondheader     = it_pocondheader
                                                   it_pocond           = it_pocond
                                                   it_pohistory_totals = it_pohistory_totals
                                                   it_popartner        = it_popartner ).

    lo_datader->assign_header_data( CHANGING cs_header_attr = cs_po_proxy-purchase_order-zzsp_s_header ).
    lo_datader->assign_header_data_sto( CHANGING cs_header_attr = cs_po_proxy-purchase_order ).

    LOOP AT cs_po_proxy-purchase_order-item ASSIGNING FIELD-SYMBOL(<ls_item>).
      IF lv_cet IS NOT INITIAL.
        LOOP AT <ls_item>-schedule_line ASSIGNING FIELD-SYMBOL(<ls_schedule>). "#EC CI_NESTED
          IF <ls_schedule>-delivery_period-start_date_time-time_zone_code IS INITIAL.
            <ls_schedule>-delivery_period-start_date_time-time_zone_code = lv_cet.
          ENDIF.
          REPLACE ALL OCCURRENCES OF 'Z' IN <ls_schedule>-delivery_period-start_date_time-content WITH space.
          <ls_schedule>-delivery_period-start_date_time-content = condense( <ls_schedule>-delivery_period-start_date_time-content ).
        ENDLOOP.
      ENDIF.
      LOOP AT it_poitem ASSIGNING FIELD-SYMBOL(<ls_item_data>) "#EC CI_NESTED
            WHERE po_item EQ <ls_item>-id.
        lo_datader->preload_item_data( iv_ebelp = <ls_item_data>-po_item
                                       iv_matnr = <ls_item_data>-material_long ).

        lo_datader->assign_item_data( EXPORTING iv_ebelp     = <ls_item_data>-po_item
                                      CHANGING  cs_item_data = <ls_item>-zzsp_s_item_direct_data ).

        lo_datader->assign_item_price_data( EXPORTING iv_ebelp        = <ls_item_data>-po_item
                                            CHANGING  cs_item_pr_data = <ls_item>-price-zzsp_s_item_price_data ).

        lo_datader->assign_item_tradeco_data(
          EXPORTING iv_ebelp        = <ls_item_data>-po_item
          CHANGING  cs_tradeco_data = <ls_item>-zzsp_s_item_direct_data-zzsp_s_tradeco_data ).

        lo_datader->assign_fsh_vasm_data(
          EXPORTING iv_ebelp    = <ls_item_data>-po_item
          CHANGING  ct_fsh_vals = <ls_item>-zzsp_s_item_direct_data-zzsp_t_fsh_vasm_tl ).

        lo_datader->assign_tarif_data( EXPORTING is_item_data = <ls_item>-zzsp_s_item_direct_data
                                       CHANGING  ct_tarif     = <ls_item>-zzsp_s_item_direct_data-zzsp_t_tariff ).

        lo_datader->assign_caselot_data( EXPORTING iv_ebelp   = <ls_item_data>-po_item
                                         CHANGING  ct_caselot = <ls_item>-zzsp_s_item_direct_data-zzsp_t_case_lot ).

        lo_datader->assign_item_contract_details(
          EXPORTING is_item             = <ls_item_data>
          CHANGING  cs_contract_details = <ls_item>-zzsp_s_item_direct_data-zz_s_contract_details ).

        lo_datader->assign_item_party_fs( EXPORTING iv_ebelp    = <ls_item_data>-po_item
                                          CHANGING  cs_party_fs = <ls_item>-zz_s_party_fs ).

        lo_datader->assign_item_ship2l_address( CHANGING cs_address = <ls_item>-ship_to_location-address ).

        LOOP AT <ls_item>-price_specification_element ASSIGNING FIELD-SYMBOL(<ls_pse>). "#EC CI_NESTED
          <ls_pse>-zzsp_t_item_price = lo_datader->select_condt_types( <ls_pse>-type_code-content ).
        ENDLOOP.

        IF <ls_item>-cancelled_indicator = lc_true AND <ls_item>-blocked_indicator IS INITIAL.
          <ls_item>-blocked_indicator = lc_true.
        ENDIF.

        lo_datader->assign_item_data_rejected_qty( EXPORTING iv_ebelp             = <ls_item_data>-po_item
                                                   CHANGING  cs_item = <ls_item> ).

        lo_datader->assign_item_product_id( EXPORTING iv_ebelp             = <ls_item_data>-po_item
                                            CHANGING  cs_item_product_id = <ls_item>-product-internal_id ).

        lo_datader->assign_item_data_scheduleline( EXPORTING iv_ebelp        = <ls_item_data>-po_item
                                                   CHANGING  ct_scheduleline = <ls_item>-schedule_line ).

        lo_datader->change_item_net_unit_price( CHANGING cs_net_unit_price = <ls_item>-price-net_unit_price  ).

      ENDLOOP.
    ENDLOOP.
    lo_datader->assign_party_data( CHANGING cs_party_section = cs_po_proxy-purchase_order-zzsp_s_party_section ).
    DATA(lv_strlen) = strlen( cs_po_proxy-purchase_order-id-content ).
    IF lv_strlen < 10.
      lv_do = 10 - lv_strlen.
      DO lv_do TIMES.
        cs_po_proxy-purchase_order-id-content = '0' && cs_po_proxy-purchase_order-id-content.
        cs_po_proxy-purchase_order-id-content = condense( cs_po_proxy-purchase_order-id-content ).
      ENDDO.
    ENDIF.
  ENDMETHOD.
ENDCLASS.