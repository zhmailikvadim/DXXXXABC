CLASS zcl_sp_pur_pochgedinfo DEFINITION
  PUBLIC
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES bi_event_handler_static .

    CONSTANTS gc_wuf_application_name TYPE wuf_application VALUE 'CO_PUR_PURCHASEORDERCHGIN' ##NO_TEXT.
    CONSTANTS gc_wuf_event_hpricespec_name TYPE wuf_event VALUE 'PO HEADER PRICESPEC OUTPUT' ##NO_TEXT.
    CONSTANTS gc_wuf_event_header_name TYPE wuf_event VALUE 'PO HEADER OUTPUT' ##NO_TEXT.
    CONSTANTS gc_wuf_event_item_name TYPE wuf_event VALUE 'PO ITEM OUTPUT' ##NO_TEXT.
    CONSTANTS gc_wuf_event_purgrp_tel_name TYPE wuf_event VALUE 'PO HEADER PURGRPTEL OUTPUT' ##NO_TEXT.
    CONSTANTS gc_wuf_event_purgrp_fac_name TYPE wuf_event VALUE 'PO HEADER PURGRPFAC OUTPUT' ##NO_TEXT.
    CONSTANTS gc_wuf_event_purgrp_email_name TYPE wuf_event VALUE 'PO HEADER PURGRPEMAIL OUTPUT' ##NO_TEXT.
    CONSTANTS gc_wuf_event_party_name TYPE wuf_event VALUE 'PO HEADER PARTY OUTPUT' ##NO_TEXT.
    CONSTANTS gc_wuf_event_text_name TYPE wuf_event VALUE 'PO TEXT OUTPUT' ##NO_TEXT.
    CONSTANTS gc_wuf_event_item_prispec_name TYPE wuf_event VALUE 'PO ITEM PRICESPEC OUTPUT' ##NO_TEXT.
    CONSTANTS gc_wuf_event_item_sch_name TYPE wuf_event VALUE 'PO ITM SCHEDLINE OUTPUT' ##NO_TEXT.
    CONSTANTS gc_wuf_event_item_sch_sub_name TYPE wuf_event VALUE 'PO ITM SCHEDLINE SUBCON OUTPUT' ##NO_TEXT.
    CONSTANTS gc_wuf_event_item_conf_name TYPE wuf_event VALUE 'PO ITM CONF SCHEDLINE OUTPUT' ##NO_TEXT.
    CONSTANTS gc_objkey TYPE swfdname VALUE '_EVT_OBJKEY' ##NO_TEXT.
    CONSTANTS gc_class_name TYPE seoclname VALUE 'CL_SE_PUR_POCHGEDINFO' ##NO_TEXT.
    CONSTANTS gc_create_ind TYPE char3 VALUE 'CRE' ##NO_TEXT.
    CONSTANTS gc_change_ind TYPE char3 VALUE 'CHA' ##NO_TEXT.
    CONSTANTS gc_xi_true TYPE char5 VALUE 'true' ##NO_TEXT.
    CONSTANTS gc_xi_false TYPE char5 VALUE 'false' ##NO_TEXT.

    METHODS get_po_xi
      EXPORTING
        !es_po_xi TYPE sapplco_pur_ord_chgd_info_pur1 .
    METHODS process_out
      IMPORTING
        !iv_po_no      TYPE ebeln
        !iv_create_ind TYPE abap_bool OPTIONAL
        !iv_doc_type   TYPE bstyp OPTIONAL
      EXPORTING
        !et_return     TYPE bapirettab
      RAISING
        cx_ai_system_fault
        cx_ops_se
        cx_appl_proxy_badi_processing .
    CLASS-METHODS get_instance
      RETURNING
        VALUE(ro_instance) TYPE REF TO zcl_sp_pur_pochgedinfo .
  PROTECTED SECTION.
*"* protected components of class CL_SE_PUR_POERPCRTEDINFO
*"* do not include other source files here!!!
  PRIVATE SECTION.

*"* private components of class CL_SE_PUR_POCHGEDINFO
*"* do not include other source files here!!!
    CLASS-DATA go_instance TYPE REF TO zcl_sp_pur_pochgedinfo .
    DATA gs_po_xi TYPE sapplco_pur_ord_chgd_info_pur1 .
    DATA mo_prot TYPE REF TO cl_ops_se_prot .

    METHODS conv_date_to_xsd_timestamp
      IMPORTING
        !iv_date                TYPE dats
        !iv_time                TYPE tims OPTIONAL
      RETURNING
        VALUE(rv_xsd_timestamp) TYPE char25 .
    METHODS conv_long_datetime_into_short
      IMPORTING
        !iv_input        TYPE any
      RETURNING
        VALUE(rv_result) TYPE char25 .
    METHODS map_item_account_to_xi
      IMPORTING
        !iv_prefetch        TYPE wuf_boolean
        !it_item_account    TYPE bapimepoaccount_tp
        !iv_item_number     TYPE ebelp
        !is_item            TYPE bapimepoitem
      EXPORTING
        !ev_ok              TYPE wuf_boolean
        !et_item_account_xi TYPE sapplco_pur_ord_chgd_info_tab1
      RAISING
        cx_wuf_error .
    METHODS map_item_conf_sched_to_xi
      IMPORTING
        !iv_prefetch     TYPE wuf_boolean
        !it_item_conf    TYPE bapiekes_tp
        !is_item         TYPE bapimepoitem
        !is_addrdelivery TYPE bapimepoaddrdelivery
      EXPORTING
        !ev_ok           TYPE wuf_boolean
        !et_item_conf_xi TYPE sapplco_pur_ord_chgd_info_tab3
      RAISING
        cx_wuf_error .
    METHODS map_item_pricespec_to_xi
      IMPORTING
        !iv_prefetch        TYPE wuf_boolean
        !it_item_pricespec  TYPE bapimepocond_tp
        !iv_item_number     TYPE ebelp
      EXPORTING
        !ev_ok              TYPE wuf_boolean
        !et_item_prispec_xi TYPE sapplco_pur_ord_chgd_info_tab8
      RAISING
        cx_wuf_error .
    METHODS map_item_scheduleline_to_xi
      IMPORTING
        !iv_prefetch           TYPE wuf_boolean
        !it_item_schedule      TYPE bapimeposchedule_tp
        !iv_item_number        TYPE ebelp
        !it_item_schedule_subc TYPE mmpur_pocomponent_tty
        !iv_po_number          TYPE ebeln
        !is_item               TYPE bapimepoitem
        !is_poaddrdelivery     TYPE bapimepoaddrdelivery
      EXPORTING
        !ev_ok                 TYPE wuf_boolean
        !et_item_schedule_xi   TYPE sapplco_pur_ord_chgd_info_tab2
      RAISING
        cx_wuf_error .
    METHODS map_item_schedule_sub_to_xi
      IMPORTING
        !iv_prefetch             TYPE wuf_boolean
        !iv_item_number          TYPE ebelp
        !it_item_schedule_subc   TYPE mmpur_pocomponent_tty
        !iv_schedule_line        TYPE etenr
      EXPORTING
        !ev_ok                   TYPE wuf_boolean
        !et_item_schedule_sub_xi TYPE sapplco_pur_ord_chgd_info__tab
      RAISING
        cx_wuf_error .
    METHODS map_item_text_to_xi
      IMPORTING
        !iv_language     TYPE spras
        !iv_prefetch     TYPE wuf_boolean
        !it_item_text    TYPE bapimepotext_tp
        !iv_item_number  TYPE ebelp
      EXPORTING
        !ev_ok           TYPE wuf_boolean
        !et_item_text_xi TYPE sapplco_text_collection_te_tab
      RAISING
        cx_wuf_error .
    METHODS map_item_to_xi
      IMPORTING
        !iv_prefetch           TYPE wuf_boolean
        !it_item               TYPE bapimepoitem_tp
        !it_itemcond           TYPE bapimepocond_tp
        !it_itemaddrdelivery   TYPE bapimepoaddrdelivery_tp
        !it_itemtext           TYPE bapimepotext_tp
        !it_itemschedule       TYPE bapimeposchedule_tp
        !it_itemschedule_subc  TYPE mmpur_pocomponent_tty
        !it_itemconf           TYPE bapiekes_tp
        !it_itemaccount        TYPE bapimepoaccount_tp
        !it_itemhistory_totals TYPE bapiekbes_tp
        !it_itemshipping       TYPE mepo_t_bapiekpv
        !iv_po_no              TYPE ebeln
        !is_poheader           TYPE bapimepoheader
      EXPORTING
        !ev_ok                 TYPE wuf_boolean
      RAISING
        cx_wuf_error .
    METHODS correct_item_cancel_indicator
      CHANGING
        cs_item TYPE sapplco_pur_ord_chgd_info_itm2.
    METHODS map_poheader_to_xi
      IMPORTING
        !is_header    TYPE bapimepoheader
        !iv_prefetch  TYPE wuf_boolean
        !is_purchgrp  TYPE t024
      EXPORTING
        !ev_ok        TYPE wuf_boolean
        !es_header_xi TYPE sapplco_pur_ord_chgd_info_pur1
      RAISING
        cx_wuf_error .
    METHODS map_party_to_xi
      IMPORTING
        !it_party    TYPE bapiekkop_tp
        !iv_prefetch TYPE wuf_boolean
      EXPORTING
        !ev_ok       TYPE wuf_boolean
      RAISING
        cx_wuf_error .
    METHODS map_pricespecification_to_xi
      IMPORTING
        !it_conditionheader TYPE bapimepocondheader_tp
        !iv_prefetch        TYPE wuf_boolean
      EXPORTING
        !ev_ok              TYPE wuf_boolean
      RAISING
        cx_wuf_error .
    METHODS map_purgrp_comm_to_xi
      IMPORTING
        !is_purchasegroup TYPE t024
        !iv_prefetch      TYPE wuf_boolean
      EXPORTING
        !ev_ok            TYPE wuf_boolean
      RAISING
        cx_wuf_error .
    METHODS map_textheader_to_xi
      IMPORTING
        !iv_language   TYPE spras
        !it_textheader TYPE bapimepotextheader_tp
        !iv_prefetch   TYPE wuf_boolean
      EXPORTING
        !ev_ok         TYPE wuf_boolean
      RAISING
        cx_wuf_error .
    METHODS mapping_out
      IMPORTING
        !is_bapimepoheader      TYPE bapimepoheader
        !it_bapiitem            TYPE bapimepoitem_tp
        !is_purchgrp            TYPE t024
        !it_bapiconditionheader TYPE bapimepocondheader_tp
        !it_partner             TYPE bapiekkop_tp
        !it_bapitextheader      TYPE bapimepotextheader_tp
        !it_bapiitemcond        TYPE bapimepocond_tp
        !it_bapiaddrdelivery    TYPE bapimepoaddrdelivery_tp
        !it_bapischedule        TYPE bapimeposchedule_tp
        !it_bapiaccount         TYPE bapimepoaccount_tp
        !it_bapitextitem        TYPE bapimepotext_tp
        !it_bapihistory_totals  TYPE bapiekbes_tp
        !it_bapishipping        TYPE mepo_t_bapiekpv
        !it_bapiconfirmation    TYPE bapiekes_tp
        !it_bapicomponent       TYPE mmpur_pocomponent_tty
      EXPORTING
        !et_error_prot          TYPE wuf_error_tab   ##NEEDED
      RAISING
        cx_wuf_error
        cx_ops_se_po .
    METHODS get_contract_details
      IMPORTING
        !iv_ebeln          TYPE ebeln
      EXPORTING
        !et_potextitem     TYPE bapimepotext_tp
        !et_poitem         TYPE bapimepoitem_tp
        !et_poaccount      TYPE bapimepoaccount_tp
        !et_potextheader   TYPE bapimepotextheader_tp
        !et_poaddrdelivery TYPE bapimepoaddrdelivery_tp
        !et_popartner      TYPE bapiekkop_tp
        !es_poheader       TYPE bapimepoheader .
ENDCLASS.



CLASS zcl_sp_pur_pochgedinfo IMPLEMENTATION.


  METHOD bi_event_handler_static~on_event.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 22.05.2023 | 20957     : [Feature] [PF&E] Create cust *
*              |            | DS4K951468                               *
*----------------------------------------------------------------------*

    DATA:
      lo_se_pur_pochgedinfo TYPE REF TO cl_se_pur_pochgedinfo,
      lo_root               TYPE REF TO cx_root,
      lo_swf_cnt_container  TYPE REF TO cx_swf_cnt_container,
      lt_protocol           TYPE bapirettab,                "#EC NEEDED
      lv_po_no              TYPE ebeln.


* Get purchase request number from event container
    TRY.
        event_container->get(
          EXPORTING
            name  = gc_objkey
          IMPORTING
            value = lv_po_no ).

      CATCH cx_swf_cnt_elem_not_found.                  "#EC NO_HANDLER

      CATCH cx_swf_cnt_container INTO lo_swf_cnt_container.
        RAISE EXCEPTION TYPE cx_bo_error
          EXPORTING
            previous   = lo_swf_cnt_container
            class_name = gc_class_name.
    ENDTRY.

* Get local instance of PO changed class
    lo_se_pur_pochgedinfo = cl_se_pur_pochgedinfo=>get_instance( ).

    CLEAR lt_protocol.
    TRY.
        lo_se_pur_pochgedinfo->process_out(
          EXPORTING
            iv_po_no  = lv_po_no
          IMPORTING
            et_return = lt_protocol ).
      CATCH cx_ops_se cx_ai_system_fault cx_static_check INTO lo_root.
        RAISE EXCEPTION TYPE cx_bo_error
          EXPORTING
            previous = lo_root.
    ENDTRY.


  ENDMETHOD.


  METHOD get_instance.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 22.05.2023 | 20957     : [Feature] [PF&E] Create cust *
*              |            | DS4K951468                               *
*----------------------------------------------------------------------*
**********************************************************************
* copy of method from class CL_SE_PUR_POCHGEDINFO
**********************************************************************
    IF go_instance IS INITIAL.
      go_instance = NEW #(  ).
    ENDIF.
    ro_instance = go_instance.

  ENDMETHOD.


  METHOD get_po_xi.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 22.05.2023 | 20957     : [Feature] [PF&E] Create cust *
*              |            | DS4K951468                               *
*----------------------------------------------------------------------*
**********************************************************************
* copy of method from class CL_SE_PUR_POCHGEDINFO
**********************************************************************
    es_po_xi = gs_po_xi.

  ENDMETHOD.


  METHOD mapping_out.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 22.05.2023 | 20957     : [Feature] [PF&E] Create cust *
*              |            | DS4K951468                               *
*----------------------------------------------------------------------*
**********************************************************************
* copy of method from class CL_SE_PUR_POCHGEDINFO
**********************************************************************

* Map the header elements
    go_instance->map_poheader_to_xi(
        is_header   = is_bapimepoheader
        iv_prefetch  = abap_true
        is_purchgrp = is_purchgrp ).

* Map the price specification elements of the header
    go_instance->map_pricespecification_to_xi(
        it_conditionheader = it_bapiconditionheader
        iv_prefetch         = abap_true ).

* Map the communication elements of the Purchase Group
    go_instance->map_purgrp_comm_to_xi(
        is_purchasegroup = is_purchgrp
        iv_prefetch       = abap_true ).
* Map the party of the PO header
    go_instance->map_party_to_xi(
        it_party   = it_partner
        iv_prefetch = abap_true ).

* Map the Text of the PO header
    go_instance->map_textheader_to_xi(
        iv_language   = is_bapimepoheader-langu
        it_textheader = it_bapitextheader
        iv_prefetch    = abap_true ).

* Map the item data
    go_instance->map_item_to_xi(
        iv_prefetch            = abap_true
        is_poheader           = is_bapimepoheader
        it_item               = it_bapiitem
        it_itemcond           = it_bapiitemcond
        it_itemaddrdelivery   = it_bapiaddrdelivery
        it_itemtext           = it_bapitextitem
        it_itemschedule       = it_bapischedule
        it_itemschedule_subc  = it_bapicomponent
        it_itemconf           = it_bapiconfirmation
        it_itemaccount        = it_bapiaccount
        it_itemshipping       = it_bapishipping
        it_itemhistory_totals = it_bapihistory_totals
        iv_po_no              = is_bapimepoheader-po_number ).

  ENDMETHOD.


  METHOD map_item_account_to_xi.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 22.05.2023 | 20957     : [Feature] [PF&E] Create cust *
*              |            | DS4K951468                               *
*----------------------------------------------------------------------*
**********************************************************************
* copy of method from class CL_SE_PUR_POCHGEDINFO
**********************************************************************

* Maps the Accounting Coding Block of an item and returns a tab of XI str
    DATA: lo_engine          TYPE REF TO cl_wuf_engine,
          ls_item_account_xi TYPE sapplco_pur_ord_crted_info_acc,
          lv_flag_filled     TYPE abap_bool.


    FIELD-SYMBOLS <ls_item_account> TYPE bapimepoaccount.

* Gets the mapping engine instance
    TRY.
        lo_engine = NEW #( i_application = gc_wuf_application_name
         i_event       = cl_se_pur_pocrtedinfo=>gc_wuf_event_item_account_name
         i_context     = ''
         i_no_prefetch = iv_prefetch ).
      CATCH cx_wuf_no_class INTO DATA(lo_wuf_class).
        mo_prot->add_exception(
            io_exception = lo_wuf_class ).
      CATCH cx_wuf_no_method INTO DATA(lo_wuf_method).
        mo_prot->add_exception(
              io_exception = lo_wuf_method ).
      CATCH cx_wuf_no_entry INTO DATA(lo_wuf_entry).
        mo_prot->add_exception(
              io_exception = lo_wuf_entry ).
      CATCH cx_wuf_customizing_error INTO DATA(lo_wuf_cust).
        mo_prot->add_exception(
              io_exception = lo_wuf_cust ).
    ENDTRY.

    lo_engine->prefetch_end( ).

    LOOP AT it_item_account ASSIGNING <ls_item_account> WHERE po_item = iv_item_number. "#EC CI_STDSEQ
      CLEAR ls_item_account_xi.
      lv_flag_filled = abap_true.
* Executes the mapping
      TRY.
          lo_engine->execute(
            EXPORTING
              i_source       = <ls_item_account>
              i_predecessor2 = is_item
            IMPORTING
              e_ok           = ev_ok
            CHANGING
              ch_target      = ls_item_account_xi ).
        CATCH cx_wuf_transformation_error INTO DATA(lo_wuf_trans).
          mo_prot->add_exception(
                io_exception = lo_wuf_trans ).
        CATCH cx_wuf_customizing_error INTO lo_wuf_cust.
          mo_prot->add_exception(
                io_exception = lo_wuf_cust ).
      ENDTRY.

      APPEND ls_item_account_xi TO et_item_account_xi.

    ENDLOOP.

    IF lv_flag_filled IS INITIAL AND is_item-acctasscat IS NOT INITIAL.
      ls_item_account_xi-ordinal_number_value = '1'.
      ls_item_account_xi-accounting_coding_block_type-content = is_item-acctasscat.
      APPEND ls_item_account_xi TO et_item_account_xi ##ENH_OK.
    ENDIF.

  ENDMETHOD.


  METHOD map_item_conf_sched_to_xi.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 22.05.2023 | 20957     : [Feature] [PF&E] Create cust *
*              |            | DS4K951468                               *
*----------------------------------------------------------------------*
**********************************************************************
* copy of method from class CL_SE_PUR_POCHGEDINFO
**********************************************************************

* Maps the confirmed item and returns a tab of XI str
    DATA: lo_engine       TYPE REF TO cl_wuf_engine,
          ls_item_conf_xi TYPE sapplco_pur_ord_chgd_info_conf.

    FIELD-SYMBOLS <ls_item_conf> TYPE bapiekes.

* Gets the mapping engine instance
    TRY.
        lo_engine = NEW #(
                   i_application = gc_wuf_application_name
                   i_event       = gc_wuf_event_item_conf_name
                   i_context     = ''
                   i_no_prefetch = iv_prefetch ).
      CATCH cx_wuf_no_class INTO DATA(lo_wuf_class).
        mo_prot->add_exception(
              io_exception = lo_wuf_class ).
      CATCH cx_wuf_no_method INTO DATA(lo_wuf_method).
        mo_prot->add_exception(
              io_exception = lo_wuf_method ).
      CATCH cx_wuf_no_entry INTO DATA(lo_wuf_entry).
        mo_prot->add_exception(
              io_exception = lo_wuf_entry ).
      CATCH cx_wuf_customizing_error INTO DATA(lo_wuf_cust).
        mo_prot->add_exception(
              io_exception = lo_wuf_cust ).
    ENDTRY.

    lo_engine->prefetch_end( ).

    LOOP AT it_item_conf ASSIGNING <ls_item_conf> WHERE po_item = is_item-po_item. "#EC CI_STDSEQ

* Executes the mapping
      TRY.
          lo_engine->execute(
            EXPORTING
              i_source       = <ls_item_conf>
              i_predecessor2 = is_item
              i_add1         = is_addrdelivery
            IMPORTING
              e_ok           = ev_ok
            CHANGING
              ch_target      = ls_item_conf_xi ).
        CATCH cx_wuf_customizing_error INTO lo_wuf_cust.
          mo_prot->add_exception(
                io_exception = lo_wuf_cust ).
        CATCH cx_wuf_transformation_error INTO DATA(lo_wuf_trans).
          mo_prot->add_exception(
                io_exception = lo_wuf_trans ).
      ENDTRY.

      APPEND ls_item_conf_xi TO et_item_conf_xi.

    ENDLOOP.

  ENDMETHOD.


  METHOD map_item_pricespec_to_xi.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 22.05.2023 | 20957     : [Feature] [PF&E] Create cust *
*              |            | DS4K951468                               *
*----------------------------------------------------------------------*
**********************************************************************
* copy of method from class CL_SE_PUR_POCHGEDINFO
**********************************************************************

* Maps the Price Specification Elements of a header and returns a tab of XI str
    DATA: lo_engine            TYPE REF TO cl_wuf_engine,
          ls_item_pricespec_xi TYPE sapplco_pur_ord_chgd_info_itm4.

    FIELD-SYMBOLS <ls_item_pricespec> TYPE bapimepocond.

* Gets the mapping engine instance
    TRY.
        lo_engine = NEW #(
            i_application = gc_wuf_application_name
            i_event       = gc_wuf_event_item_prispec_name
            i_context     = ''
            i_no_prefetch = iv_prefetch ).
      CATCH cx_wuf_no_class INTO DATA(lo_wuf_class).
        mo_prot->add_exception(
              io_exception = lo_wuf_class ).
      CATCH cx_wuf_no_method INTO DATA(lo_wuf_method).
        mo_prot->add_exception(
              io_exception = lo_wuf_method ).
      CATCH cx_wuf_no_entry INTO DATA(lo_wuf_entry).
        mo_prot->add_exception(
              io_exception = lo_wuf_entry ).
      CATCH cx_wuf_customizing_error INTO DATA(lo_wuf_cust).
        mo_prot->add_exception(
              io_exception = lo_wuf_cust ).
    ENDTRY.

    lo_engine->prefetch_end( ).

    LOOP AT it_item_pricespec ASSIGNING <ls_item_pricespec> WHERE itm_number = iv_item_number. "#EC CI_STDSEQ

* Executes the mapping for the price specification in the item level
      TRY.
          lo_engine->execute(
            EXPORTING
              i_source  = <ls_item_pricespec>
            IMPORTING
              e_ok      = ev_ok
            CHANGING
              ch_target = ls_item_pricespec_xi ).
        CATCH cx_wuf_transformation_error INTO DATA(lo_wuf_trans).
          mo_prot->add_exception(
                io_exception = lo_wuf_trans ).
        CATCH cx_wuf_customizing_error INTO lo_wuf_cust.
          mo_prot->add_exception(
                io_exception = lo_wuf_cust ).

      ENDTRY.

      APPEND ls_item_pricespec_xi TO et_item_prispec_xi.

    ENDLOOP.

  ENDMETHOD.


  METHOD map_item_scheduleline_to_xi.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 22.05.2023 | 20957     : [Feature] [PF&E] Create cust *
*              |            | DS4K951468                               *
*----------------------------------------------------------------------*
**********************************************************************
* copy of method from class CL_SE_PUR_POCHGEDINFO
**********************************************************************

* Maps the Schedule Lines in Item level snd returns a tab of XI str
    DATA: lo_engine           TYPE REF TO cl_wuf_engine,
          ls_item_schedule_xi TYPE sapplco_pur_ord_chgd_info_sche,
          lt_eket             TYPE TABLE OF eket,
          ls_eket             TYPE eket,
          lt_eket_key         TYPE TABLE OF ekko_key,
          ls_eket_key         TYPE ekko_key,
          lv_ok               TYPE wuf_boolean.


    FIELD-SYMBOLS <ls_item_schedule> TYPE bapimeposchedule.

* Gets the mapping engine instance
    TRY.
        lo_engine = NEW #(
            i_application = gc_wuf_application_name
            i_event       = gc_wuf_event_item_sch_name
            i_context     = ''
            i_no_prefetch = iv_prefetch ).
      CATCH cx_wuf_no_class INTO DATA(lo_wuf_class).
        mo_prot->add_exception(
              io_exception = lo_wuf_class ).
      CATCH cx_wuf_no_method INTO DATA(lo_wuf_method).
        mo_prot->add_exception(
              io_exception = lo_wuf_method ).
      CATCH cx_wuf_no_entry INTO DATA(lo_wuf_entry).
        mo_prot->add_exception(
              io_exception = lo_wuf_entry ).
      CATCH cx_wuf_customizing_error INTO DATA(lo_wuf_cust).
        mo_prot->add_exception(
              io_exception = lo_wuf_cust ).
    ENDTRY.

    lo_engine->prefetch_end( ).

* Get eket (Scheduling Agreement Schedule Lines) data table
    ls_eket_key-ebeln = iv_po_number. " Purchasing document
    APPEND ls_eket_key TO lt_eket_key.
    CALL FUNCTION 'ME_EKET_ARRAY_READ_DOC'
      TABLES
        pti_eket_keytab = lt_eket_key
        pto_eket_tab    = lt_eket
      EXCEPTIONS                                          "2904601
        OTHERS          = 0.                            "2904601


    LOOP AT it_item_schedule ASSIGNING <ls_item_schedule> WHERE po_item = iv_item_number . "#EC CI_STDSEQ
* Gets eket entry
      READ TABLE lt_eket INTO ls_eket
      WITH KEY ebelp = iv_item_number etenr = <ls_item_schedule>-sched_line. "#EC CI_STDSEQ
      IF sy-subrc <> 0.
        CLEAR: ls_eket.
      ENDIF.
* Executes the mapping for the shedule line in the item level
      TRY.
          lo_engine->execute(
            EXPORTING
              i_source       = <ls_item_schedule>
              i_predecessor2 = is_item
              i_add1         = ls_eket
              i_add2         = is_poaddrdelivery
            IMPORTING
              e_ok           = lv_ok
            CHANGING
              ch_target      = ls_item_schedule_xi ).
          ev_ok = lv_ok.
        CATCH cx_wuf_transformation_error INTO DATA(lo_wuf_trans).
          mo_prot->add_exception(
                io_exception = lo_wuf_trans ).
        CATCH cx_wuf_customizing_error INTO lo_wuf_cust.
          mo_prot->add_exception(
                io_exception = lo_wuf_cust ).

      ENDTRY.

* Map the subcontracting element of the shedule line
      TRY.
          go_instance->map_item_schedule_sub_to_xi(
            EXPORTING
              iv_prefetch              = iv_prefetch
              iv_item_number          = iv_item_number
              it_item_schedule_subc   = it_item_schedule_subc
              iv_schedule_line        = <ls_item_schedule>-sched_line
            IMPORTING
              ev_ok                    = lv_ok
              et_item_schedule_sub_xi = ls_item_schedule_xi-subcontracting_component ).

          ev_ok = lv_ok.
        CATCH cx_wuf_error INTO DATA(lo_wuf_error).
          mo_prot->add_exception(
                io_exception = lo_wuf_error ).
      ENDTRY.


      APPEND ls_item_schedule_xi TO et_item_schedule_xi.

    ENDLOOP.

  ENDMETHOD.


  METHOD map_item_schedule_sub_to_xi.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 22.05.2023 | 20957     : [Feature] [PF&E] Create cust *
*              |            | DS4K951468                               *
*----------------------------------------------------------------------*
**********************************************************************
* copy of method from class CL_SE_PUR_POCHGEDINFO
**********************************************************************

* Maps the SubContracting Components in Shcedule line level and returns a tab of XI str
    DATA: lo_engine          TYPE REF TO cl_wuf_engine,
          ls_item_sch_sub_xi TYPE sapplco_pur_ord_chgd_info_subc.

    FIELD-SYMBOLS <ls_item_sch_sub> TYPE mmpur_pocomponent.

* Gets the mapping engine instance
    TRY.
        lo_engine = NEW #(
              i_application = gc_wuf_application_name
              i_event       = gc_wuf_event_item_sch_sub_name
              i_context     = ''
              i_no_prefetch = iv_prefetch ).
      CATCH cx_wuf_no_class INTO DATA(lo_wuf_class).
        mo_prot->add_exception(
              io_exception = lo_wuf_class ).
      CATCH cx_wuf_no_method INTO DATA(lo_wuf_method).
        mo_prot->add_exception(
              io_exception = lo_wuf_method ).
      CATCH cx_wuf_no_entry INTO DATA(lo_wuf_entry).
        mo_prot->add_exception(
              io_exception = lo_wuf_entry ).
      CATCH cx_wuf_customizing_error INTO DATA(lo_wuf_cust).
        mo_prot->add_exception(
              io_exception = lo_wuf_cust ).
    ENDTRY.

    lo_engine->prefetch_end( ).

    LOOP AT it_item_schedule_subc ASSIGNING <ls_item_sch_sub>
      WHERE po_item = iv_item_number AND
            sched_line = iv_schedule_line.               "#EC CI_STDSEQ

* Executes the mapping
      TRY.
          lo_engine->execute(
            EXPORTING
              i_source  = <ls_item_sch_sub>
            IMPORTING
              e_ok      = ev_ok
            CHANGING
              ch_target = ls_item_sch_sub_xi ).
        CATCH cx_wuf_transformation_error INTO DATA(lo_wuf_trans).
          mo_prot->add_exception(
                io_exception = lo_wuf_trans ).
        CATCH cx_wuf_customizing_error INTO lo_wuf_cust.
          mo_prot->add_exception(
                io_exception = lo_wuf_cust ).
      ENDTRY.

      APPEND ls_item_sch_sub_xi TO et_item_schedule_sub_xi.

    ENDLOOP.

  ENDMETHOD.


  METHOD map_item_text_to_xi.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 22.05.2023 | 20957     : [Feature] [PF&E] Create cust *
*              |            | DS4K951468                               *
*----------------------------------------------------------------------*
**********************************************************************
* copy of method from class CL_SE_PUR_POCHGEDINFO
**********************************************************************

* Maps Text Elements of an item and returns a tab of XI str
    DATA: lo_engine        TYPE REF TO cl_wuf_engine,
          ls_item_text_xi  TYPE sapplco_text_collection_text,
          lv_language_code TYPE sapplco_language_code,
          ls_bapipoheader  TYPE bapimepoheader.  " Introduced only to reuse the existing WUFWUF Event
    FIELD-SYMBOLS <ls_item_text> TYPE bapimepotext.

    CLEAR: et_item_text_xi.

* Gets the mapping engine instance
    TRY.
        lo_engine = NEW #(
            i_application = 'CO_PUR_PURCHASEORDERERPCO'
            i_event       = 'PURCHASEORDER_ITEM_TEXTS'
            i_context     = ''
            i_no_prefetch = iv_prefetch ).
      CATCH cx_wuf_no_class INTO DATA(lo_wuf_class).
        mo_prot->add_exception(
              io_exception = lo_wuf_class ).
      CATCH cx_wuf_no_method INTO DATA(lo_wuf_method).
        mo_prot->add_exception(
              io_exception = lo_wuf_method ).
      CATCH cx_wuf_no_entry INTO DATA(lo_wuf_entry).
        mo_prot->add_exception(
              io_exception = lo_wuf_entry ).
      CATCH cx_wuf_customizing_error INTO DATA(lo_wuf_cust).
        mo_prot->add_exception(
              io_exception = lo_wuf_cust ).
    ENDTRY.

    lo_engine->prefetch_end( ).

    TRY.
        cl_gdt_conversion=>language_code_outbound(
          EXPORTING
            im_value = iv_language
          IMPORTING
            ex_value = lv_language_code ).
      CATCH cx_gdt_conversion ##NO_HANDLER.
    ENDTRY.

    ls_bapipoheader-langu_iso = lv_language_code.
    LOOP AT it_item_text ASSIGNING <ls_item_text> WHERE po_item = iv_item_number . "#EC CI_STDSEQ

* Executes the mapping for the item text
      TRY.
          lo_engine->execute(
            EXPORTING
              i_source  = <ls_item_text>
              i_add1    = ls_bapipoheader
            IMPORTING
              e_ok      = ev_ok
            CHANGING
              ch_target = ls_item_text_xi ).
        CATCH cx_wuf_transformation_error INTO DATA(lo_wuf_trans).
          mo_prot->add_exception(
                io_exception = lo_wuf_trans ).
        CATCH cx_wuf_customizing_error INTO lo_wuf_cust.
          mo_prot->add_exception(
                io_exception = lo_wuf_cust ).
      ENDTRY.

      ls_item_text_xi-content_text-language_code = lv_language_code.
      APPEND ls_item_text_xi TO et_item_text_xi.
      CLEAR ls_item_text_xi.
    ENDLOOP.

  ENDMETHOD.


  METHOD map_item_to_xi.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 22.05.2023 | 20957     : [Feature] [PF&E] Create cust *
*              |            | DS4K951468                               *
*----------------------------------------------------------------------*
**********************************************************************
* copy of method from class CL_SE_PUR_POCHGEDINFO
**********************************************************************

* Maps the Items and returns a tab of XI str
    DATA: lo_engine            TYPE REF TO cl_wuf_engine,
          ls_item_xi           TYPE sapplco_pur_ord_chgd_info_itm2,
          ls_batch             TYPE bapibatchatt,
          ls_reqitemdata       TYPE mereqbapiitemdata, " Structure used to be able to use
          "                                               the transformation specific to Purchase Req
          ls_addrdelivery      TYPE bapimepoaddrdelivery,
          ls_shipping          TYPE bapimeposhippexp,
          ls_historytotals     TYPE bapiekbes,
          ls_ekpo              TYPE ekpo,
          lt_ekpo              TYPE TABLE OF ekpo INITIAL SIZE 0,
          ls_product_std_id_xi TYPE sapplco_product_standard_id,
          ls_mgvmatnr          TYPE bapimgvmatnr,
          lt_item              TYPE bapimepoitem_tp.

    FIELD-SYMBOLS: <ls_item> TYPE bapimepoitem.

* Gets the mapping engine instance
    TRY.
        lo_engine = NEW #(
            i_application = gc_wuf_application_name
            i_event       = gc_wuf_event_item_name
            i_context     = ''
            i_no_prefetch = iv_prefetch ).
      CATCH cx_wuf_no_class INTO DATA(lo_wuf_class).
        mo_prot->add_exception(
              io_exception = lo_wuf_class ).
      CATCH cx_wuf_no_method INTO DATA(lo_wuf_method).
        mo_prot->add_exception(
              io_exception = lo_wuf_method ).
      CATCH cx_wuf_no_entry INTO DATA(lo_wuf_entry).
        mo_prot->add_exception(
              io_exception = lo_wuf_entry ).
      CATCH cx_wuf_customizing_error INTO DATA(lo_wuf_cust).
        mo_prot->add_exception(
              io_exception = lo_wuf_cust ).
    ENDTRY.

    lo_engine->prefetch_end( ).

    "copy item table, because long material number might be changed
    lt_item = it_item.
    LOOP AT lt_item ASSIGNING <ls_item>.
      CLEAR ls_item_xi.
      CLEAR ls_batch.
      CLEAR ls_addrdelivery.
      CLEAR ls_historytotals.
      CLEAR lt_ekpo.
      CLEAR ls_ekpo.
      CLEAR ls_reqitemdata.
      CLEAR ls_shipping.
      CLEAR ls_mgvmatnr.

* map the materials
      cl_matnr_chk_mapper=>convert_on_input( EXPORTING  iv_matnr18               = <ls_item>-material
                                                        iv_guid                  = <ls_item>-material_guid
                                                        iv_version               = <ls_item>-material_version
                                                        iv_matnr40               = <ls_item>-material_long
                                                        iv_matnr_ext             = <ls_item>-material_external
                                             IMPORTING  ev_matnr40               = <ls_item>-material_long
                                             EXCEPTIONS excp_matnr_ne            = 1
                                                        excp_matnr_invalid_input = 2
                                                        OTHERS                   = 3 ).
      IF sy-subrc <> 0.
        " do nothing
      ENDIF.
      cl_matnr_chk_mapper=>convert_on_input( EXPORTING  iv_matnr18               = <ls_item>-ematerial
                                                        iv_guid                  = <ls_item>-ematerial_guid
                                                        iv_version               = <ls_item>-ematerial_version
                                                        iv_matnr40               = <ls_item>-ematerial_long
                                                        iv_matnr_ext             = <ls_item>-ematerial_external
                                             IMPORTING  ev_matnr40               = <ls_item>-ematerial_long
                                             EXCEPTIONS excp_matnr_ne            = 1
                                                        excp_matnr_invalid_input = 2
                                                        OTHERS                   = 3 ).
      IF sy-subrc <> 0.
        " do nothing
      ENDIF.

* Gets the batch data for the current item
      ls_mgvmatnr-material_ext = <ls_item>-material_external.
      ls_mgvmatnr-material_vers = <ls_item>-material_version.
      ls_mgvmatnr-material_guid = <ls_item>-material_guid.
      CALL FUNCTION 'BAPI_BATCH_GET_DETAIL'
        EXPORTING
          material        = <ls_item>-material
          batch           = <ls_item>-batch
          material_evg    = ls_mgvmatnr
          material_long   = <ls_item>-material_long
        IMPORTING
          batchattributes = ls_batch.

* Gets the delivery address for the item
      READ TABLE it_itemaddrdelivery
            WITH KEY po_item = <ls_item>-po_item
            INTO ls_addrdelivery.                        "#EC CI_STDSEQ
      IF sy-subrc <> 0.
        CLEAR: ls_addrdelivery.
      ENDIF.
      ls_reqitemdata-addr = CORRESPONDING #( ls_addrdelivery ) ##ENH_OK.
* Gets the history totals for the item
      READ TABLE it_itemhistory_totals
              WITH KEY po_item = <ls_item>-po_item
              INTO ls_historytotals.                     "#EC CI_STDSEQ
      IF sy-subrc <> 0.
        CLEAR: ls_historytotals.
      ENDIF.
* Gets the shipping data for the item
      READ TABLE it_itemshipping
        WITH KEY po_item = <ls_item>-po_item
        INTO ls_shipping.                                "#EC CI_STDSEQ
      IF sy-subrc <> 0.
        CLEAR: ls_shipping.
      ENDIF.
* Read the ekpo for the document and delivery address, and for the product internal id
      CALL FUNCTION 'ME_EKPO_READ_WITH_EBELN'
        EXPORTING
          pi_ebeln = iv_po_no
        TABLES
          pto_ekpo = lt_ekpo.

* Read the lt_ekpo for the required item
      IF lt_ekpo IS NOT INITIAL.
        READ TABLE lt_ekpo WITH KEY ebelp = <ls_item>-po_item INTO ls_ekpo. "#EC CI_STDSEQ
        IF sy-subrc <> 0.
          CLEAR: ls_ekpo.
        ENDIF.
      ENDIF.

* Executes the mapping with the item lines
      TRY.
          lo_engine->execute(
            EXPORTING
              i_source       = <ls_item>
              i_predecessor1 = is_poheader
              i_add1         = ls_batch
              i_add2         = ls_historytotals
              i_add3         = ls_addrdelivery
              i_add4         = ls_reqitemdata
              i_add5         = ls_ekpo
              i_add6         = ls_shipping
            IMPORTING
              e_ok           = ev_ok
            CHANGING
              ch_target      = ls_item_xi ).
        CATCH cx_wuf_customizing_error INTO lo_wuf_cust.
          mo_prot->add_exception(
                io_exception = lo_wuf_cust ).
        CATCH cx_wuf_transformation_error INTO DATA(lo_trans).
          mo_prot->add_exception(
              io_exception = lo_trans ).


      ENDTRY.

* Maps the product internal ID (reason it could not be in execute because it is a table of one line)
      IF ls_ekpo IS NOT INITIAL AND ls_ekpo-ean11 IS NOT INITIAL.
        ls_product_std_id_xi-content = ls_ekpo-ean11.
        ls_product_std_id_xi-scheme_agency_id = '9'.
        APPEND ls_product_std_id_xi TO ls_item_xi-product-standard_id.
      ENDIF.


* Add the Accounting coding block to the current item

      TRY.
          go_instance->map_item_account_to_xi(
            EXPORTING
              iv_prefetch         = abap_true
              it_item_account    = it_itemaccount
              iv_item_number     = <ls_item>-po_item
              is_item            = <ls_item>
            IMPORTING
              et_item_account_xi = ls_item_xi-accounting_coding_block_distr-accounting_coding_block_assig ).

* Add the price specification elements for the current item
          go_instance->map_item_pricespec_to_xi(
            EXPORTING
              iv_prefetch         = abap_true
              it_item_pricespec  = it_itemcond
              iv_item_number     = <ls_item>-po_item
            IMPORTING
              et_item_prispec_xi = ls_item_xi-price_specification_element ).


* Add the text collection to the item
          go_instance->map_item_text_to_xi(
           EXPORTING
             iv_language     = is_poheader-langu
             iv_prefetch      = abap_true
             it_item_text    = it_itemtext
             iv_item_number  = <ls_item>-po_item
           IMPORTING
             et_item_text_xi = ls_item_xi-text_collection-text ).

* Add the schedule line to the item
          go_instance->map_item_scheduleline_to_xi(
            EXPORTING
              iv_prefetch            = abap_true
              it_item_schedule      = it_itemschedule
              iv_item_number        = <ls_item>-po_item
              it_item_schedule_subc = it_itemschedule_subc
              iv_po_number          = iv_po_no
              is_item               = <ls_item>
              is_poaddrdelivery     = ls_addrdelivery
            IMPORTING
              et_item_schedule_xi   = ls_item_xi-schedule_line ).


* Add the confirmed schedule line to the item
          go_instance->map_item_conf_sched_to_xi(
            EXPORTING
              iv_prefetch      = abap_true
              it_item_conf    = it_itemconf
              is_item         = <ls_item>
              is_addrdelivery = ls_addrdelivery
            IMPORTING
              et_item_conf_xi = ls_item_xi-confirmed_schedule_line ).
        CATCH cx_wuf_error INTO DATA(lo_wuf_error).
          mo_prot->add_exception(
                io_exception = lo_wuf_error ).
      ENDTRY.

      go_instance->correct_item_cancel_indicator( CHANGING cs_item = ls_item_xi ).

      APPEND ls_item_xi TO gs_po_xi-item.

    ENDLOOP.

  ENDMETHOD.


  METHOD map_party_to_xi.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 22.05.2023 | 20957     : [Feature] [PF&E] Create cust *
*              |            | DS4K951468                               *
*----------------------------------------------------------------------*
**********************************************************************
* copy of method from class CL_SE_PUR_POCHGEDINFO
**********************************************************************

* Maps the party elements of the PO header.
    DATA: lo_engine   TYPE REF TO cl_wuf_engine,
          ls_party_xi TYPE sapplco_pur_ord_chgd_info_pty.

    FIELD-SYMBOLS <ls_party> TYPE bapiekkop.

* Gets the mapping engine instance
    TRY.
        lo_engine = NEW #( i_application = gc_wuf_application_name
                           i_event       = gc_wuf_event_party_name
                           i_context     = ''
                           i_no_prefetch = iv_prefetch ).
      CATCH cx_wuf_no_class INTO DATA(lo_wuf_class).
        mo_prot->add_exception(
              io_exception = lo_wuf_class ).
      CATCH cx_wuf_no_method INTO DATA(lo_wuf_method).
        mo_prot->add_exception(
              io_exception = lo_wuf_method ).
      CATCH cx_wuf_no_entry INTO DATA(lo_wuf_entry).
        mo_prot->add_exception(
              io_exception = lo_wuf_entry ).
      CATCH cx_wuf_customizing_error INTO DATA(lo_wuf_cust).
        mo_prot->add_exception(
              io_exception = lo_wuf_cust ).

    ENDTRY.

    lo_engine->prefetch_end( ).

    LOOP AT it_party ASSIGNING <ls_party>.
      CLEAR ls_party_xi.

* Executes the mapping with party table
      IF <ls_party> IS NOT INITIAL.
        TRY.
            lo_engine->execute(
              EXPORTING
                i_source  = <ls_party>
              IMPORTING
                e_ok      = ev_ok
              CHANGING
                ch_target = ls_party_xi ).
          CATCH cx_wuf_transformation_error INTO DATA(lo_wuf_trans).
            mo_prot->add_exception(
                  io_exception = lo_wuf_trans ).
          CATCH cx_wuf_customizing_error INTO lo_wuf_cust.
            mo_prot->add_exception(
                  io_exception = lo_wuf_cust ).
        ENDTRY.

        " Skip if:
        "   - Seller Party (ERP: Vendor)
        "   - Vendor Party (ERP: Goods Supplier)
        "   - Bill to Party (ERP: Invoicing Party)
        CASE ls_party_xi-role_code.
            " Seller Party (ERP: Vendor)
            " Bill to Party (ERP: Invoicing Party)
            " Vendor Party (ERP: Goods Supplier)
          WHEN '2' OR '10' OR '6'.
            CONTINUE.
          WHEN OTHERS.
            APPEND ls_party_xi TO gs_po_xi-party.
        ENDCASE.

      ENDIF.
    ENDLOOP.

  ENDMETHOD.


  METHOD map_poheader_to_xi.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 22.05.2023 | 20957     : [Feature] [PF&E] Create cust *
*              |            | DS4K951468                               *
*----------------------------------------------------------------------*
**********************************************************************
* copy of method from class CL_SE_PUR_POCHGEDINFO
**********************************************************************
    DATA: lo_engine TYPE REF TO cl_wuf_engine,
          ls_ekko   TYPE ekko,
          ls_header TYPE bapimepoheader.

* Gets the mapping engine instance
    TRY.
        lo_engine = NEW #(
            i_application = gc_wuf_application_name
            i_event       = gc_wuf_event_header_name
            i_context     = ''
            i_no_prefetch = iv_prefetch ).
      CATCH cx_wuf_no_class INTO DATA(lo_wuf_class).
        mo_prot->add_exception(
              io_exception = lo_wuf_class ).
      CATCH cx_wuf_no_method INTO DATA(lo_wuf_method).
        mo_prot->add_exception(
              io_exception = lo_wuf_method ).
      CATCH cx_wuf_no_entry INTO DATA(lo_wuf_entry).
        mo_prot->add_exception(
              io_exception = lo_wuf_entry ).
      CATCH cx_wuf_customizing_error INTO DATA(lo_wuf_cust).
        mo_prot->add_exception(
              io_exception = lo_wuf_cust ).

    ENDTRY.


    lo_engine->prefetch_end( ).

* Remove release status here. Will be mapped after me_ekko single_read
    ls_header = is_header.
    CLEAR ls_header-rel_status.

* Executes the mapping with the header and Purchasing Group data
    TRY.
        lo_engine->execute(
          EXPORTING
            i_source  = ls_header
            i_add1    = is_purchgrp
          IMPORTING
            e_ok      = ev_ok
          CHANGING
            ch_target = es_header_xi ).
      CATCH cx_wuf_customizing_error INTO lo_wuf_cust.
        mo_prot->add_exception(
              io_exception = lo_wuf_cust ).
      CATCH cx_wuf_transformation_error INTO DATA(lo_wuf_trans).
        mo_prot->add_exception(
              io_exception = lo_wuf_trans ).
      CATCH cx_sy_conversion_no_number INTO DATA(lo_wuf_conv).
        mo_prot->add_exception(
              io_exception = lo_wuf_conv ).

    ENDTRY.
* Fill the CompletenessAndValidationStatusCode
    CALL FUNCTION 'ME_EKKO_SINGLE_READ'
      EXPORTING
        pi_ebeln = is_header-po_number
      IMPORTING
        po_ekko  = ls_ekko.

* Get correct value in order to fill es_header_xi-release_status_code  "1600391

    IF ls_ekko-frggr IS INITIAL.
      es_header_xi-release_status_code = 6. "not relevant
    ELSEIF ls_ekko-frgrl IS INITIAL.
      es_header_xi-release_status_code = 3. "released
    ELSE.
      es_header_xi-release_status_code = 1. "not released
    ENDIF.

    IF ls_ekko IS NOT INITIAL AND ls_ekko-memory EQ 'X'.
      es_header_xi-completeness_and_validation_s = '1'.
    ELSEIF ls_ekko IS NOT INITIAL AND ls_ekko-memory IS INITIAL OR ls_ekko-memory EQ ''.
      es_header_xi-completeness_and_validation_s = '3'.
    ENDIF.

    gs_po_xi = es_header_xi.

  ENDMETHOD.


  METHOD map_pricespecification_to_xi.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 22.05.2023 | 20957     : [Feature] [PF&E] Create cust *
*              |            | DS4K951468                               *
*----------------------------------------------------------------------*
**********************************************************************
* copy of method from class CL_SE_PUR_POCHGEDINFO
**********************************************************************
* Maps the Price Specification Elements of a header and returns a tab of XI str
    DATA: lo_engine       TYPE REF TO cl_wuf_engine,
          ls_pricespec_xi TYPE sapplco_pur_ord_chgd_info_pr_1.

    FIELD-SYMBOLS <ls_headercnd> TYPE bapimepocondheader.

* Gets the mapping engine instance
    TRY.
        lo_engine = NEW #(
            i_application = gc_wuf_application_name
            i_event       = gc_wuf_event_hpricespec_name
            i_context     = ''
            i_no_prefetch = iv_prefetch ).
      CATCH cx_wuf_no_class INTO DATA(lo_wuf_class).
        mo_prot->add_exception(
              io_exception = lo_wuf_class ).
      CATCH cx_wuf_no_method INTO DATA(lo_wuf_method).
        mo_prot->add_exception(
              io_exception = lo_wuf_method ).
      CATCH cx_wuf_no_entry INTO DATA(lo_wuf_entry).
        mo_prot->add_exception(
              io_exception = lo_wuf_entry ).
      CATCH cx_wuf_customizing_error INTO DATA(lo_wuf_cust).
        mo_prot->add_exception(
              io_exception = lo_wuf_cust ).
    ENDTRY.

    lo_engine->prefetch_end( ).

    LOOP AT it_conditionheader ASSIGNING <ls_headercnd>.

* Executes the mapping with the condition header
      TRY.
          lo_engine->execute(
            EXPORTING
              i_source  = <ls_headercnd>
            IMPORTING
              e_ok      = ev_ok
            CHANGING
              ch_target = ls_pricespec_xi ).
        CATCH cx_wuf_transformation_error INTO DATA(lo_wuf_trans).
          mo_prot->add_exception(
                io_exception = lo_wuf_trans ).
        CATCH cx_wuf_customizing_error INTO lo_wuf_cust.
          mo_prot->add_exception(
                io_exception = lo_wuf_cust ).
      ENDTRY.

      APPEND ls_pricespec_xi TO gs_po_xi-price_specification_element.

    ENDLOOP.

  ENDMETHOD.


  METHOD map_purgrp_comm_to_xi.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 22.05.2023 | 20957     : [Feature] [PF&E] Create cust *
*              |            | DS4K951468                               *
*----------------------------------------------------------------------*
**********************************************************************
* copy of method from class CL_SE_PUR_POCHGEDINFO
**********************************************************************
* Maps the Communication Elements of purchasing group
    DATA: lo_engine_for_email TYPE REF TO cl_wuf_engine,
          ls_telephone_xi     TYPE sapplco_telephone,
          ls_facsimile_xi     TYPE sapplco_facsimile,
          lt_telephone_xi     LIKE TABLE OF ls_telephone_xi,
          lt_facsimile_xi     LIKE TABLE OF ls_facsimile_xi,
          ls_email_xi         TYPE sapplco_email.

* Gets the mapping engine instance for email
    TRY.

        lo_engine_for_email = NEW #(
            i_application = gc_wuf_application_name
            i_event       = gc_wuf_event_purgrp_email_name
            i_context     = ''
            i_no_prefetch = iv_prefetch ).
      CATCH cx_wuf_no_class INTO DATA(lo_wuf_class).
        mo_prot->add_exception(
              io_exception = lo_wuf_class ).
      CATCH cx_wuf_no_method INTO DATA(lo_wuf_method).
        mo_prot->add_exception(
              io_exception = lo_wuf_method ).
      CATCH cx_wuf_no_entry INTO DATA(lo_wuf_entry).
        mo_prot->add_exception(
              io_exception = lo_wuf_entry ).
      CATCH cx_wuf_customizing_error INTO DATA(lo_wuf_cust).
        mo_prot->add_exception(
              io_exception = lo_wuf_cust ).
    ENDTRY.

* Prefetch for email engine
    lo_engine_for_email->prefetch_end( ).

    TRY.

* Map both telephone and fax data via map_communication out
        cl_pur_wuf_transformation=>map_communication_out(
          EXPORTING
            i_prefetch    = iv_prefetch
            iv_ektel      = is_purchasegroup-ektel
            iv_telfx      = is_purchasegroup-telfx
            iv_tel_number = is_purchasegroup-tel_number
            iv_tel_extens = is_purchasegroup-tel_extens
          IMPORTING
            e_ok          = ev_ok
            et_facsimile  = lt_facsimile_xi
            et_phone      = lt_telephone_xi ).

        IF lt_telephone_xi IS NOT INITIAL.
          LOOP AT lt_telephone_xi ASSIGNING FIELD-SYMBOL(<ls_telephone_xi>).
            APPEND INITIAL LINE TO gs_po_xi-responsible_purchasing_group-address-communication-telephone
              ASSIGNING FIELD-SYMBOL(<ls_telephone>).
            <ls_telephone> = CORRESPONDING #( <ls_telephone_xi> ).
          ENDLOOP.
        ENDIF.

        IF lt_facsimile_xi IS NOT INITIAL.
          LOOP AT lt_facsimile_xi ASSIGNING FIELD-SYMBOL(<ls_facsimile_xi>).
            APPEND INITIAL LINE TO gs_po_xi-responsible_purchasing_group-address-communication-facsimile
              ASSIGNING FIELD-SYMBOL(<ls_facsimile>).
            <ls_facsimile> = CORRESPONDING #( <ls_facsimile_xi> ).
          ENDLOOP.
        ENDIF.

        IF is_purchasegroup-smtp_addr IS NOT INITIAL.
          lo_engine_for_email->execute(
            EXPORTING
              i_source  = is_purchasegroup
            IMPORTING
              e_ok      = ev_ok
            CHANGING
              ch_target = ls_email_xi ).

          APPEND ls_email_xi TO gs_po_xi-responsible_purchasing_group-address-communication-email.
        ENDIF.
      CATCH cx_wuf_transformation_error INTO DATA(lo_wuf_trans).
        mo_prot->add_exception(
              io_exception = lo_wuf_trans ).
      CATCH cx_wuf_customizing_error INTO lo_wuf_cust.
        mo_prot->add_exception(
              io_exception = lo_wuf_cust ).

    ENDTRY.
  ENDMETHOD.


  METHOD map_textheader_to_xi.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 22.05.2023 | 20957     : [Feature] [PF&E] Create cust *
*              |            | DS4K951468                               *
*----------------------------------------------------------------------*
**********************************************************************
* copy of method from class CL_SE_PUR_POCHGEDINFO
**********************************************************************
* Maps the text collection elements of the PO header.
    DATA: lo_engine        TYPE REF TO cl_wuf_engine,
          ls_text_xi       TYPE sapplco_text_collection_text,
          lv_language_code TYPE sapplco_language_code.

    FIELD-SYMBOLS <ls_text> TYPE bapimepotextheader.

* Gets the mapping engine instance
    TRY.
        lo_engine = NEW #(
            i_application = cl_se_pur_pocrtedinfo=>gc_wuf_application_name
            i_event       = cl_se_pur_pocrtedinfo=>gc_wuf_event_text_name
            i_context     = ''
            i_no_prefetch = iv_prefetch ).
      CATCH cx_wuf_no_class INTO DATA(lo_wuf_class).
        mo_prot->add_exception(
              io_exception = lo_wuf_class ).
      CATCH cx_wuf_no_method INTO DATA(lo_wuf_method).
        mo_prot->add_exception(
              io_exception = lo_wuf_method ).
      CATCH cx_wuf_no_entry INTO DATA(lo_wuf_entry).
        mo_prot->add_exception(
              io_exception = lo_wuf_entry ).
      CATCH cx_wuf_customizing_error INTO DATA(lo_wuf_cust).
        mo_prot->add_exception(
              io_exception = lo_wuf_cust ).
    ENDTRY.

    lo_engine->prefetch_end( ).

    TRY.
        cl_gdt_conversion=>language_code_outbound(
          EXPORTING
            im_value = iv_language
          IMPORTING
            ex_value = lv_language_code ).
      CATCH cx_gdt_conversion ##NO_HANDLER.
    ENDTRY.

    LOOP AT it_textheader ASSIGNING <ls_text>.

* Executes the mapping with text header table
      TRY.
          lo_engine->execute(
            EXPORTING
              i_source  = <ls_text>
            IMPORTING
              e_ok      = ev_ok
            CHANGING
              ch_target = ls_text_xi ).
        CATCH cx_wuf_transformation_error INTO DATA(lo_wuf_trans).
          mo_prot->add_exception(
                io_exception = lo_wuf_trans ).
        CATCH cx_wuf_customizing_error INTO lo_wuf_cust.
          mo_prot->add_exception(
                io_exception = lo_wuf_cust ).

      ENDTRY.

      ls_text_xi-content_text-language_code = lv_language_code.
      APPEND ls_text_xi TO gs_po_xi-text_collection-text.
      CLEAR ls_text_xi.

    ENDLOOP.

  ENDMETHOD.


  METHOD process_out.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 22.05.2023 | 20957     : [Feature] [PF&E] Create cust *
*              |            | DS4K951468                               *
*----------------------------------------------------------------------*
* SRIKAVEN     | 18.09.2023 | FB_24858_CR - ZSC_R_PO_SEND_OUT  for Con *
*              |            | DS4K962828                               *
* SRIKAVEN     | 29.11.2023 | FB_27191_CR - ZSC_R_PO_SEND_OUT  for Con *
*              |            | DS4K972136                               *
* SRIKAVEN     | 29.11.2023 | FB_27191_CR - ZSC_R_PO_SEND_OUT  for Con *
*              |            | DS4K972229                               *
* SRIKAVEN     | 12.12.2023 | FB_27540_CR - ZSC_R_PO_SEND_OUT  for Con *
*              |            | DS4K973471                              *
*----------------------------------------------------------------------*
    DATA: ls_xi_msg_header_ext  TYPE sapplco_bus_doc_message_header,
          ls_xi_po_changed_inf  TYPE sapplco_purchase_order_changed,
          ls_poheader           TYPE bapimepoheader,
          lt_item               TYPE bapimepoitem_tp,
          ls_purchasegrp        TYPE t024,
          lt_condheader         TYPE bapimepocondheader_tp,
          lt_partner            TYPE bapiekkop_tp,
          lt_pocomponent        TYPE mmpur_pocomponent_tty,
          lt_textheader         TYPE bapimepotextheader_tp,
          lt_item_pricespec     TYPE bapimepocond_tp,
          lt_addr_delivery      TYPE bapimepoaddrdelivery_tp,
          lt_item_schedule      TYPE bapimeposchedule_tp,
          lt_account            TYPE bapimepoaccount_tp,
          lt_item_text          TYPE bapimepotext_tp,
          lt_shipping           TYPE mepo_t_bapiekpv,
          lt_item_history_total TYPE bapiekbes_tp,
          lt_item_confirmation  TYPE bapiekes_tp,
          lo_wuf_error          TYPE REF TO cx_wuf_error,
          lo_badi_error         TYPE REF TO cx_appl_proxy_badi_processing,
          lo_cx_root            TYPE REF TO cx_root,
          lt_wuf_msg            TYPE wuf_error_tab,
          lt_protocol           TYPE bapirettab,
          lv_severity           TYPE bapi_mtype,
          ls_msgbapi            TYPE bapiret2,
          lo_badi_pochangedinfo TYPE REF TO pur_se_pochginformation_asyn.
    DATA ls_info_msg TYPE zsp_s_purhc_order_changed1.
    DATA lv_char TYPE char8.
    CONSTANTS lc_initial_date TYPE char8 VALUE '00000000'.
    mo_prot = NEW #(  ).

* Set begin message-------------------------------------------------------------
    CLEAR ls_msgbapi.
    ls_msgbapi-type       = 'S'.
    ls_msgbapi-id         = 'OPS_SE_PUR_COMMON'.
    ls_msgbapi-number     = '003'.
    ls_msgbapi-message_v1 = 'PurchaseOrderChangedInformation_Out'.
    mo_prot->add_message(
        ip_msgty = ls_msgbapi-type
        ip_msgid = ls_msgbapi-id
        ip_msgno = ls_msgbapi-number
        ip_msgv1 = ls_msgbapi-message_v1 ).


* Gets the PO details
*    IF iv_doc_type NE 'K'.
    cl_se_pur_poinfohelper=>get_po_detail(
      EXPORTING
        iv_purordid         = iv_po_no
      IMPORTING
        es_poheader         = ls_poheader
        et_poitem           = lt_item
        et_pocondheader     = lt_condheader
        et_popartner        = lt_partner
        et_pocomponent      = lt_pocomponent
        et_potextheader     = lt_textheader
        et_poitemcond       = lt_item_pricespec
        et_poaddrdelivery   = lt_addr_delivery
        et_poschedule       = lt_item_schedule
        et_poaccount        = lt_account
        et_potextitem       = lt_item_text
        et_poshippexp       = lt_shipping
        et_pohistory_totals = lt_item_history_total
        et_poconfirmation   = lt_item_confirmation ).
*    ELSE.
    IF ls_poheader IS INITIAL.
      get_contract_details(
        EXPORTING
          iv_ebeln          = iv_po_no
        IMPORTING
          et_poitem         = lt_item
          et_potextitem     = lt_item_text
          et_poaccount      = lt_account
          et_potextheader   = lt_textheader
          et_poaddrdelivery = lt_addr_delivery
          et_popartner      = lt_partner
          es_poheader       = ls_poheader
      ).
    ENDIF.


* Gets the Purchase Group details

    CALL FUNCTION 'MEX_READ_T024'
      EXPORTING
        im_ekgrp = ls_poheader-pur_group
      IMPORTING
        ex_t024  = ls_purchasegrp.

* Maps the abap str to XI str
    TRY.
        go_instance->mapping_out(
            is_bapimepoheader      = ls_poheader
            it_bapiitem            = lt_item
            is_purchgrp            = ls_purchasegrp
            it_bapiconditionheader = lt_condheader
            it_partner             = lt_partner
            it_bapitextheader      = lt_textheader
            it_bapiitemcond        = lt_item_pricespec
            it_bapiaddrdelivery    = lt_addr_delivery
            it_bapischedule        = lt_item_schedule
            it_bapiaccount         = lt_account
            it_bapitextitem        = lt_item_text
            it_bapishipping        = lt_shipping
            it_bapihistory_totals  = lt_item_history_total
            it_bapiconfirmation    = lt_item_confirmation
            it_bapicomponent       = lt_pocomponent ).
*   catch PO error and fill into local protocol
      CATCH cx_ops_se_po INTO lo_cx_root.
        mo_prot->add_exception(
            io_exception = lo_cx_root ).
*   catch WUF error and fill into local protocol
      CATCH cx_wuf_error INTO lo_wuf_error.
        lo_wuf_error->a_protocol->get_messages( IMPORTING et_message = lt_wuf_msg ).
*     convert to bapirettab
        cl_ops_ehp_mapping_helper=>convert_wufmsg_to_bapimsg(
          EXPORTING
            it_wuf_msg    = lt_wuf_msg
          IMPORTING
            et_bapirettab = lt_protocol ).
*     add log to mo_prot
        mo_prot->add_log(
            it_prot = lt_protocol ).

    ENDTRY.

* Fill message header----------------------------------------------------------
    cl_ops_ehp_mapping_helper=>fill_message_header(
      IMPORTING
        es_message_header = ls_xi_msg_header_ext ).

* Filling the value of SCHEME_AGENCY_ID of the MessageHeader-ID by the sender system id
    ls_xi_msg_header_ext-id-scheme_agency_id = ls_xi_msg_header_ext-sender_business_system_id.

*-------------------------------------------------------------------------------
* Fill external header
    ls_xi_po_changed_inf-message_header = ls_xi_msg_header_ext.



* Fill purchase order data
    IF gs_po_xi IS INITIAL.
      go_instance->get_po_xi( IMPORTING es_po_xi = gs_po_xi ).
    ENDIF.

    ls_xi_po_changed_inf-purchase_order = gs_po_xi.

    lv_severity = mo_prot->get_severity( ).

    IF lv_severity NE 'E'.
* set message standard mapping succesfull
      CLEAR ls_msgbapi.
      ls_msgbapi-type       = 'S'.
      ls_msgbapi-id         = 'OPS_SE_PUR_COMMON'.
      ls_msgbapi-number     = '004'.
      mo_prot->add_message(
          ip_msgty = ls_msgbapi-type
          ip_msgid = ls_msgbapi-id
          ip_msgno = ls_msgbapi-number ).
    ENDIF.


    " call customer badi to modify mapping
* BAdI method outbound_processing-----------------------------------------------
    TRY.
        GET BADI lo_badi_pochangedinfo.
        CALL BADI lo_badi_pochangedinfo->outbound_processing
          EXPORTING
            is_poheader         = ls_poheader
            it_poitem           = lt_item
            it_poaddrdelivery   = lt_addr_delivery
            it_poschedule       = lt_item_schedule
            it_poaccount        = lt_account
            it_pocondheader     = lt_condheader
            it_pocond           = lt_item_pricespec
            it_pohistory_totals = lt_item_history_total
            it_popartner        = lt_partner
          CHANGING
            cs_po_proxy         = ls_xi_po_changed_inf.
      CATCH cx_badi_not_implemented.                    "#EC NO_HANDLER
*   catch badi error and fill into local protocol
      CATCH cx_appl_proxy_badi_processing INTO lo_badi_error.
        mo_prot->add_exception(
            io_exception = lo_badi_error ).

        et_return = mo_prot->get_prot( ).

        RAISE EXCEPTION TYPE cx_appl_proxy_badi_processing
          EXPORTING
            previous = lo_badi_error.
    ENDTRY.
    DATA: BEGIN OF ls_filter1,
            bsart TYPE bsart,
          END OF ls_filter1.

    ls_filter1-bsart = ls_poheader-doc_type.
    TRY.
        IF zcl_pe_hm_switch=>is_active( iv_id     = '2168'
                                                 is_filter = ls_filter1 ).
          DATA(lv_gps_flag) = abap_true.
        ENDIF.
      CATCH zcx_pe_hm.
        CLEAR lv_gps_flag.
    ENDTRY.
*check if error occured -----------------------------------------------------
    lv_severity = mo_prot->get_severity( ).
    IF lv_severity = 'E'.
      et_return = mo_prot->get_prot( ).
      RAISE EXCEPTION TYPE cx_ops_se
        EXPORTING
          textid = cx_ops_se=>error_in_method
          msgv1  = 'PROCESS_OUT'
          msgv2  = 'CL_SE_PUR_POCHGEDINFO'.
    ENDIF.



* Fill message

    ls_info_msg-s_purhc_order_changed = CORRESPONDING #( ls_xi_po_changed_inf ) ##ENH_OK.

    IF strlen( ls_info_msg-s_purhc_order_changed-purchase_order-exchange_rate-exchange_rate-quotation_date_time ) = 8 AND
       ls_info_msg-s_purhc_order_changed-purchase_order-exchange_rate-exchange_rate-quotation_date_time CO '0123456789'.
      DATA(lv_timestamp) = conv_date_to_xsd_timestamp(
         iv_date = CONV dats( ls_info_msg-s_purhc_order_changed-purchase_order-exchange_rate-exchange_rate-quotation_date_time ) ).

      ls_info_msg-s_purhc_order_changed-purchase_order-exchange_rate-exchange_rate-quotation_date_time = lv_timestamp.

      LOOP AT ls_info_msg-s_purhc_order_changed-purchase_order-item ASSIGNING FIELD-SYMBOL(<ls_item>).
        LOOP AT <ls_item>-schedule_line ASSIGNING FIELD-SYMBOL(<ls_schedule>). "#EC CI_NESTED
          IF lv_gps_flag = abap_true.
            DATA(lv_date_check) = <ls_schedule>-delivery_period-start_date_time-content(10).
            IF lv_date_check IS NOT INITIAL.
              REPLACE ALL OCCURRENCES OF '-' IN lv_date_check WITH space.
              lv_date_check = condense( lv_date_check ).
              <ls_schedule>-delivery_period-start_date_time-content  = conv_date_to_xsd_timestamp(
              iv_date = CONV dats( lv_date_check ) ).
            ENDIF.
          ELSE.
            <ls_schedule>-delivery_period-start_date_time-content = conv_long_datetime_into_short( iv_input = <ls_schedule>-delivery_period-start_date_time-content ).
          ENDIF.
          <ls_schedule>-delivery_period-end_date_time-content = conv_long_datetime_into_short( iv_input = <ls_schedule>-delivery_period-end_date_time-content ).
        ENDLOOP.
        LOOP AT <ls_item>-confirmed_schedule_line ASSIGNING FIELD-SYMBOL(<ls_conf>). "#EC CI_NESTED
          IF lv_gps_flag = abap_true.
            lv_date_check =  <ls_conf>-delivery_period-start_date_time-content(10).
            IF lv_date_check IS NOT INITIAL.
              REPLACE ALL OCCURRENCES OF '-' IN lv_date_check WITH space.
              lv_date_check = condense( lv_date_check ).
              <ls_conf>-delivery_period-start_date_time-content  = conv_date_to_xsd_timestamp(
             iv_date = CONV dats( lv_date_check ) ).
            ENDIF.
          ELSE.
            <ls_conf>-delivery_period-start_date_time-content = conv_long_datetime_into_short( iv_input = <ls_conf>-delivery_period-start_date_time-content ).
          ENDIF.
          <ls_conf>-delivery_period-end_date_time-content = conv_long_datetime_into_short( iv_input = <ls_conf>-delivery_period-end_date_time-content ).
        ENDLOOP.
        IF <ls_item>-product_tax-type_code-content IS NOT INITIAL AND <ls_item>-product_tax-type_code-list_id IS INITIAL.
          <ls_item>-product_tax-type_code-list_id = '0'.
        ENDIF.
        CLEAR lv_char.
        lv_char  = CONV #( <ls_item>-zzsp_s_item_direct_data-zz1_adi_m_planned_pdi ).
        IF lv_char IS INITIAL.
          <ls_item>-zzsp_s_item_direct_data-zz1_adi_m_planned_pdi = lc_initial_date.
        ENDIF.
        CLEAR lv_char.
        lv_char = CONV #( <ls_item>-zzsp_s_item_direct_data-zz1_mdd_da_pdi ).
        IF lv_char IS INITIAL.
          <ls_item>-zzsp_s_item_direct_data-zz1_mdd_da_pdi = lc_initial_date.
        ENDIF.
      ENDLOOP.
    ENDIF.

    IF iv_create_ind EQ abap_true.
      ls_info_msg-s_purhc_order_changed-create_change_indicator = gc_create_ind.
    ELSE.
      ls_info_msg-s_purhc_order_changed-create_change_indicator = gc_change_ind.
    ENDIF.

* Call proxy

    TRY.
        cl_bs_soa_asyncprx_out=>execute(
          EXPORTING
            iv_proxy_class               = 'ZCL_SP_CO_PURHC_ORDER_CHANGED'
            iv_method                    = 'PURCHASE_ORDER_CHANGED_INFORMA'
          CHANGING
            cs_message_data_outbound     = ls_info_msg ).
      CATCH cx_bs_soa_exception INTO DATA(lo_soa).
        mo_prot->add_exception(
                      io_exception = lo_soa ).
      CATCH cx_sy_create_object_error INTO DATA(lo_objerr).
        mo_prot->add_exception(
            io_exception = lo_objerr ).
    ENDTRY.


* fill et_return
    et_return = mo_prot->get_prot( ).

  ENDMETHOD.


  METHOD conv_date_to_xsd_timestamp.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 29.05.2023 | 20957     : [Feature] [PF&E] Create cust *
*              |            | DS4K951468                               *
*----------------------------------------------------------------------*

    DATA: lv_ts    TYPE xsddatetime_z,
          lv_time  TYPE tims,
          lv_tzone TYPE timezone,
          lv_sts   TYPE c LENGTH 25.

    lv_time = iv_time.

    " Get the system time zone from the table TTZCU
    CALL FUNCTION 'GET_SYSTEM_TIMEZONE'
      IMPORTING
        timezone            = lv_tzone
      EXCEPTIONS
        customizing_missing = 1
        OTHERS              = 2.

    IF sy-subrc = 0.
      " Execute conversion with system time zone
      CONVERT DATE iv_date TIME lv_time INTO TIME STAMP lv_ts TIME ZONE lv_tzone.

      cl_hrpay99cee1_u2_xml=>abap_timestamp_2_xsd_timestamp(
        EXPORTING
          iv_input  = lv_ts
        IMPORTING
          ev_output = lv_sts
      ).
      rv_xsd_timestamp = lv_sts.
    ENDIF.

  ENDMETHOD.


  METHOD conv_long_datetime_into_short.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* IVANOKON     | 29.05.2023 | 20957     : [Feature] [PF&E] Create cust *
*              |            | DS4K951468                               *
*----------------------------------------------------------------------*

    DATA: lv_line    TYPE char30,
          lv_result1 TYPE char25,
          lv_result2 TYPE char5 ##NEEDED.

    lv_line = iv_input.

    SPLIT lv_line AT '+' INTO lv_result1 lv_result2.
    IF lv_result1 IS NOT INITIAL.
      lv_result1 = lv_result1 && 'Z'.
    ENDIF.
    lv_result1 = condense( val = lv_result1 del = space ).

    rv_result = lv_result1.

  ENDMETHOD.


  METHOD get_contract_details.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
*----------------------------------------------------------------------*
* SRIKAVEN     | 18.09.2023 | FB_24858_CR - ZSC_R_PO_SEND_OUT  for Con *
*              |            | DS4K962828                               *
*----------------------------------------------------------------------*

    DATA :ls_header      TYPE bapimeoutheader,
          lt_item        TYPE TABLE OF bapimeoutitem,
          ls_item        TYPE bapimepoitem,
          lt_address     TYPE TABLE OF bapimeoutaddrdelivery,
          lt_account     TYPE TABLE OF bapimeoutaccount,
          ls_account     TYPE  bapimepoaccount,
          ls_address     TYPE bapimepoaddrdelivery,
          ls_item_text   TYPE bapimepotext,
          ls_header_text TYPE bapimepotextheader,
          ls_partner     TYPE bapiekkop,
          lt_header_text TYPE TABLE OF bapimeouttext,
          lt_item_text   TYPE TABLE OF bapimeoutitemtext,
          lt_partner     TYPE TABLE OF  bapimeoutpartner,
          lt_return      TYPE TABLE  OF bapiret2.


    CALL FUNCTION 'BAPI_CONTRACT_GETDETAIL'
      EXPORTING
        purchasingdocument = iv_ebeln
        item_data          = 'X'
        account_data       = 'X'
        text_data          = 'X'
        partner_data       = 'X'
      IMPORTING
        header             = ls_header
      TABLES
        item               = lt_item
        account            = lt_account
        delivery_address   = lt_address
        item_text          = lt_item_text
        header_text        = lt_header_text
        partner            = lt_partner
        return             = lt_return.

    IF ls_header IS NOT INITIAL.
      ##ENH_OK
      es_poheader = CORRESPONDING #( ls_header ).
      es_poheader-po_number = ls_header-number.


      LOOP AT lt_item ASSIGNING FIELD-SYMBOL(<ls_item>).
        ls_item = CORRESPONDING #( <ls_item> ).
        ls_item-po_item = <ls_item>-item_no.
        ls_item-quantity = <ls_item>-target_qty.
        APPEND ls_item TO et_poitem.
      ENDLOOP.
      LOOP AT lt_account ASSIGNING FIELD-SYMBOL(<ls_account>).
        ls_account = CORRESPONDING #( <ls_account> ).
        ls_account-po_item = <ls_account>-item_no.
        APPEND ls_account TO et_poaccount.
      ENDLOOP.
      LOOP AT lt_address ASSIGNING FIELD-SYMBOL(<ls_address>).
        ls_address = CORRESPONDING #( <ls_address> ).
        ls_address-po_item = <ls_address>-item_no.
        APPEND ls_address TO et_poaddrdelivery.
      ENDLOOP.
      LOOP AT lt_item_text ASSIGNING FIELD-SYMBOL(<ls_item_text>).
        ls_item_text = CORRESPONDING #( <ls_item_text> ).
        ls_item_text-po_item = <ls_item_text>-item_no.
        APPEND ls_item_text TO et_potextitem.
      ENDLOOP.
      LOOP AT lt_header_text ASSIGNING FIELD-SYMBOL(<ls_header_text>).
        ls_header_text  = CORRESPONDING #( <ls_header_text> ).
        ls_header_text-po_number = ls_header-number.
        APPEND ls_header_text TO et_potextheader.
      ENDLOOP.

      LOOP AT lt_partner ASSIGNING FIELD-SYMBOL(<ls_partner>).
        ls_partner = CORRESPONDING #( <ls_partner> ).
        ls_partner-buspartno = <ls_partner>-partnr.
        ls_partner-partnerdesc = <ls_partner>-partn_role.
        APPEND ls_partner TO et_popartner.
      ENDLOOP.
    ENDIF.
  ENDMETHOD.
  METHOD correct_item_cancel_indicator.
    cs_item-cancelled_indicator = COND #( WHEN cs_item-cancelled_indicator <> gc_xi_true AND cs_item-cancelled_indicator <> gc_xi_false
                                          THEN gc_xi_false ELSE cs_item-cancelled_indicator ).
  ENDMETHOD.
ENDCLASS.