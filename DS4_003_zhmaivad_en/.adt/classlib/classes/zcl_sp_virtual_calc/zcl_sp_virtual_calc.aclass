class ZCL_SP_VIRTUAL_CALC definition
  public
  final
  create public .

public section.

  interfaces IF_SADL_EXIT .
  interfaces IF_SADL_EXIT_CALC_ELEMENT_READ .

  types:
    BEGIN OF gtyp_date_brf,
        date        TYPE dats,
        time        TYPE tims,
        timestamp   TYPE fdt_timestamp,
        offset_time TYPE fdt_utc_offset_time,
        offset_sign TYPE tznutcsign,
        type        TYPE fdt_timepoint_type,
      END OF gtyp_date_brf .
  types:
    BEGIN OF       gtyp_shas_config,
        vkorg             TYPE vkorg,
        ekgrp             TYPE ekgrp,
        ekorg             TYPE ekorg,
        kunnr             TYPE kunnr,
        zsd_serviden      TYPE zsd_serviden,
        fsh_mg_attribute1 TYPE fsh_mg_attribute1,
        fsh_vas_sub_ser   TYPE fsh_vas_sub_ser,
        datab             TYPE gtyp_date_brf,
        datbi             TYPE gtyp_date_brf,
        fsh_vas_ser       TYPE fsh_vas_ser,
        zsd_siidentifier  TYPE zsd_siidentifier,
        zsd_condition     TYPE zsd_condition,
        zsd_field_type    TYPE zsd_field_type,
        zsd_fld_len_min   TYPE zsd_fld_len_min,
        zsd_fld_len_max   TYPE zsd_fld_len_max,
        zsd_format        TYPE zsd_format,
        zsd_data          TYPE zsd_data,
      END OF gtyp_shas_config .
  types:
    BEGIN OF gtyp_formats,
        value_position TYPE ddcds_customer_domain_value-value_position,
        value_low      TYPE ddcds_customer_domain_value-value_low,
      END OF gtyp_formats .
  types:
    gtyp_tt_shas_config TYPE SORTED TABLE OF  gtyp_shas_config WITH NON-UNIQUE KEY fsh_vas_sub_ser fsh_vas_ser .

  constants:
    BEGIN OF gc_item_criticality,
        "! Neutral (no color)
        neutral  TYPE i VALUE 0,
        "! Negative (red color)
        negative TYPE i VALUE 1,
        "! Critical (orange color)
        critical TYPE i VALUE 2,
        "! Positive (green color)
        positive TYPE i VALUE 3,
        "! Greyed (grey color)
        greyed   TYPE i VALUE 4,
        "! New item (blue color)
        new_item TYPE i VALUE 5,
      END OF gc_item_criticality .
  class-data GTS_SHAS_CONFIG_MM type GTYP_TT_SHAS_CONFIG .
  class-data GTS_SHAS_CONFIG_SD type GTYP_TT_SHAS_CONFIG .
  class-data:
    gts_formats TYPE SORTED TABLE OF gtyp_formats WITH NON-UNIQUE KEY value_position .
  constants GC_DOMENAME type DOMNAME value 'ZSP_VASREADINESS' ##NO_TEXT.

  class-methods CLASS_CONSTRUCTOR .
  class-methods FILL_LOG
    importing
      !IT_MESSAGES type BAL_T_MSG
      !IV_EBELN type EBELN
      !IV_EBELP type EBELP
    returning
      value(RT_MESSAGES) type BAL_T_MSG .
  methods CREATE_LOG_MESSAGE
    returning
      value(RS_MESSAGE) type BAL_S_MSG .
  methods ADD_MESSAGE_TO_THE_LOG
    importing
      !IS_MESSAGE type BAL_S_MSG .
  methods GET_VASREADINESS
    importing
      !IT_MESSAGES type BAL_T_MSG
    changing
      !CV_CRIT type INT1 optional
    returning
      value(RV_VASREADINES) type STRING .
  methods CHECK_FORMAT
    importing
      !IV_FORMAT type ZSD_FORMAT
      !IV_VALUE type ZSD_VAS_DYN_FIELD_VALUE
    returning
      value(RV_RESULT) type ABAP_BOOLEAN .
  methods CHECK_VAS_MM
    changing
      !CS_CALCULATED_DATA type ZSP_I_SHAS_ITEM .
  methods CHECK_VAS_SD
    changing
      !CS_CALCULATED_DATA type ZSP_I_SHAS_ITEM .
  methods BAPI_CHANGE_CUS_STATUS
    importing
      !IV_CUSTIN type ZZ1_CUSTIN
      !IT_TAB type STANDARD TABLE
    returning
      value(RV_ERR) type BOOL .
  methods GET_LOG_MESSAGE
    returning
      value(RT_MESSAGES) type BAL_T_MSG .
  PROTECTED SECTION.
  PRIVATE SECTION.

    CONSTANTS gc_log_object TYPE balobj_d VALUE 'ZSP_SHAS_MONITOR' ##NO_TEXT.
    CONSTANTS gc_log_subobject TYPE balsubobj VALUE 'ZSP_SHAS_MONITOR_SUB' ##NO_TEXT.
    CONSTANTS gc_required TYPE char1 VALUE 'R' ##NO_TEXT.
*  constants GC_OPTIONAL type CHAR1 value 'O' ##NO_TEXT.
    DATA mt_messages TYPE bal_t_msg .
    CONSTANTS gc_filter_mm TYPE zsd_application VALUE 'MM' ##NO_TEXT.
    CONSTANTS gc_filter_sd TYPE zsd_application VALUE 'SD' ##NO_TEXT.
    DATA:
      mt_vas_codes_mm TYPE STANDARD TABLE OF zsp_i_vas_codes .
    DATA:
      mt_vas_codes_sd TYPE STANDARD TABLE OF zsp_i_vas_codes_sd .
    CLASS-DATA gt_dom_text TYPE dd07v_tab .

    METHODS get_dom_value
      IMPORTING
        !iv_value       TYPE zsp_vasreadiness
      RETURNING
        VALUE(rv_value) TYPE ddtext .

    METHODS find_log
      IMPORTING
        iv_ext_numb          TYPE balhdr-extnumber
      RETURNING
        VALUE(rv_log_handle) TYPE balloghndl.
    METHODS get_messages_for_log
      IMPORTING
        iv_log_handle TYPE balloghndl OPTIONAL
      EXPORTING
        eif_app_log   TYPE REF TO if_bali_log
        et_messages   TYPE bapirettab.
    METHODS refresh_mt_messages.

ENDCLASS.



CLASS ZCL_SP_VIRTUAL_CALC IMPLEMENTATION.


  METHOD if_sadl_exit_calc_element_read~calculate.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* USTINKON     | 11.05.2023 | 19967     : Feature - [Build] - BE - Fio *
*              |            | DS4K949517                               *
*----------------------------------------------------------------------*
    DATA: lt_calculated_data TYPE STANDARD TABLE OF zsp_i_shas_item WITH DEFAULT KEY.

    CHECK NOT it_original_data IS INITIAL.

    lt_calculated_data = CORRESPONDING #( it_original_data ).

    SELECT * FROM  zsp_i_vas_codes INTO TABLE @mt_vas_codes_mm
    FOR ALL ENTRIES IN @lt_calculated_data
    WHERE ebeln = @lt_calculated_data-purchaseorder AND
          ebelp = @lt_calculated_data-ebelp. "#EC CI_SUBRC "#EC CI_FAE_NO_LINES_OK

    LOOP AT lt_calculated_data ASSIGNING FIELD-SYMBOL(<ls_calculated_data>).
      <ls_calculated_data>-remainingdays = <ls_calculated_data>-cutoff - sy-datum.
      READ TABLE mt_vas_codes_mm ASSIGNING FIELD-SYMBOL(<ls_vas_codes>) "#EC CI_STDSEQ
          WITH KEY ebeln = <ls_calculated_data>-purchaseorder
                   ebelp = <ls_calculated_data>-ebelp.
      IF sy-subrc = 0 AND <ls_vas_codes>-manual IS NOT INITIAL.
        <ls_calculated_data>-vasconditionman = abap_true.
      ELSE.
        <ls_calculated_data>-vasconditionman = abap_false.
      ENDIF.

      IF <ls_calculated_data>-knttp IS NOT INITIAL AND <ls_calculated_data>-vbeln IS NOT INITIAL.
        check_vas_sd( CHANGING cs_calculated_data = <ls_calculated_data> ).
      ELSE.
        check_vas_mm( CHANGING cs_calculated_data = <ls_calculated_data> ).
      ENDIF.
      SORT mt_messages.                                "#EC CI_SORTLOOP
      DELETE ADJACENT DUPLICATES FROM mt_messages.
      " fill_log( it_messages = mt_messages iv_ebeln = <ls_calculated_data>-PurchaseOrder iv_ebelp = <ls_calculated_data>-ebelp ).
      <ls_calculated_data>-vasreadiness_v = get_vasreadiness( EXPORTING it_messages = mt_messages CHANGING cv_crit = <ls_calculated_data>-criticality ).
      <ls_calculated_data>-vasreadiness = get_dom_value( <ls_calculated_data>-vasreadiness_v ).

      DATA(lv_log_handle) = find_log( iv_ext_numb = CONV #( <ls_calculated_data>-purchaseorder && <ls_calculated_data>-ebelp ) ) .
      IF lv_log_handle IS INITIAL.
        <ls_calculated_data>-procstatus = 'Not Processed'.
        <ls_calculated_data>-procstatuscriticality = gc_item_criticality-greyed.
      ELSE.
        DATA lt_messages TYPE bapirettab.
        get_messages_for_log(
          EXPORTING
            iv_log_handle = lv_log_handle
          IMPORTING
            et_messages   = lt_messages
        ).
        IF line_exists( lt_messages[ type = 'I' number = '012' ] ).
          <ls_calculated_data>-procstatus = 'In process...'.
          <ls_calculated_data>-procstatuscriticality = gc_item_criticality-new_item.
        ELSEIF line_exists( lt_messages[ type = 'S' number = '013' ] ).
          <ls_calculated_data>-procstatus = 'Redetermine success'.
          <ls_calculated_data>-procstatuscriticality = gc_item_criticality-positive.
        ELSEIF line_exists( lt_messages[ type = 'E' number = '014' ] ).
          <ls_calculated_data>-procstatus = 'Redetermine error'.
          <ls_calculated_data>-procstatuscriticality = gc_item_criticality-negative.
        ELSEIF line_exists( lt_messages[ type = 'S' number = '015' ] ).
          <ls_calculated_data>-procstatus = 'Status Update success'.
          <ls_calculated_data>-procstatuscriticality = gc_item_criticality-positive.
        ELSEIF line_exists( lt_messages[ type = 'E' number = '016' ] ).
          <ls_calculated_data>-procstatus = 'Status Update error'.
          <ls_calculated_data>-procstatuscriticality = gc_item_criticality-negative.
        ELSE.
          <ls_calculated_data>-procstatus = 'Processing error'.
          <ls_calculated_data>-procstatuscriticality = gc_item_criticality-negative.
        ENDIF.

      ENDIF.


      CLEAR: mt_messages.
    ENDLOOP.
    ct_calculated_data = CORRESPONDING #( lt_calculated_data ).
  ENDMETHOD.


  METHOD if_sadl_exit_calc_element_read~get_calculation_info ##NEEDED.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* USTINKON     | 11.05.2023 | 19967     : Feature - [Build] - BE - Fio *
*              |            | DS4K949517                               *
*----------------------------------------------------------------------*

  ENDMETHOD.


  METHOD add_message_to_the_log.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* USTINKON     | 11.05.2023 | 19967     : Feature - [Build] - BE - Fio *
*              |            | DS4K949517                               *
*----------------------------------------------------------------------*
    CHECK is_message IS NOT INITIAL.

    mt_messages = VALUE #( BASE mt_messages ( is_message ) ).

  ENDMETHOD.


  METHOD create_log_message.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* USTINKON     | 11.05.2023 | 19967     : Feature - [Build] - BE - Fio *
*              |            | DS4K949517                               *
*----------------------------------------------------------------------*
    rs_message = VALUE #( msgty = sy-msgty
                      msgid = sy-msgid
                      msgno = sy-msgno
                      msgv1 = sy-msgv1
                      msgv2 = sy-msgv2
                      msgv3 = sy-msgv3
                      msgv4 = sy-msgv4 ).
  ENDMETHOD.


  METHOD fill_log.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* USTINKON     | 11.05.2023 | 19967     : Feature - [Build] - BE - Fio *
*              |            | DS4K949517                               *
*----------------------------------------------------------------------*
    TRY.

        DATA(lo_log) = NEW zcl_sd_create_ball_log( iv_extnumber = iv_ebeln && iv_ebelp "&& sy-datum
                                                   iv_object    = gc_log_object
                                                   iv_subobject = gc_log_subobject ).

        lo_log->add_item_log( it_messages ).

        lo_log->save_log( ).

      CATCH zcx_sd_ball_log.

        MESSAGE e027(zpd_i_cutoff).

    ENDTRY.

    rt_messages = it_messages.
  ENDMETHOD.


  METHOD find_log.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* USTINKON     | 11.05.2023 | 19967     : Feature - [Build] - BE - Fio *
*              |            | DS4K949517                               *
*----------------------------------------------------------------------*
    DATA: lv_ext_num TYPE balhdr-extnumber.

    lv_ext_num = iv_ext_numb.

    " Find the most recent log
    SELECT log_handle
    FROM balhdr
    WHERE object     = @gc_log_object
    AND subobject  = @gc_log_subobject
    AND extnumber  = @lv_ext_num
    AND msg_cnt_al > 0 " non empty logs only
    ORDER BY aldate DESCENDING, altime DESCENDING
     INTO TABLE @DATA(lt_logs)
    UP TO 1 ROWS.

    IF sy-subrc = 0.
      rv_log_handle = VALUE #( lt_logs[ 1 ]-log_handle OPTIONAL ).
    ENDIF.


  ENDMETHOD.


  METHOD get_messages_for_log.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* USTINKON     | 11.05.2023 | 19967     : Feature - [Build] - BE - Fio *
*              |            | DS4K949517                               *
*----------------------------------------------------------------------*

    IF eif_app_log IS INITIAL AND iv_log_handle IS NOT INITIAL.
      eif_app_log = cl_bali_log_db=>get_instance( )->load_log( handle = iv_log_handle ).
    ENDIF.

    IF eif_app_log IS INITIAL.
      " error
      RETURN.
    ELSE.

      DATA(lts_log_items) = eif_app_log->get_all_items( ).

      LOOP AT lts_log_items ASSIGNING FIELD-SYMBOL(<ls_log_item>).
        DATA(lo_log_message) = CAST cl_bali_message_getter( <ls_log_item>-item ).

        " Parse message
        APPEND INITIAL LINE TO et_messages ASSIGNING FIELD-SYMBOL(<ls_message>).
        IF sy-subrc = 0.
          <ls_message> = VALUE #( type       = lo_log_message->severity
                                  number     = lo_log_message->number
                                  log_msg_no = lo_log_message->log_item_number
                                  message    = lo_log_message->get_message_text( ) ).
        ENDIF.

      ENDLOOP.

      UNASSIGN:
        <ls_message>,
        <ls_log_item>.

    ENDIF.


  ENDMETHOD.


  METHOD get_vasreadiness.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* USTINKON     | 11.05.2023 | 19967     : Feature - [Build] - BE - Fio *
*              |            | DS4K949517                               *
*----------------------------------------------------------------------*
    rv_vasreadines = 'C'.
    cv_crit = gc_item_criticality-positive.
    IF line_exists( it_messages[ msgty = 'W' ] ).
      rv_vasreadines = 'O'.
      cv_crit = gc_item_criticality-critical.
    ENDIF.
    IF line_exists( it_messages[ msgty = 'E' ] ).
      rv_vasreadines = 'R'.
      cv_crit = gc_item_criticality-negative.
    ENDIF.

  ENDMETHOD.


  METHOD check_format.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* USTINKON     | 11.05.2023 | 19967     : Feature - [Build] - BE - Fio *
*              |            | DS4K949517                               *
*----------------------------------------------------------------------*
    DATA:
    lv_date TYPE sy-datum.
    rv_result = abap_true.
    TRY.

        IF iv_format = gts_formats[ value_position = '0001' ]-value_low OR iv_format = gts_formats[ value_position = '0002' ]-value_low.
          lv_date = COND #( WHEN iv_format = gts_formats[ value_position = '0002' ]-value_low THEN |{ iv_value+6(2)  }| &  |{ iv_value+4(2) }| &  |{ iv_value+4 }|
                                ELSE iv_value ).

          CALL FUNCTION 'DATE_CHECK_PLAUSIBILITY'
            EXPORTING
              date                      = lv_date
            EXCEPTIONS
              plausibility_check_failed = 1
              OTHERS                    = 2.

          IF sy-subrc <> 0.
            rv_result = abap_false.
          ENDIF.

          RETURN.
        ENDIF.

        IF iv_format = gts_formats[ value_position = '0003' ]-value_low AND iv_value CN '0123456789,'.
          rv_result = abap_false.
        ENDIF.

        IF iv_format = gts_formats[ value_position = '0004' ]-value_low AND iv_value CN '0123456789.'.
          rv_result = abap_false.
        ENDIF.

        IF iv_format = gts_formats[ value_position = '0005' ]-value_low AND iv_value CN '0123456789'.
          rv_result = abap_false.
        ENDIF.
      CATCH cx_sy_itab_line_not_found.
        RETURN.
    ENDTRY.










  ENDMETHOD.


  METHOD class_constructor.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* USTINKON     | 11.05.2023 | 19967     : Feature - [Build] - BE - Fio *
*              |            | DS4K949517                               *
*----------------------------------------------------------------------*
    TRY.
        zcl_pe_hm_complex=>get_table( EXPORTING iv_id           = '0239FC3B8D041EDDA8DE0767F5C01F59'
                                                is_filter       = gc_filter_mm
                                                iv_mapping_type = 'N'
                                      IMPORTING et_table        = gts_shas_config_mm ).
        DELETE ADJACENT DUPLICATES FROM gts_shas_config_mm COMPARING ekgrp ekorg kunnr zsd_serviden fsh_vas_sub_ser fsh_vas_ser.
      CATCH zcx_pe_hm.
        RETURN.
    ENDTRY.
    TRY.
        zcl_pe_hm_complex=>get_table( EXPORTING iv_id           = '0239FC3B8D041EDDA8DE0767F5C01F59'
                                                is_filter       = gc_filter_sd
                                                iv_mapping_type = 'N'
                                      IMPORTING et_table        = gts_shas_config_sd ).
        DELETE ADJACENT DUPLICATES FROM gts_shas_config_sd COMPARING vkorg kunnr zsd_serviden fsh_vas_sub_ser fsh_vas_ser.
      CATCH zcx_pe_hm.
        RETURN.
    ENDTRY.

    SELECT value_position, value_low                      "#EC CI_SUBRC
      FROM ddcds_customer_domain_value( p_domain_name = 'ZSD_FORMAT' )
       INTO CORRESPONDING FIELDS OF TABLE @gts_formats ##TOO_MANY_ITAB_FIELDS. "#EC CI_NOWHERE

    CALL FUNCTION 'DD_DOMVALUES_GET'
      EXPORTING
        domname        = gc_domename
        text           = 'T'
        langu          = sy-langu
      TABLES
        dd07v_tab      = gt_dom_text
      EXCEPTIONS
        wrong_textflag = 1
        OTHERS         = 2.
    IF sy-subrc <> 0.
      RETURN.
    ENDIF.
  ENDMETHOD.


  METHOD check_vas_mm.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* USTINKON     | 11.05.2023 | 19967     : Feature - [Build] - BE - Fio *
*              |            | DS4K949517                               *
*----------------------------------------------------------------------*
    CHECK cs_calculated_data-knttp IS INITIAL.



    LOOP AT gts_shas_config_mm ASSIGNING FIELD-SYMBOL(<ls_shas_config>) WHERE ekorg = cs_calculated_data-ekorg AND ekgrp = cs_calculated_data-ekgrp. "#EC CI_SORTSEQ
      CHECK <ls_shas_config>-kunnr(4) = cs_calculated_data-name(4).
      READ TABLE mt_vas_codes_mm ASSIGNING FIELD-SYMBOL(<ls_vas_codes>) "#EC CI_STDSEQ
    WITH KEY ebeln = cs_calculated_data-purchaseorder
             ebelp = cs_calculated_data-ebelp
             sevice = <ls_shas_config>-fsh_vas_sub_ser.
      IF sy-subrc = 0 AND <ls_vas_codes>-sevice IS NOT INITIAL.

        DATA(lv_field) = <ls_vas_codes>-addedservicetext1 && <ls_vas_codes>-addedservicetext2 && <ls_vas_codes>-addedservicetext3.
        IF lv_field IS NOT INITIAL.
          DATA(lv_strlen) = strlen( lv_field ).
          IF lv_strlen < <ls_shas_config>-zsd_fld_len_min.
            MESSAGE e003(zsp_shas_monitor) WITH <ls_shas_config>-fsh_vas_sub_ser <ls_shas_config>-zsd_fld_len_min lv_strlen cs_calculated_data-purchaseorder && cs_calculated_data-ebelp INTO DATA(lv_dummy) ##NEEDED.
            add_message_to_the_log( is_message = create_log_message( ) ).
          ENDIF.
          IF lv_strlen > <ls_shas_config>-zsd_fld_len_max.
            MESSAGE e004(zsp_shas_monitor) WITH <ls_shas_config>-fsh_vas_sub_ser <ls_shas_config>-zsd_fld_len_max lv_strlen cs_calculated_data-purchaseorder && cs_calculated_data-ebelp INTO lv_dummy ##NEEDED.
            add_message_to_the_log( is_message = create_log_message( ) ).
          ENDIF.
          IF check_format( iv_format = <ls_shas_config>-zsd_format iv_value = CONV #( lv_field ) ) = abap_false.
            MESSAGE e005(zsp_shas_monitor) WITH <ls_shas_config>-fsh_vas_sub_ser cs_calculated_data-purchaseorder && cs_calculated_data-ebelp  INTO lv_dummy ##NEEDED.
            add_message_to_the_log( is_message = create_log_message( ) ).
          ENDIF.
        ENDIF.
      ELSE.
        IF <ls_shas_config>-zsd_condition = gc_required.
          MESSAGE e001(zsp_shas_monitor) WITH <ls_shas_config>-fsh_vas_sub_ser INTO lv_dummy ##NEEDED.
          add_message_to_the_log( is_message = create_log_message( ) ).
        ENDIF.
        cs_calculated_data-erros_num = cs_calculated_data-erros_num + 1.
      ENDIF.
    ENDLOOP.
    IF sy-subrc <> 0.
      MESSAGE w006(zsp_shas_monitor) INTO lv_dummy.
      add_message_to_the_log( is_message = create_log_message( ) ).
    ENDIF.
  ENDMETHOD.


  METHOD check_vas_sd.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* USTINKON     | 11.05.2023 | 19967     : Feature - [Build] - BE - Fio *
*              |            | DS4K949517                               *
*----------------------------------------------------------------------*
    LOOP AT gts_shas_config_sd ASSIGNING FIELD-SYMBOL(<ls_shas_config>) WHERE vkorg = cs_calculated_data-vkorg AND kunnr = cs_calculated_data-kunnr. "#EC CI_SORTSEQ
      READ TABLE mt_vas_codes_sd ASSIGNING FIELD-SYMBOL(<ls_vas_codes>) "#EC CI_STDSEQ
   WITH KEY vbeln = cs_calculated_data-vbeln
            posnr = cs_calculated_data-vbelp
            sevice = <ls_shas_config>-fsh_vas_sub_ser.
      IF sy-subrc = 0 AND <ls_vas_codes>-sevice IS NOT INITIAL.
        DATA(lv_field) = <ls_vas_codes>-addedservicetext1 && <ls_vas_codes>-addedservicetext2 && <ls_vas_codes>-addedservicetext3.
        DATA(lv_strlen) = strlen( lv_field ).
        IF lv_strlen < <ls_shas_config>-zsd_fld_len_min.
          MESSAGE e003(zsp_shas_monitor) WITH <ls_shas_config>-fsh_vas_sub_ser <ls_shas_config>-zsd_fld_len_min lv_strlen cs_calculated_data-purchaseorder && cs_calculated_data-ebelp INTO DATA(lv_dummy) ##NEEDED.
          add_message_to_the_log( is_message = create_log_message( ) ).
        ENDIF.
        IF lv_strlen > <ls_shas_config>-zsd_fld_len_max.
          MESSAGE e004(zsp_shas_monitor) WITH <ls_shas_config>-fsh_vas_sub_ser <ls_shas_config>-zsd_fld_len_max lv_strlen cs_calculated_data-purchaseorder && cs_calculated_data-ebelp INTO lv_dummy ##NEEDED.
          add_message_to_the_log( is_message = create_log_message( ) ).
        ENDIF.
        IF check_format( iv_format = <ls_shas_config>-zsd_format iv_value = CONV #( lv_field ) ) = abap_false.
          MESSAGE e005(zsp_shas_monitor) WITH <ls_shas_config>-fsh_vas_sub_ser cs_calculated_data-purchaseorder && cs_calculated_data-ebelp  INTO lv_dummy ##NEEDED.
          add_message_to_the_log( is_message = create_log_message( ) ).
        ENDIF.
      ELSE.
        IF <ls_shas_config>-zsd_condition = gc_required.
          MESSAGE e002(zsp_shas_monitor) WITH <ls_shas_config>-fsh_vas_sub_ser INTO lv_dummy ##NEEDED.
          add_message_to_the_log( is_message = create_log_message( ) ).
        ENDIF.
        cs_calculated_data-erros_num = cs_calculated_data-erros_num + 1.
      ENDIF.
    ENDLOOP.
    IF sy-subrc <> 0.
      MESSAGE w006(zsp_shas_monitor) INTO lv_dummy ##NEEDED.
      add_message_to_the_log( is_message = create_log_message( ) ).
    ENDIF.
  ENDMETHOD.


  METHOD bapi_change_cus_status.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* USTINKON     | 11.05.2023 | 19967     : Feature - [Build] - BE - Fio *
*              |            | DS4K949517                               *
*----------------------------------------------------------------------*
    DATA: lt_tab TYPE TABLE OF zsp_i_shas_item.
    DATA: lo_po TYPE REF TO cl_po_header_handle_mm.
    DATA: lo_item TYPE REF TO cl_po_item_handle_mm.
    DATA: ls_document TYPE mepo_document,
          lv_result   TYPE mmpur_bool.
    DATA: lt_items TYPE purchase_order_items,
          ls_items TYPE purchase_order_item.
    DATA: ls_item  TYPE mepoitem,
          ls_itemx TYPE mepoitemx.
    DATA: lt_models TYPE mmpur_models,
          ls_model  LIKE LINE OF lt_models.
    ls_document-process = mmpur_po_process.
    ls_document-initiator-initiator = mmpur_initiator_call.
    ls_document-trtyp = 'V'.

    lt_tab = CORRESPONDING #( it_tab ).

    SORT lt_tab BY purchaseorder ebelp.

    LOOP AT lt_tab ASSIGNING FIELD-SYMBOL(<ls_tab>).

      CLEAR: lt_models[].

      refresh_mt_messages( ).

      ls_document-doc_key(10) = <ls_tab>-purchaseorder.

      lo_po = NEW cl_po_header_handle_mm( <ls_tab>-purchaseorder ).
      IF sy-subrc <> 0.
        MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                   WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4 INTO DATA(lv_text) ##NEEDED.
        rv_err = abap_true.

        add_message_to_the_log( is_message = create_log_message( ) ).
        RETURN.
      ENDIF.

      IF lo_po IS NOT INITIAL.
        lo_po->set_state( im_state = cl_po_header_handle_mm=>c_available ).
        lo_po->for_bapi = mmpur_yes.
        lo_po->po_initialize( im_document = ls_document ).
        lo_po->po_read(
          EXPORTING
            im_tcode     = 'ME22N'
            im_trtyp     = ls_document-trtyp
            im_aktyp     = ls_document-trtyp
            im_po_number = <ls_tab>-purchaseorder
            im_document  = ls_document
          IMPORTING
            ex_result    = lv_result ).

        IF lv_result = abap_true.
          CLEAR: lt_items.
          lt_items = lo_po->if_purchase_order_mm~get_items( ).
          LOOP AT lt_items INTO ls_items ##INTO_OK.      "#EC CI_NESTED
            lo_item ?= ls_items-item.
            lo_item->get_data( IMPORTING ex_data = ls_item ).
            lo_item->get_datax( IMPORTING ex_data = ls_itemx ).
            IF ls_item-ebelp = <ls_tab>-ebelp.
              ls_item-zz1_custin_pdi = iv_custin.
              ls_itemx-zz1_custin_pdi = abap_true.
              lo_item->set_data( ls_item ).
              lo_item->set_datax( ls_itemx ).
            ENDIF.
            lo_item->my_parent ?= lo_po.
            ls_model-model ?= lo_item.
            APPEND ls_model TO lt_models.
          ENDLOOP.

          IF lt_models[] IS NOT INITIAL.
            lo_po->if_flush_transport_mm~start( EXPORTING im_models = lt_models[] EXCEPTIONS illegal_call = 1 error = 2 OTHERS = 3 ).
            IF sy-subrc <> 0.
              MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                         WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4 INTO lv_text.
              rv_err = abap_true.

              add_message_to_the_log( is_message = create_log_message( ) ).
              RETURN.
            ENDIF.
          ENDIF.

          lo_po->po_post( EXPORTING im_uncomplete = mmpur_no im_no_commit = mmpur_no im_commit_wait = mmpur_yes
                          EXCEPTIONS failure = 1 OTHERS = 2 ) ##SUBRC_OK.

          MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                     WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4 INTO lv_text.

          IF sy-msgty = 'E'.
            rv_err = abap_true.
          ENDIF.

          add_message_to_the_log( is_message = create_log_message( ) ).
          lo_po->po_close( ).

        ENDIF.

      ENDIF.
      IF line_exists( mt_messages[ msgty = 'E' ] ).
        MESSAGE e016(zsp_shas_monitor) INTO lv_text.
      ELSE.
        MESSAGE s015(zsp_shas_monitor) INTO lv_text.
      ENDIF.
      add_message_to_the_log( is_message = create_log_message( ) ).

      IF mt_messages[] IS NOT INITIAL.
        fill_log( it_messages = mt_messages iv_ebeln = <ls_tab>-purchaseorder iv_ebelp = <ls_tab>-ebelp ).
      ENDIF.

    ENDLOOP.
  ENDMETHOD.


  METHOD get_log_message.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* USTINKON     | 11.05.2023 | 19967     : Feature - [Build] - BE - Fio *
*              |            | DS4K949517                               *
*----------------------------------------------------------------------*
    rt_messages = mt_messages.
  ENDMETHOD.


  METHOD get_dom_value.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* USTINKON     | 25.05.2023 | 19967     : Feature - [Build] - BE - Fio *
*              |            | DS4K949517                               *
*----------------------------------------------------------------------*

    READ TABLE gt_dom_text ASSIGNING FIELD-SYMBOL(<ls_dom>) WITH KEY domvalue_l = iv_value.
    IF sy-subrc = 0.
      rv_value = <ls_dom>-ddtext.
    ENDIF.
  ENDMETHOD.


  METHOD refresh_mt_messages.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* USTINKON     | 25.05.2023 | 19967     : Feature - [Build] - BE - Fio *
*              |            | DS4K949517                               *
*----------------------------------------------------------------------*
    CLEAR: mt_messages[].
  ENDMETHOD.
ENDCLASS.