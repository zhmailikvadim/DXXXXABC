class ZCL_VAT_EXT_ENRICH_WRAPPER definition
  public
  inheriting from ZCL_VAT_EXT_ENRICHER_SUPER
  final
  create public .

public section.

  methods ENRICH
    redefinition .
protected section.
private section.
ENDCLASS.



CLASS ZCL_VAT_EXT_ENRICH_WRAPPER IMPLEMENTATION.


  METHOD enrich.

    IF ct_base_data IS NOT INITIAL.
      " Registration number
      "-------------------------------------------
      "One-Time Account Data Document Segment (BSEC)
      TYPES: BEGIN OF lty_bsec,
               bukrs TYPE bukrs,      "Company Code
               belnr TYPE belnr_d,    "Accounting Document Number
               gjahr TYPE gjahr,      "Fiscal Year
               buzei TYPE buzei,      "Number of Line Item Within Accounting Document
               stcd1 TYPE stcd1,      "Tax Number 1
               stcd2 TYPE stcd2,      "Tax Number 2
               stcd3 TYPE stcd3,      "Tax Number 3
               stcd4 TYPE stcd4,      "Tax Number 4
             END OF lty_bsec.

      DATA: lo_collector_regnum TYPE REF TO zcl_vat_ext_collector_regnum,
            lt_bsec             TYPE STANDARD TABLE OF lty_bsec.

      CREATE OBJECT lo_collector_regnum
        EXPORTING
          iv_data_category = 'REGNUM'
          iv_lstml         = iv_lstml.

      lo_collector_regnum->collect(
        EXPORTING
          it_general_data = ct_base_data
        IMPORTING
          et_data         = lt_bsec                 " Table containing all data
      ).

      IF lt_bsec IS NOT INITIAL.
        zcl_vat_ext_transformer=>add_regnum_to_general(
          EXPORTING
            it_regnum  = lt_bsec                 " Table type for One-Time Account Data Document Segment (BSEC)
          CHANGING
            ct_general = ct_base_data                 " Table type for general vat data
        ).
      ENDIF.

      FREE lt_bsec.

      " Vendor details
      "-------------------------------------------

      DATA: lo_collector_vendor TYPE REF TO zcl_vat_ext_collector_vendor,
            lt_lfa1             TYPE zsvat_vat_lfa1_t.

      CREATE OBJECT lo_collector_vendor
        EXPORTING
          iv_data_category = 'VENDOR'
          iv_lstml         = iv_lstml.

      lo_collector_vendor->collect(
        EXPORTING
          it_general_data = ct_base_data
        IMPORTING
          et_data         = lt_lfa1                 " Table containing all data
      ).

      IF lt_lfa1 IS NOT INITIAL.
        SORT ct_base_data BY lifnr.
        zcl_vat_ext_transformer=>add_vendor_to_general(
          EXPORTING
            it_vendor  = lt_lfa1
          CHANGING
            ct_general = ct_base_data                 " Table type for general vat data
        ).
      ENDIF.

      FREE lt_lfa1.


      " Customer details
      "-------------------------------------------

      DATA: lo_collector_customer TYPE REF TO zcl_vat_ext_collector_customer,
            lt_kna1               TYPE STANDARD TABLE OF zsvat_vat_kna1.

      CREATE OBJECT lo_collector_customer
        EXPORTING
          iv_data_category = 'CUSTOMER'
          iv_lstml         = iv_lstml.

      lo_collector_customer->collect(
        EXPORTING
          it_general_data = ct_base_data
        IMPORTING
          et_data         = lt_kna1                 " Table containing all data
      ).

      IF lt_kna1 IS NOT INITIAL.
        SORT ct_base_data BY kunnr.
        zcl_vat_ext_transformer=>add_customer_to_general(
          EXPORTING
            it_customer = lt_kna1
          CHANGING
            ct_general = ct_base_data
        ).
      ENDIF.

      FREE lt_kna1.

      " Reporting currency
      "-------------------------------------------
      "Countries (T005)
      TYPES: BEGIN OF gty_t005,
               land1 TYPE land1,      "Country Key
               kalsm TYPE kalsm_d,    "Procedure (Pricing, Output Control, Acct. Det., Costing,...)
               waers TYPE waers_005,  "Country Currency
             END OF gty_t005.

      DATA: lo_collector_repcurr TYPE REF TO zcl_vat_ext_collector_repcurr,
            lt_t005              TYPE STANDARD TABLE OF gty_t005.

      CREATE OBJECT lo_collector_repcurr
        EXPORTING
          iv_data_category = 'REPCURR'
          iv_lstml         = iv_lstml.

      lo_collector_repcurr->collect(
        EXPORTING
          it_general_data = ct_base_data
        IMPORTING
          et_data         = lt_t005                 " Table containing all data
      ).

      zcl_vat_ext_transformer=>add_repcurr_to_general(
        EXPORTING
          it_rep_curr = lt_t005
        CHANGING
          ct_general = ct_base_data
      ).

      FREE lt_t005.

      " Original document
      "-------------------------------------------

      DATA: lo_collector   TYPE REF TO zcl_vat_ext_collector_origdoc,
            lt_credit_memo TYPE STANDARD TABLE OF zsvat_vat_data.

      CREATE OBJECT lo_collector
        EXPORTING
          iv_data_category = 'ORIGDOC'
          iv_lstml         = iv_lstml.

      lo_collector->collect(
        EXPORTING
          it_general_data = ct_base_data
        IMPORTING
          et_data         = lt_credit_memo                 " Table containing all data
      ).

      SORT lt_credit_memo BY awkey.

      zcl_vat_ext_transformer=>add_origdoc_to_general(
        EXPORTING
          it_origdoc = lt_credit_memo
        CHANGING
          ct_general = ct_base_data
      ).

      FREE lt_credit_memo.

      " Nat currency
      "-------------------------------------------

      zcl_vat_ext_transformer=>add_natcurr_to_general(
        EXPORTING
          iv_nat_curr     = iv_nat_curr
          iv_plant_abroad = iv_plant_abroad
        CHANGING
          ct_general = ct_base_data
      ).

      " Output input tax
      "-------------------------------------------
      "Company Codes (T001)
      TYPES: BEGIN OF lty_t001,
               bukrs TYPE bukrs,    "Company Code
               land1 TYPE land1,    "Country Key
             END OF lty_t001.

      "Countries (T005)
      TYPES: BEGIN OF lty_t005,
               land1 TYPE land1,      "Country Key
               kalsm TYPE kalsm_d,    "Procedure (Pricing, Output Control, Acct. Det., Costing,...)
               waers TYPE waers_005,  "Country Currency
             END OF lty_t005.

      "Tax Keys (T007A)
      TYPES: BEGIN OF lty_t007a,
               kalsm TYPE kalsm_d,    "Procedure (Pricing, Output Control, Acct. Det., Costing,...)
               mwskz TYPE mwskz,      "Tax on sales/purchases code
               mwart TYPE mwart,      "Tax Type
               zmwsk TYPE dzmwsk,     "Target Tax Code (for Deferred Tax)
             END OF lty_t007a.

      "Tax Processing in Accounting (T007B)
      TYPES: BEGIN OF lty_t007b,
               ktosl TYPE ktosl_007b,    "Internal processing key
               stgrp TYPE stgrp_007b,    "Tax type
               stazf TYPE stazf_007b,    "Indicator: Tax not deductible
             END OF lty_t007b.

      DATA: lo_collector_country TYPE REF TO zcl_vat_ext_collector_country,
            lo_collector_prcdr   TYPE REF TO zcl_vat_ext_collector_prcdr,
            lo_collector_taxkey  TYPE REF TO zcl_vat_ext_collector_taxkey,
            lo_collector_taxprc  TYPE REF TO zcl_vat_ext_collector_taxprc,
            lt_t001              TYPE STANDARD TABLE OF lty_t001,
            lt_t005bis           TYPE STANDARD TABLE OF lty_t005,
            lt_t007a             TYPE STANDARD TABLE OF lty_t007a,
            lt_t007b             TYPE STANDARD TABLE OF lty_t007b.

      CREATE OBJECT lo_collector_country
        EXPORTING
          iv_data_category = 'COUNTRY'
          iv_lstml         = iv_lstml.

      lo_collector_country->collect(
        EXPORTING
          it_general_data = ct_base_data                 " Table containing general data
        IMPORTING
          et_data         = lt_t001                  " Table containing all data
      ).

      zcl_vat_ext_transformer=>add_country_to_general(
        EXPORTING
          it_country = lt_t001
        CHANGING
          ct_general = ct_base_data               " Table type for general vat data
      ).

      FREE lt_t001.

      SORT ct_base_data BY country.

      CREATE OBJECT lo_collector_prcdr
        EXPORTING
          iv_data_category = 'PRCDR'
          iv_lstml         = iv_lstml.

      lo_collector_prcdr->collect(
        EXPORTING
          it_general_data = ct_base_data                 " Table containing general data
        IMPORTING
          et_data         = lt_t005bis                 " Table containing all data
      ).

      zcl_vat_ext_transformer=>add_prcdr_to_general(
        EXPORTING
          it_procedure = lt_t005bis
        CHANGING
          ct_general = ct_base_data               " Table type for general vat data
      ).

      FREE lt_t005bis.

      SORT ct_base_data BY kalsm mwskz.

      CREATE OBJECT lo_collector_taxkey
        EXPORTING
          iv_data_category = 'TAXKEY'
          iv_lstml         = iv_lstml.

      lo_collector_taxkey->collect(
        EXPORTING
          it_general_data = ct_base_data
        IMPORTING
          et_data         = lt_t007a                 " Table containing all data
      ).

      zcl_vat_ext_transformer=>add_taxkey_to_general(
        EXPORTING
          it_taxkey  = lt_t007a
        CHANGING
          ct_general = ct_base_data               " Table type for general vat data
      ).

      FREE lt_t007a.

      SORT ct_base_data BY ktosl.

      CREATE OBJECT lo_collector_taxprc
        EXPORTING
          iv_data_category = 'TAXPRC'
          iv_lstml         = iv_lstml.

      lo_collector_taxprc->collect(
        EXPORTING
          it_general_data = ct_base_data                 " Table containing general data
        IMPORTING
          et_data         = lt_t007b                 " Table containing all data
      ).

      zcl_vat_ext_transformer=>add_taxprc_to_general(
        EXPORTING
          it_taxprc  = lt_t007b
        CHANGING
          ct_general = ct_base_data               " Table type for general vat data
      ).

      FREE lt_t007b.

      SORT ct_base_data BY bukrs belnr gjahr txgrp.

      zcl_vat_ext_transformer=>add_deduct_to_general(
        EXPORTING
          iv_rev_charge = iv_rev_charge
        CHANGING
          ct_general = ct_base_data               " Table type for general vat data
      ).

      " Debit credit indicator
      "-------------------------------------------

      zcl_vat_ext_transformer=>add_debcred_to_general(
        EXPORTING
          iv_rev_charge = iv_rev_charge
        CHANGING
          ct_general = ct_base_data                 " Table type for general vat data
      ).

      " Check output tax
      "-------------------------------------------

      zcl_vat_ext_transformer=>add_outtax_to_general(
        EXPORTING
          iv_output = iv_output_tax
        CHANGING
          ct_general = ct_base_data                 " Table type for general vat data
      ).

      " Check input tax
      "-------------------------------------------

      zcl_vat_ext_transformer=>add_intax_to_general(
        EXPORTING
          iv_input = iv_input_tax
        CHANGING
          ct_general = ct_base_data                 " Table type for general vat data
      ).

      " Check deferred tax
      "-------------------------------------------

      zcl_vat_ext_transformer=>add_deftax_to_general(
        EXPORTING
          iv_deferred = iv_deferred_tax
        CHANGING
          ct_general = ct_base_data                 " Table type for general vat data
      ).

      " Add correct vat numbers
      "-------------------------------------------

      zcl_vat_ext_transformer=>add_correct_vat_nr(
        CHANGING
          ct_general = ct_base_data                 " Table type for general vat data
      ).

      " Descriptions
      "-------------------------------------------

      DATA: lo_collector_descript TYPE REF TO zcl_vat_ext_collector_descript.

      DATA: lt_descript TYPE TABLE OF zsvat_vat_descriptions.

      CREATE OBJECT lo_collector_descript
        EXPORTING
          iv_data_category = 'DESCRIPT'                   "Data category to be collected
          iv_lstml         = iv_lstml.

      lo_collector_descript->collect(
        EXPORTING
          it_general_data = ct_base_data                 " Table containing general data
        IMPORTING
          et_data         = lt_descript                 " Table containing all data
      ).

      zcl_vat_ext_transformer=>add_descript_to_general(
        EXPORTING
          it_descript = lt_descript                 " Deloitte Extractor: VAT Descriptions
        CHANGING
          ct_general  = ct_base_data                  " Table type for general vat data
      ).

      " Ship-From/To
      "-------------------------------------------

      DATA: lo_collector_shipft TYPE REF TO zcl_vat_ext_collector_shipft.

      DATA: lt_shipft TYPE zsvat_vat_ship_from_to_t.

      CREATE OBJECT lo_collector_shipft
        EXPORTING
          iv_data_category = 'SHIPFT'               " Data category to be collected
          iv_lstml         = iv_lstml.

      lo_collector_shipft->collect(
        EXPORTING
          it_general_data = ct_base_data                 " Table containing general data
        IMPORTING
          et_data         = lt_shipft                 " Table containing all data
      ).

      zcl_vat_ext_transformer=>add_shipft_to_general(
        EXPORTING
          it_shipft  = lt_shipft                 " Deloitte Extractor: Ship From / To information
        CHANGING
          ct_general = ct_base_data                 " Table type for general vat data
      ).

      " Shipping Date
      "-------------------------------------------

      DATA: lo_collector_shipdate TYPE REF TO zcl_vat_ext_collector_shipdate.

      DATA: lt_shipdate TYPE zsvat_vat_shipping_date_t.

      CREATE OBJECT lo_collector_shipdate
        EXPORTING
          iv_data_category = 'SHIPDATE'                  " Data category to be collected
          iv_lstml         = iv_lstml.

      lo_collector_shipdate->collect(
        EXPORTING
          it_general_data = ct_base_data                 " Table containing general data
        IMPORTING
          et_data         = lt_shipdate                 " Table containing all data
      ).

      zcl_vat_ext_transformer=>add_shipdate_to_general(
        EXPORTING
          it_shipping_date = lt_shipdate                 " Deloitte Extractor: Ship From / To information
        CHANGING
          ct_general       = ct_base_data                 " Table type for general vat data
      ).

      " Service Type Code / Tariff HS Code / Commodity Code
      "----------------------------------------------------
      " ASANDU @ 14.10.2020
      "----------------------------------------------------


      DATA: lo_collector_matcodes TYPE REF TO zcl_vat_ext_collector_matcodes.

      DATA: lt_matcodes TYPE zsvat_vat_matcodes_t.

      CREATE OBJECT lo_collector_matcodes
        EXPORTING
          iv_data_category = 'MATCODES'                  " Data category to be collected
          iv_lstml         = iv_lstml.

      lo_collector_matcodes->collect(
        EXPORTING
          it_general_data = ct_base_data                 " Table containing general data
        IMPORTING
          et_data         = lt_matcodes                 " Table containing all data
      ).

      zcl_vat_ext_transformer=>add_matcodes_to_general(
        EXPORTING
          it_matcodes = lt_matcodes                 " Deloitte Extractor: Service Type Code / Tariff HS Code / Commodity Code information
        CHANGING
          ct_general       = ct_base_data                 " Table type for general vat data
      ).

      " Asset name
      "----------------------------------------------------
      " ASANDU @ 15.10.2020
      "----------------------------------------------------


      DATA: lo_collector_asset TYPE REF TO zcl_vat_ext_collector_asset.

      DATA: lt_asset TYPE zsvat_vat_anla_t.

      CREATE OBJECT lo_collector_asset
        EXPORTING
          iv_data_category = 'ASSET'                  " Data category to be collected
          iv_lstml         = iv_lstml.

      lo_collector_asset->collect(
        EXPORTING
          it_general_data = ct_base_data                 " Table containing general data
        IMPORTING
          et_data         = lt_asset                 " Table containing all data
      ).

      zcl_vat_ext_transformer=>add_asset_to_general(
        EXPORTING
          it_asset = lt_asset                 " Asset data (name)
        CHANGING
          ct_general       = ct_base_data                 " Table type for general vat data
      ).


      "FINNANCE FOR ASIA - Export Declaration Number
      "----------------------------------------------------
      " ASANDU @ 22.10.2020
      "----------------------------------------------------

      DATA: lo_collector_finn TYPE REF TO zcl_vat_ext_collector_finn.

      DATA: lt_finn TYPE zsvat_vat_finn_t.

      CREATE OBJECT lo_collector_finn
        EXPORTING
          iv_data_category = 'FINN'                  " Data category to be collected
          iv_lstml         = iv_lstml.

      lo_collector_finn->collect(
        EXPORTING
          it_general_data = ct_base_data                 " Table containing general data
        IMPORTING
          et_data         = lt_finn                 " Table containing all data
      ).
      IF lt_finn IS NOT INITIAL.
        zcl_vat_ext_transformer=>add_finn_to_general(
          EXPORTING
            it_finn = lt_finn                 " Asset data (name)
          CHANGING
            ct_general       = ct_base_data                 " Table type for general vat data
        ).
      ENDIF.


      " GUI Document type
      "----------------------------------------------------
      " ASANDU @ 27.10.2020
      "----------------------------------------------------

      DATA: lo_collector_guidoc TYPE REF TO zcl_vat_ext_collector_guidoc.

      DATA: lt_guidoc TYPE zsvat_vat_guidoc_t.

      CREATE OBJECT lo_collector_guidoc
        EXPORTING
          iv_data_category = 'GUIDOC'                  " Data category to be collected
          iv_lstml         = iv_lstml.

      lo_collector_guidoc->collect(
        EXPORTING
          it_general_data = ct_base_data                 " Table containing general data
        IMPORTING
          et_data         = lt_guidoc                 " Table containing all data
      ).

      IF lt_guidoc IS NOT INITIAL.
        zcl_vat_ext_transformer=>add_guidoc_to_general(
          EXPORTING
            it_guidoc = lt_guidoc                 " Asset data (name)
          CHANGING
            ct_general       = ct_base_data                 " Table type for general vat data
        ).
      ENDIF.
    ENDIF.
  ENDMETHOD.
ENDCLASS.