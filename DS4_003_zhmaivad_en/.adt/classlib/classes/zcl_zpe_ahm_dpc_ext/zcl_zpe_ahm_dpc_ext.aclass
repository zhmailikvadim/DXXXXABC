CLASS zcl_zpe_ahm_dpc_ext DEFINITION
  PUBLIC
  INHERITING FROM zcl_zpe_ahm_dpc
  CREATE PUBLIC .

  PUBLIC SECTION.
    METHODS /iwbep/if_mgw_appl_srv_runtime~execute_action REDEFINITION .

  PROTECTED SECTION.

    METHODS convert_id CHANGING cv_id TYPE zpe_hm_id_generic.

    METHODS get_filter_structure IMPORTING iv_filter       TYPE string
                                 RETURNING VALUE(ro_value) TYPE REF TO data
                                 RAISING   /iwbep/cx_mgw_busi_exception.

    METHODS get_hardcode_id IMPORTING io_helper        TYPE REF TO zcl_pe_service_helper
                            RETURNING VALUE(rv_result) TYPE zpe_hm_id_generic
                            RAISING   /iwbep/cx_mgw_busi_exception
                                      /iwbep/cx_mgw_tech_exception.

    METHODS get_value IMPORTING io_helper        TYPE REF TO zcl_pe_service_helper
                                iv_id            TYPE zpe_hm_id_generic
                                iv_type          TYPE zpe_hm_type
                      RETURNING VALUE(ro_result) TYPE REF TO data
                      RAISING   /iwbep/cx_mgw_busi_exception
                                /iwbep/cx_mgw_tech_exception.

    METHODS get_range IMPORTING io_helper        TYPE REF TO zcl_pe_service_helper
                                iv_id            TYPE zpe_hm_id_generic
                                iv_type          TYPE zpe_hm_type
                      RETURNING VALUE(ro_result) TYPE REF TO data
                      RAISING   /iwbep/cx_mgw_busi_exception
                                /iwbep/cx_mgw_tech_exception.

    METHODS get_table IMPORTING io_helper        TYPE REF TO zcl_pe_service_helper
                                iv_id            TYPE zpe_hm_id_generic
                                iv_type          TYPE zpe_hm_type
                      RETURNING VALUE(ro_result) TYPE REF TO data
                      RAISING   /iwbep/cx_mgw_busi_exception
                                /iwbep/cx_mgw_tech_exception.

    METHODS hardcodes_get_entity REDEFINITION .
    METHODS hardcodes_get_entityset REDEFINITION .

    METHODS is_active IMPORTING io_helper        TYPE REF TO zcl_pe_service_helper
                                iv_id            TYPE zpe_hm_id_generic
                                iv_type          TYPE zpe_hm_type
                      RETURNING VALUE(ro_result) TYPE REF TO data
                      RAISING   /iwbep/cx_mgw_busi_exception
                                /iwbep/cx_mgw_tech_exception.

    METHODS update_where_used IMPORTING iv_id       TYPE zpe_hm_id_generic
                                        iv_type     TYPE zpe_hm_type
                                        iif_request TYPE REF TO /iwbep/if_mgw_req_func_import
                              RAISING   /iwbep/cx_mgw_tech_exception.


  PRIVATE SECTION.

ENDCLASS.



CLASS ZCL_ZPE_AHM_DPC_EXT IMPLEMENTATION.


  METHOD hardcodes_get_entity.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 20.04.2023 | 20248      : aHM ODATA Service           *
*              |            | DS4K949969                               *
*----------------------------------------------------------------------*

*-- Initialize helper
    DATA(lo_helper) = NEW zcl_pe_service_helper( it_key_tab         = it_key_tab
                                                 it_navigation_path = it_navigation_path ).


*-- Read input parameters
    DATA(lv_id) = get_hardcode_id( lo_helper ).


*-- Get data
    SELECT SINGLE id, type, description
        FROM zpe_i_hm_all INTO CORRESPONDING FIELDS OF @er_entity
        WHERE id = @lv_id.

    IF sy-subrc NE 0.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
        EXPORTING
          textid           = /iwbep/cx_mgw_busi_exception=>resource_not_found
          http_status_code = /iwbep/cx_mgw_busi_exception=>gcs_http_status_codes-not_found.
    ENDIF.

  ENDMETHOD.


  METHOD hardcodes_get_entityset.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 20.04.2023 | 20248      : aHM ODATA Service           *
*              |            | DS4K949969                               *
*----------------------------------------------------------------------*

    DATA: lt_id          TYPE RANGE OF zpe_i_hm_all-id,
          lt_description TYPE RANGE OF zpe_i_hm_all-description,
          lt_type        TYPE RANGE OF zpe_i_hm_all-type.


*-- Initialize helper
    DATA(lo_helper) = NEW zcl_pe_service_helper( it_key_tab                 = it_key_tab
                                                 it_navigation_path         = it_navigation_path
                                                 it_filter_select_options   = it_filter_select_options
                                                 it_header_parameters       = io_tech_request_context->get_request_headers(  ) ).


*-- Read input parameters
    lo_helper->get_input_parameter( EXPORTING iv_name       = 'Id'
                                              iv_conversion = abap_false
                                    IMPORTING et_range      = lt_id ).
    LOOP AT lt_id ASSIGNING FIELD-SYMBOL(<ls_id>).
      convert_id( CHANGING cv_id = <ls_id>-low ).
      convert_id( CHANGING cv_id = <ls_id>-high ).
    ENDLOOP.

    lo_helper->get_input_parameter( EXPORTING iv_name       = 'Description'
                                              iv_conversion = abap_false
                                    IMPORTING et_range      = lt_description ).
    lo_helper->get_input_parameter( EXPORTING iv_name       = 'Type'
                                              iv_conversion = abap_false
                                    IMPORTING et_range      = lt_type ).


*-- Get data
    SELECT id, type, description
        FROM zpe_i_hm_all INTO CORRESPONDING FIELDS OF TABLE @et_entityset
        WHERE id          IN @lt_id         AND
              type        IN @lt_type       AND
              description IN @lt_description
        ORDER BY PRIMARY KEY.
    IF sy-subrc <> 0.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
        EXPORTING
          textid           = /iwbep/cx_mgw_busi_exception=>resource_not_found
          http_status_code = /iwbep/cx_mgw_busi_exception=>gcs_http_status_codes-not_found.
    ENDIF.


*-- $inlinecount
    IF io_tech_request_context->has_inlinecount( ) EQ abap_true.
      es_response_context-inlinecount = lines( et_entityset ).
    ENDIF.

*-- $orderby
    /iwbep/cl_mgw_data_util=>orderby( EXPORTING it_order = it_order
                                       CHANGING ct_data  = et_entityset ).

*-- $top & $skip
    lo_helper->paging( EXPORTING is_paging = is_paging
                        CHANGING ct_data   = et_entityset ).


  ENDMETHOD.


  METHOD /iwbep/if_mgw_appl_srv_runtime~execute_action.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 20.04.2023 | 20248      : aHM ODATA Service           *
*              |            | DS4K949969                               *
*----------------------------------------------------------------------*


*-- Initialize helper
    DATA(lo_helper) = NEW zcl_pe_service_helper( it_key_tab = it_parameter ).


*-- Get Hardcode ID
    DATA(lv_id) = get_hardcode_id( lo_helper ).


*-- Get Hardcode Type
    DATA(lv_type) = zcl_pe_hm=>get_type( lv_id ).


*-- Actions
    CASE iv_action_name.
      WHEN 'getValue'.
        er_data = get_value( io_helper = lo_helper
                             iv_id     = lv_id
                             iv_type   = lv_type ).
      WHEN 'getRange'.
        er_data = get_range( io_helper = lo_helper
                             iv_id     = lv_id
                             iv_type   = lv_type ).
      WHEN 'getTable'.
        er_data = get_table( io_helper = lo_helper
                             iv_id     = lv_id
                             iv_type   = lv_type ).
      WHEN 'isActive'.
        er_data = is_active( io_helper = lo_helper
                             iv_id     = lv_id
                             iv_type   = lv_type ).
    ENDCASE.


*-- Update Hardcode Manager Where Used
    update_where_used( iv_id      = lv_id
                       iv_type    = lv_type
                       iif_request = io_tech_request_context ).


  ENDMETHOD.


  METHOD get_value.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 20.04.2023 | 20248      : aHM ODATA Service           *
*              |            | DS4K949969                               *
*----------------------------------------------------------------------*
* CANOCAR      | 13.09.2023 | 24554: Encrypted hardcode                *
*              |            | DS4K961739                               *
************************************************************************

    DATA: lv_sequence TYPE zpe_hm_sequence,
          lv_value    TYPE zpe_hm_field,
          lv_text     TYPE string.


*-- Get optional input parameters
    io_helper->get_input_parameter( EXPORTING iv_name       = 'Sequence'
                                              iv_conversion = abap_false
                                    IMPORTING ev_value      = lv_sequence ).

*-- Different handlers per type
    TRY.

        CASE iv_type.

*         Basic
          WHEN zcl_pe_hm_basic=>gc_type.
            lv_value = zcl_pe_hm_basic=>get_value( iv_id       = CONV #( iv_id )
                                                   iv_sequence = lv_sequence ).
*         Complex
          WHEN zcl_pe_hm_complex=>gc_type.
            zcl_pe_hm_complex=>get_value( EXPORTING iv_id     = iv_id
                                          IMPORTING ev_value  = lv_value ).

*         Encrypted
          WHEN zcl_pe_hm_encrypted=>gc_type.
            lv_value = zcl_pe_hm_encrypted=>get_value( CONV #( iv_id ) ).


*         Not supported
          WHEN OTHERS.
            MESSAGE e002(zpe_hm) WITH iv_type INTO lv_text.
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
              EXPORTING
                textid            = /iwbep/cx_mgw_busi_exception=>failure
                message_unlimited = lv_text.
        ENDCASE.

        DATA(ls_value) = VALUE zpe_s_hm_odata_value( value = lv_value ).
        copy_data_to_ref( EXPORTING is_data = ls_value
                           CHANGING cr_data = ro_result ).


*--   Something went wrong
      CATCH zcx_pe_hm INTO DATA(lo_exc_hm).
        RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
          EXPORTING
            textid            = /iwbep/cx_mgw_busi_exception=>failure
            message_unlimited = lo_exc_hm->get_longtext( ).
    ENDTRY.


  ENDMETHOD.


  METHOD get_range.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 20.04.2023 | 20248      : aHM ODATA Service           *
*              |            | DS4K949969                               *
*----------------------------------------------------------------------*

    DATA: lv_sequence TYPE zpe_hm_sequence,
          lt_range    TYPE zpe_tt_hm_range,
          lv_text     TYPE string.


*-- Get optional input parameters
    io_helper->get_input_parameter( EXPORTING iv_name       = 'Sequence'
                                              iv_conversion = abap_false
                                    IMPORTING ev_value      = lv_sequence ).


*-- Different handlers per type
    TRY.

        CASE iv_type.

*         Basic
          WHEN zcl_pe_hm_basic=>gc_type.
            lt_range = zcl_pe_hm_basic=>get_range( iv_id       = CONV #( iv_id )
                                                   iv_sequence = lv_sequence ).
*         Not supported
          WHEN OTHERS.
            MESSAGE e002(zpe_hm) WITH iv_type INTO lv_text.
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
              EXPORTING
                textid            = /iwbep/cx_mgw_busi_exception=>failure
                message_unlimited = lv_text.
        ENDCASE.

        copy_data_to_ref( EXPORTING is_data = lt_range
                           CHANGING cr_data = ro_result ).


*--   Something went wrong
      CATCH zcx_pe_hm INTO DATA(lo_exc_hm).
        RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
          EXPORTING
            textid            = /iwbep/cx_mgw_busi_exception=>failure
            message_unlimited = lo_exc_hm->get_longtext( ).
    ENDTRY.

  ENDMETHOD.


  METHOD get_table.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 20.04.2023 | 20248      : aHM ODATA Service           *
*              |            | DS4K949969                               *
*----------------------------------------------------------------------*

    DATA: lv_date   TYPE date,
          lv_ts     TYPE timestamp,
          lv_filter TYPE string,
          lt_table  TYPE zpe_tt_hm_table,
          lv_text   TYPE string.


*-- Get optional input parameters
    io_helper->get_input_parameter( EXPORTING iv_name       = 'CalculationDate'
                                              iv_conversion = abap_false
                                    IMPORTING ev_value      = lv_date ).
    IF lv_date IS NOT INITIAL.
      CONVERT DATE lv_date INTO TIME STAMP lv_ts TIME ZONE sy-zonlo.
    ENDIF.

    io_helper->get_input_parameter( EXPORTING iv_name       = 'Filter'
                                              iv_conversion = abap_false
                                    IMPORTING ev_value      = lv_filter ).


*-- Different handlers per type
    TRY.

        CASE iv_type.

*         Basic
          WHEN zcl_pe_hm_basic=>gc_type.
            lt_table = zcl_pe_hm_basic=>get_table( CONV #( iv_id ) ).

*         Complex
          WHEN zcl_pe_hm_complex=>gc_type.

            DATA(lo_filter) = get_filter_structure( iv_filter = lv_filter ).

            zcl_pe_hm_complex=>get_table( EXPORTING iv_id           = iv_id
                                                    is_filter       = lo_filter->*
                                                    iv_timestamp    = lv_ts
                                                    iv_mapping_type = zcl_pe_hm=>gc_s_mapping_type-position
                                          IMPORTING et_table        = lt_table ).

*         Not supported
          WHEN OTHERS.
            MESSAGE e002(zpe_hm) WITH iv_type INTO lv_text.
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
              EXPORTING
                textid            = /iwbep/cx_mgw_busi_exception=>failure
                message_unlimited = lv_text.
        ENDCASE.

        copy_data_to_ref( EXPORTING is_data = lt_table
                           CHANGING cr_data = ro_result ).


*--   Something went wrong
      CATCH zcx_pe_hm INTO DATA(lo_exc_hm).
        RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
          EXPORTING
            textid            = /iwbep/cx_mgw_busi_exception=>failure
            message_unlimited = lo_exc_hm->get_longtext( ).
    ENDTRY.

  ENDMETHOD.


  METHOD is_active.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 20.04.2023 | 20248      : aHM ODATA Service           *
*              |            | DS4K949969                               *
*----------------------------------------------------------------------*

    DATA: lv_date   TYPE date,
          lv_ts     TYPE timestamp,
          lv_filter TYPE string,
          lv_active TYPE zpe_hm_active,
          lo_filter TYPE REF TO data,
          lv_text   TYPE string.


*-- Get optional input parameters
    io_helper->get_input_parameter( EXPORTING iv_name       = 'CalculationDate'
                                              iv_conversion = abap_false
                                    IMPORTING ev_value      = lv_date ).
    IF lv_date IS NOT INITIAL.
      CONVERT DATE lv_date INTO TIME STAMP lv_ts TIME ZONE sy-zonlo.
    ENDIF.

    io_helper->get_input_parameter( EXPORTING iv_name       = 'Filter'
                                              iv_conversion = abap_false
                                    IMPORTING ev_value      = lv_filter ).


*-- Different handlers per type
    TRY.

        CASE iv_type.

*         Switch
          WHEN zcl_pe_hm_switch=>gc_type.
            lo_filter = get_filter_structure( iv_filter = lv_filter ).
            lv_active = zcl_pe_hm_switch=>is_active( iv_id     = CONV #( iv_id )
                                                     is_filter = lo_filter->* ).
*         Complex
          WHEN zcl_pe_hm_complex=>gc_type.

            lo_filter = get_filter_structure( iv_filter = lv_filter ).
            lv_active = zcl_pe_hm_complex=>is_active( iv_id         = iv_id
                                                      is_filter     = lo_filter->*
                                                      iv_timestamp  = lv_ts ).
*         Not supported
          WHEN OTHERS.
            MESSAGE e002(zpe_hm) WITH iv_type INTO lv_text.
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
              EXPORTING
                textid            = /iwbep/cx_mgw_busi_exception=>failure
                message_unlimited = lv_text.
        ENDCASE.

        DATA(ls_active) = VALUE zpe_s_hm_odata_boolean( active = lv_active ).
        copy_data_to_ref( EXPORTING is_data = ls_active
                           CHANGING cr_data = ro_result ).


*--   Something went wrong
      CATCH zcx_pe_hm INTO DATA(lo_exc_hm).
        RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
          EXPORTING
            textid            = /iwbep/cx_mgw_busi_exception=>failure
            message_unlimited = lo_exc_hm->get_longtext( ).
    ENDTRY.

  ENDMETHOD.


  METHOD get_filter_structure.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 20.04.2023 | 20248      : aHM ODATA Service           *
*              |            | DS4K949969                               *
*----------------------------------------------------------------------*

    DATA: lt_components     TYPE cl_abap_structdescr=>component_table,
          lo_structure_type TYPE REF TO cl_abap_structdescr,
          lv_text           TYPE string.

    FIELD-SYMBOLS: <ls_filter> TYPE any,
                   <lv_field>  TYPE any,
                   <lv_value>  TYPE any.


    CHECK iv_filter IS NOT INITIAL.


*-- Deserialize JSON
    DATA(lo_abap) = /ui2/cl_json=>generate( json = iv_filter ).
    ASSIGN lo_abap->* TO FIELD-SYMBOL(<lt_abap>).
    /ui2/cl_json=>deserialize( EXPORTING json = iv_filter
                                         pretty_name = /ui2/cl_json=>pretty_mode-camel_case
                                CHANGING data = <lt_abap> ).


*-- Get components/fields for filter structure
    LOOP AT <lt_abap> ASSIGNING <ls_filter>.
      ASSIGN COMPONENT 'FIELD' OF STRUCTURE <ls_filter>->* TO <lv_field>.
      IF sy-subrc NE 0.
        MESSAGE e027(zpe_hm) INTO lv_text.
        RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
          EXPORTING
            textid            = /iwbep/cx_mgw_busi_exception=>failure
            message_unlimited = lv_text.
      ENDIF.
      INSERT VALUE abap_componentdescr( name = <lv_field>->*
                                        type = CAST cl_abap_datadescr( cl_abap_typedescr=>describe_by_name( p_name = <lv_field>->* ) ) ) INTO TABLE lt_components.
    ENDLOOP.


*-- Create the structure
    TRY.
        lo_structure_type = cl_abap_structdescr=>get( p_components = lt_components ).
        CREATE DATA ro_value TYPE HANDLE lo_structure_type.
      CATCH cx_sy_struct_creation.
        MESSAGE e027(zpe_hm) INTO lv_text.
        RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
          EXPORTING
            textid            = /iwbep/cx_mgw_busi_exception=>failure
            message_unlimited = lv_text.
    ENDTRY.


*-- Move data
    LOOP AT <lt_abap> ASSIGNING <ls_filter>.
      ASSIGN COMPONENT 'FIELD' OF STRUCTURE <ls_filter>->* TO <lv_field>.
      IF sy-subrc NE 0.
        MESSAGE e027(zpe_hm) INTO lv_text.
        RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
          EXPORTING
            textid            = /iwbep/cx_mgw_busi_exception=>failure
            message_unlimited = lv_text.
      ENDIF.

      ASSIGN COMPONENT 'VALUE' OF STRUCTURE <ls_filter>->* TO <lv_value>.
      IF sy-subrc NE 0.
        MESSAGE e027(zpe_hm) INTO lv_text.
        RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
          EXPORTING
            textid            = /iwbep/cx_mgw_busi_exception=>failure
            message_unlimited = lv_text.
      ENDIF.

      ASSIGN COMPONENT <lv_field>->* OF STRUCTURE ro_value->* TO FIELD-SYMBOL(<lv_target>).
      IF sy-subrc = 0.
        <lv_target> = <lv_value>->*.
      ENDIF.

    ENDLOOP.


  ENDMETHOD.


  METHOD get_hardcode_id.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 20.04.2023 | 20248      : aHM ODATA Service           *
*              |            | DS4K949969                               *
*----------------------------------------------------------------------*
    io_helper->get_input_parameter( EXPORTING iv_name       = 'Id'
                                              iv_conversion = abap_false
                                              iv_mandatory = abap_true
                                    IMPORTING ev_value      = rv_result ).

    convert_id( CHANGING cv_id = rv_result ).

  ENDMETHOD.


  METHOD update_where_used.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 20.04.2023 | 20248      : aHM ODATA Service           *
*              |            | DS4K949969                               *
*----------------------------------------------------------------------*

*-- x-source contains Product/Application calling the service
    DATA(lt_client_headers) = iif_request->get_request_headers( ).
    READ TABLE lt_client_headers WITH KEY name = 'x-source' INTO DATA(ls_source).
    IF sy-subrc <> 0.
      MESSAGE e028(zpe_hm) WITH 'x-source' INTO DATA(lv_text).
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception EXPORTING msg_code = lv_text.
    ENDIF.


*-- Update Where-used for ZHM
    DATA(ls_wu) = VALUE zpe_t_hm_wu( id         = iv_id
                                     object     = ls_source-value
                                     type       = iv_type
                                     wu_type    = zcl_pe_hm=>gc_s_wu_type-rest
                                     changed_on = sy-datum
                                     changed_at = sy-uzeit
                                     changed_by = sy-uname ).
    MODIFY zpe_t_hm_wu FROM @ls_wu.
    IF sy-subrc = 0.
      COMMIT WORK.
    ENDIF.

  ENDMETHOD.


  METHOD convert_id.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 20.04.2023 | 20248      : aHM ODATA Service           *
*              |            | DS4K949969                               *
*----------------------------------------------------------------------*

    IF cv_id CO ' 1234567890'.
      cv_id = |{ cv_id ALPHA = IN }|.
      cv_id = cv_id+22(10).
    ENDIF.

  ENDMETHOD.
ENDCLASS.