class ZCL_ZPE_AHM_MPC definition
  public
  inheriting from /IWBEP/CL_MGW_PUSH_ABS_MODEL
  create public .

public section.

  types:
      RANGES type ZPE_S_HM_RANGE .
  types:
   begin of ts_text_element,
      artifact_name  type c length 40,       " technical name
      artifact_type  type c length 4,
      parent_artifact_name type c length 40, " technical name
      parent_artifact_type type c length 4,
      text_symbol    type textpoolky,
   end of ts_text_element .
  types:
         tt_text_elements type standard table of ts_text_element with key text_symbol .
  types:
      TABLES type ZPE_S_HM_TABLE .
  types:
      VALUES type ZPE_S_HM_ODATA_VALUE .
  types:
      ACTIVE_TYPE type ZPE_S_HM_ODATA_BOOLEAN .
  types:
    begin of TS_GETRANGE,
        ZPE_HM_SEQUENCE type C length 3,
        ZPE_HM_ID_GENERIC type C length 32,
    end of TS_GETRANGE .
  types:
    begin of TS_GETTABLE,
        CALCULATIONDATE type TIMESTAMP,
        FILTER type string,
        ZPE_HM_ID_GENERIC type C length 32,
    end of TS_GETTABLE .
  types:
    begin of TS_GETVALUE,
        ZPE_HM_SEQUENCE type ZPE_HM_SEQUENCE,
        ZPE_HM_ID_GENERIC type C length 32,
    end of TS_GETVALUE .
  types:
    begin of TS_ISACTIVE,
        ZPE_HM_ID_GENERIC type C length 32,
        FILTER type string,
        CALCULATIONDATE type TIMESTAMP,
    end of TS_ISACTIVE .
  types:
     TS_HARDCODE type ZPE_S_HM_ODATA_HARDCODE .
  types:
TT_HARDCODE type standard table of TS_HARDCODE .

  constants GC_ACTIVE_TYPE type /IWBEP/IF_MGW_MED_ODATA_TYPES=>TY_E_MED_ENTITY_NAME value 'Active_type' ##NO_TEXT.
  constants GC_HARDCODE type /IWBEP/IF_MGW_MED_ODATA_TYPES=>TY_E_MED_ENTITY_NAME value 'hardcode' ##NO_TEXT.
  constants GC_RANGES type /IWBEP/IF_MGW_MED_ODATA_TYPES=>TY_E_MED_ENTITY_NAME value 'Ranges' ##NO_TEXT.
  constants GC_TABLES type /IWBEP/IF_MGW_MED_ODATA_TYPES=>TY_E_MED_ENTITY_NAME value 'Tables' ##NO_TEXT.
  constants GC_VALUES type /IWBEP/IF_MGW_MED_ODATA_TYPES=>TY_E_MED_ENTITY_NAME value 'Values' ##NO_TEXT.

  methods LOAD_TEXT_ELEMENTS
  final
    returning
      value(RT_TEXT_ELEMENTS) type TT_TEXT_ELEMENTS
    raising
      /IWBEP/CX_MGW_MED_EXCEPTION .

  methods DEFINE
    redefinition .
  methods GET_LAST_MODIFIED
    redefinition .
protected section.
private section.

  constants GC_INCL_NAME type STRING value 'ZCL_ZPE_AHM_MPC===============CP' ##NO_TEXT.

  methods DEFINE_COMPLEXTYPES
    raising
      /IWBEP/CX_MGW_MED_EXCEPTION .
  methods DEFINE_HARDCODE
    raising
      /IWBEP/CX_MGW_MED_EXCEPTION .
  methods DEFINE_ACTIONS
    raising
      /IWBEP/CX_MGW_MED_EXCEPTION .
ENDCLASS.



CLASS ZCL_ZPE_AHM_MPC IMPLEMENTATION.


  method DEFINE.
*&---------------------------------------------------------------------*
*&           Generated code for the MODEL PROVIDER BASE CLASS         &*
*&                                                                     &*
*&  !!!NEVER MODIFY THIS CLASS. IN CASE YOU WANT TO CHANGE THE MODEL  &*
*&        DO THIS IN THE MODEL PROVIDER SUBCLASS!!!                   &*
*&                                                                     &*
*&---------------------------------------------------------------------*

model->set_schema_namespace( 'ZPE_AHM_SRV' ).

define_complextypes( ).
define_hardcode( ).
define_actions( ).
  endmethod.


  method DEFINE_ACTIONS.
*&---------------------------------------------------------------------*
*&           Generated code for the MODEL PROVIDER BASE CLASS         &*
*&                                                                     &*
*&  !!!NEVER MODIFY THIS CLASS. IN CASE YOU WANT TO CHANGE THE MODEL  &*
*&        DO THIS IN THE MODEL PROVIDER SUBCLASS!!!                   &*
*&                                                                     &*
*&---------------------------------------------------------------------*


data:
lo_action         type ref to /iwbep/if_mgw_odata_action,                 "#EC NEEDED
lo_parameter      type ref to /iwbep/if_mgw_odata_parameter.              "#EC NEEDED

***********************************************************************************************************************************
*   ACTION - getRange
***********************************************************************************************************************************

lo_action = model->create_action( 'getRange' ).  "#EC NOTEXT
lo_action->set_label_from_text_element( iv_text_element_symbol = '020' iv_text_element_container = gc_incl_name ).  "#EC NOTEXT
*Set return complex type
lo_action->set_return_complex_type( 'Ranges' ). "#EC NOTEXT
*Set HTTP method GET or POST
lo_action->set_http_method( 'GET' ). "#EC NOTEXT
* Set return type multiplicity
lo_action->set_return_multiplicity( 'M' ). "#EC NOTEXT
***********************************************************************************************************************************
* Parameters
***********************************************************************************************************************************

lo_parameter = lo_action->create_input_parameter( iv_parameter_name = 'Sequence'    iv_abap_fieldname = 'ZPE_HM_SEQUENCE' ). "#EC NOTEXT
lo_parameter->set_label_from_text_element( iv_text_element_symbol = '021' iv_text_element_container = gc_incl_name ). "#EC NOTEXT
lo_parameter->/iwbep/if_mgw_odata_property~set_type_edm_string( ).
lo_parameter->set_maxlength( iv_max_length = 3 ). "#EC NOTEXT
lo_parameter = lo_action->create_input_parameter( iv_parameter_name = 'Id'    iv_abap_fieldname = 'ZPE_HM_ID_GENERIC' ). "#EC NOTEXT
lo_parameter->set_label_from_text_element( iv_text_element_symbol = '022' iv_text_element_container = gc_incl_name ). "#EC NOTEXT
lo_parameter->/iwbep/if_mgw_odata_property~set_type_edm_string( ).
lo_parameter->set_maxlength( iv_max_length = 32 ). "#EC NOTEXT
lo_action->bind_input_structure( iv_structure_name  = 'ZCL_ZPE_AHM_MPC=>TS_GETRANGE' ). "#EC NOTEXT
***********************************************************************************************************************************
*   ACTION - getTable
***********************************************************************************************************************************

lo_action = model->create_action( 'getTable' ).  "#EC NOTEXT
lo_action->set_label_from_text_element( iv_text_element_symbol = '023' iv_text_element_container = gc_incl_name ).  "#EC NOTEXT
*Set return complex type
lo_action->set_return_complex_type( 'Tables' ). "#EC NOTEXT
*Set HTTP method GET or POST
lo_action->set_http_method( 'GET' ). "#EC NOTEXT
* Set return type multiplicity
lo_action->set_return_multiplicity( 'M' ). "#EC NOTEXT
***********************************************************************************************************************************
* Parameters
***********************************************************************************************************************************

lo_parameter = lo_action->create_input_parameter( iv_parameter_name = 'CalculationDate'    iv_abap_fieldname = 'CALCULATIONDATE' ). "#EC NOTEXT
lo_parameter->set_label_from_text_element( iv_text_element_symbol = '025' iv_text_element_container = gc_incl_name ). "#EC NOTEXT
lo_parameter->/iwbep/if_mgw_odata_property~set_type_edm_datetime( ).
lo_parameter = lo_action->create_input_parameter( iv_parameter_name = 'Filter'    iv_abap_fieldname = 'FILTER' ). "#EC NOTEXT
lo_parameter->set_label_from_text_element( iv_text_element_symbol = '026' iv_text_element_container = gc_incl_name ). "#EC NOTEXT
lo_parameter->/iwbep/if_mgw_odata_property~set_type_edm_string( ).
lo_parameter = lo_action->create_input_parameter( iv_parameter_name = 'Id'    iv_abap_fieldname = 'ZPE_HM_ID_GENERIC' ). "#EC NOTEXT
lo_parameter->set_label_from_text_element( iv_text_element_symbol = '024' iv_text_element_container = gc_incl_name ). "#EC NOTEXT
lo_parameter->/iwbep/if_mgw_odata_property~set_type_edm_string( ).
lo_parameter->set_maxlength( iv_max_length = 32 ). "#EC NOTEXT
lo_action->bind_input_structure( iv_structure_name  = 'ZCL_ZPE_AHM_MPC=>TS_GETTABLE' ). "#EC NOTEXT
***********************************************************************************************************************************
*   ACTION - getValue
***********************************************************************************************************************************

lo_action = model->create_action( 'getValue' ).  "#EC NOTEXT
lo_action->set_label_from_text_element( iv_text_element_symbol = '004' iv_text_element_container = gc_incl_name ).  "#EC NOTEXT
*Set return complex type
lo_action->set_return_complex_type( 'Values' ). "#EC NOTEXT
*Set HTTP method GET or POST
lo_action->set_http_method( 'GET' ). "#EC NOTEXT
* Set return type multiplicity
lo_action->set_return_multiplicity( '0' ). "#EC NOTEXT
***********************************************************************************************************************************
* Parameters
***********************************************************************************************************************************

lo_parameter = lo_action->create_input_parameter( iv_parameter_name = 'Sequence'    iv_abap_fieldname = 'ZPE_HM_SEQUENCE' ). "#EC NOTEXT
lo_parameter->set_label_from_text_element( iv_text_element_symbol = '005' iv_text_element_container = gc_incl_name ). "#EC NOTEXT
lo_parameter->/iwbep/if_mgw_odata_property~set_type_edm_string( ).
lo_parameter->set_maxlength( iv_max_length = 3 ). "#EC NOTEXT
lo_parameter = lo_action->create_input_parameter( iv_parameter_name = 'Id'    iv_abap_fieldname = 'ZPE_HM_ID_GENERIC' ). "#EC NOTEXT
lo_parameter->set_label_from_text_element( iv_text_element_symbol = '027' iv_text_element_container = gc_incl_name ). "#EC NOTEXT
lo_parameter->/iwbep/if_mgw_odata_property~set_type_edm_string( ).
lo_parameter->set_maxlength( iv_max_length = 32 ). "#EC NOTEXT
lo_action->bind_input_structure( iv_structure_name  = 'ZCL_ZPE_AHM_MPC=>TS_GETVALUE' ). "#EC NOTEXT
***********************************************************************************************************************************
*   ACTION - isActive
***********************************************************************************************************************************

lo_action = model->create_action( 'isActive' ).  "#EC NOTEXT
lo_action->set_label_from_text_element( iv_text_element_symbol = '030' iv_text_element_container = gc_incl_name ).  "#EC NOTEXT
*Set return complex type
lo_action->set_return_complex_type( 'Active_type' ). "#EC NOTEXT
*Set HTTP method GET or POST
lo_action->set_http_method( 'GET' ). "#EC NOTEXT
* Set return type multiplicity
lo_action->set_return_multiplicity( '1' ). "#EC NOTEXT
***********************************************************************************************************************************
* Parameters
***********************************************************************************************************************************

lo_parameter = lo_action->create_input_parameter( iv_parameter_name = 'Id'    iv_abap_fieldname = 'ZPE_HM_ID_GENERIC' ). "#EC NOTEXT
lo_parameter->set_label_from_text_element( iv_text_element_symbol = '031' iv_text_element_container = gc_incl_name ). "#EC NOTEXT
lo_parameter->/iwbep/if_mgw_odata_property~set_type_edm_string( ).
lo_parameter->set_maxlength( iv_max_length = 32 ). "#EC NOTEXT
lo_parameter = lo_action->create_input_parameter( iv_parameter_name = 'Filter'    iv_abap_fieldname = 'FILTER' ). "#EC NOTEXT
lo_parameter->set_label_from_text_element( iv_text_element_symbol = '032' iv_text_element_container = gc_incl_name ). "#EC NOTEXT
lo_parameter->/iwbep/if_mgw_odata_property~set_type_edm_string( ).
lo_parameter = lo_action->create_input_parameter( iv_parameter_name = 'CalculationDate'    iv_abap_fieldname = 'CALCULATIONDATE' ). "#EC NOTEXT
lo_parameter->set_label_from_text_element( iv_text_element_symbol = '033' iv_text_element_container = gc_incl_name ). "#EC NOTEXT
lo_parameter->/iwbep/if_mgw_odata_property~set_type_edm_datetime( ).
lo_action->bind_input_structure( iv_structure_name  = 'ZCL_ZPE_AHM_MPC=>TS_ISACTIVE' ). "#EC NOTEXT
  endmethod.


  method DEFINE_COMPLEXTYPES.
*&---------------------------------------------------------------------*
*&           Generated code for the MODEL PROVIDER BASE CLASS         &*
*&                                                                     &*
*&  !!!NEVER MODIFY THIS CLASS. IN CASE YOU WANT TO CHANGE THE MODEL  &*
*&        DO THIS IN THE MODEL PROVIDER SUBCLASS!!!                   &*
*&                                                                     &*
*&---------------------------------------------------------------------*


 data:
       lo_annotation     type ref to /iwbep/if_mgw_odata_annotation,             "#EC NEEDED
       lo_complex_type   type ref to /iwbep/if_mgw_odata_cmplx_type,             "#EC NEEDED
       lo_property       type ref to /iwbep/if_mgw_odata_property.                "#EC NEEDED

***********************************************************************************************************************************
*   COMPLEX TYPE - Ranges
***********************************************************************************************************************************
lo_complex_type = model->create_complex_type( 'Ranges' ). "#EC NOTEXT
lo_complex_type->set_label_from_text_element( iv_text_element_symbol = '006' iv_text_element_container = gc_incl_name ).       "#EC NOTEXT

***********************************************************************************************************************************
*Properties
***********************************************************************************************************************************
lo_property = lo_complex_type->create_property( iv_property_name  = 'Sign' iv_abap_fieldname = 'SIGN' ). "#EC NOTEXT
lo_property->set_label_from_text_element( iv_text_element_symbol = '007' iv_text_element_container = gc_incl_name ). "#EC NOTEXT
lo_property->set_type_edm_string( ).
lo_property->set_maxlength( iv_max_length = 1 ).
lo_property->set_semantic( 'Sign' ). "#EC NOTEXT
lo_property->set_creatable( abap_false ).
lo_property->set_updatable( abap_false ).
lo_property->set_sortable( abap_false ).
lo_property->set_nullable( abap_false ).
lo_property->set_filterable( abap_false ).
lo_property = lo_complex_type->create_property( iv_property_name  = 'Option' iv_abap_fieldname = 'OPTION' ). "#EC NOTEXT
lo_property->set_label_from_text_element( iv_text_element_symbol = '008' iv_text_element_container = gc_incl_name ). "#EC NOTEXT
lo_property->set_type_edm_string( ).
lo_property->set_maxlength( iv_max_length = 2 ).
lo_property->set_semantic( 'Option' ). "#EC NOTEXT
lo_property->set_creatable( abap_false ).
lo_property->set_updatable( abap_false ).
lo_property->set_sortable( abap_false ).
lo_property->set_nullable( abap_false ).
lo_property->set_filterable( abap_false ).
lo_property = lo_complex_type->create_property( iv_property_name  = 'Low' iv_abap_fieldname = 'LOW' ). "#EC NOTEXT
lo_property->set_label_from_text_element( iv_text_element_symbol = '009' iv_text_element_container = gc_incl_name ). "#EC NOTEXT
lo_property->set_type_edm_string( ).
lo_property->set_maxlength( iv_max_length = 30 ).
lo_property->set_semantic( 'Low' ). "#EC NOTEXT
lo_property->set_creatable( abap_false ).
lo_property->set_updatable( abap_false ).
lo_property->set_sortable( abap_false ).
lo_property->set_nullable( abap_false ).
lo_property->set_filterable( abap_false ).
lo_property = lo_complex_type->create_property( iv_property_name  = 'High' iv_abap_fieldname = 'HIGH' ). "#EC NOTEXT
lo_property->set_label_from_text_element( iv_text_element_symbol = '010' iv_text_element_container = gc_incl_name ). "#EC NOTEXT
lo_property->set_type_edm_string( ).
lo_property->set_maxlength( iv_max_length = 30 ).
lo_property->set_semantic( 'High' ). "#EC NOTEXT
lo_property->set_creatable( abap_false ).
lo_property->set_updatable( abap_false ).
lo_property->set_sortable( abap_false ).
lo_property->set_nullable( abap_false ).
lo_property->set_filterable( abap_false ).
lo_complex_type->bind_structure( iv_structure_name   = 'ZPE_S_HM_RANGE'
                                 iv_bind_conversions = 'X' ). "#EC NOTEXT
***********************************************************************************************************************************
*   COMPLEX TYPE - Tables
***********************************************************************************************************************************
lo_complex_type = model->create_complex_type( 'Tables' ). "#EC NOTEXT
lo_complex_type->set_label_from_text_element( iv_text_element_symbol = '011' iv_text_element_container = gc_incl_name ).       "#EC NOTEXT

***********************************************************************************************************************************
*Properties
***********************************************************************************************************************************
lo_property = lo_complex_type->create_property( iv_property_name  = 'Id' iv_abap_fieldname = 'ID' ). "#EC NOTEXT
lo_property->set_label_from_text_element( iv_text_element_symbol = '012' iv_text_element_container = gc_incl_name ). "#EC NOTEXT
lo_property->set_type_edm_string( ).
lo_property->set_maxlength( iv_max_length = 32 ).
lo_property->set_conversion_exit( 'ALPHA' ). "#EC NOTEXT
lo_property->set_semantic( 'Id' ). "#EC NOTEXT
lo_property->set_creatable( abap_false ).
lo_property->set_updatable( abap_false ).
lo_property->set_sortable( abap_false ).
lo_property->set_nullable( abap_false ).
lo_property->set_filterable( abap_false ).
lo_property = lo_complex_type->create_property( iv_property_name  = 'Sequence' iv_abap_fieldname = 'SEQUENCE' ). "#EC NOTEXT
lo_property->set_type_edm_string( ).
lo_property->set_maxlength( iv_max_length = 3 ).
lo_property->set_semantic( 'Sequence' ). "#EC NOTEXT
lo_property->set_creatable( abap_false ).
lo_property->set_updatable( abap_false ).
lo_property->set_sortable( abap_false ).
lo_property->set_nullable( abap_false ).
lo_property->set_filterable( abap_false ).
lo_property = lo_complex_type->create_property( iv_property_name  = 'Field1' iv_abap_fieldname = 'FIELD1' ). "#EC NOTEXT
lo_property->set_label_from_text_element( iv_text_element_symbol = '013' iv_text_element_container = gc_incl_name ). "#EC NOTEXT
lo_property->set_type_edm_string( ).
lo_property->set_maxlength( iv_max_length = 30 ).
lo_property->set_semantic( 'Field1' ). "#EC NOTEXT
lo_property->set_creatable( abap_false ).
lo_property->set_updatable( abap_false ).
lo_property->set_sortable( abap_false ).
lo_property->set_nullable( abap_true ).
lo_property->set_filterable( abap_false ).
lo_property = lo_complex_type->create_property( iv_property_name  = 'Field2' iv_abap_fieldname = 'FIELD2' ). "#EC NOTEXT
lo_property->set_label_from_text_element( iv_text_element_symbol = '014' iv_text_element_container = gc_incl_name ). "#EC NOTEXT
lo_property->set_type_edm_string( ).
lo_property->set_maxlength( iv_max_length = 30 ).
lo_property->set_semantic( 'Field2' ). "#EC NOTEXT
lo_property->set_creatable( abap_false ).
lo_property->set_updatable( abap_false ).
lo_property->set_sortable( abap_false ).
lo_property->set_nullable( abap_true ).
lo_property->set_filterable( abap_false ).
lo_property = lo_complex_type->create_property( iv_property_name  = 'Field3' iv_abap_fieldname = 'FIELD3' ). "#EC NOTEXT
lo_property->set_label_from_text_element( iv_text_element_symbol = '015' iv_text_element_container = gc_incl_name ). "#EC NOTEXT
lo_property->set_type_edm_string( ).
lo_property->set_maxlength( iv_max_length = 30 ).
lo_property->set_semantic( 'Field3' ). "#EC NOTEXT
lo_property->set_creatable( abap_false ).
lo_property->set_updatable( abap_false ).
lo_property->set_sortable( abap_false ).
lo_property->set_nullable( abap_true ).
lo_property->set_filterable( abap_false ).
lo_property = lo_complex_type->create_property( iv_property_name  = 'Field4' iv_abap_fieldname = 'FIELD4' ). "#EC NOTEXT
lo_property->set_label_from_text_element( iv_text_element_symbol = '016' iv_text_element_container = gc_incl_name ). "#EC NOTEXT
lo_property->set_type_edm_string( ).
lo_property->set_maxlength( iv_max_length = 30 ).
lo_property->set_semantic( 'Field4' ). "#EC NOTEXT
lo_property->set_creatable( abap_false ).
lo_property->set_updatable( abap_false ).
lo_property->set_sortable( abap_false ).
lo_property->set_nullable( abap_true ).
lo_property->set_filterable( abap_false ).
lo_property = lo_complex_type->create_property( iv_property_name  = 'Field5' iv_abap_fieldname = 'FIELD5' ). "#EC NOTEXT
lo_property->set_label_from_text_element( iv_text_element_symbol = '017' iv_text_element_container = gc_incl_name ). "#EC NOTEXT
lo_property->set_type_edm_string( ).
lo_property->set_maxlength( iv_max_length = 30 ).
lo_property->set_semantic( 'Field5' ). "#EC NOTEXT
lo_property->set_creatable( abap_false ).
lo_property->set_updatable( abap_false ).
lo_property->set_sortable( abap_false ).
lo_property->set_nullable( abap_true ).
lo_property->set_filterable( abap_false ).
lo_complex_type->bind_structure( iv_structure_name   = 'ZPE_S_HM_TABLE'
                                 iv_bind_conversions = 'X' ). "#EC NOTEXT
***********************************************************************************************************************************
*   COMPLEX TYPE - Values
***********************************************************************************************************************************
lo_complex_type = model->create_complex_type( 'Values' ). "#EC NOTEXT
lo_complex_type->set_label_from_text_element( iv_text_element_symbol = '002' iv_text_element_container = gc_incl_name ).       "#EC NOTEXT

***********************************************************************************************************************************
*Properties
***********************************************************************************************************************************
lo_property = lo_complex_type->create_property( iv_property_name  = 'value' iv_abap_fieldname = 'VALUE' ). "#EC NOTEXT
lo_property->set_label_from_text_element( iv_text_element_symbol = '018' iv_text_element_container = gc_incl_name ). "#EC NOTEXT
lo_property->set_type_edm_string( ).
lo_property->set_maxlength( iv_max_length = 30 ).
lo_property->set_creatable( abap_false ).
lo_property->set_updatable( abap_false ).
lo_property->set_sortable( abap_false ).
lo_property->set_nullable( abap_false ).
lo_property->set_filterable( abap_false ).
lo_complex_type->bind_structure( iv_structure_name   = 'ZPE_S_HM_ODATA_VALUE'
                                 iv_bind_conversions = 'X' ). "#EC NOTEXT
***********************************************************************************************************************************
*   COMPLEX TYPE - Active_type
***********************************************************************************************************************************
lo_complex_type = model->create_complex_type( 'Active_type' ). "#EC NOTEXT
lo_complex_type->set_label_from_text_element( iv_text_element_symbol = '028' iv_text_element_container = gc_incl_name ).       "#EC NOTEXT

***********************************************************************************************************************************
*Properties
***********************************************************************************************************************************
lo_property = lo_complex_type->create_property( iv_property_name  = 'Active' iv_abap_fieldname = 'ACTIVE' ). "#EC NOTEXT
lo_property->set_label_from_text_element( iv_text_element_symbol = '029' iv_text_element_container = gc_incl_name ). "#EC NOTEXT
lo_property->set_type_edm_boolean( ).
lo_property->set_creatable( abap_false ).
lo_property->set_updatable( abap_false ).
lo_property->set_sortable( abap_false ).
lo_property->set_nullable( abap_false ).
lo_property->set_filterable( abap_false ).
lo_complex_type->bind_structure( iv_structure_name   = 'ZPE_S_HM_ODATA_BOOLEAN'
                                 iv_bind_conversions = 'X' ). "#EC NOTEXT
  endmethod.


  method DEFINE_HARDCODE.
*&---------------------------------------------------------------------*
*&           Generated code for the MODEL PROVIDER BASE CLASS         &*
*&                                                                     &*
*&  !!!NEVER MODIFY THIS CLASS. IN CASE YOU WANT TO CHANGE THE MODEL  &*
*&        DO THIS IN THE MODEL PROVIDER SUBCLASS!!!                   &*
*&                                                                     &*
*&---------------------------------------------------------------------*


  data:
        lo_annotation     type ref to /iwbep/if_mgw_odata_annotation,                "#EC NEEDED
        lo_entity_type    type ref to /iwbep/if_mgw_odata_entity_typ,                "#EC NEEDED
        lo_complex_type   type ref to /iwbep/if_mgw_odata_cmplx_type,                "#EC NEEDED
        lo_property       type ref to /iwbep/if_mgw_odata_property,                  "#EC NEEDED
        lo_entity_set     type ref to /iwbep/if_mgw_odata_entity_set.                "#EC NEEDED

***********************************************************************************************************************************
*   ENTITY - hardcode
***********************************************************************************************************************************

lo_entity_type = model->create_entity_type( iv_entity_type_name = 'hardcode' iv_def_entity_set = abap_false ). "#EC NOTEXT

***********************************************************************************************************************************
*Properties
***********************************************************************************************************************************

lo_property = lo_entity_type->create_property( iv_property_name = 'Id' iv_abap_fieldname = 'ID' ). "#EC NOTEXT
lo_property->set_is_key( ).
lo_property->set_type_edm_string( ).
lo_property->set_maxlength( iv_max_length = 32 ). "#EC NOTEXT
lo_property->set_creatable( abap_false ).
lo_property->set_updatable( abap_false ).
lo_property->set_sortable( abap_false ).
lo_property->set_nullable( abap_false ).
lo_property->set_filterable( abap_false ).
lo_property->/iwbep/if_mgw_odata_annotatabl~create_annotation( 'sap' )->add(
      EXPORTING
        iv_key      = 'unicode'
        iv_value    = 'false' ).
lo_property = lo_entity_type->create_property( iv_property_name = 'Type' iv_abap_fieldname = 'TYPE' ). "#EC NOTEXT
lo_property->set_type_edm_string( ).
lo_property->set_maxlength( iv_max_length = 1 ). "#EC NOTEXT
lo_property->set_creatable( abap_false ).
lo_property->set_updatable( abap_false ).
lo_property->set_sortable( abap_false ).
lo_property->set_nullable( abap_false ).
lo_property->set_filterable( abap_false ).
lo_property->/iwbep/if_mgw_odata_annotatabl~create_annotation( 'sap' )->add(
      EXPORTING
        iv_key      = 'unicode'
        iv_value    = 'false' ).
lo_property = lo_entity_type->create_property( iv_property_name = 'Description' iv_abap_fieldname = 'DESCRIPTION' ). "#EC NOTEXT
lo_property->set_type_edm_string( ).
lo_property->set_maxlength( iv_max_length = 50 ). "#EC NOTEXT
lo_property->set_creatable( abap_false ).
lo_property->set_updatable( abap_false ).
lo_property->set_sortable( abap_false ).
lo_property->set_nullable( abap_false ).
lo_property->set_filterable( abap_false ).
lo_property->/iwbep/if_mgw_odata_annotatabl~create_annotation( 'sap' )->add(
      EXPORTING
        iv_key      = 'unicode'
        iv_value    = 'false' ).

lo_entity_type->bind_structure( iv_structure_name   = 'ZPE_S_HM_ODATA_HARDCODE'
                                iv_bind_conversions = 'X' ). "#EC NOTEXT


***********************************************************************************************************************************
*   ENTITY SETS
***********************************************************************************************************************************
lo_entity_set = lo_entity_type->create_entity_set( 'hardcode' ). "#EC NOTEXT
lo_entity_set->set_label_from_text_element( iv_text_element_symbol = '019' iv_text_element_container = gc_incl_name ).  "#EC NOTEXT

lo_entity_set->set_creatable( abap_false ).
lo_entity_set->set_updatable( abap_false ).
lo_entity_set->set_deletable( abap_false ).

lo_entity_set->set_pageable( abap_false ).
lo_entity_set->set_addressable( abap_true ).
lo_entity_set->set_has_ftxt_search( abap_true ).
lo_entity_set->set_subscribable( abap_false ).
lo_entity_set->set_filter_required( abap_false ).
  endmethod.


  method GET_LAST_MODIFIED.
*&---------------------------------------------------------------------*
*&           Generated code for the MODEL PROVIDER BASE CLASS         &*
*&                                                                     &*
*&  !!!NEVER MODIFY THIS CLASS. IN CASE YOU WANT TO CHANGE THE MODEL  &*
*&        DO THIS IN THE MODEL PROVIDER SUBCLASS!!!                   &*
*&                                                                     &*
*&---------------------------------------------------------------------*


  CONSTANTS: lc_gen_date_time TYPE timestamp VALUE '20230502091503'.                  "#EC NOTEXT
  rv_last_modified = super->get_last_modified( ).
  IF rv_last_modified LT lc_gen_date_time.
    rv_last_modified = lc_gen_date_time.
  ENDIF.
  endmethod.


  method LOAD_TEXT_ELEMENTS.
*&---------------------------------------------------------------------*
*&           Generated code for the MODEL PROVIDER BASE CLASS         &*
*&                                                                     &*
*&  !!!NEVER MODIFY THIS CLASS. IN CASE YOU WANT TO CHANGE THE MODEL  &*
*&        DO THIS IN THE MODEL PROVIDER SUBCLASS!!!                   &*
*&                                                                     &*
*&---------------------------------------------------------------------*


DATA:
     ls_text_element TYPE ts_text_element.                                 "#EC NEEDED


clear ls_text_element.
ls_text_element-artifact_name          = 'Ranges'.                            "#EC NOTEXT
ls_text_element-artifact_type          = 'CTYP'.                                           "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'MODL'.                                           "#EC NOTEXT
ls_text_element-text_symbol            = '006'.                         "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.

clear ls_text_element.
ls_text_element-artifact_name          = 'Sign'.                 "#EC NOTEXT
ls_text_element-artifact_type          = 'PROP'.                                           "#EC NOTEXT
ls_text_element-parent_artifact_name   = 'Ranges'.                            "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'CTYP'.                                           "#EC NOTEXT
ls_text_element-text_symbol            = '007'.              "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.
clear ls_text_element.
ls_text_element-artifact_name          = 'Option'.                 "#EC NOTEXT
ls_text_element-artifact_type          = 'PROP'.                                           "#EC NOTEXT
ls_text_element-parent_artifact_name   = 'Ranges'.                            "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'CTYP'.                                           "#EC NOTEXT
ls_text_element-text_symbol            = '008'.              "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.
clear ls_text_element.
ls_text_element-artifact_name          = 'Low'.                 "#EC NOTEXT
ls_text_element-artifact_type          = 'PROP'.                                           "#EC NOTEXT
ls_text_element-parent_artifact_name   = 'Ranges'.                            "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'CTYP'.                                           "#EC NOTEXT
ls_text_element-text_symbol            = '009'.              "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.
clear ls_text_element.
ls_text_element-artifact_name          = 'High'.                 "#EC NOTEXT
ls_text_element-artifact_type          = 'PROP'.                                           "#EC NOTEXT
ls_text_element-parent_artifact_name   = 'Ranges'.                            "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'CTYP'.                                           "#EC NOTEXT
ls_text_element-text_symbol            = '010'.              "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.
clear ls_text_element.
ls_text_element-artifact_name          = 'Tables'.                            "#EC NOTEXT
ls_text_element-artifact_type          = 'CTYP'.                                           "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'MODL'.                                           "#EC NOTEXT
ls_text_element-text_symbol            = '011'.                         "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.

clear ls_text_element.
ls_text_element-artifact_name          = 'Id'.                 "#EC NOTEXT
ls_text_element-artifact_type          = 'PROP'.                                           "#EC NOTEXT
ls_text_element-parent_artifact_name   = 'Tables'.                            "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'CTYP'.                                           "#EC NOTEXT
ls_text_element-text_symbol            = '012'.              "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.
clear ls_text_element.
ls_text_element-artifact_name          = 'Field1'.                 "#EC NOTEXT
ls_text_element-artifact_type          = 'PROP'.                                           "#EC NOTEXT
ls_text_element-parent_artifact_name   = 'Tables'.                            "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'CTYP'.                                           "#EC NOTEXT
ls_text_element-text_symbol            = '013'.              "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.
clear ls_text_element.
ls_text_element-artifact_name          = 'Field2'.                 "#EC NOTEXT
ls_text_element-artifact_type          = 'PROP'.                                           "#EC NOTEXT
ls_text_element-parent_artifact_name   = 'Tables'.                            "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'CTYP'.                                           "#EC NOTEXT
ls_text_element-text_symbol            = '014'.              "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.
clear ls_text_element.
ls_text_element-artifact_name          = 'Field3'.                 "#EC NOTEXT
ls_text_element-artifact_type          = 'PROP'.                                           "#EC NOTEXT
ls_text_element-parent_artifact_name   = 'Tables'.                            "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'CTYP'.                                           "#EC NOTEXT
ls_text_element-text_symbol            = '015'.              "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.
clear ls_text_element.
ls_text_element-artifact_name          = 'Field4'.                 "#EC NOTEXT
ls_text_element-artifact_type          = 'PROP'.                                           "#EC NOTEXT
ls_text_element-parent_artifact_name   = 'Tables'.                            "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'CTYP'.                                           "#EC NOTEXT
ls_text_element-text_symbol            = '016'.              "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.
clear ls_text_element.
ls_text_element-artifact_name          = 'Field5'.                 "#EC NOTEXT
ls_text_element-artifact_type          = 'PROP'.                                           "#EC NOTEXT
ls_text_element-parent_artifact_name   = 'Tables'.                            "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'CTYP'.                                           "#EC NOTEXT
ls_text_element-text_symbol            = '017'.              "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.
clear ls_text_element.
ls_text_element-artifact_name          = 'Values'.                            "#EC NOTEXT
ls_text_element-artifact_type          = 'CTYP'.                                           "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'MODL'.                                           "#EC NOTEXT
ls_text_element-text_symbol            = '002'.                         "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.

clear ls_text_element.
ls_text_element-artifact_name          = 'value'.                 "#EC NOTEXT
ls_text_element-artifact_type          = 'PROP'.                                           "#EC NOTEXT
ls_text_element-parent_artifact_name   = 'Values'.                            "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'CTYP'.                                           "#EC NOTEXT
ls_text_element-text_symbol            = '018'.              "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.
clear ls_text_element.
ls_text_element-artifact_name          = 'Active_type'.                            "#EC NOTEXT
ls_text_element-artifact_type          = 'CTYP'.                                           "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'MODL'.                                           "#EC NOTEXT
ls_text_element-text_symbol            = '028'.                         "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.

clear ls_text_element.
ls_text_element-artifact_name          = 'Active'.                 "#EC NOTEXT
ls_text_element-artifact_type          = 'PROP'.                                           "#EC NOTEXT
ls_text_element-parent_artifact_name   = 'Active_type'.                            "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'CTYP'.                                           "#EC NOTEXT
ls_text_element-text_symbol            = '029'.              "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.

clear ls_text_element.
ls_text_element-artifact_name          = 'hardcode'.                               "#EC NOTEXT
ls_text_element-artifact_type          = 'ENSE'.                                            "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'MODL'.                                            "#EC NOTEXT
ls_text_element-text_symbol            = '019'.                            "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.


clear ls_text_element.
ls_text_element-artifact_name          = 'getRange'.                                     "#EC NOTEXT
ls_text_element-artifact_type          = 'FIMP'.                                               "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'MODL'.                                               "#EC NOTEXT
ls_text_element-text_symbol            = '020'.                                  "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.

clear ls_text_element.
ls_text_element-artifact_name          = 'Sequence'.                               "#EC NOTEXT
ls_text_element-artifact_type          = 'FIPA'.                                                "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'FIMP'.                                                "#EC NOTEXT
ls_text_element-parent_artifact_name   = 'getRange'.                                      "#EC NOTEXT
ls_text_element-text_symbol            = '021'.                            "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.
clear ls_text_element.
ls_text_element-artifact_name          = 'Id'.                               "#EC NOTEXT
ls_text_element-artifact_type          = 'FIPA'.                                                "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'FIMP'.                                                "#EC NOTEXT
ls_text_element-parent_artifact_name   = 'getRange'.                                      "#EC NOTEXT
ls_text_element-text_symbol            = '022'.                            "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.
clear ls_text_element.
ls_text_element-artifact_name          = 'getTable'.                                     "#EC NOTEXT
ls_text_element-artifact_type          = 'FIMP'.                                               "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'MODL'.                                               "#EC NOTEXT
ls_text_element-text_symbol            = '023'.                                  "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.

clear ls_text_element.
ls_text_element-artifact_name          = 'CalculationDate'.                               "#EC NOTEXT
ls_text_element-artifact_type          = 'FIPA'.                                                "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'FIMP'.                                                "#EC NOTEXT
ls_text_element-parent_artifact_name   = 'getTable'.                                      "#EC NOTEXT
ls_text_element-text_symbol            = '025'.                            "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.
clear ls_text_element.
ls_text_element-artifact_name          = 'Filter'.                               "#EC NOTEXT
ls_text_element-artifact_type          = 'FIPA'.                                                "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'FIMP'.                                                "#EC NOTEXT
ls_text_element-parent_artifact_name   = 'getTable'.                                      "#EC NOTEXT
ls_text_element-text_symbol            = '026'.                            "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.
clear ls_text_element.
ls_text_element-artifact_name          = 'Id'.                               "#EC NOTEXT
ls_text_element-artifact_type          = 'FIPA'.                                                "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'FIMP'.                                                "#EC NOTEXT
ls_text_element-parent_artifact_name   = 'getTable'.                                      "#EC NOTEXT
ls_text_element-text_symbol            = '024'.                            "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.
clear ls_text_element.
ls_text_element-artifact_name          = 'getValue'.                                     "#EC NOTEXT
ls_text_element-artifact_type          = 'FIMP'.                                               "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'MODL'.                                               "#EC NOTEXT
ls_text_element-text_symbol            = '004'.                                  "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.

clear ls_text_element.
ls_text_element-artifact_name          = 'Sequence'.                               "#EC NOTEXT
ls_text_element-artifact_type          = 'FIPA'.                                                "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'FIMP'.                                                "#EC NOTEXT
ls_text_element-parent_artifact_name   = 'getValue'.                                      "#EC NOTEXT
ls_text_element-text_symbol            = '005'.                            "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.
clear ls_text_element.
ls_text_element-artifact_name          = 'Id'.                               "#EC NOTEXT
ls_text_element-artifact_type          = 'FIPA'.                                                "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'FIMP'.                                                "#EC NOTEXT
ls_text_element-parent_artifact_name   = 'getValue'.                                      "#EC NOTEXT
ls_text_element-text_symbol            = '027'.                            "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.
clear ls_text_element.
ls_text_element-artifact_name          = 'isActive'.                                     "#EC NOTEXT
ls_text_element-artifact_type          = 'FIMP'.                                               "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'MODL'.                                               "#EC NOTEXT
ls_text_element-text_symbol            = '030'.                                  "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.

clear ls_text_element.
ls_text_element-artifact_name          = 'Id'.                               "#EC NOTEXT
ls_text_element-artifact_type          = 'FIPA'.                                                "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'FIMP'.                                                "#EC NOTEXT
ls_text_element-parent_artifact_name   = 'isActive'.                                      "#EC NOTEXT
ls_text_element-text_symbol            = '031'.                            "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.
clear ls_text_element.
ls_text_element-artifact_name          = 'Filter'.                               "#EC NOTEXT
ls_text_element-artifact_type          = 'FIPA'.                                                "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'FIMP'.                                                "#EC NOTEXT
ls_text_element-parent_artifact_name   = 'isActive'.                                      "#EC NOTEXT
ls_text_element-text_symbol            = '032'.                            "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.
clear ls_text_element.
ls_text_element-artifact_name          = 'CalculationDate'.                               "#EC NOTEXT
ls_text_element-artifact_type          = 'FIPA'.                                                "#EC NOTEXT
ls_text_element-parent_artifact_type   = 'FIMP'.                                                "#EC NOTEXT
ls_text_element-parent_artifact_name   = 'isActive'.                                      "#EC NOTEXT
ls_text_element-text_symbol            = '033'.                            "#EC NOTEXT
APPEND ls_text_element TO rt_text_elements.
  endmethod.
ENDCLASS.