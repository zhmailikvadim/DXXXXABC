class ZCL_ZSD_PRICING_CONDIT_DPC_EXT definition
  public
  inheriting from ZCL_ZSD_PRICING_CONDIT_DPC
  create public .

public section.

  constants:
    BEGIN OF gcs_sales_condition,
        sap_data_exists               TYPE string VALUE 'SAP__DATA_EXISTS',
        where_contains_all_data       TYPE string VALUE 'CONDITIONTYPE LIKE ''%''',
        fixedvaluedate                TYPE string VALUE 'FIXEDVALUEDATE',
        conditionenddate              TYPE fieldname VALUE 'CONDITIONVALIDITYENDDATE',
        conditionstartdate            TYPE fieldname VALUE 'CONDITIONVALIDITYSTARTDATE',
        conditionrecord               TYPE fieldname VALUE 'CONDITIONRECORD',
        conditiontable                TYPE fieldname VALUE 'CONDITIONTABLE',
        conditionsequentialnumber     TYPE fieldname VALUE 'ConditionSequentialNumber',
        conditionscaleline            TYPE fieldname VALUE 'ConditionScaleLine',
        conditionvalidityenddate      TYPE fieldname VALUE 'ConditionValidityEndDate',
        conditionvaliditystartdate    TYPE fieldname VALUE 'ConditionValidityStartDate',
        sign_i                        TYPE char1  VALUE 'I',
        sign_e                        TYPE char1  VALUE 'E',
        option_eq                     TYPE char2  VALUE 'EQ',
        option_np                     TYPE char2  VALUE 'NP',
        option_ne                     TYPE char2  VALUE 'NE',
        low_star                      TYPE char1  VALUE '*',
        validity_end_date             TYPE datbi  VALUE '99991231',
        initial_date                  TYPE datbi  VALUE '00000000',
        etag                          TYPE fieldname VALUE 'ETAG',
        knumh                         TYPE char10 VALUE '$$00000001',
        knumh_start_str               TYPE string VALUE '$$',
        conditionapplication_sales    TYPE kappl VALUE 'V',
        create_deep_entity            TYPE /iwbep/mgw_operation_type VALUE 'CD',
        create_entity                 TYPE /iwbep/mgw_operation_type VALUE 'CE',
        create_patch_entity           TYPE /iwbep/mgw_operation_type VALUE 'PE',
        create_put_entity             TYPE /iwbep/mgw_operation_type VALUE 'UE',
        execute_action                TYPE /iwbep/mgw_operation_type VALUE 'EA',
        record_kopos                  TYPE kopos  VALUE '01',
        check_kvewe                   TYPE kvewe VALUE 'A',
        isactiveentity                TYPE fieldname VALUE 'ISACTIVEENTITY',
        hasdraftentity                TYPE fieldname VALUE 'HASDRAFTENTITY',
        validondate                   TYPE fieldname VALUE 'VALIDONDATE',
        conditionrecorduuid           TYPE fieldname VALUE 'CONDITIONRECORDUUID',
        conditionrecorduuid_raw       TYPE fieldname_raw VALUE 'ConditionRecordUUID',
        wbselementinternalid          TYPE fieldname VALUE 'WBSELEMENTINTERNALID',
        workpackage                   TYPE fieldname VALUE 'WORKPACKAGE',
        wbs_related_initial           TYPE ps_posnr  VALUE '00000000',
        C_SlsPricingConditionRecordTP TYPE ddlname VALUE 'ZC_SlsPricingConditionRecordTP',
        bopf_save_action_name         TYPE string VALUE 'ZC_SlsPricingConditionRecordTPActivation',
        http_method_merge             TYPE string VALUE 'MERGE',
        IsActiveEntity_filter         TYPE string VALUE 'IsActiveEntity',
        own_draft_filter              TYPE string VALUE 'IsActiveEntityeqfalse',
        unchanged_filter              TYPE string VALUE 'IsActiveEntityeqtrue',
      END OF gcs_sales_condition .

  methods CONSTRUCTOR .
  methods CANCEL_EXPIRED_DRAFT_BEF_SAVE
    importing
      !IT_CHANGESET_REQUEST type /IWBEP/IF_MGW_APPL_TYPES=>TY_T_CHANGESET_REQUEST
    exporting
      !ET_SDRAFT_ADMIN_KEY type SDRAFT_ADMIN_KEY_T .

  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~CHANGESET_BEGIN
    redefinition .
  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~CHANGESET_PROCESS
    redefinition .
  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~CREATE_STREAM
    redefinition .
  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~GET_STREAM
    redefinition .
protected section.

  data MT_T681 type T681_T .
  data MO_COND_CHECKS type ref to IF_CND_MAINT_LTD_CHECK .
  constants MV_RECORD_COUNT_LIMIT type I value 1000 ##NO_TEXT.

  methods C_SLSCNDNRECDIMP_GET_ENTITYSET
    redefinition .
  methods DOWNLOADEXCELSET_GET_ENTITY
    redefinition .
  methods I_CONDITIONCALCU_GET_ENTITYSET
    redefinition .
  methods I_CURRENCYSTDVH_GET_ENTITYSET
    redefinition .
  methods I_SLSPRCGKEYCOMB_GET_ENTITYSET
    redefinition .
  methods ZC_SLSPRICINGCON_GET_ENTITY
    redefinition .
  methods ZC_SLSPRICINGCON_GET_ENTITYSET
    redefinition .
  methods I_SALESPRICINGCO_GET_ENTITYSET
    redefinition .
private section.

  types:
    BEGIN OF ty_conditionrecord,
        conditionrecord TYPE sdprcg_cndnr_d-conditionrecord,
      END OF ty_conditionrecord .
  types:
    tty_conditionrecord      TYPE STANDARD TABLE OF ty_conditionrecord .
  types:
    ty_range_conditionrecord TYPE RANGE OF knumh .
  types:
    BEGIN OF ty_fields_fc,
        name TYPE string,
      END OF ty_fields_fc .
  types:
    tt_fields_fc TYPE STANDARD TABLE OF ty_fields_fc .

  data MO_SLS_API type ref to IF_SLSPRCG_CNDNRECD_API .
  data MO_PRCG_UTIL type ref to IF_CNDNRECORD_PUBLIC_UTILITY .
  data MO_DEP type ref to IF_CND_MAINT_LTD_DEP .
  data MO_VALIDITY type ref to IF_PRCG_CNDNRECD_SERVICE .
  data MO_RECORD type ref to IF_PRCG_CNDNRECD_SERVICE .
  data MO_LTD_UTIL type ref to IF_CND_MAINT_LTD_UTIL .
  data MO_LTD_DB type ref to IF_CND_MAINT_LTD_DB .
  data MO_SRV_FACADE type ref to IF_PRCG_CNDNRECD_SRV_FACADE .
  data MO_GW_MSG_CONTAINER type ref to /IWBEP/IF_MESSAGE_CONTAINER .
  data MO_CONDTYPE type ref to IF_CT_CONDTYPE .
  data MO_ACCSEQ type ref to IF_CT_ACCSEQ .
  data MV_IS_MANUALLY_GROUP type ABAP_BOOL .
  data MO_CONFIGURATION type ref to /BOBF/IF_FRW_CONFIGURATION .
  data MO_LOCK_MANAGER type ref to /BOBF/IF_LIB_DURABLE_LOCK_MNGR .
  data MT_NODES type /IWBEP/IF_MGW_MED_ODATA_TYPES=>TY_T_MED_ENTITY_TYPES .
  data MS_VOCAN_MODEL type /IWBEP/IF_MGW_MED_ODATA_TYPES=>TY_S_VOCAN_MODEL .
  data MT_FILTER_EXPRESSIONS type /IWBEP/IF_MGW_CORE_SRV_RUNTIME=>TECHNICAL_REQUEST_S-FILTER_EXPRESSIONS .
  data MT_FILTER_FUNCTIONS type /IWBEP/IF_MGW_CORE_SRV_RUNTIME=>TECHNICAL_REQUEST_S-FILTER_FUNCTIONS .

  methods ADD_OTHER_ISSUE_TO_CONTAINER
    importing
      !IS_SYMSG type SYST .
  methods ADD_MESSAGE_TO_CONTAINER
    importing
      !IS_SYMSG type SYST .
  methods ADD_VIRUS_ISSUE_TO_CONTAINER
    importing
      !IV_VSCAN_SCANRC type VSCAN_SCANRC .
  methods ADD_MESSAGE_TO_DB
    importing
      !IV_INVALID_EXCEL type ABAP_BOOL
      !IV_FILENAME type STRING_DATA
      !IV_TOTAL_LINES type INT4
      !IT_FIELD_LIST type STRING_TABLE
      !IT_RECORD type ZCL_SD_SLS_PRICE_UPLOAD_EXCEL=>TY_RECORD_T
      !IT_MESSAGE type IF_SLSPRCG_CNDNRECD_API_TYPES=>TY_CONDITION_MESSAGE_T
      !IV_IMPRTID type UUID
      !IT_SUCCESS_RECORD type ZCL_SD_SLS_PRICE_UPLOAD_EXCEL=>TY_RECORD_ITEM_T .
  methods VIRUS_SCAN
    importing
      !IV_XSTRING type XSTRING
    returning
      value(RV_SUCCESS) type ABAP_BOOL .
  methods GET_FILTER_INFO
    importing
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET
    exporting
      !ES_QUERY_OPTION type IF_SLSPRCG_CNDNRECD_API_TYPES=>TY_CNDNRECD_QUERY_OPTION_S
      !EV_WHERE_CLAUSE type STRING
      !ET_ITEM type IF_CNDNRECORD_PUBLIC_UTILITY=>TY_CNDNRECD_CRITERIA_ITEM_T
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION .
  methods GET_ENTITYSET_QUERY_INFO
    importing
      !IO_TECH_REQUEST_CONTEXT type ref to /IWBEP/IF_MGW_REQ_ENTITYSET
    exporting
      !ES_QUERY_OPTION type IF_SLSPRCG_CNDNRECD_API_TYPES=>TY_CNDNRECD_QUERY_OPTION_S
      !EV_KEY_WHERE_CLAUSE type STRING .
  methods RAISE_BUSI_EXC_FROM_API_EXC
    importing
      !IX_CNDN_FAILED type ref to CX_PRCG_CNDNRECORD_EXCEPTION
    raising
      /IWBEP/CX_MGW_BUSI_EXCEPTION .
  methods CHECK_EDITING_STATUS
    exporting
      !EV_IS_DRAFT type BOOLEAN
      !EV_IS_ACTIVATED type BOOLEAN
    changing
      !CT_ITEM type IF_CNDNRECORD_PUBLIC_UTILITY=>TY_CNDNRECD_CRITERIA_ITEM_T .
  methods SET_MODEL_FOR_DRAFT_TEXT
    importing
      !IT_CHANGESET_REQUEST type /IWBEP/IF_MGW_APPL_TYPES=>TY_T_CHANGESET_REQUEST .
  methods GET_FIELD_CONTROL_FIELDS
    exporting
      !ET_FIELDS_FC type TT_FIELDS_FC .
  methods SET_PROPERTY
    exporting
      !ES_ENTITYSET type ZCL_ZSD_PRICING_CONDIT_MPC=>TS_ZC_SLSPRICINGCONDITIONRECOR
      !ER_TABLE type ref to DATA .
  methods GET_T681_BY_USAGE
    importing
      !IV_USAGE type KVEWE optional
    returning
      value(RT_T681) type T681_T .
  methods GET_TEXT
    importing
      !IV_IS_MANUALLY_GROUP type BOOLEAN
    changing
      !CT_ENTITYSET type ZCL_ZSD_PRICING_CONDIT_MPC=>TT_ZC_SLSPRICINGCONDITIONRECOR
      !CT_ORDERBY type /IWBEP/T_MGW_TECH_ORDER .
  methods GROUP_FOR_DRAFT
    importing
      !IV_IS_MANUALLY_GROUP type BOOLEAN
    changing
      !CT_ENTITYSET type ZCL_ZSD_PRICING_CONDIT_MPC=>TT_ZC_SLSPRICINGCONDITIONRECOR
      !CT_ORDERBY type /IWBEP/T_MGW_TECH_ORDER optional .
  methods CHECK_IS_GROUP
    importing
      !IT_SELECT type STRING_TABLE
      !IT_ORDERBY type /IWBEP/T_MGW_TECH_ORDER
    returning
      value(RV_IS_GROUP) type BOOLEAN .
  methods CALCULATE_PAGING
    importing
      !IS_PAGING type /IWBEP/S_MGW_PAGING
      !IT_DRAFT type ZCL_ZSD_PRICING_CONDIT_MPC=>TT_ZC_SLSPRICINGCONDITIONRECOR
      !IV_WHERE_CLAUSE type STRING
    exporting
      !ET_EXCLUDED_CONDRECORD type TY_RANGE_CONDITIONRECORD
      !EV_ONLY_HAS_DRAFT type BOOLEAN
    changing
      !CS_QUERY_OPTION type IF_SLSPRCG_CNDNRECD_API_TYPES=>TY_CNDNRECD_QUERY_OPTION_S .
  methods PREPARE_ITEM_HEADER
    importing
      !IT_EXCLUDED_CONDRECORD type TY_RANGE_CONDITIONRECORD
    changing
      !CS_HEADER type IF_SLSPRCG_CNDNRECD_API_TYPES=>TY_CNDNRECD_CRITERIA_HEADER_S
      !CT_ITEM type IF_CNDNRECORD_PUBLIC_UTILITY=>TY_CNDNRECD_CRITERIA_ITEM_T .
ENDCLASS.



CLASS ZCL_ZSD_PRICING_CONDIT_DPC_EXT IMPLEMENTATION.


  METHOD /iwbep/if_mgw_appl_srv_runtime~get_stream.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    DATA : lv_filename    TYPE bapidocid,
           lv_content     TYPE xstring,
           ls_header_http TYPE ihttpnvp,
           ls_stream      TYPE /iwbep/if_mgw_core_srv_runtime=>ty_s_media_resource,
           lv_closelog    TYPE string VALUE 'CloseLog'.

    CONSTANTS cv_mimetype_excel TYPE string VALUE 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' ##NO_TEXT.

    CASE iv_entity_name.
*      WHEN 'DownloadExcel'.
*        lv_content = NEW cl_sd_sls_price_download_excel( )->download( it_key_tab = it_key_tab ).

      WHEN 'DownloadExcelTemplate'.
        lv_content = NEW zcl_sd_sls_price_dwnld_excel( )->download_template( it_key_tab = it_key_tab ).

      WHEN 'DownloadLog'.
        lv_content = NEW zcl_sd_sls_price_dwnld_excel( )->download_log( it_key_tab = it_key_tab ).

      WHEN lv_closelog."'CloseLog'.
        READ TABLE it_key_tab INTO DATA(ls_key_tab) WITH KEY name = 'UUID'.
        IF sy-subrc = 0.
          DELETE FROM cndn_upld_msg WHERE uuid = ls_key_tab-value.
        ENDIF.
    ENDCASE.

    IF iv_entity_name = lv_closelog."'CloseLog'.
      lv_content = 'Close Log'.
    ENDIF.
    ls_stream-value = lv_content.
    ls_stream-mime_type = cv_mimetype_excel." 'APPLICATION/XLSX'.
    copy_data_to_ref( EXPORTING is_data = ls_stream
                      CHANGING  cr_data = er_stream ).

    IF iv_entity_name NE lv_closelog."'CloseLog'.
      ls_header_http-name  = if_http_header_fields=>content_disposition. "'Content-Disposition'.

      IF iv_entity_name = 'DownloadLog'.
        READ TABLE it_key_tab INTO DATA(ls_type_tab) WITH KEY name = 'TYPE'.
        IF ls_type_tab-value = 'E'.
          lv_filename = |SalesPricingConditionRecord_FailedData_{ sy-datlo }_{ sy-timlo }.xlsx|.
        ELSE.
          lv_filename = |SalesPricingConditionRecord_SuccessData_{ sy-datlo }_{ sy-timlo }.xlsx|.
        ENDIF.
      ELSE.
        lv_filename = |SalesPricingConditionRecord_{ sy-datlo }_{ sy-timlo }.xlsx|.
      ENDIF.
      ls_header_http-value = |attachment;filename="{ lv_filename }"|.
      set_header( EXPORTING is_header = ls_header_http ).
    ENDIF.
  ENDMETHOD.


  METHOD i_conditioncalcu_get_entityset.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    DATA rv_is_restricted_mode    TYPE abap_boolean.
    DATA iv_domain_name TYPE domname.

    TEST-SEAM super_i_condcalc_get_entityset.
      TRY.
          CALL METHOD super->i_conditioncalcu_get_entityset
            EXPORTING
              iv_entity_name           = iv_entity_name
              iv_entity_set_name       = iv_entity_set_name
              iv_source_name           = iv_source_name
              it_filter_select_options = it_filter_select_options
              is_paging                = is_paging
              it_key_tab               = it_key_tab
              it_navigation_path       = it_navigation_path
              it_order                 = it_order
              iv_filter_string         = iv_filter_string
              iv_search_string         = iv_search_string
              io_tech_request_context  = io_tech_request_context
            IMPORTING
              et_entityset             = et_entityset
              es_response_context      = es_response_context.
        CATCH /iwbep/cx_mgw_busi_exception INTO DATA(lx_busi).
          RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
            EXPORTING
              previous = lx_busi.
        CATCH /iwbep/cx_mgw_tech_exception INTO DATA(lx_tech).
          RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
            EXPORTING
              previous = lx_tech.
      ENDTRY.
    END-TEST-SEAM.

    DATA(condition_type_sscui) = NEW cl_condition_type_sscui_util( ).
    DATA(lt_hidden_values) = condition_type_sscui->get_hidden_values_for_f4( 'KRECH' ). "restrict 23 domain fixed values to 13 for CE

    TEST-SEAM restricted_mode.
      rv_is_restricted_mode = /smb/cl_sscui_restricted_mode=>get_restricted_mode( ).
    END-TEST-SEAM.

    IF rv_is_restricted_mode = abap_true.

      LOOP AT lt_hidden_values ASSIGNING FIELD-SYMBOL(<fs_hidden_value>).
        ASSIGN COMPONENT iv_domain_name OF STRUCTURE et_entityset TO FIELD-SYMBOL(<lv_domvalue>).
        DELETE et_entityset WHERE conditioncalculationtype = <fs_hidden_value>.
      ENDLOOP.

    ENDIF.
  ENDMETHOD.


  method DOWNLOADEXCELSET_GET_ENTITY.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    mo_ltd_db->set_sls_cndn_app_flag( abap_true ).
    DATA(lt_postfix) = mo_prcg_util->convert_expr_filter_to_postfix( it_filter_expr = mt_filter_expressions it_filter_functions = mt_filter_functions ).
    DATA(lv_where) = mo_prcg_util->convert_expr_postfix_to_where( lt_postfix ).

    DATA(lv_data_stream) = NEW zcl_sd_sls_price_dwnld_excel( )->download( it_key_tab = it_key_tab iv_where = lv_where ).
"   Check for data-stream, pass data-stream along with excel name if present, else pass blank excel name
    er_entity = COND #( WHEN lv_data_stream IS NOT INITIAL THEN VALUE #( excelname = |SalesPricingConditionRecord_{ sy-datlo }_{ sy-timlo }.xlsx|
                                                                         excelcontent = lv_data_stream )
                                                           ELSE VALUE #( excelname = |#| ) ).
  endmethod.


  method VIRUS_SCAN.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
      CONSTANTS:c_profile TYPE vscan_profile VALUE '/IWBEP/V4/ODATA_UPLOAD'.

    DATA: lo_vsi    TYPE REF TO cl_vsi,
          lv_scanrc TYPE vscan_scanrc.

    cl_vsi=>get_instance(
      EXPORTING
        if_profile          = c_profile
      IMPORTING
        eo_instance         = lo_vsi
      EXCEPTIONS
        configuration_error = 1
        profile_not_active  = 2
        profile_not_found   = 3
        internal_error      = 4
        OTHERS              = 5
    ).
    IF sy-subrc <> 0.
      IF sy-subrc = 2. "OP can deactive profile
        rv_success = abap_true.
        RETURN.
      ENDIF.
      add_other_issue_to_container( sy ).
    ELSE.
      lo_vsi->scan_bytes(
        EXPORTING
          if_data                      = iv_xstring
        IMPORTING
          ef_scanrc                    = lv_scanrc
        EXCEPTIONS
          not_available                = 1
          configuration_error          = 2
          internal_error               = 3
          OTHERS                       = 4 ) .

      IF sy-subrc = 0 .
        IF lv_scanrc = cl_vsi=>con_scanrc_ok.
          rv_success = abap_true.
        ELSE.
          add_virus_issue_to_container( lv_scanrc ).
        ENDIF.
      ELSE.
        add_other_issue_to_container( sy ).
      ENDIF.
    ENDIF.
  endmethod.


  method SET_PROPERTY.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
 DATA:lo_structure  TYPE REF TO cl_abap_structdescr,
         lt_components TYPE abap_compdescr_tab,
         ls_component  TYPE abap_compdescr,
         ls_fcat       TYPE lvc_s_fcat,
         lt_fcat       TYPE lvc_t_fcat,
         lv_comp_type  TYPE string.

    get_field_control_fields( IMPORTING et_fields_fc = DATA(lt_fields_fc) ).

    lo_structure ?= cl_abap_typedescr=>describe_by_data( es_entityset ).
    lt_components = lo_structure->components[].

    LOOP AT lt_components INTO ls_component.
      READ TABLE lt_fields_fc WITH KEY name = ls_component-name TRANSPORTING NO FIELDS BINARY SEARCH.
      IF sy-subrc = 0.
        ASSIGN COMPONENT ls_component-name OF STRUCTURE es_entityset TO FIELD-SYMBOL(<fs_name>).
        IF <fs_name> IS ASSIGNED.
          <fs_name> = 1.
        ENDIF.
      ELSE.
        CONTINUE.
      ENDIF.
*
      CLEAR ls_fcat.
      ls_fcat-fieldname = ls_component-name.
      ls_fcat-datatype = ls_component-type_kind.
      ls_fcat-inttype  = ls_component-type_kind.
      ls_fcat-intlen   = ls_component-length.
      ls_fcat-decimals = ls_component-decimals.
      APPEND ls_fcat TO lt_fcat.
    ENDLOOP.

    "Create a dynamical table only containing field control fields, e.g. F_CONDITIONTYPE
    TEST-SEAM create_table.
      CALL METHOD cl_alv_table_create=>create_dynamic_table
        EXPORTING
          it_fieldcatalog           = lt_fcat
          i_length_in_byte          = abap_true
        IMPORTING
          ep_table                  = er_table
        EXCEPTIONS
          generate_subpool_dir_full = 1
          OTHERS                    = 2.
    END-TEST-SEAM.
    IF sy-subrc <> 0.
      RETURN.
    ENDIF.
  endmethod.


  method SET_MODEL_FOR_DRAFT_TEXT.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    DATA:lo_model TYPE REF TO /iwbep/cl_mgw_odata_model.

    "Save action do not consider the draft logic (convert draft to active)
    "Create, Copy, Edit actions should store the text/description into the draft table
    DATA(lv_get_model) = abap_true.
    READ TABLE it_changeset_request INTO DATA(ls_request)
                                    WITH KEY operation_type = gcs_sales_condition-execute_action."'EA'.
    IF sy-subrc = 0.
      LOOP AT ls_request-request_headers INTO DATA(ls_header)
                                         WHERE value CS gcs_sales_condition-bopf_save_action_name."ZConditionRecordTPActivation'.
        lv_get_model = abap_false.
        EXIT.
      ENDLOOP.
    ENDIF.

    IF lv_get_model = abap_true.
      TEST-SEAM get_model_action.
        TRY.
            lo_model ?= CAST /iwbep/if_mgw_odata_fw_model(
                               CAST /iwbep/cl_mgw_dp_facade( me->/iwbep/if_mgw_conv_srv_runtime~get_dp_facade( )
                                                            )->/iwbep/if_mgw_dp_int_facade~get_model( ) ).
          CATCH /iwbep/cx_mgw_tech_exception INTO DATA(lo_ex). " Technical Exception
        ENDTRY.
      END-TEST-SEAM.

      mo_prcg_util->set_odata_metadata( it_nodes = lo_model->mt_entities io_model = lo_model ).
    ENDIF.
  endmethod.


  method RAISE_BUSI_EXC_FROM_API_EXC.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
  DATA: lo_message_container TYPE REF TO /iwbep/if_message_container.

    lo_message_container = mo_context->get_message_container( ).
    CALL METHOD lo_message_container->add_message
      EXPORTING
        iv_msg_type   = ix_cndn_failed->if_t100_dyn_msg~msgty "ls_symsg-msgty
        iv_msg_id     = ix_cndn_failed->if_t100_message~t100key-msgid
        iv_msg_number = ix_cndn_failed->if_t100_message~t100key-msgno
        iv_msg_v1     = ix_cndn_failed->if_t100_dyn_msg~msgv1
        iv_msg_v2     = ix_cndn_failed->if_t100_dyn_msg~msgv2
        iv_msg_v3     = ix_cndn_failed->if_t100_dyn_msg~msgv3
        iv_msg_v4     = ix_cndn_failed->if_t100_dyn_msg~msgv4.

    RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
      EXPORTING
        textid            = /iwbep/cx_mgw_busi_exception=>business_error
        message_container = lo_message_container.
  endmethod.


  METHOD prepare_item_header.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    DATA: lv_wbs_external TYPE ps_posid,
          lv_wbs_internal TYPE ps_posnr.

    LOOP AT ct_item ASSIGNING FIELD-SYMBOL(<fs_item_where>).
      DATA(lv_tabix) = sy-tabix.
*      "Exclude Condition Record
*      APPEND LINES OF it_excluded_condrecord TO <fs_item_where>-conditionrecord.

      "Convert the ConditionValidityStartDate to header
      READ TABLE <fs_item_where>-conditionfieldselectionoption
            WITH KEY prcgconditionfieldrangename = gcs_sales_condition-conditionstartdate ASSIGNING FIELD-SYMBOL(<fs_startdate>).
      IF sy-subrc EQ 0 AND <fs_startdate> IS ASSIGNED.
        cs_header-conditionvaliditystartdate = <fs_startdate>-prcgconditionfieldrangelow.
        DELETE <fs_item_where>-conditionfieldselectionoption WHERE prcgconditionfieldrangename = gcs_sales_condition-conditionstartdate
                                                              AND prcgconditionfieldrangelow = <fs_startdate>-prcgconditionfieldrangelow.
        UNASSIGN <fs_startdate>.
      ENDIF.

      "Convert the ConditionValidityEndDate to header
      READ TABLE <fs_item_where>-conditionfieldselectionoption
      WITH KEY prcgconditionfieldrangename = gcs_sales_condition-conditionenddate ASSIGNING FIELD-SYMBOL(<fs_enddate>).
      IF sy-subrc EQ 0 AND <fs_enddate> IS ASSIGNED.
        cs_header-conditionvalidityenddate = <fs_enddate>-prcgconditionfieldrangelow.
        DELETE <fs_item_where>-conditionfieldselectionoption WHERE prcgconditionfieldrangename = gcs_sales_condition-conditionenddate
                                                              AND prcgconditionfieldrangelow = <fs_enddate>-prcgconditionfieldrangelow.
        UNASSIGN <fs_enddate>.
      ENDIF.

      "Convert WBSElementInternalID (PS_POSID) to internal format
      READ TABLE <fs_item_where>-conditionfieldselectionoption
            WITH KEY prcgconditionfieldrangename = gcs_sales_condition-wbselementinternalid ASSIGNING FIELD-SYMBOL(<fs_wbs>).
      IF sy-subrc EQ 0 AND <fs_wbs> IS ASSIGNED.
        CLEAR:lv_wbs_external,lv_wbs_internal.
        lv_wbs_external = <fs_wbs>-prcgconditionfieldrangelow.
        CALL FUNCTION 'CONVERSION_EXIT_ABPSP_INPUT'
          EXPORTING
            input     = lv_wbs_external
          IMPORTING
            output    = lv_wbs_internal
          EXCEPTIONS
            not_found = 1
            OTHERS    = 2.
        IF sy-subrc <> 0.
          DELETE ct_item INDEX lv_tabix.
        ELSE.
          <fs_wbs>-prcgconditionfieldrangelow = lv_wbs_internal.
        ENDIF.
        UNASSIGN <fs_wbs>.
      ENDIF.
    ENDLOOP.
    IF lines( ct_item ) = 1.
      READ TABLE ct_item ASSIGNING <fs_item_where> INDEX 1.
      IF <fs_item_where>-conditionrecord IS INITIAL AND <fs_item_where>-conditiontable IS INITIAL
        AND <fs_item_where>-conditiontype IS INITIAL AND <fs_item_where>-conditionfieldselectionoption IS INITIAL.
        APPEND VALUE #( sign = gcs_sales_condition-sign_e option = gcs_sales_condition-option_np low = gcs_sales_condition-low_star ) TO <fs_item_where>-conditiontype.
      ENDIF.
    ENDIF.
  ENDMETHOD.


  METHOD zc_slspricingcon_get_entity.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    TRY.
        CALL METHOD super->zc_slspricingcon_get_entity
          EXPORTING
            iv_entity_name          = iv_entity_name
            iv_entity_set_name      = iv_entity_set_name
            iv_source_name          = iv_source_name
            it_key_tab              = it_key_tab
            io_request_object       = io_request_object
            io_tech_request_context = io_tech_request_context
            it_navigation_path      = it_navigation_path
          IMPORTING
            er_entity               = er_entity
            es_response_context     = es_response_context.
      CATCH /iwbep/cx_mgw_busi_exception.
      CATCH /iwbep/cx_mgw_tech_exception.
    ENDTRY.
    ASSIGN COMPONENT 'status' OF STRUCTURE er_entity TO FIELD-SYMBOL(<fs_status>).
    IF <fs_status> IS ASSIGNED.
      <fs_status> = 'D'.
    ENDIF.
  ENDMETHOD.


  method I_SALESPRICINGCO_GET_ENTITYSET.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    CONSTANTS:cv_conditiontype TYPE string VALUE 'CONDITIONTYPE'.
    DATA: lo_tech_request_clone TYPE REF TO /iwbep/cl_mgw_request,
          lt_headers            TYPE tihttpnvp,
          lr_request            TYPE REF TO /iwbep/if_mgw_core_srv_runtime=>ty_s_mgw_request_context,
          ls_select_option      TYPE LINE OF /iwbep/t_mgw_select_option.

    mo_prcg_util->excluded_sls_conditiontype(
      IMPORTING
        et_conditiontype = DATA(lt_conditiontype)
    ).

    "as we need to adjust the request we will create a "clone" of request, adjust what is necessary
    "and then pass it to SADL framework
    DATA(ls_request) = CAST /iwbep/cl_mgw_request( io_tech_request_context )->get_request_details( ).

    "exclude condition type of tax related and no access sequences
    ASSIGN ls_request-technical_request-filter_select_options[ property = cv_conditiontype ] TO FIELD-SYMBOL(<lt_payment_meth_selopt>).
    IF sy-subrc NE 0.
      ls_select_option = VALUE #( property = cv_conditiontype ).
      APPEND ls_select_option TO ls_request-technical_request-filter_select_options.
      ASSIGN ls_request-technical_request-filter_select_options[ property = cv_conditiontype ] TO <lt_payment_meth_selopt>.
    ENDIF.
    LOOP AT lt_conditiontype INTO DATA(ls_conditiontype).
      APPEND VALUE #(  sign = 'E' option = 'EQ' low = ls_conditiontype-conditiontype )
          TO <lt_payment_meth_selopt>-select_options.
    ENDLOOP.

    GET REFERENCE OF ls_request INTO lr_request.

    TEST-SEAM clone_request_context.
      DATA(lo_model_fw) = CAST /iwbep/if_mgw_odata_fw_model( CAST /iwbep/cl_mgw_dp_facade( me->/iwbep/if_mgw_conv_srv_runtime~get_dp_facade( )
                                                         )->/iwbep/if_mgw_dp_int_facade~get_model( ) ).
      lo_tech_request_clone = NEW #( ir_request_details = lr_request it_headers = lt_headers io_model = lo_model_fw ).
    END-TEST-SEAM.

    "call super - let SADL do the selection
      CALL METHOD super->i_salespricingco_get_entityset
        EXPORTING
          iv_entity_name           = iv_entity_name
          iv_entity_set_name       = iv_entity_set_name
          iv_source_name           = iv_source_name
          it_filter_select_options = it_filter_select_options
          is_paging                = is_paging
          it_key_tab               = it_key_tab
          it_navigation_path       = it_navigation_path
          it_order                 = it_order
          iv_filter_string         = iv_filter_string
          iv_search_string         = iv_search_string
          io_tech_request_context  = lo_tech_request_clone
        IMPORTING
          et_entityset             = et_entityset
          es_response_context      = es_response_context.

  endmethod.


  METHOD group_for_draft.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    DATA: ls_entityset_groupby TYPE zcl_zsd_pricing_condit_mpc=>ts_zc_slspricingconditionrecor,
          lt_entityset_groupby TYPE zcl_zsd_pricing_condit_mpc=>tt_zc_slspricingconditionrecor.
    FIELD-SYMBOLS: <fs_pernr>     TYPE char8.

    LOOP AT ct_entityset ASSIGNING FIELD-SYMBOL(<fs_entityset>).
      "set personnel initial not '00000000', output blank
      IF <fs_entityset>-personnel IS INITIAL.
        ASSIGN <fs_entityset>-personnel TO <fs_pernr> CASTING.
        <fs_pernr> = space.
      ENDIF.

      IF <fs_entityset>-wbselementinternalid = '00000000'.
        CLEAR:<fs_entityset>-wbselementinternalid,<fs_entityset>-wbsdescription.
      ENDIF.

      IF <fs_entityset>-workpackage = '00000000'.
        CLEAR:<fs_entityset>-workpackage,<fs_entityset>-workpackagename.
      ENDIF.

      "Collect Group data by orderby field
      IF iv_is_manually_group EQ abap_true.
        LOOP AT ct_orderby ASSIGNING FIELD-SYMBOL(<fs_orderby>).
          ASSIGN COMPONENT <fs_orderby>-property OF STRUCTURE ls_entityset_groupby TO FIELD-SYMBOL(<fs_entityset_prop_groupby>).
          ASSIGN COMPONENT <fs_orderby>-property OF STRUCTURE <fs_entityset> TO FIELD-SYMBOL(<fs_entityset_property>).
          <fs_entityset_prop_groupby> = <fs_entityset_property>.
        ENDLOOP.
        COLLECT ls_entityset_groupby INTO lt_entityset_groupby.
      ELSE.
        <fs_entityset>-conditionrecordisdraft = COND #( WHEN <fs_entityset>-isactiveentity EQ abap_true  THEN abap_false
                                                        WHEN <fs_entityset>-isactiveentity EQ abap_false THEN abap_true ).
      ENDIF.
    ENDLOOP.

    "Return Group Data
    DATA: lv_tsl     TYPE timestampl,
          lv_tsl_str TYPE string.
    IF iv_is_manually_group EQ abap_true.
      LOOP AT lt_entityset_groupby ASSIGNING FIELD-SYMBOL(<fs_entityset_groupby>).
        GET TIME STAMP FIELD lv_tsl.
        lv_tsl_str = lv_tsl.
        REPLACE ALL OCCURRENCES OF '.' IN lv_tsl_str WITH space.
        CONDENSE lv_tsl_str.
        <fs_entityset_groupby>-conditionrecorduuid = lv_tsl_str.
      ENDLOOP.
      ct_entityset = lt_entityset_groupby.
    ENDIF.
  ENDMETHOD.


  method GET_TEXT.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
  DATA:
      lt_entityset          TYPE ZCL_ZSD_PRICING_CONDIT_MPC=>TT_ZC_SLSPRICINGCONDITIONRECOR,
      lt_entityset_tmp      TYPE ZCL_ZSD_PRICING_CONDIT_MPC=>TT_ZC_SLSPRICINGCONDITIONRECOR,
      ls_entityset_groupby  TYPE ZCL_ZSD_PRICING_CONDIT_MPC=>TS_ZC_SLSPRICINGCONDITIONRECOR,
      lt_entityset_groupby  TYPE ZCL_ZSD_PRICING_CONDIT_MPC=>TT_ZC_SLSPRICINGCONDITIONRECOR,
      ls_entityset          TYPE ZCL_ZSD_PRICING_CONDIT_MPC=>TS_ZC_SLSPRICINGCONDITIONRECOR,
      lr_entityset          TYPE REF TO data,
      lt_entityset_isact    TYPE ZCL_ZSD_PRICING_CONDIT_MPC=>TT_ZC_SLSPRICINGCONDITIONRECOR,
      lt_entityset_nonisact TYPE ZCL_ZSD_PRICING_CONDIT_MPC=>TT_ZC_SLSPRICINGCONDITIONRECOR,
      lt_entityset_get_text TYPE ZCL_ZSD_PRICING_CONDIT_MPC=>TT_ZC_SLSPRICINGCONDITIONRECOR.
    FIELD-SYMBOLS:
      <fs_pernr>       TYPE char8.

    "fill in text
    LOOP AT ct_entityset ASSIGNING FIELD-SYMBOL(<fs_entityset>).
      "set personnel initial not '00000000', output blank
      IF <fs_entityset>-personnel IS INITIAL.
        ASSIGN <fs_entityset>-personnel TO <fs_pernr> CASTING.
        <fs_pernr> = space.
      ENDIF.


      IF <fs_entityset>-wbselementinternalid = '00000000'.
        CLEAR:<fs_entityset>-wbselementinternalid,<fs_entityset>-wbsdescription.
      ENDIF.

      IF <fs_entityset>-workpackage = '00000000'.
        CLEAR:<fs_entityset>-workpackage,<fs_entityset>-workpackagename.
      ENDIF.

      "Collect Group data by orderby field
      IF iv_is_manually_group EQ abap_true.
        LOOP AT ct_orderby ASSIGNING FIELD-SYMBOL(<fs_orderby>).
          ASSIGN COMPONENT <fs_orderby>-property OF STRUCTURE ls_entityset_groupby TO FIELD-SYMBOL(<fs_entityset_prop_groupby>).
          ASSIGN COMPONENT <fs_orderby>-property OF STRUCTURE <fs_entityset> TO FIELD-SYMBOL(<fs_entityset_property>).
          <fs_entityset_prop_groupby> = <fs_entityset_property>.
        ENDLOOP.
        COLLECT ls_entityset_groupby INTO lt_entityset_groupby.
      ELSE.
        <fs_entityset>-conditionrecordisdraft = COND #( WHEN <fs_entityset>-isactiveentity EQ abap_true  THEN abap_false
                                                        WHEN <fs_entityset>-isactiveentity EQ abap_false THEN abap_true ).
        ls_entityset = <fs_entityset>.

        IF ls_entityset-isactiveentity = abap_false
          AND ls_entityset-hasactiveentity = abap_false. "text just for active-based data.
          APPEND <fs_entityset> TO lt_entityset_isact.
          CONTINUE.
        ENDIF.
        APPEND <fs_entityset> TO lt_entityset_nonisact.
      ENDIF.
    ENDLOOP.

    IF iv_is_manually_group NE abap_true.
      IF lt_entityset_nonisact IS NOT INITIAL.
        GET REFERENCE OF lt_entityset_nonisact INTO lr_entityset.
        "get text of fields.
        TEST-SEAM get_text.
          mo_prcg_util->get_text(
            EXPORTING
              iv_ddlname = gcs_sales_condition-C_SlsPricingConditionRecordTP "'C_SlsPricingConditionRecordTP'
            CHANGING
              cr_data = lr_entityset
          ).
          ASSIGN lr_entityset->* TO FIELD-SYMBOL(<fs_entityset_text>).
          MOVE-CORRESPONDING <fs_entityset_text> TO lt_entityset.
        END-TEST-SEAM.
      ENDIF.
      APPEND LINES OF lt_entityset_isact TO lt_entityset_get_text.
      APPEND LINES OF lt_entityset TO lt_entityset_get_text.
      ct_entityset = lt_entityset_get_text.
    ENDIF.

    "Return Group Data
    DATA: lv_tsl     TYPE timestampl,
          lv_tsl_str TYPE string.
    IF iv_is_manually_group EQ abap_true.
      LOOP AT lt_entityset_groupby ASSIGNING FIELD-SYMBOL(<fs_entityset_groupby>).
        GET TIME STAMP FIELD lv_tsl.
        lv_tsl_str = lv_tsl.
        REPLACE ALL OCCURRENCES OF '.' IN lv_tsl_str WITH space.
        CONDENSE lv_tsl_str.
        <fs_entityset_groupby>-conditionrecorduuid = lv_tsl_str.

        "handling personnel field
        IF <fs_entityset_groupby>-personnel IS INITIAL.
          ASSIGN <fs_entityset_groupby>-personnel TO <fs_pernr> CASTING.
          <fs_pernr> = space.
        ENDIF.
      ENDLOOP.
      ct_entityset = lt_entityset_groupby.
    ENDIF.
  endmethod.


  method GET_T681_BY_USAGE.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    READ TABLE mt_t681 WITH KEY kvewe = iv_usage
                       TRANSPORTING NO FIELDS.
    IF sy-subrc <> 0.
      SELECT *
        FROM t681
        INTO TABLE mt_t681
       WHERE kvewe = iv_usage.

    ENDIF.
    rt_t681 = mt_t681.
  endmethod.


  method GET_FILTER_INFO.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
  DATA:lrt_conditiontype TYPE RANGE OF kschl,
         lv_kschl          TYPE kschl,
         ls_orderby        TYPE if_slsprcg_cndnrecd_api_types=>ty_condition_orderby_field_s,
         lv_where_wbs      TYPE string.

**Get query option value:$count,$top,$skip,$orderby,$inlinecount,$links
    get_entityset_query_info(
      EXPORTING
        io_tech_request_context = io_tech_request_context
      IMPORTING
        es_query_option         = es_query_option
    ).

**$filter conversion to select option for public API class
    TEST-SEAM get_filter_expression_tree.
      READ TABLE me->mr_request_details->technical_request-filter_expressions WITH KEY l_oprnd_int = 'ISACTIVEENTITY' TRANSPORTING NO FIELDS.
      IF sy-subrc = 0.
        DATA(lv_is_request_activated) = abap_true.
      ENDIF.

      DATA(lt_postfix) = mo_prcg_util->convert_expr_filter_to_postfix( it_filter_expr      = me->mr_request_details->technical_request-filter_expressions
                                                                       it_filter_functions = me->mr_request_details->technical_request-filter_functions
                                                                       iv_download_flag    = abap_false ).
      DATA(lv_where_clause) = mo_prcg_util->convert_expr_postfix_to_where( lt_postfix ).
      ev_where_clause = mo_prcg_util->convert_expr_postfix_to_origwh( lt_postfix ).
    END-TEST-SEAM.

    IF lv_where_clause IS INITIAL.
      lv_where_clause = gcs_sales_condition-where_contains_all_data. "'CONDITIONTYPE LIKE ''%'''
    ENDIF.

**Convert where clause to select option like
    TRY.
        CALL METHOD mo_prcg_util->convert_where_to_select_option
          EXPORTING
            iv_where_clause = lv_where_clause
          IMPORTING
            et_item         = DATA(lt_item).
      CATCH cx_prcg_cndnrecord_exception INTO DATA(lo_ex). " Exception for Condition Public API
        raise_busi_exc_from_api_exc( lo_ex ).
    ENDTRY.

**Get editing status information:All, Own Draft, Unchanged
    check_editing_status( IMPORTING ev_is_draft     = DATA(lv_is_request_draft)
                                    ev_is_activated = lv_is_request_activated
                          CHANGING  ct_item = lt_item ).

**Exclude condition type: tax, without access sequence
    mo_prcg_util->excluded_sls_conditiontype(
      IMPORTING
        et_conditiontype = DATA(lt_conditiontype)
    ).

    LOOP AT lt_conditiontype INTO DATA(ls_conditiontype) WHERE kozgf <> space.
      APPEND VALUE #( sign   = gcs_sales_condition-sign_e
                      option = gcs_sales_condition-option_eq
                      low    = ls_conditiontype-conditiontype )
          TO lrt_conditiontype.
    ENDLOOP.

    LOOP AT lt_item ASSIGNING FIELD-SYMBOL(<fs_item>).
      DATA(lv_tabix) = sy-tabix.
      IF lines( <fs_item>-conditiontype ) = 1.
        "Check ConditionType excluded
        READ TABLE <fs_item>-conditiontype INTO DATA(ls_typ)
                                           WITH KEY sign   = gcs_sales_condition-sign_e "'E'
                                                    option = gcs_sales_condition-option_ne."'NE'.
        IF sy-subrc = 0.
          lv_kschl = ls_typ-low.
          READ TABLE lt_conditiontype WITH KEY conditiontype = lv_kschl
                                    TRANSPORTING NO FIELDS.
          IF sy-subrc = 0.
            DELETE lt_item INDEX lv_tabix.
          ENDIF.
          CONTINUE.
        ENDIF.
      ENDIF.

      APPEND LINES OF lrt_conditiontype TO <fs_item>-conditiontype.
    ENDLOOP.

    IF ev_where_clause IS INITIAL.
      ev_where_clause = lv_where_clause.
    ENDIF.
    et_item = lt_item.
  endmethod.


  method GET_FIELD_CONTROL_FIELDS.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
  DATA:lo_model TYPE REF TO /iwbep/cl_mgw_odata_model.

    TEST-SEAM get_model.
      TRY.
          lo_model ?= CAST /iwbep/if_mgw_odata_fw_model(
                             CAST /iwbep/cl_mgw_dp_facade( me->/iwbep/if_mgw_conv_srv_runtime~get_dp_facade( )
                                                          )->/iwbep/if_mgw_dp_int_facade~get_model( ) ).
        CATCH /iwbep/cx_mgw_tech_exception INTO DATA(lo_ex). " Technical Exception
      ENDTRY.
    END-TEST-SEAM.

    mo_prcg_util->set_odata_metadata( it_nodes = lo_model->mt_entities io_model = lo_model ).

    LOOP AT lo_model->mt_entities INTO DATA(ls_node).
      LOOP AT ls_node-properties INTO DATA(ls_properties)
                                 WHERE external_name CS '_fc'.
        APPEND VALUE #( name = ls_properties-name ) TO et_fields_fc.
      ENDLOOP.
    ENDLOOP.

*    SELECT fieldname AS name
*      FROM dd03l
*     WHERE tabname IN ( 'SDPRCOMHEAD_INCL_EEW_TR', 'SDPRCOMITEM_INCL_EEW_TR' )
*       AND as4local = 'A'
*       AND as4vers  = '0000'
*       AND rollname = 'CFD_CUSTOM_UI_FIELD_CONTROL'
*       APPENDING CORRESPONDING FIELDS OF TABLE @et_fields_fc.

    SORT et_fields_fc BY name.
    DELETE ADJACENT DUPLICATES FROM et_fields_fc COMPARING name.
  endmethod.


  method GET_ENTITYSET_QUERY_INFO.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
   DATA:ls_orderby_field TYPE if_slsprcg_cndnrecd_api_types=>ty_condition_orderby_field_s,
         lt_orderby_field TYPE if_slsprcg_cndnrecd_api_types=>ty_condition_orderby_field_t.

    CLEAR:es_query_option,ev_key_where_clause.

**$orderby
    TEST-SEAM get_orderby.
      DATA(lt_orderby) = io_tech_request_context->get_orderby( ).
    END-TEST-SEAM.

    IF NOT lt_orderby IS INITIAL.
      LOOP AT lt_orderby INTO DATA(ls_orderby).
        CLEAR ls_orderby_field.
        ls_orderby_field-sortfield    = ls_orderby-property.
        ls_orderby_field-sortsequence = ls_orderby-order.
        TRANSLATE ls_orderby_field-sortsequence TO UPPER CASE.
        APPEND ls_orderby_field TO lt_orderby_field.
      ENDLOOP.
    ENDIF.

**$top
    DATA(lv_top) = io_tech_request_context->get_top( ).

**$skip
    DATA(lv_skip) = io_tech_request_context->get_skip( ).

**$count
    DATA(lv_count) = io_tech_request_context->has_count( ).

**$inlinecount
    DATA(lv_inlinecount) = io_tech_request_context->has_inlinecount( ).

**Add the query option
    es_query_option-prcgqueryoptiontop         = lv_top.
    es_query_option-prcgqueryoptionskip        = lv_skip.
    es_query_option-prcgqueryoptionorderby     = lt_orderby_field.
    es_query_option-queryoptioncountisset       = lv_count.
    es_query_option-queryoptioninlinecountisset = lv_inlinecount.
  endmethod.


  METHOD i_currencystdvh_get_entityset.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    TRY.
        TEST-SEAM super_i_currency_get_entityset.
          CALL METHOD super->i_currencystdvh_get_entityset
            EXPORTING
              iv_entity_name           = iv_entity_name
              iv_entity_set_name       = iv_entity_set_name
              iv_source_name           = iv_source_name
              it_filter_select_options = it_filter_select_options
              is_paging                = is_paging
              it_key_tab               = it_key_tab
              it_navigation_path       = it_navigation_path
              it_order                 = it_order
              iv_filter_string         = iv_filter_string
              iv_search_string         = iv_search_string
              io_tech_request_context  = io_tech_request_context
            IMPORTING
              et_entityset             = et_entityset
              es_response_context      = es_response_context.
        END-TEST-SEAM.
      CATCH /iwbep/cx_mgw_busi_exception INTO DATA(lx_busi).
        RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
          EXPORTING
            previous = lx_busi.
      CATCH /iwbep/cx_mgw_tech_exception INTO DATA(lx_tech).
        RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
          EXPORTING
            previous = lx_tech.
    ENDTRY.

    IF is_paging-skip IS INITIAL AND ( ( it_filter_select_options IS INITIAL AND iv_search_string IS INITIAL )
      OR ( iv_search_string EQ '%'
      OR line_exists( it_filter_select_options[ property = 'Currency' select_options = VALUE #( ( sign = 'I' option = 'EQ' low = '%' high = '' ) ) ] ) ) ).
      DATA ls_entityset LIKE LINE OF et_entityset.
      ls_entityset-currency = '%'.
      ls_entityset-t_currency = 'Percentage' ##NO_TEXT.
      APPEND ls_entityset TO et_entityset.
    ENDIF.
  ENDMETHOD.


  METHOD zc_slspricingcon_get_entityset.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    DATA:lt_draft_with_active TYPE zcl_zsd_pricing_condit_mpc=>tt_zc_slspricingconditionrecor,
         ls_set               TYPE zcl_zsd_pricing_condit_mpc=>ts_zc_slspricingconditionrecor,
         lt_entityset_active  TYPE zcl_zsd_pricing_condit_mpc=>tt_zc_slspricingconditionrecor,
         ls_header            TYPE if_slsprcg_cndnrecd_api_types=>ty_cndnrecd_criteria_header_s,
         ls_query_option      TYPE if_slsprcg_cndnrecd_api_types=>ty_cndnrecd_query_option_s,
         ls_msg               TYPE symsg,
         lv_ps_posnr          TYPE ps_posnr,
         ls_orderby           TYPE if_slsprcg_cndnrecd_api_types=>ty_condition_orderby_field_s,
         lv_where_wbs         TYPE string,
         lo_message_container TYPE REF TO /iwbep/if_message_container.

    FIELD-SYMBOLS:<ft_table> TYPE STANDARD TABLE.

**For download Excel: buffer the filter conditions
    DATA(lt_request_header) = io_tech_request_context->get_request_headers( ).
    DATA(lv_isexcel_download) = VALUE #( lt_request_header[ name = 'downloadexcel' ]-value OPTIONAL ) .

    IF lv_isexcel_download EQ abap_true.
      mt_filter_expressions = me->mr_request_details->technical_request-filter_expressions .
      mt_filter_functions   = me->mr_request_details->technical_request-filter_functions .
      RETURN.
    ENDIF.

**For the UI request, the first page request will send the $inlinecount=allpages to OData service,
**so the Count is calculated in the first page

**To identify if it is Group by Select field and Orderby field is same field
    TEST-SEAM set_tech_request_method.
      DATA(lt_orderby) = io_tech_request_context->get_orderby( ).
      DATA(lt_select)  = io_tech_request_context->get_select_entity_properties( ).
      DATA(lt_select_query)  = io_tech_request_context->get_select( ).
      DATA(lt_request_headers) = io_tech_request_context->get_request_headers( ).
      mo_prcg_util->set_select_fields( lt_select_query ). "for get text use
    END-TEST-SEAM.
    mv_is_manually_group = check_is_group( it_orderby = lt_orderby it_select = lt_select ).

    "Check Editting Status:IsActiveEntity
    LOOP AT lt_request_headers INTO DATA(ls_request_header)
                               WHERE value CS gcs_sales_condition-isactiveentity_filter.
      REPLACE ALL OCCURRENCES OF '%20' IN ls_request_header-value WITH space. "in case of multiple space(%20)
      CONDENSE ls_request_header-value NO-GAPS.
      IF ls_request_header-value CS gcs_sales_condition-own_draft_filter."'IsActiveEntityeqfalse'.
        DATA(lv_is_request_draft) = abap_true. "Own Draft
      ENDIF.
      IF ls_request_header-value CS gcs_sales_condition-unchanged_filter."'IsActiveEntityeqtrue'.
        DATA(lv_is_request_activated) = abap_true. "Unchanged
      ENDIF.
    ENDLOOP.

    IF lv_is_request_draft EQ abap_true "Own Draft is selected
      OR lv_is_request_activated EQ abap_false. "All is selected
**Retrieve only draft + activated with a draft
      TRY.
          TEST-SEAM super_get_entityset.
            CALL METHOD super->zc_slspricingcon_get_entityset(
              EXPORTING
                iv_entity_name           = iv_entity_name
                iv_entity_set_name       = iv_entity_set_name
                iv_source_name           = iv_source_name
                it_filter_select_options = it_filter_select_options
                it_order                 = it_order
                is_paging                = is_paging
                it_navigation_path       = it_navigation_path
                it_key_tab               = it_key_tab
                iv_filter_string         = iv_filter_string
                iv_search_string         = iv_search_string
                io_tech_request_context  = io_tech_request_context
              IMPORTING
                et_entityset             = DATA(lt_entityset_draft)
                es_response_context      = es_response_context
            ).
          END-TEST-SEAM.
        CATCH /iwbep/cx_mgw_busi_exception INTO DATA(lx_busi).
          RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
            EXPORTING
              previous = lx_busi.
        CATCH /iwbep/cx_mgw_tech_exception INTO DATA(lx_tech).
          RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
            EXPORTING
              previous = lx_tech.
      ENDTRY.

      LOOP AT lt_entityset_draft INTO DATA(ls_entityset_draft).
*       Edit either FixedValueDate or AdditionalValueDays ---added at 2021/01/08
        IF ls_entityset_draft-fixedvaluedate IS NOT INITIAL.
          ls_entityset_draft-f_additionalvaluedays = '1'.
        ELSE.
          ls_entityset_draft-f_additionalvaluedays = '3'.
        ENDIF.

        IF ls_entityset_draft-additionalvaluedays IS NOT INITIAL.
          ls_entityset_draft-f_fixedvaluedate = '1'.
        ELSE.
          ls_entityset_draft-f_fixedvaluedate = '3'.
        ENDIF.

        ls_entityset_draft-status = 'D'. "Draft
        IF ls_entityset_draft-conditionrecord NE ''.
          DATA(lv_start_str) = substring( val = ls_entityset_draft-conditionrecord off = 0 len = 2 ).
          IF lv_start_str NE gcs_sales_condition-knumh_start_str."'$$'.
            APPEND ls_entityset_draft TO lt_draft_with_active.
            DELETE lt_entityset_draft WHERE conditionrecord = ls_entityset_draft-conditionrecord
                                        AND conditionvalidityenddate = ls_entityset_draft-conditionvalidityenddate.
          ELSE.
            MODIFY lt_entityset_draft FROM ls_entityset_draft TRANSPORTING status f_additionalvaluedays f_fixedvaluedate.
          ENDIF.
        ENDIF.
      ENDLOOP.
      SORT lt_entityset_draft BY draftentitylastchangedatetime DESCENDING.
      SORT lt_draft_with_active BY draftentitylastchangedatetime ASCENDING conditionrecord DESCENDING.
      APPEND LINES OF lt_draft_with_active TO lt_entityset_draft.
    ENDIF.

    IF lv_is_request_draft EQ abap_true. "Own Draft is selected
      APPEND LINES OF lt_entityset_draft TO et_entityset.
      group_for_draft(
        EXPORTING
          iv_is_manually_group = mv_is_manually_group
        CHANGING
          ct_orderby   = lt_orderby
          ct_entityset = et_entityset
      ).
    ELSE.

      TRY.
          get_filter_info(
            EXPORTING
              io_tech_request_context = io_tech_request_context
            IMPORTING
              es_query_option         = ls_query_option
              ev_where_clause         = DATA(lv_where_clause)
              et_item                 = DATA(lt_item)
          ).
        CATCH /iwbep/cx_mgw_busi_exception INTO lx_busi.
          RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
            EXPORTING
              previous = lx_busi.
      ENDTRY.
      IF lt_item IS INITIAL.
        EXIT.
      ENDIF.

      IF lv_is_request_activated EQ abap_false. "All is selected
        TEST-SEAM set_exclued_number.
          calculate_paging(
            EXPORTING
              is_paging       = is_paging
              it_draft        = lt_entityset_draft
              iv_where_clause = lv_where_clause
            IMPORTING
              et_excluded_condrecord = DATA(lt_excluded_condrecord)
              ev_only_has_draft      = DATA(lv_only_has_draft)
            CHANGING
              cs_query_option = ls_query_option ).
          DATA(lv_excluded_lines) = lines( lt_excluded_condrecord ).
        END-TEST-SEAM.

        "Exclude records count limit is set, due to the Where clause length limit caused by public API class
        "Suggest to save draft or cancel draft via set the Editting Status 'Own Draft'
        "Only when draft records contains active based draft ones
        IF lv_excluded_lines > mv_record_count_limit.
          MESSAGE e086(prcg_cndnrecord_api) WITH mv_record_count_limit INTO DATA(lv_message).
          MOVE-CORRESPONDING sy TO ls_msg.
          TEST-SEAM raise_no_exp_return.
*            TRY.
*                raise_prcg_cndn_exception( ls_msg ).
*              CATCH cx_prcg_cndnrecord_exception INTO DATA(lo_ex). " Exception for Condition Public API
*                raise_busi_exc_from_api_exc( lo_ex ).
*            ENDTRY.
            CALL METHOD me->/iwbep/if_mgw_conv_srv_runtime~get_message_container
              RECEIVING
                ro_message_container = lo_message_container.
            IF lo_message_container IS BOUND.
              lo_message_container->add_message(
                EXPORTING
                  iv_msg_type               = ls_msg-msgty
                  iv_msg_id                 = ls_msg-msgid
                  iv_msg_number             = ls_msg-msgno
                  iv_msg_v1                 = ls_msg-msgv1
                  iv_msg_v2                 = ls_msg-msgv2
                  iv_msg_v3                 = ls_msg-msgv3
                  iv_msg_v4                 = ls_msg-msgv4
                  iv_add_to_response_header = 'X'
                  iv_is_leading_message     = 'X'
              ).
            ENDIF.
          END-TEST-SEAM.
          CLEAR et_entityset.
          es_response_context-inlinecount = '0'.
          RETURN.
        ENDIF.
      ENDIF.

      "'inlinecount is set' means the first page, in which the Count is calculated
      IF ls_query_option-queryoptioninlinecountisset EQ abap_true
        "Current page contains active records
        OR lv_only_has_draft EQ abap_false.

        ls_header-deltdconditionrecordisexcluded = abap_true. "do not get data with deletion flag (X)
        DELETE ls_query_option-prcgqueryoptionorderby
         WHERE sortfield = gcs_sales_condition-conditiontable. "ConditionTable can not Order by

        prepare_item_header(
          EXPORTING
            it_excluded_condrecord = lt_excluded_condrecord
          CHANGING
            cs_header = ls_header ct_item = lt_item ).
        TRY.
            mo_prcg_util->convert_value_to_input_sel(
              EXPORTING
                iv_tabname = 'ZISLSPRCGCNDNVA'
              CHANGING
                ct_item    = lt_item
            ).
          CATCH cx_prcg_cndnrecord_exception INTO DATA(lo_ex). " Exception for Condition Public API
            raise_busi_exc_from_api_exc( lo_ex ).
        ENDTRY.

        IF NOT lt_item IS INITIAL.
          IF ls_query_option-prcgqueryoptionorderby IS INITIAL.
            ls_orderby-sortfield = gcs_sales_condition-conditionrecord. "'CONDITIONRECORD'.
            ls_orderby-sortsequence = 'DESC'.
            APPEND ls_orderby TO ls_query_option-prcgqueryoptionorderby.
          ENDIF.
          mo_ltd_db->set_sls_cndn_app_flag( abap_true ).
          TRY.
              mo_sls_api->get_condition_record(
                EXPORTING
                  is_cndnrecord_criteria_header = ls_header
                  it_cndnrecord_criteria_item   = lt_item
                  is_cndnrecord_query_option    = ls_query_option
                IMPORTING
                  et_condition_validity_enh     = DATA(lt_validity)
                  et_condition_record           = DATA(lt_record)
                  es_cndn_query_option_response = DATA(ls_response)
                  et_condition_record_text      = DATA(lt_record_text)
                  et_condition_supplement_text  = DATA(lt_supplement_text)
              ).
            CATCH cx_prcg_cndnrecord_exception INTO lo_ex. " Exception for Condition Public API
              raise_busi_exc_from_api_exc( lo_ex ).
          ENDTRY.

          "Current page contains active records
          IF lv_only_has_draft EQ abap_false.
            "If condition table (eg. A394) contains no date as key, set the end date as 99991231.
            SORT lt_record BY conditionrecord.
            SORT lt_record_text BY conditionrecord language.
            DATA(lt_record_all) = lt_record.
            DATA(lt_t681) = get_t681_by_usage( iv_usage = if_ct_types=>c_usage_pricing "'A'
                                                      ).
            LOOP AT lt_t681 INTO DATA(ls_t681) WHERE ksdat = abap_true. "validity period
              DELETE lt_record WHERE conditiontable = ls_t681-kotabnr.
            ENDLOOP.

            LOOP AT lt_validity INTO DATA(ls_validity).
              READ TABLE lt_record_all INTO DATA(ls_record) WITH KEY conditionrecord = ls_validity-conditionrecord
                                 BINARY SEARCH.
              IF sy-subrc = 0.
                MOVE-CORRESPONDING ls_record TO ls_set.
                READ TABLE lt_record_text INTO DATA(ls_record_text) WITH KEY conditionrecord = ls_validity-conditionrecord
                                                                             language = sy-langu
                                                                             BINARY SEARCH.
                IF sy-subrc = 0.
                  ls_set-conditiontext = ls_record_text-conditiontext.
                ENDIF.
              ELSE.
                CONTINUE.
              ENDIF.

              READ TABLE lt_record WITH KEY conditionrecord = ls_validity-conditionrecord
                                   BINARY SEARCH TRANSPORTING NO FIELDS.
              IF sy-subrc = 0.
                ls_validity-conditionvalidityenddate = gcs_sales_condition-validity_end_date.
              ENDIF.

              IF ls_validity-conditiontype IS INITIAL.
                CLEAR:ls_set.
                ls_set-status = 'B'. "Blocked customer
                ls_set-conditionrecord = ls_validity-conditionrecord.
                ls_set-conditionsequentialnumber = ls_record-conditionsequentialnumber.
              ELSEIF NOT ls_validity-conditiontype IS INITIAL AND ls_validity-conditionapplication IS INITIAL.
                CLEAR:ls_set.
                ls_set-status = 'A'. "No authorization
                ls_set-conditionrecord = ls_validity-conditionrecord.
                ls_set-conditionsequentialnumber = ls_record-conditionsequentialnumber.
              ELSE.
                MOVE-CORRESPONDING ls_validity TO ls_set.

                ls_set-conditionreleasestatus = ls_record-conditionreleasestatus.
                ls_set-status = 'U'. "Unchanged
              ENDIF.

              IF ls_set-fixedvaluedate IS INITIAL OR ls_set-fixedvaluedate EQ space.
                ls_set-fixedvaluedate = gcs_sales_condition-initial_date.
              ENDIF.

              ls_set-isactiveentity = abap_true.
              ls_set-conditionrecorduuid = |{ ls_validity-conditionrecord }|
                                         & |{ ls_set-conditionsequentialnumber }|
                                         & |{ ls_validity-conditionvalidityenddate }|.
              ls_set-conditionreleasestatus = ls_validity-conditionreleasestatus.
              APPEND ls_set TO lt_entityset_active.
              CLEAR:ls_set.
            ENDLOOP.
            FREE:lt_record,lt_validity.
          ENDIF.
        ENDIF.
      ENDIF.

      IF lv_only_has_draft EQ abap_true.
        APPEND LINES OF lt_entityset_draft TO et_entityset.
        group_for_draft(
          EXPORTING
           iv_is_manually_group = mv_is_manually_group
           CHANGING
             ct_orderby = lt_orderby
             ct_entityset = et_entityset
        ).
      ELSE.
        "For Active: Set Property for EntitySet, the Overview all page, allow to change the amount
        set_property(
          IMPORTING
            es_entityset = ls_set
            er_table     = DATA(lr_table)
        ).

        ASSIGN lr_table->* TO <ft_table>.
        IF <ft_table> IS ASSIGNED.
          APPEND INITIAL LINE TO <ft_table>.
          READ TABLE <ft_table> ASSIGNING FIELD-SYMBOL(<fs_line>) INDEX 1.
          MOVE-CORRESPONDING ls_set TO <fs_line>.

          LOOP AT lt_select_query INTO DATA(ls_select_query)
                                  WHERE table_line = gcs_sales_condition-wbselementinternalid "'WBSELEMENTINTERNALID'
                                     OR table_line = gcs_sales_condition-workpackage."'WORKPACKAGE'.
            DATA(lv_wbs_related) = abap_true.
            EXIT.
          ENDLOOP.

          LOOP AT lt_entityset_active ASSIGNING FIELD-SYMBOL(<fs_set>).
            IF lv_wbs_related = abap_true.
              ASSIGN COMPONENT gcs_sales_condition-wbselementinternalid
                  OF STRUCTURE <fs_set> TO FIELD-SYMBOL(<fs_wbselement>).
              IF <fs_wbselement> IS ASSIGNED AND NOT <fs_wbselement> IS INITIAL
                AND <fs_wbselement> NE gcs_sales_condition-wbs_related_initial.
                CLEAR:lv_ps_posnr.
                lv_ps_posnr = <fs_wbselement>.
                CALL FUNCTION 'CONVERSION_EXIT_ABPSP_OUTPUT'
                  EXPORTING
                    input  = lv_ps_posnr
                  IMPORTING
                    output = <fs_wbselement>.
              ENDIF.

              ASSIGN COMPONENT gcs_sales_condition-workpackage
                  OF STRUCTURE <fs_set> TO FIELD-SYMBOL(<fs_workpackage>).
              IF <fs_workpackage> IS ASSIGNED AND NOT <fs_workpackage> IS INITIAL
                AND <fs_workpackage> NE gcs_sales_condition-wbs_related_initial.
                CLEAR:lv_ps_posnr.
                lv_ps_posnr = <fs_workpackage>.
                CALL FUNCTION 'CONVERSION_EXIT_ABPSP_OUTPUT'
                  EXPORTING
                    input  = lv_ps_posnr
                  IMPORTING
                    output = <fs_workpackage>.
              ENDIF.
            ENDIF.
            MOVE-CORRESPONDING <fs_line> TO <fs_set>. "for field control
          ENDLOOP.
        ENDIF.

        APPEND LINES OF lt_entityset_draft TO et_entityset.
        IF lt_orderby IS INITIAL.
          SORT lt_entityset_active BY conditionrecord DESCENDING.
        ENDIF.

        APPEND LINES OF lt_entityset_active TO et_entityset.

        "fill test and handle orderby groupby
        get_text(
          EXPORTING
            iv_is_manually_group = mv_is_manually_group
          CHANGING
            ct_orderby = lt_orderby
            ct_entityset = et_entityset
        ).
      ENDIF.

**Assign count inlinecount: draft counts (if have) + active counts
      IF ls_query_option-queryoptioninlinecountisset = abap_true.
        es_response_context-inlinecount = es_response_context-inlinecount + ls_response-prcgconditionrecordcount.
      ENDIF.
    ENDIF.
  ENDMETHOD.


  method CONSTRUCTOR.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    super->constructor( ).
    mo_sls_api = NEW zcl_slsprcg_cndnrecord_api( ).
    mo_prcg_util = cl_cndnrecord_public_utility=>get_instance( ).
    mo_dep = cl_cnd_maint_ltd_dep_mgr=>get_instance( ).
    mo_cond_checks = cl_cnd_maint_ltd_check_mgr=>get_instance( ).
    mo_record ?= cl_prcg_cndnrecd_srvc_factory=>get_instance( )->get_cndnrecd_object( iv_condition_category = '1' ).
    mo_ltd_util = cl_cnd_maint_ltd_util=>get_instance( ).
    mo_ltd_db = cl_cnd_maint_ltd_db=>get_instance( ).
    mo_srv_facade ?= cl_prcg_cndnrecd_srv_facade=>get_instance( ).
    mo_validity ?= cl_prcg_cndnrecd_srvc_factory=>get_instance( )->get_cndnrecd_object( iv_condition_category = '2' ).
    mo_gw_msg_container = /iwbep/cl_mgw_msg_container=>get_mgw_msg_container( ).
    mo_condtype = cl_ct_customizing_factory=>get_instance( )->get_condtype( ).
    mo_accseq = cl_ct_customizing_factory=>get_instance( )->get_accseq( ).
    TRY.
        mo_configuration = /bobf/cl_frw_factory=>get_configuration( iv_bo_key = if_i_slspricingconditionreco_c=>sc_bo_key ).
        mo_lock_manager = /bobf/cl_lib_durable_lock_mngr=>get_instance( mo_configuration ).
      CATCH /bobf/cx_frw INTO DATA(lx_bopf). " BOPF Exception Class
    ENDTRY.
  endmethod.


  method CHECK_IS_GROUP.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
       DATA: lt_select_option_tmp TYPE /iwbep/t_mgw_tech_order,
          ls_select_option_tmp TYPE /iwbep/s_mgw_tech_order,
          lt_orderby           TYPE /iwbep/t_mgw_tech_order.

    lt_orderby = it_orderby.
    IF NOT lt_orderby IS INITIAL.
      LOOP AT it_select INTO DATA(ls_select).
        IF ls_select NE gcs_sales_condition-conditionrecorduuid AND ls_select NE gcs_sales_condition-isactiveentity.
          ls_select_option_tmp-property = ls_select.
          APPEND ls_select_option_tmp TO lt_select_option_tmp.
        ENDIF.
      ENDLOOP.

      LOOP AT lt_orderby ASSIGNING FIELD-SYMBOL(<fs_orderby>).
        CLEAR: <fs_orderby>-property_path, <fs_orderby>-order.
      ENDLOOP.
      IF lt_select_option_tmp EQ lt_orderby.
        rv_is_group = abap_true.
      ENDIF.
    ENDIF.
  endmethod.


  method CHECK_EDITING_STATUS.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    LOOP AT ct_item INTO DATA(ls_item_where).
      "Editing status is Own Draft
      READ TABLE ls_item_where-conditionfieldselectionoption
            WITH KEY prcgconditionfieldrangename = gcs_sales_condition-isactiveentity "'ISACTIVEENTITY'
                     prcgconditionfieldrangelow  = abap_false TRANSPORTING NO FIELDS.
      IF sy-subrc = 0.
        ev_is_draft = abap_true.
      ENDIF.

      "Editing status is Unchanged
      READ TABLE ls_item_where-conditionfieldselectionoption
            WITH KEY prcgconditionfieldrangename = gcs_sales_condition-isactiveentity "'ISACTIVEENTITY'
                     prcgconditionfieldrangelow  = abap_true TRANSPORTING NO FIELDS.
      IF sy-subrc = 0.
        READ TABLE ls_item_where-conditionfieldselectionoption
              WITH KEY prcgconditionfieldrangename = gcs_sales_condition-hasdraftentity "'HASDRAFTENTITY'
                       prcgconditionfieldrangelow  = abap_false TRANSPORTING NO FIELDS.
        IF sy-subrc = 0.
          ev_is_activated = abap_true.
          DELETE ls_item_where-conditionfieldselectionoption WHERE prcgconditionfieldrangename = gcs_sales_condition-isactiveentity
                                                               AND prcgconditionfieldrangelow  = abap_true.
          DELETE ls_item_where-conditionfieldselectionoption WHERE prcgconditionfieldrangename = gcs_sales_condition-hasdraftentity
                                                               AND prcgconditionfieldrangelow  = abap_false.
          MODIFY ct_item FROM ls_item_where TRANSPORTING conditionfieldselectionoption.
        ENDIF.
      ENDIF.
    ENDLOOP.
  endmethod.


  method CANCEL_EXPIRED_DRAFT_BEF_SAVE.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
      DATA:lo_context            TYPE REF TO /iwbep/cl_mgw_request,
         lv_uuid               TYPE /bobf/uuid,
         lv_enqueue_context_id TYPE enq_context_id,
         ls_draft_admin_key    TYPE sdraft_admin_key,
         lv_enqueue_since      TYPE sdraft_enqueue_since,
         lv_knumh              TYPE knumh,
         lv_text               TYPE bapi_msg,
         lv_line               TYPE string,
         lt_text               TYPE STANDARD TABLE OF bapitgb,
         ls_return             TYPE bapiret2.

    "Cancel expired active-based draft before Save
    "When execute Save action (Activation) or MERGE for draft change
    "and the lock of the active based draft data is not effective,
    "which means that the enqueue_context in table sdraft_admin is initial (lock expired exceed its duration),
    "pop up message to cancel the draft
    CLEAR:et_sdraft_admin_key.
    LOOP AT it_changeset_request INTO DATA(ls_changeset_request).
      TEST-SEAM request_for_action.
        lo_context ?= ls_changeset_request-request_context.
        DATA(ls_request) = lo_context->get_request_details( ).
      END-TEST-SEAM.

      IF ls_request-resource_from_uri <> gcs_sales_condition-bopf_save_action_name"'ZC_SlsPricingConditionRecordTPActivation' "Save action
        AND ls_request-http_method <> gcs_sales_condition-http_method_merge."'MERGE'.
        EXIT.
      ELSE.
        READ TABLE ls_request-parameters INTO DATA(ls_parameter)
                                         WITH KEY name = gcs_sales_condition-conditionrecorduuid_raw."'ConditionRecordUUID'.
        IF sy-subrc = 0.
          DATA(lv_uuid_value) = ls_parameter-value.
        ELSE.
          READ TABLE ls_request-key_tab INTO DATA(ls_key_tab)
                                        WITH KEY name = gcs_sales_condition-conditionrecorduuid_raw."'ConditionRecordUUID'.
          IF sy-subrc = 0.
            lv_uuid_value = ls_key_tab-value.
          ENDIF.
        ENDIF.
        IF sy-subrc = 0 AND lv_uuid_value CO '0123456789'. "Only check active-based draft
          lv_uuid = lv_uuid_value.
          ls_draft_admin_key = VALUE sdraft_admin_key( draft_entity = mo_configuration->ms_obj-bo_name
                                                       draft_key  = lv_uuid ).
          TEST-SEAM principal_for_action.
            cl_draft_admin_access=>get_enqueue_context(
              EXPORTING
                is_key             = ls_draft_admin_key
              IMPORTING
                es_principal       = DATA(ls_principal)
              RECEIVING
                rv_enqueue_context = DATA(lv_enqueue_context)
            ).
          END-TEST-SEAM.

          IF NOT ls_principal IS INITIAL AND lv_enqueue_context IS INITIAL.
            lv_knumh = lv_uuid_value(10).

            IF lv_line IS INITIAL AND ls_return-type EQ space.
              CALL FUNCTION 'BAPI_MESSAGE_GETDETAIL'
                EXPORTING
                  id         = 'PRCG_CNDNRECORD_API'
                  number     = '084'
                  language   = sy-langu
                  textformat = 'ASC'
                IMPORTING
                  return     = ls_return
                TABLES
                  text       = lt_text.
              IF ls_return-type <> 'E'.
                READ TABLE lt_text INTO DATA(ls_text) INDEX 2.
                IF sy-subrc = 0.
                  lv_line = ls_text-line.
                ENDIF.
              ENDIF.
            ENDIF.

            MESSAGE e084(prcg_cndnrecord_api) WITH lv_knumh INTO DATA(lv_message).
            CONCATENATE lv_message lv_line INTO lv_text SEPARATED BY space.

            CALL METHOD mo_gw_msg_container->add_message
              EXPORTING
                iv_msg_type   = sy-msgty
                iv_msg_id     = sy-msgid
                iv_msg_number = sy-msgno
                iv_msg_v1     = sy-msgv1
                iv_msg_v2     = sy-msgv2
                iv_msg_v3     = sy-msgv3
                iv_msg_v4     = sy-msgv4
                iv_msg_text   = lv_text.
            APPEND ls_draft_admin_key TO et_sdraft_admin_key.
          ENDIF.
          CLEAR:ls_principal,lv_enqueue_context,lv_knumh,lv_uuid_value.
        ENDIF.
      ENDIF.
    ENDLOOP.
  endmethod.


  method CALCULATE_PAGING.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
   "Select all draft data and exclude those ConditionRecord when retrieving activated data
    "Current page is first page and draft data number < top (paging number)
    IF is_paging-skip IS INITIAL AND is_paging-top > lines( it_draft ).
      DATA(lv_draftsize) = lines( it_draft ).
      LOOP AT it_draft INTO DATA(ls_draft).
        IF ls_draft-conditionrecord+0(2) NE gcs_sales_condition-knumh_start_str.
          APPEND VALUE #( sign   = gcs_sales_condition-sign_e
                          option = gcs_sales_condition-option_eq
                          low    = ls_draft-conditionrecord )
              TO et_excluded_condrecord.
        ENDIF.
      ENDLOOP.
    ELSE.
      DATA(lv_where_clause) = iv_where_clause.
      lv_where_clause = cl_abap_dyn_prg=>escape_quotes_str( val = lv_where_clause ).
      "Refer to method SELECT of class CL_SADL_SQL_EXECUTOR
      TRY.
          SELECT ConditionRecord,
                 ConditionRecordUUID,
                 draftentityoperationcode
            FROM zsdprcg_cndnr_d
           WHERE (lv_where_clause)
            INTO TABLE @DATA(lt_draft_all).
          DELETE lt_draft_all WHERE draftentityoperationcode = 'T'
                                 OR draftentityoperationcode = 'D'.
          IF NOT lt_draft_all IS INITIAL.
            SELECT DraftUUID
              FROM i_draftadministrativedata WITH PRIVILEGED ACCESS
               FOR ALL ENTRIES IN @lt_draft_all
             WHERE DraftUUID = @lt_draft_all-ConditionRecordUUID
               AND ( inprocessbyuser = @sy-uname
                  OR createdbyuser   = @sy-uname
                  OR lastchangedbyuser = @sy-uname )
              INTO TABLE @DATA(lt_admin).
            SORT lt_admin BY DraftUUID.
          ENDIF.

          LOOP AT lt_draft_all INTO DATA(ls_draft_all).
            READ TABLE lt_admin WITH KEY DraftUUID = ls_draft_all-ConditionRecordUUID TRANSPORTING NO FIELDS.
            IF sy-subrc NE 0.
              DELETE lt_draft_all WHERE ConditionRecordUUID = ls_draft_all-ConditionRecordUUID.
            ENDIF.
          ENDLOOP.
        CATCH cx_sy_dynamic_osql_semantics
              cx_sy_dynamic_osql_syntax
              cx_sy_dynamic_osql_error
              cx_sy_open_sql_data_error INTO DATA(lr_ex).
          "do nothing
      ENDTRY.

      lv_draftsize = lines( lt_draft_all ).
      LOOP AT lt_draft_all INTO ls_draft_all.
        IF ls_draft_all-conditionrecord+0(2) NE gcs_sales_condition-knumh_start_str.
          APPEND VALUE #( sign   = gcs_sales_condition-sign_e
                          option = gcs_sales_condition-option_eq
                          low    = ls_draft_all-conditionrecord )
              TO et_excluded_condrecord.
        ENDIF.
      ENDLOOP.
    ENDIF.

    mo_ltd_util->set_excluded_records( et_excluded_condrecord ).

    DATA(lv_pagesize)  = is_paging-skip + is_paging-top.
    IF is_paging-skip LT lv_draftsize AND lv_pagesize LE lv_draftsize.
      ev_only_has_draft = abap_true.
    ELSEIF is_paging-skip LT lv_draftsize AND lv_pagesize GT lv_draftsize .
      cs_query_option-prcgqueryoptiontop  = lv_pagesize - lv_draftsize.
      cs_query_option-prcgqueryoptionskip = 0.
    ELSEIF is_paging-skip GE lv_draftsize.
      cs_query_option-prcgqueryoptiontop  = is_paging-top.
      cs_query_option-prcgqueryoptionskip = is_paging-skip - lv_draftsize.
    ENDIF.
  endmethod.


  method ADD_VIRUS_ISSUE_TO_CONTAINER.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    DATA(lv_text) = cl_vsi=>get_scanrc_text( if_scanrc = iv_vscan_scanrc  ).
    MESSAGE i091(prcg_cndnrecord_api) WITH lv_text INTO DATA(ls_msg).
    add_message_to_container( sy ).

    MESSAGE i090(prcg_cndnrecord_api) INTO ls_msg.
    add_message_to_container( sy ).
  endmethod.


  method ADD_OTHER_ISSUE_TO_CONTAINER.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    DATA:lv_bapi_message TYPE bapiret2-message.

    CALL FUNCTION 'BAPI_MESSAGE_GETDETAIL'
      EXPORTING
        id         = is_symsg-msgid
        number     = is_symsg-msgno
        language   = is_symsg-langu
        textformat = 'ASC'
      IMPORTING
        message    = lv_bapi_message.

    MESSAGE i091(prcg_cndnrecord_api) WITH lv_bapi_message INTO DATA(ls_msg).
    add_message_to_container( sy ).

    MESSAGE i090(prcg_cndnrecord_api) INTO ls_msg.
    add_message_to_container( sy ).
  endmethod.


  method ADD_MESSAGE_TO_DB.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
  CONSTANTS:cv_fail TYPE string VALUE ' lines are failed.' ##NO_TEXT,
              cv_succ TYPE string VALUE ' lines are successful.' ##NO_TEXT,
              cv_uuid TYPE string VALUE 'UUID' ##NO_TEXT.
    DATA:lo_logger          TYPE REF TO if_condition_record_logger,
         lt_log_handle      TYPE bal_t_logh,
         ls_bal_msg         TYPE bal_s_msg,
         ls_cndn_upld_msg   TYPE cndn_upld_msg,
         lt_cndn_upld_msg   TYPE STANDARD TABLE OF cndn_upld_msg,
         ls_komg            TYPE komg,
         lv_failed_lines    TYPE i,
         lv_success_lines   TYPE i,
         lv_uuid_long       TYPE string,
         lv_meins_in        TYPE meins,
         lv_meins_out       TYPE meins,
         ls_cndn_imprt_itm  TYPE cndn_upld_msg,
         lt_cndn_imprt_itm  TYPE STANDARD TABLE OF cndn_upld_msg,
         ls_cndn_recd_imprt TYPE cndn_upld_hist,
         lt_cndn_recd_imprt TYPE STANDARD TABLE OF cndn_upld_hist,
         lv_uuid            TYPE uuid.

    lv_uuid = iv_imprtid.
    READ TABLE it_message INTO DATA(ls_message) WITH KEY systemmessageidentification = 'PRCG_CNDNRECORD_API'
                                                         systemmessagenumber = '100'.
    IF sy-subrc = 0.
      lv_failed_lines = -1.
      lv_success_lines = iv_total_lines + 1.
      MESSAGE s001(00) WITH lv_failed_lines cv_fail INTO DATA(ls_failed_msg). "Message without translation for parse in front-end ..
      add_message_to_container( sy ).

      MESSAGE s001(00) WITH lv_success_lines cv_succ INTO DATA(ls_success_msg). "Message without translation for parse in front-end ..
      add_message_to_container( sy ).

      lv_uuid_long = lv_uuid.
      CONCATENATE cv_uuid lv_uuid_long INTO lv_uuid_long SEPARATED BY space.
      MESSAGE s001(00) WITH lv_uuid_long INTO DATA(ls_uuid). "Message without translation for parse in front-end ..
      add_message_to_container( sy ).
    ENDIF.
    CHECK lv_failed_lines NE -1.

    DATA(lt_record) = it_record.
    DATA(lt_message) = it_message.
    SORT lt_message BY conditionrecord.
    DELETE ADJACENT DUPLICATES FROM lt_message COMPARING conditionrecord.

    "Calculate lines for total, success, failed
    DATA(lv_total_lines) = iv_total_lines.
    lv_failed_lines = 0.
    lv_success_lines = 0.

    "overlap message is I type, just store in application log
    "Error message is E type, store in db and applicaiton log
    DATA(lv_counter) = 0.


    LOOP AT lt_message INTO ls_message.
      "Move message to application log
      lo_logger = cl_condition_record_logger=>get_instance( ).
      LOOP AT it_message INTO DATA(ls_msg) WHERE conditionrecord = ls_message-conditionrecord.
        ls_bal_msg-msgid = ls_msg-systemmessageidentification.
        ls_bal_msg-msgno = ls_msg-systemmessagenumber.
        ls_bal_msg-msgty = ls_msg-systemmessagetype.
        ls_bal_msg-msgv1 = ls_msg-systemmessagevariable1.
        ls_bal_msg-msgv2 = ls_msg-systemmessagevariable2.
        ls_bal_msg-msgv3 = ls_msg-systemmessagevariable3.
        ls_bal_msg-msgv4 = ls_msg-systemmessagevariable4.
        IF ls_bal_msg-msgid = 'VK' AND ls_bal_msg-msgno = '069'. "Unit of measure & is not defined
          lv_meins_in = ls_bal_msg-msgv1.
          CALL FUNCTION 'CONVERSION_EXIT_CUNIT_OUTPUT'
            EXPORTING
              input          = lv_meins_in
            IMPORTING
              output         = lv_meins_out
            EXCEPTIONS
              unit_not_found = 1
              OTHERS         = 2.
          IF sy-subrc <> 0.
            lv_meins_out = lv_meins_in.
          ENDIF.
          ls_bal_msg-msgv1 = lv_meins_out.
        ENDIF.
        lo_logger->add_message( is_msg = ls_bal_msg ).
      ENDLOOP.
      lo_logger->close_log( IMPORTING et_new_lognumbers = DATA(lt_logno) ).

      READ TABLE lt_logno INTO DATA(ls_logno) INDEX 1.

      "Move data and message to db
      DATA(lv_rec) = ls_message-conditionrecord.
      READ TABLE lt_record WITH KEY conditionrecord = lv_rec TRANSPORTING NO FIELDS.
      IF sy-subrc <> 0.
        lv_rec = ls_message-systemmessagevariable2.
      ENDIF.
      LOOP AT lt_record INTO DATA(ls_record) WHERE conditionrecord = lv_rec.
        mo_prcg_util->get_mapping_fields(
          EXPORTING
            iv_incl_record    = abap_true
          IMPORTING
            et_wlf_mp_fields  = DATA(lt_mp)
            et_dd03nd         = DATA(lt_dd03nd)
            et_mapping_fields = DATA(lt_map)
        ).
        mo_ltd_util->get_key_fields(
          EXPORTING
            iv_kvewe      = 'A'
            iv_kotabnr    = ls_record-conditiontable
          IMPORTING
            et_key_fields = DATA(lt_key_fields)
        ).

        LOOP AT lt_key_fields ASSIGNING FIELD-SYMBOL(<fs_key_fields>).
          READ TABLE lt_mp INTO DATA(ls_mp) WITH KEY int_fieldname = CONV #( <fs_key_fields>-fieldname ).
          IF sy-subrc NE 0.
            ls_mp-ext_fieldname = <fs_key_fields>-fieldname.
          ENDIF.
          ASSIGN COMPONENT ls_mp-ext_fieldname OF STRUCTURE ls_record
          TO FIELD-SYMBOL(<fs_key>).
          IF <fs_key> IS ASSIGNED.
            <fs_key_fields>-fieldvalue = <fs_key>.
            UNASSIGN <fs_key>.
          ENDIF.
        ENDLOOP.

        mo_ltd_util->map_key_fields_to_vakey(
          EXPORTING
            iv_kvewe      = 'A'
            iv_kotabnr    = ls_record-conditiontable
            it_key_fields = lt_key_fields
          IMPORTING
            ev_vakey      = DATA(lv_vakey)
        ).

        CLEAR:lt_key_fields.
        CLEAR:ls_cndn_upld_msg.
        MOVE-CORRESPONDING ls_record TO ls_cndn_upld_msg.
        ls_cndn_upld_msg-vakey = lv_vakey.
        ls_cndn_upld_msg-kostkz = ls_record-conditionisscale. "is scale

        LOOP AT it_field_list INTO DATA(ls_list).
          TRANSLATE ls_list TO UPPER CASE.
          READ TABLE lt_map INTO DATA(ls_map) WITH KEY fieldname_ext = CONV #( ls_list ).
          IF sy-subrc = 0.
            ASSIGN COMPONENT ls_map-fieldname_int OF STRUCTURE ls_cndn_upld_msg
            TO FIELD-SYMBOL(<fs_info>).
            IF <fs_info> IS ASSIGNED.
              ASSIGN COMPONENT ls_map-fieldname_ext OF STRUCTURE ls_record
              TO FIELD-SYMBOL(<fs_nonkey>).
              IF <fs_nonkey> IS ASSIGNED AND NOT <fs_nonkey> IS INITIAL.
                <fs_info> = <fs_nonkey>.
                UNASSIGN <fs_nonkey>.
              ENDIF.
              UNASSIGN <fs_info>.
            ENDIF.
          ENDIF.
        ENDLOOP.

        lv_counter = lv_counter + 1.
        ls_cndn_upld_msg-counter = lv_counter.
        ls_cndn_upld_msg-log_no = ls_logno-lognumber.
        ls_cndn_upld_msg-uuid = lv_uuid.
        APPEND ls_cndn_upld_msg TO lt_cndn_upld_msg.

        IF ls_message-systemmessagetype = 'E'.
          lv_failed_lines = lv_failed_lines + 1.
        ENDIF.
      ENDLOOP.
    ENDLOOP.
    lv_success_lines = lv_total_lines - lv_failed_lines.

    IF NOT lt_cndn_upld_msg IS INITIAL.
      MODIFY cndn_upld_msg FROM TABLE lt_cndn_upld_msg.
    ENDIF.

    SELECT SINGLE * FROM cndn_upld_hist INTO CORRESPONDING FIELDS OF @ls_cndn_recd_imprt WHERE uuid = @iv_imprtid .

    IF sy-subrc = 0.
      ls_cndn_recd_imprt-total_lines = lv_total_lines.
      ls_cndn_recd_imprt-error_lines = lv_failed_lines.
      ls_cndn_recd_imprt-success_lines = lv_success_lines.

      IF lv_failed_lines = lv_total_lines.
        ls_cndn_recd_imprt-cndnrecd_import_status = '1'.
      ELSEIF lv_success_lines = lv_total_lines.
        ls_cndn_recd_imprt-cndnrecd_import_status = '3'.
      ELSE.
        ls_cndn_recd_imprt-cndnrecd_import_status = '2'.
      ENDIF.
*    ls_cndn_recd_imprt-conditionrecorduuid = lv_uuid.
      MODIFY cndn_upld_hist FROM ls_cndn_recd_imprt.
    ENDIF.
    "Add lines, uuid to message container
    IF iv_invalid_excel = abap_false AND lv_success_lines = 0 AND lv_failed_lines = 0.
      lv_failed_lines = -1.
    ENDIF.

    ls_failed_msg = lv_failed_lines.
    MESSAGE s001(00) WITH ls_failed_msg cv_fail INTO ls_failed_msg. "Message without translation for parse in front-end ..
    add_message_to_container( sy ).

    ls_success_msg = lv_success_lines.
    MESSAGE s001(00) WITH ls_success_msg cv_succ INTO ls_success_msg. "Message without translation for parse in front-end ..
    add_message_to_container( sy ).

    lv_uuid_long = lv_uuid.
    CONCATENATE cv_uuid lv_uuid_long INTO lv_uuid_long SEPARATED BY space.
    MESSAGE s001(00) WITH lv_uuid_long INTO ls_uuid. "Message without translation for parse in front-end ..
    add_message_to_container( sy ).

    IF it_success_record IS NOT INITIAL.
      DATA(lt_success_record) = it_success_record.
      LOOP AT lt_success_record ASSIGNING FIELD-SYMBOL(<fs_success_record>).
        lv_counter = lv_counter + 1.
        <fs_success_record>-counter = lv_counter.
        <fs_success_record>-uuid = iv_imprtid.
      ENDLOOP.
      MODIFY cndn_upld_msg FROM TABLE lt_success_record.
    ENDIF.
  endmethod.


  method ADD_MESSAGE_TO_CONTAINER.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    IF mo_context IS BOUND.
      DATA(lo_container) = me->mo_context->get_message_container( ).

    lo_container->add_message(
      EXPORTING
        iv_msg_type               = is_symsg-msgty
        iv_msg_id                 = is_symsg-msgid
        iv_msg_number             = is_symsg-msgno
        iv_msg_v1                 = is_symsg-msgv1
        iv_msg_v2                 = is_symsg-msgv2
        iv_msg_v3                 = is_symsg-msgv3
        iv_msg_v4                 = is_symsg-msgv4
        iv_add_to_response_header = abap_true    ).
     ENDIF.
  endmethod.


  method C_SLSCNDNRECDIMP_GET_ENTITYSET.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
   TRY.

          CALL METHOD super->c_slscndnrecdimp_get_entityset
            EXPORTING
              iv_entity_name           = iv_entity_name
              iv_entity_set_name       = iv_entity_set_name
              iv_source_name           = iv_source_name
              it_filter_select_options = it_filter_select_options
              is_paging                = is_paging
              it_key_tab               = it_key_tab
              it_navigation_path       = it_navigation_path
              it_order                 = it_order
              iv_filter_string         = iv_filter_string
              iv_search_string         = iv_search_string
              io_tech_request_context  = io_tech_request_context
            IMPORTING
              et_entityset             = et_entityset
              es_response_context      = es_response_context.

      CATCH /iwbep/cx_mgw_busi_exception INTO DATA(lx_busi).
        RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
          EXPORTING
            previous = lx_busi.
      CATCH /iwbep/cx_mgw_tech_exception INTO DATA(lx_tech).
        RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
          EXPORTING
            previous = lx_tech.
    ENDTRY.

    LOOP AT et_entityset ASSIGNING FIELD-SYMBOL(<fs_entityset>) WHERE cndnrecdimportstatus = '0'.
      SELECT SINGLE * FROM cndn_upld_hist WHERE uuid = @<fs_entityset>-conditionrecorduuid INTO @DATA(ls_cndn_upld_hist).
      IF sy-subrc = 0.
        SELECT SINGLE * FROM apj_v_job_status WHERE jobname = @ls_cndn_upld_hist-job_name AND jobcount = @ls_cndn_upld_hist-job_count INTO @DATA(ls_job_status).
        IF sy-subrc = 0.
          IF ls_job_status-status = 'A'.
            <fs_entityset>-cndnrecdimportstatus = '4'.
            <fs_entityset>-criticality = '1'.
            SELECT SINGLE * FROM i_slscndnrecdimprtstatustext WHERE cndnrecdimportstatus = '4' INTO @DATA(ls_text).
            IF sy-subrc = 0.
              <fs_entityset>-cndnrecdimportstatustext = ls_text-cndnrecdimportstatustext.
            ENDIF.
* modify DB
            ls_cndn_upld_hist-cndnrecd_import_status = '4'.
            MODIFY cndn_upld_hist FROM ls_cndn_upld_hist.
          ENDIF.
        ENDIF.
      ENDIF.
    ENDLOOP.
  endmethod.


  METHOD /iwbep/if_mgw_appl_srv_runtime~create_stream.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    CONSTANTS: lc_uploadexcel TYPE string VALUE 'UploadExcel'.
    DATA:ls_data TYPE zcl_zsd_pricing_condit_mpc=>ts_uploadexcel.
    DATA lv_size    TYPE i.

    DATA ls_upload_data TYPE prcg_upload_data.
    DATA lv_timestamp TYPE timestampl.
    DATA lv_date TYPE date.
    DATA ls_cndn_upld_hist TYPE cndn_upld_hist.
    lv_date = sy-datum.
    GET TIME STAMP FIELD lv_timestamp.
    IF iv_slug IS INITIAL.
      "ls_data-filename = 'Upload'.
      MESSAGE e107(prcg_cndnrecord_api) INTO DATA(lv_filemiss). ##MG_MISSING.
      add_message_to_container( sy ).
      RETURN.
    ELSE.
*      ls_data-filename = cl_http_utility=>unescape_url( iv_slug ).
      ls_data-filename = iv_slug.
      ls_data-mimetype = is_media_resource-mime_type.
    ENDIF.
    " Avoid request response error
    copy_data_to_ref(
      EXPORTING
        is_data = ls_data
      CHANGING
        cr_data = er_entity ).

    "Virus Scan
    TEST-SEAM test_scan.
      DATA(lv_has_virus) = virus_scan( is_media_resource-value ).
    END-TEST-SEAM.
    IF lv_has_virus = abap_false.
      RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
        EXPORTING
          textid            = /iwbep/cx_mgw_busi_exception=>business_error
          message_container = me->mo_context->get_message_container( ).
    ENDIF.

    DATA(lo_upload) = zcl_sd_sls_price_upload_excel=>get_instance( ).

    CHECK iv_entity_name = lc_uploadexcel.

    TEST-SEAM file_size.
      lv_size = xstrlen( is_media_resource-value ).
    END-TEST-SEAM.
    IF lv_size > 1024 * 100.
      lo_upload->save_import_history(
        EXPORTING
          iv_filename   = ls_data-filename                 " import file name
          iv_imprt_date = lv_date                 " Date in CHAR Format
          iv_imprt_time = lv_timestamp                 " UTC Time Stamp in Long Form (YYYYMMDDhhmmssmmmuuun)
        IMPORTING
          ev_imprtid    = DATA(lv_id)                 " 16 Byte UUID in 22 Characters (Usually Base64 Encoded)
      ).

      CONCATENATE 'Upload for' iv_slug INTO DATA(lv_job_text) SEPARATED BY ' '.
      ls_upload_data-uuid  = lv_id.
      ls_upload_data-usera       = sy-uname.
      ls_upload_data-created_ts  = lv_timestamp.
      DATA lv_uuid TYPE sysuuid_c22.
      lv_uuid = lv_id.
      EXPORT file_content = is_media_resource-value
      TO DATABASE prcg_upload_data(sd) ID lv_uuid FROM ls_upload_data.
      TEST-SEAM schedule_job.
        TRY.
            cl_apj_rt_job_scheduling_api=>schedule_job(
              EXPORTING
                iv_job_template_name = 'SAP_SD_PRCG_UPLOAD'
                iv_job_text = CONV apj_job_text( lv_job_text )
                is_start_info = VALUE #( start_immediately = abap_true )
                it_job_parameter_value = VALUE #(
                  ( name = 'P_NAME' t_value = VALUE #( ( sign = 'I' option = 'EQ' low = iv_slug ) ) )
                  ( name = 'P_DATA' t_value = VALUE #( ( sign = 'I' option = 'EQ' low = lv_id ) ) )
                )
              IMPORTING
                es_job_details = DATA(ls_job_details)
                et_message = DATA(et_message)
            ).
          CATCH cm_apj_base INTO DATA(lr_exception).
            RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
              EXPORTING
                previous = lr_exception.
        ENDTRY.
      END-TEST-SEAM.

* Add job name and job count
      SELECT SINGLE * FROM cndn_upld_hist WHERE uuid = @lv_id INTO @ls_cndn_upld_hist.
      ls_cndn_upld_hist-job_name = ls_job_details-job_name.
      ls_cndn_upld_hist-job_count = ls_job_details-job_count.
      MODIFY cndn_upld_hist FROM ls_cndn_upld_hist.

      DELETE et_message WHERE type = 'S' OR type = 'I' OR type = 'W'. "remove message not error
      MESSAGE s001(00) WITH 'asyn' INTO DATA(lv_message). "Message without translation for parse in front-end .
      TEST-SEAM add_message.
        add_message_to_container( sy ).
      END-TEST-SEAM.
    ELSE.
      TEST-SEAM test_create_stream.
        lo_upload->parse_excel(
          EXPORTING
            iv_fieldname      = iv_slug
            iv_xstring        = is_media_resource-value
          IMPORTING
            et_record         = DATA(lt_record)
            et_record_invalid = DATA(lt_invalid)
            et_record_valid   = DATA(lt_valid)
            et_messages       = DATA(lt_messages)
            ev_invalid_excel  = DATA(lv_invalid_excel)
        ).
      END-TEST-SEAM.
      lo_upload->operate_condition_mass(
        EXPORTING
          it_record      = lt_valid
        IMPORTING
          et_messages    = DATA(lt_messages_op)
          et_success_record = DATA(lt_success_record)
      ).
      APPEND LINES OF lt_messages_op TO lt_messages.
      SORT lt_messages.
      DELETE ADJACENT DUPLICATES FROM lt_messages COMPARING ALL FIELDS.
      lo_upload->save_import_history(
        EXPORTING
          iv_filename   = ls_data-filename                 " import file name
          iv_imprt_date = lv_date                 " Date in CHAR Format
          iv_imprt_time = lv_timestamp                 " UTC Time Stamp in Long Form (YYYYMMDDhhmmssmmmuuun)
        IMPORTING
          ev_imprtid    = lv_id                 " 16 Byte UUID in 22 Characters (Usually Base64 Encoded)
      ).

      TEST-SEAM test_create_stream1.
        DATA(lt_field_list) = lo_upload->get_field_list( ).
        "Store the message to DB
        add_message_to_db(
          EXPORTING
            iv_invalid_excel = lv_invalid_excel
            iv_filename    = iv_slug
            iv_total_lines = lines( lt_record )
            it_field_list  = lt_field_list
            it_record      = lt_record
            it_message     = lt_messages
            iv_imprtid     = lv_id
            it_success_record = lt_success_record
        ).
      END-TEST-SEAM.
    ENDIF.
    " Avoid request response error
    copy_data_to_ref(
      EXPORTING
        is_data = ls_data
      CHANGING
        cr_data = er_entity ).
  ENDMETHOD.


  method I_SLSPRCGKEYCOMB_GET_ENTITYSET.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
* BOBRULA      | 07.11.2023 | 26564     :  Pricing Mass Upload Tool    *
*              |            | DS4K969470                               *
*----------------------------------------------------------------------*
 DATA: num      TYPE i,
          lt_tab   TYPE dd03v,
          tabname  TYPE char4,
          lv_tab   TYPE  dd03v,
          lv_dfies TYPE dfies.

    TRY.
        TEST-SEAM super_keycomb_get_entityset.
          super->i_slsprcgkeycomb_get_entityset(
            EXPORTING
              iv_entity_name           = iv_entity_name
              iv_entity_set_name       = iv_entity_set_name
              iv_source_name           = iv_source_name
              it_filter_select_options = it_filter_select_options
              is_paging                = is_paging
              it_key_tab               = it_key_tab
              it_navigation_path       = it_navigation_path
              it_order                 = it_order
              iv_filter_string         = iv_filter_string
              iv_search_string         = iv_search_string
              io_tech_request_context  = io_tech_request_context
            IMPORTING
              et_entityset             = et_entityset
              es_response_context      = es_response_context
                 ).
        END-TEST-SEAM.
      CATCH /iwbep/cx_mgw_busi_exception INTO DATA(lx_busi).
        RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
          EXPORTING
            previous = lx_busi.
      CATCH /iwbep/cx_mgw_tech_exception INTO DATA(lx_tech).
        RAISE EXCEPTION TYPE /iwbep/cx_mgw_tech_exception
          EXPORTING
            previous = lx_tech.
    ENDTRY.

    "Material lable replacement in Key Combination Value help
    SELECT * FROM ddftx INTO TABLE @DATA(lt_ddftx_product) WHERE tabname = 'I_PRODUCTSTDVH' AND ddlanguage = @sy-langu.
    READ TABLE lt_ddftx_product WITH KEY fieldname = 'PRODUCT' INTO DATA(ls_ddftx_product).
    IF sy-subrc = 0.
      DATA(lv_product_text) = ls_ddftx_product-scrtext_s.
    ELSE.
      TEST-SEAM field_read_product.
        CALL FUNCTION 'RV_FIELD_READ' ##FM_SUBRC_OK
          EXPORTING
            fdr_field       = 'PRODUCT'               " Name of field
            fdr_table       = 'I_PRODUCTSTDVH'               " Table Name
          IMPORTING
            fdr_dd03v       = lv_tab                " DD03V field view
            fdr_dfies       = lv_dfies                " DFIES field view
          EXCEPTIONS
            field_not_found = 3                " Field not found
            OTHERS          = 4.
      END-TEST-SEAM.
      lv_product_text = lv_dfies-scrtext_s.
      CLEAR lv_dfies.
    ENDIF.


    LOOP AT et_entityset ASSIGNING FIELD-SYMBOL(<ls_entityset>).
      TRY.
*       read access sequence from t685
          mo_condtype->get_definition(
            EXPORTING
              iv_usage          = if_ct_constants=>c_usage_pricing          " Usage of the condition table
              iv_application    = if_ct_constants=>c_application_sales    " Application
              iv_condition_type = <ls_entityset>-conditiontype " Condition Type
            RECEIVING
              rs_definition     = DATA(ls_definition)     " Conditions: Types
          ).
*         read field and table from t682z
          mo_accseq->get_access_fields(
            EXPORTING
              ir_kvewe               = VALUE #( ( sign = 'I' option = 'EQ' low = if_ct_constants=>c_usage_pricing ) )
              ir_kappl               = VALUE #( ( sign = 'I' option = 'EQ' low = if_ct_constants=>c_application_sales ) )
              ir_kozgf               = VALUE #( ( sign = 'I' option = 'EQ' low = ls_definition-kozgf ) )
              ir_kolnr               = VALUE #( ( sign = 'I' option = 'EQ' low = <ls_entityset>-accessnumberofaccesssequence ) )
            IMPORTING
              et_access_fields        = DATA(lt_accesses)
          ).
        CATCH cx_ct_customizing_exception. " Exception in the Customizing Access
      ENDTRY.
      SORT lt_accesses BY zaehk ASCENDING.

      num = 0.
      CONCATENATE if_ct_constants=>c_usage_pricing <ls_entityset>-conditiontable INTO tabname.
      SELECT * FROM ddftx INTO TABLE @DATA(lt_ddftx) WHERE tabname = @tabname  AND ddlanguage = @sy-langu.
      LOOP AT lt_accesses INTO DATA(ls_access) WHERE qustr IS NOT INITIAL AND qufna IS NOT INITIAL AND kzini = ' '.
        num = num + 1.
        READ TABLE lt_ddftx WITH KEY fieldname = ls_access-zifna INTO DATA(ls_ddftx).
        IF sy-subrc = 0.
          IF ls_access-zifna = 'MATNR'.
            ls_ddftx-scrtext_s = lv_product_text.
          ENDIF.
          DATA(lv_scrtext) = COND #( WHEN ls_access-zifna(3) = 'ZZ1' THEN
                                          ls_ddftx-scrtext_l
                                     ELSE ls_ddftx-scrtext_s ).
          IF num = 1.
            CONCATENATE <ls_entityset>-prcgkeycombinationtext lv_scrtext INTO <ls_entityset>-prcgkeycombinationtext.
          ELSE.
            CONCATENATE <ls_entityset>-prcgkeycombinationtext lv_scrtext INTO <ls_entityset>-prcgkeycombinationtext SEPARATED BY '/'.
          ENDIF.
        ELSE.
          TEST-SEAM field_read.
            CALL FUNCTION 'RV_FIELD_READ' ##FM_SUBRC_OK
              EXPORTING
                fdr_field       = ls_access-qufna               " Name of field
                fdr_table       = ls_access-qustr               " Table Name
              IMPORTING
                fdr_dd03v       = lv_tab                " DD03V field view
                fdr_dfies       = lv_dfies                " DFIES field view
              EXCEPTIONS
                field_not_found = 1                " Field not found
                OTHERS          = 2.
          END-TEST-SEAM.
          IF ls_access-zifna = 'MATNR'.
            lv_dfies-scrtext_s = lv_product_text.
          ENDIF.
          lv_scrtext = COND #( WHEN ls_access-zifna(3) = 'ZZ1' THEN
                                    ls_ddftx-scrtext_l
                               ELSE ls_ddftx-scrtext_s ).
          IF num = 1.
            CONCATENATE <ls_entityset>-prcgkeycombinationtext lv_scrtext INTO <ls_entityset>-prcgkeycombinationtext.
          ELSE.
            CONCATENATE <ls_entityset>-prcgkeycombinationtext lv_scrtext INTO <ls_entityset>-prcgkeycombinationtext SEPARATED BY '/'.
          ENDIF.

        ENDIF.
      ENDLOOP.

    ENDLOOP.
  endmethod.


  method /IWBEP/IF_MGW_APPL_SRV_RUNTIME~CHANGESET_BEGIN.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    cv_defer_mode = abap_true.
  endmethod.


  METHOD /iwbep/if_mgw_appl_srv_runtime~changeset_process.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DEREVOLE     | 21.10.2022 | T4MTEMP-846 [Build] BE -                 *
*              |            | Pricing Mass Upload Tool                 *
*              |            | DS4K929425, Change number 13489          *
*----------------------------------------------------------------------*
    set_model_for_draft_text( it_changeset_request ).

    cancel_expired_draft_bef_save(
      EXPORTING
        it_changeset_request = it_changeset_request
      IMPORTING
        et_sdraft_admin_key  = DATA(lt_sdraft_admin_key)
    ).
    IF NOT lt_sdraft_admin_key IS INITIAL.
      RETURN.
    ENDIF.

    if_sadl_gw_dpc_util~get_dpc( )->process_changeset( EXPORTING it_changeset_request  = it_changeset_request
                                                       CHANGING  ct_changeset_response = ct_changeset_response ).
  ENDMETHOD.
ENDCLASS.