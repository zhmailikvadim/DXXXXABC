"! Parallel processing.
"! Examples of usage are documented in Platform Engineering Space
INTERFACE zif_pe_parallel_processing
  PUBLIC .

  TYPES:
    BEGIN OF gtyp_thread,
      thread TYPE char8,
      used   TYPE abap_bool,
    END OF gtyp_thread .

  "! Prefix for each thread. For example, prefix ZPAR will generate threads ZPAR1, ZPAR2...in the list
  DATA gv_task_prefix TYPE char6 .

  "! The list of threads with name and indicator of usage
  DATA gt_threads_list TYPE TABLE OF gtyp_thread WITH DEFAULT KEY .

  "! The total number of threads. Possible values from 1 to 100. Can be initiated in class constructor
  DATA gv_threads TYPE i .

  "! The number of threads that are currently running.
  DATA gv_used_threads TYPE i .

  "! Server group
  DATA gv_group TYPE rzlli_apcl .

  "! Table for messages. Can be used to store logs when the active thread ends
  DATA gt_message_log TYPE bapiret2_t .

  "! Used to indicate that all parallel processes have completed
  "! @parameter rv_empty | Returns abap_true in case of there are no threads in use
  METHODS all_threads_are_finished RETURNING VALUE(rv_empty) TYPE abap_bool .

  "! Sets an indicator that a thread(task) from the threads list is free and can be reused.
  "! Also decreases the used threads counter
  METHODS clear_thread IMPORTING !iv_task TYPE char8 .

  "! Wait for thread availability.
  "! Necessary in case thread number is not planned based on number records to be processed
  METHODS handle_resource_failure .

  "! Returns the first in the list free thread
  METHODS get_free_thread RETURNING VALUE(rv_thread) TYPE char8 .

  "! Returns the total number of free threads in group or in server if group is not specified
  METHODS get_free_threads RETURNING VALUE(rv_free_threads) TYPE i .

ENDINTERFACE.