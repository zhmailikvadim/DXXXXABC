@Scope:[#VIEW, #TABLE_FUNCTION, #HIERARCHY]


annotation AccessControl
 {
  @CompatibilityContract: {
   c1: { usageAllowed: true },
   c1: {
      allowedChanges: { annotation: [#ADD ],
                        value: [#ANY ]
                       }
        }, 
       
   c2: { usageAllowed: true },
   c2: {
      allowedChanges: { annotation: [#ADD ],
                        value: [#ANY ]
                      }
       }
   }
   @API.state: [#RELEASED_FOR_KEY_USER_APPS, #RELEASED_FOR_SAP_CLOUD_PLATFORM]
   authorizationCheck : String(20) enum { NOT_REQUIRED; NOT_ALLOWED; CHECK; PRIVILEGED_ONLY; } default #CHECK;
   
   @CompatibilityContract: {
   c1: { usageAllowed: true },
   c1: {
      allowedChanges: { annotation: [#ADD, #REMOVE ],
                        value: [#ANY ]
                       }
        }, 
       
   c2: { usageAllowed: true },
   c2: {
      allowedChanges: { annotation: [#ADD, #REMOVE ],
                        value: [#ANY ]
                      }
       }
   }
   @API.state: [#RELEASED_FOR_KEY_USER_APPS]
   privilegedAssociations: array of AssociationRef;

@Scope: [ #VIEW ]
@CompatibilityContract: {
   c1: { usageAllowed: true },
   c1: {
      allowedChanges: { annotation: [#ADD, #REMOVE ],
                        value: [#ANY ]
                       }
        }, 
   c2: { usageAllowed: true },
   c2: {
      allowedChanges: { annotation: [#ADD, #REMOVE ],
                        value: [#ANY ]
                      }
       }
   }
@API.state: [#RELEASED_FOR_SAP_CLOUD_PLATFORM]   
   auditing 
 {
  type
   : String(20) enum { CUSTOM;};
  specification
   : String(1000);
 }
   @CompatibilityContract: {
   c1: { usageAllowed: true },
   c1: {
      allowedChanges: { annotation: [#ADD ],
                        value: [#ANY ]
                       }
        }, 
       
   c2: { usageAllowed: true },
   c2: {
      allowedChanges: { annotation: [#ADD ],
                        value: [#ANY ]
                      }
       }
   }
   personalData
   {
      blocking : String(30) enum { NOT_REQUIRED; REQUIRED; BLOCKED_DATA_INCLUDED; BLOCKED_DATA_EXCLUDED; };   
      blockingIndicator : array of ElementRef;
   };
   

   @CompatibilityContract: {
       c1: { usageAllowed: true,
             allowedChanges.annotation: [ #ANY ],
             allowedChanges.value: [ #ANY ] },  
       c2: { usageAllowed: true,
             allowedChanges.annotation: [ #ANY ],
             allowedChanges.value: [ #ANY ] }
       }
    @MetadataExtension.usageAllowed: true
    @Scope: [#VIEW,#ELEMENT,#PARAMETER, #HIERARCHY]
    readAccess {
       logging {
            logdomain: array of 
              {
                area: String(30);
                domain: String(30);
              }
          @Scope: [#VIEW]
          output: Boolean;
       }
    };
   
 }; 