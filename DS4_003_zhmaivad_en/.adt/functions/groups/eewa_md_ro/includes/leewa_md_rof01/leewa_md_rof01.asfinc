*----------------------------------------------------------------------*
***INCLUDE LEEWA_MD_ROF01 .
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  INITIALIZE
*&---------------------------------------------------------------------*
*       Generelle Initialisierungen.
*       Wird im Dy 100 PBO und beim OPEN ausgeführt                   *
*----------------------------------------------------------------------*
FORM initialize USING x_stichtag TYPE abzeitsch
                CHANGING xy_obj TYPE isuwa_obj.

  STATICS: init_done.

"Customizing TEWATIME bei jeder Initialisierung holen, da es beim Speichern auch zurückgesetzt wird,
"aber init_done is not initial
  CALL FUNCTION 'ISU_DB_TEWATIME_SINGLE'
    IMPORTING
      y_tewatime   = xy_obj-timecontr
    EXCEPTIONS
      not_found    = 1
      system_error = 2
      OTHERS       = 3.
  IF sy-subrc <> 0.
*keine Meldung
  ENDIF.

  IF init_done IS INITIAL.
*   Zuweisung der Textkonstanten
    co_head_objname       = text-101.
    co_msg_objname        = text-101.
    co_msg_objname_anlage = text-s02.
    co_msg_objname_sv     = text-s01.
    co_msg_objname_rob    = text-s00.
    init_done = 'X'.
    isuwa_seldat-week_flag = 'X'.
    isuwa_seldat-day_flag = 'X'.
    isuwa_seldat-mnth_flag = 'X'.
    isuwa_seldat-single_day = 'X'.

    IF x_stichtag IS INITIAL.
      IF isuwa_seldat-selab IS INITIAL
      AND NOT xy_obj-timecontr-servovr_from IS INITIAL.
*     Datum anhand der Steuerung berechnen
        CALL FUNCTION 'ISU_WA_DATE_COMPUTE'
          EXPORTING
            x_timex = xy_obj-timecontr-servovr_from
          IMPORTING
            y_date  = isuwa_seldat-selab.
      ELSEIF isuwa_seldat-selab IS INITIAL
      AND xy_obj-timecontr-servovr_from IS INITIAL.
        isuwa_seldat-selab = sy-datum.
      ENDIF.
      IF isuwa_seldat-selbis IS INITIAL
      AND NOT xy_obj-timecontr-servovr_to IS INITIAL.
*     Datum anhand der Steuerung berechnen
        CALL FUNCTION 'ISU_WA_DATE_COMPUTE'
          EXPORTING
            x_timex = xy_obj-timecontr-servovr_to
          IMPORTING
            y_date  = isuwa_seldat-selbis.
      ELSEIF isuwa_seldat-selbis IS INITIAL
      AND xy_obj-timecontr-servovr_to IS INITIAL.
        isuwa_seldat-selbis = co_date_infinite.
      ENDIF.
    ENDIF.

    CLEAR: ewaobjd,
*           ewa_data_finder,
           tabstr_dynp.
    frame1 = text-020.
    IF ewaobjd-selab IS INITIAL.
      ewaobjd-selab = co_date_finite.
    ENDIF.
    ewaobjd-selbis = co_date_infinite.
  ENDIF.

  CLEAR: save_obj, obj_key.

  IF lex IS INITIAL.
    CREATE OBJECT lex.
  ENDIF.

ENDFORM.                               " INITIALIZE
*&---------------------------------------------------------------------*
*&      Form  RAHMEN_TEXTE
*&---------------------------------------------------------------------*
FORM rahmen_texte   USING obj TYPE isuwa_obj
                    CHANGING ewaobjd TYPE ewaobjd.

  IF NOT obj-contr-maintain IS INITIAL.
    IF ( NOT ewaobjd-partner IS INITIAL OR
       NOT ewaobjd-vertrag IS INITIAL OR
       NOT ewaobjd-vstelle IS INITIAL ).
      LOOP AT SCREEN.
        IF screen-group1 = 'SDV'.
          screen-invisible = 1.
        ENDIF.
        MODIFY SCREEN.
      ENDLOOP.
    ELSEIF ( NOT ewaobjd-kunde IS INITIAL OR
             NOT ewaobjd-wempf IS INITIAL ).
      LOOP AT SCREEN.
        IF screen-group1 = 'ANL'.
          screen-invisible = 1.
        ENDIF.
        MODIFY SCREEN.
      ENDLOOP.
    ELSEIF ( ewaobjd-partner IS INITIAL AND
             ewaobjd-vertrag IS INITIAL AND
             ewaobjd-anlage IS INITIAL AND
             ewaobjd-sparte IS INITIAL AND
             ewaobjd-vstelle IS INITIAL ).
      LOOP AT SCREEN.
        IF screen-group1 = 'ANL'.
          screen-invisible = 1.
        ENDIF.
        MODIFY SCREEN.
      ENDLOOP.
    ELSEIF ( ewaobjd-kunde IS INITIAL AND
             ewaobjd-sdvertrag IS INITIAL AND
             ewaobjd-wempf IS INITIAL ).
      LOOP AT SCREEN.
        IF screen-group1 = 'SDV'.
          screen-invisible = 1.
        ENDIF.
        MODIFY SCREEN.
      ENDLOOP.
    ENDIF.
  ENDIF.

  ewaobjd-rahmen1 = text-t23.          "'Kopfdaten'
  ewaobjd-rahmen3 = text-s05.        "'Behälterdaten'
  ewaobjd-rahmen4 = text-101.        "'Servicerhythmus'
  ewaobjd-tabstr_serv = text-s40.    "'Servicefenster'
  ewaobjd-tabstr_week = text-s37.    "'Intervall'
  ewaobjd-tabstr_slc = text-s51.     "'Route'
  ewaobjd-tabstr_status = text-s49.  "'Status'
  isu_serv_ovr-frame1 = text-s38.    "'Periode'
  isu_serv_ovr-frame2 = text-s61.    "'Intervalle'
  ewaobjd-tabstr_saison = text-s18.  "'Saison'
  ewaobjd-tabstr_diff = text-s50.    "'Erschwernisse'


ENDFORM.                               " RAHMEN_TEXTE
*&---------------------------------------------------------------------*
*&      Form  FILL_HEADER
*&---------------------------------------------------------------------*
*       Kopfdaten des Servicerhythmus füllen
*----------------------------------------------------------------------*
FORM fill_header.

  IF NOT obj-wa_tab IS INITIAL.
    ewaobjd-sdvertrag = obj-wa_tab-sdvertrag.
*    ewaobjd-stichtag  = obj-wa_tab-stichtag.
    ewaobjd-anlage    = obj-wa_tab-anlage.
    ewaobjd-vstelle   = obj-wa_tab-vstelle.
    ewaobjd-addrtxt   = obj-wa_tab-addrtxt.
    ewaobjd-sparte    = obj-wa_tab-sparte.
    ewaobjd-vertrag   = obj-wa_tab-vertrag.
    ewaobjd-partner   = obj-wa_tab-partner.
    ewaobjd-parttxt   = obj-wa_tab-parttxt.
    ewaobjd-wempf     = obj-wa_tab-wempf.
    ewaobjd-wempftxt  = obj-wa_tab-wempftxt.
    ewaobjd-kunde     = obj-wa_tab-kunde.
    ewaobjd-kundetxt  = obj-wa_tab-kundetxt.
    ewaobjd-product   = obj-wa_tab-product.
*   Standplatzdaten
    ewaobjd-servloc   = obj-wa_tab-servloc.
    ewaobjd-haus      = obj-wa_tab-haus.
    ewaobjd-pmloc     = obj-wa_tab-pmloc.
    ewaobjd-stortzus  = obj-wa_tab-stortzus.
    ewaobjd-address_txt   = obj-wa_tab-address_txt.
*   Routendaten
    ewaobjd-route_main     = obj-wa_tab-route_main.
    ewaobjd-route_txt      = obj-wa_tab-route_txt.
*   Reinigungsobjektdaten
    ewaobjd-rob       = obj-wa_tab-rob.
    ewaobjd-robtyp    = obj-wa_tab-robtyp.
    ewaobjd-robtxt    = obj-wa_tab-robtxt.
    ewaobjd-addrtxt   = obj-wa_tab-addrtxt.
  ENDIF.

  IF NOT ewaobjd-anlage IS INITIAL.
    objekt = text-s02.
  ELSEIF NOT ewaobjd-sdvertrag IS INITIAL.
    objekt = text-s01.
  ELSEIF NOT ewaobjd-servloc IS INITIAL.
    objekt = text-s28.
  ELSEIF NOT ewaobjd-route_main IS INITIAL.
    objekt = text-s51.
  ELSEIF NOT ewaobjd-rob IS INITIAL.
    objekt = text-s00.
  ENDIF.

ENDFORM.                               " FILL_HEADER

*&---------------------------------------------------------------------*
*&      Form  MODIFY_SCREEN_INPUT
*&---------------------------------------------------------------------*
*       Eingabebereitschaft von Feldern setzen / löschen
*----------------------------------------------------------------------*
FORM modify_screen_input USING obj TYPE isuwa_obj.

* Im Anzeigemodus oder wenn Arbeitsbereich der historischen Daten leer
* ist, Felder nur auf Anzeige Modus
  IF obj-contr-wmode = co_display OR
     obj-wa_tab-sloc_use = 'X' OR
      ( obj-wa_tsl-objnr IS INITIAL AND
        obj-wa_tsl-laufnr IS INITIAL ) OR
     ewaobjd-no_edit EQ 'X'.
    LOOP AT SCREEN.
      IF screen-group3 = 'DSP' .
        screen-input = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.


* mkahl (C5095353) 20080418
* Deactivate new SET_SEQUENCE button as default.
  mac_set_input_fld1 'SET_SEQUENCE' '1' '1' '1'.
  mac_set_input_fld1 'SERVICE_LOGISTICS' '1' '1' '1'.

* ensprechend des Intervalls Felder ein- bzw ausblenden
  IF tabstrip1-activetab = 'SLOGISTICS' AND ( obj-wa_tsl-week_flag IS INITIAL OR obj-route IS NOT INITIAL ).
    CLEAR tabstr_dynp.
  ENDIF.

  IF NOT obj-wa_tsl-week_flag IS INITIAL.
    LOOP AT SCREEN.
      IF screen-group1 = 'MO' OR
         screen-group1 = 'TAG'.
        screen-output = 0.
        screen-invisible = 1.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
      IF screen-name = 'EWAOBJD-AB'.
        screen-input = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.

*   mkahl (C5095353) 20080418
*   Deactivate route sequence in case start week customizing is maintained
*   and we are a weekly service deactivate field ROUTE_SEQUENCE and enable
*   weekly choice of sequences (SET_SEQUENCE button)
    IF obj-route IS INITIAL.
      IF cl_isu_servfreq=>cl_get_use_startweeks( ) IS NOT INITIAL.
        mac_set_input_fld1 'EWAOBJD-ROUTE_SEQUENCE' 0 1 0.
        mac_set_input_fld1 'SET_SEQUENCE' 1 0 1.
        mac_set_input_fld1 'SERVICE_LOGISTICS' 1 0 1.
      ENDIF.
    ENDIF.
  ELSEIF NOT obj-wa_tsl-mnth_flag IS INITIAL.
    LOOP AT SCREEN.
      IF screen-group1 = 'WOE' OR
         screen-group1 = 'TAG'.
        screen-output = 0.
        screen-invisible = 1.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
      IF screen-name = 'EWAOBJD-AB'.
        screen-input = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ELSEIF NOT obj-wa_tsl-day_flag IS INITIAL.
    CASE obj-wa_tsl-day_type.
      WHEN '2' OR
           '3'. "HG02082006 day frequency
        LOOP AT SCREEN.
          IF screen-group1 = 'MO' OR
             screen-group1 = 'WOE' OR
             screen-group4 = 'ALL' OR
             screen-group1 = 'DAY'.
            screen-output = 0.
            screen-invisible = 1.
            screen-active = 0.
            MODIFY SCREEN.
          ENDIF.
        ENDLOOP.
      WHEN '1'.
        LOOP AT SCREEN.
          IF screen-group1 = 'MO' OR
             screen-group1 = 'WOE' OR
             screen-group4 = 'ONC' OR
             screen-group1 = 'DAY'.
            screen-output = 0.
            screen-invisible = 1.
            screen-active = 0.
            MODIFY SCREEN.
          ENDIF.
        ENDLOOP.
    ENDCASE.
  ELSE.
    LOOP AT SCREEN.
      IF screen-group1 = 'MO' OR
         screen-group1 = 'TAG'.
        screen-output = 0.
        screen-invisible = 1.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

* Tab-Reiter des Tabstrips der Erschwernisse ausblenden, falls
* rufendes Objekt eine Route ist -> Felder ausblenden
  IF NOT ewaobjd-route_main IS INITIAL.
    LOOP AT SCREEN.
      IF screen-group1 = 'ROU'
      OR screen-name = 'SERVICE_DIFF' .
        screen-output = 0.
        screen-invisible = 1.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

* Tab-Reiter des Tabstrips der Unterpositionen ausblenden, falls
* rufendes Objekt kein SD-Vertrag ist -> Felder ausblenden

* Changed MKahl -> moved to public available class

  if CL_EEWA_RFC_SERVICE_FREQUENCY=>IS_UPOS_AVAILABLE( PAR_OBJ = OBJ ) is initial.
    mac_set_input_fld1 'SERVICE_UPOS' '0' '1' '0'.
    IF tabstrip1-activetab = 'SUPOS'.
      CLEAR tabstr_dynp.
    ENDIF.
  endif.

  if CL_EEWA_RFC_SERVICE_FREQUENCY=>IS_SDSHARE_AVAILABLE( PAR_OBJ = OBJ ) is initial or OBJ-OBJECT = CO_OBJ_ROB.
    mac_set_input_fld1 'SERVICE_SHARE' '0' '1' '0'.
    IF tabstrip1-activetab = 'SSHARE'.
      CLEAR tabstr_dynp.
    ENDIF.
  endif.


*  IF obj-object <> co_obj_sdorder.
*    CASE obj-object.
*      WHEN co_obj_servloc.
*        IF NOT obj-wa_tab-devgrp IS INITIAL OR
*           NOT obj-wa_tab-ibase IS INITIAL.                                             .
*          READ TABLE obj-mdata-ielocsd
*          WITH KEY servloc = obj-wa_tab-servloc
*                   devgrp   = obj-wa_tab-devgrp
*                   ibase    = obj-wa_tab-ibase
*                   TRANSPORTING NO FIELDS.
*        ELSE.
*          READ TABLE obj-mdata-ielocsd
*          WITH KEY servloc = obj-wa_tab-servloc
*                   equnr   = obj-wa_tab-equnr
*                   TRANSPORTING NO FIELDS.
*        ENDIF.
*        IF sy-subrc <> 0.
*          mac_set_input_fld1 'SERVICE_UPOS' '0' '1' '0'.
*          IF tabstrip1-activetab = 'SUPOS'.
*            CLEAR tabstr_dynp.
*          ENDIF.
*          mac_set_input_fld1 'SERVICE_SHARE' '0' '1' '0'.
*          IF tabstrip1-activetab = 'SSHARE'.
*            CLEAR tabstr_dynp.
*          ENDIF.
*        ENDIF.
*      WHEN co_obj_rob.
*        READ TABLE obj-mdata-ipropsd
*        WITH KEY prop = obj-wa_tab-clean_prop
*                 TRANSPORTING NO FIELDS.
*        IF sy-subrc <> 0.
*          mac_set_input_fld1 'SERVICE_UPOS' '0' '1' '0'.
*          IF tabstrip1-activetab = 'SUPOS'.
*            CLEAR tabstr_dynp.
*          ENDIF.
*          mac_set_input_fld1 'SERVICE_SHARE' '0' '1' '0'.
*          IF tabstrip1-activetab = 'SSHARE'.
*            CLEAR tabstr_dynp.
*          ENDIF.
*        ENDIF.
*      WHEN OTHERS.
*        mac_set_input_fld1 'SERVICE_UPOS' '0' '1' '0'.
*        IF tabstrip1-activetab = 'SUPOS'.
*          CLEAR tabstr_dynp.
*        ENDIF.
*        mac_set_input_fld1 'SERVICE_SHARE' '0' '1' '0'.
*        IF tabstrip1-activetab = 'SSHARE'.
*          CLEAR tabstr_dynp.
*        ENDIF.
*    ENDCASE.
*  ENDIF.

* Tabreiter für die Kundefelder beschriften
  IF NOT obj-contr-cust_fieldsh IS INITIAL.
    service_cust = text-s68.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'SERVICE_CUST' .
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

* Feld des Garantiegebervertrags ausblenden, falls dieser nicht im
* System verwendet wird
  IF obj-contr-ggv_in_use IS INITIAL.
    mac_set_input_fld1 'EWAOBJD-GGVERTRAG' '0' '1' '0'.
  ENDIF.

  IF NOT obj-wa_tsl-service_group IS INITIAL.
    PERFORM modify_sgroup_fields USING obj-wa_tsl-service_group.
  ENDIF.

** RCI for one off service
  IF NOT rci_active IS INITIAL.
    IF NOT  ewaobjd-temploc IS INITIAL.
      CALL FUNCTION 'ICON_CREATE'
        EXPORTING
          name       = icon_warning
          text       = text-t05
          info       = text-005
          add_stdinf = 'X'
        IMPORTING
          result     = vorl.
    ELSE.
      CLEAR  vorl.

    ENDIF.

    IF NOT ewaobjd-tempremoval  IS INITIAL.
      CALL FUNCTION 'ICON_CREATE'
        EXPORTING
          name       = icon_schedule_line
          text       = ' '
          info       = text-t06
          add_stdinf = 'X'
        IMPORTING
          result     = vorl_removal.
    ELSE.
      CLEAR  vorl_removal.

    ENDIF.

    IF ewaobjd-serv_date = obj-wa_tab-beh_ab
        AND NOT  ewaobjd-timeframe IS INITIAL.

      LOOP AT SCREEN.
        IF screen-name = 'EWAOBJD-STARTTIME' OR
           screen-name = 'EWAOBJD-STOPTIME'.
          screen-required = '1'.
          IF ( ewaobjd-starttime IS INITIAL AND screen-name = 'EWAOBJD-STARTTIME' )
            OR ( ewaobjd-stoptime IS INITIAL AND screen-name = 'EWAOBJD-STOPTIME' ).
            screen-intensified = '1'.
          ENDIF.
          MODIFY SCREEN.
        ENDIF.
      ENDLOOP.
    ENDIF.
    IF ewaobjd-serv_date = obj-wa_tab-beh_bis
        AND NOT  ewaobjd-timeframe IS INITIAL.
      LOOP AT SCREEN.
        IF  screen-name = 'EWAOBJD-STARTTIME'
        OR  screen-name = 'EWAOBJD-STOPTIME'.
          screen-required = '1'.
          IF ( ewaobjd-starttime IS INITIAL AND screen-name = 'EWAOBJD-STARTTIME' )
            OR ( ewaobjd-stoptime IS INITIAL AND screen-name = 'EWAOBJD-STOPTIME' ).
            screen-intensified = '1'.
          ENDIF.
          MODIFY SCREEN.
        ENDIF.
      ENDLOOP.
    ENDIF.

  ENDIF.

ENDFORM.                               " MODIFY_SCREEN_INPUT

*&---------------------------------------------------------------------*
*&      Form  MODIFY_SUB_TECH
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM modify_sub_tech USING    ewaobjd TYPE ewaobjd.

  CASE obj-object.
    WHEN co_obj_anlage
      OR co_obj_servloc.
      IF obj-wa_tab-rob IS INITIAL.
        LOOP AT SCREEN.
          IF screen-group1 = 'MAT' OR
             screen-group1 = 'ROB'.
            screen-invisible = 1.
            screen-active = 0.
            screen-output = 0.
            MODIFY SCREEN.
          ENDIF.
        ENDLOOP.
      ELSE.
        LOOP AT SCREEN.
          IF screen-group1 = 'MAT' OR
             screen-group1 = 'ALL' OR
             screen-group1 = 'BEH'.
            screen-invisible = 1.
            screen-active = 0.
            screen-output = 0.
            MODIFY SCREEN.
          ENDIF.
        ENDLOOP.
      ENDIF.
    WHEN co_obj_sdorder.
      LOOP AT SCREEN.
        IF screen-group1 = 'MAT' OR
           screen-group1 = 'ROB'.
          screen-invisible = 1.
          screen-active = 0.
          screen-output = 0.
          MODIFY SCREEN.
        ENDIF.
      ENDLOOP.
    WHEN co_obj_rob.
      LOOP AT SCREEN.
        IF screen-group1 = 'MAT' OR
           screen-group1 = 'ALL' OR
           screen-group1 = 'BEH'.
          screen-invisible = 1.
          screen-output = 0.
          screen-active = 0.
          MODIFY SCREEN.
        ENDIF.
      ENDLOOP.
  ENDCASE.

  IF NOT ewaobjd-devgrp IS INITIAL OR
     NOT ewaobjd-ibase  IS INITIAL.
    LOOP AT SCREEN.
      IF screen-name = 'EWAOBJD-GERAET'.
        screen-invisible = 1.
        screen-output = 0.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ELSE.
    LOOP AT SCREEN.
      IF screen-name = 'EWAOBJD-DEVGRP'
      OR screen-name = 'EWAOBJD-IBASE'
      OR screen-name = 'EWAOBJD-CONT_COUNT'.
        screen-invisible = 1.
        screen-output = 0.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

ENDFORM.                               " MODIFY_SUB_TECH
*&---------------------------------------------------------------------*
*&      Form  SET_BUTTON_STATUS
*&---------------------------------------------------------------------*
*       ändert die Icons für Ein- und Zuklappen
*----------------------------------------------------------------------*
FORM set_button_status USING    collapse_head TYPE regen-kennzx
                                collapse_pos TYPE regen-kennzx
                                collapse_detail TYPE regen-kennzx
                                collapse_not TYPE regen-kennzx
                       CHANGING head TYPE icons-text
                                position TYPE icons-text
                                detail TYPE icons-text
                                notizen TYPE icons-text.

* Button zum ein-/ausklappen der Kopfdaten setzen
  IF collapse_head = co_flag_marked.
    mac_icon_create icon_data_area_expand text-021 space head.
  ELSE.
    mac_icon_create icon_data_area_collapse text-022 space head.
  ENDIF.

* Button zum ein-/ausklappen der Positionsdaten setzen
  IF collapse_pos = co_flag_marked.
    mac_icon_create icon_data_area_expand space space position.
  ELSE.
    mac_icon_create icon_data_area_collapse space space position.
  ENDIF.

* Button zum ein-/ausklappen der Detaildaten setzen
  IF collapse_detail = co_flag_marked.
    mac_icon_create icon_data_area_expand space space detail.
  ELSE.
    mac_icon_create icon_data_area_collapse space space detail.
  ENDIF.

* Button zum ein-/ausklappen der Notizen setzen
  IF collapse_not = co_flag_marked.
    mac_icon_create icon_data_area_expand space space notizen.
  ELSE.
    mac_icon_create icon_data_area_collapse space space notizen.
  ENDIF.

ENDFORM.                               " SET_BUTTON_STATUS
*&---------------------------------------------------------------------*
*&      Form  FILL_FIELD_TXT
*&---------------------------------------------------------------------*
FORM fill_field_txt.

  STATICS: done TYPE kennzx.

  CHECK done IS INITIAL.
* daynames on the tabstrips
  day1 = text-s11.
  day2 = text-s12.
  day3 = text-s13.
  day4 = text-s14.
  day5 = text-s15.
  day6 = text-s16.
  day7 = text-s17.

* Texte der Dummy Subcreens
  ewaobjd-head_txt = text-s43.
  ewaobjd-pos_txt  = text-s44.
  ewaobjd-detail_txt  = text-s45.

  service_head = text-s60.
  service_time = text-s61.
  service_diff = text-s50.
  service_upos = text-s77.
  service_share = text-s82.

* mkahl 20080520
  service_logistics = text-s83.

  done = 'X'.

ENDFORM.                               " FILL_FIELD_TXT
*&---------------------------------------------------------------------*
*&      Form  IROBJ_TAB_CHANGE
*&---------------------------------------------------------------------*
*       übernimmt Änderungen an Produktbereich, Abfallart, austauschbar
*----------------------------------------------------------------------*
FORM irobj_tab_change USING    ewaobjd TYPE ewaobjd
                      CHANGING xy_obj TYPE isuwa_obj.

  DATA: save_tab TYPE STANDARD TABLE OF isu_robj_tabc.

  save_tab = xy_obj-irobj_tab.

  xy_obj-wa_tab-changeable = ewaobjd-changeable.
  xy_obj-wa_tab-waste_type = ewaobjd-waste_type.
  xy_obj-wa_tab-kompfakt   = ewaobjd-kompfakt.
  xy_obj-wa_tab-eigentum   = ewaobjd-eigentum.
  xy_obj-wa_tab-outl_con   = ewaobjd-outl_con.

  MODIFY xy_obj-irobj_tab FROM xy_obj-wa_tab TRANSPORTING
                                 changeable
                                 waste_type
                                 eigentum
                                 kompfakt
                                 outl_con
                              WHERE objnr = xy_obj-wa_tab-objnr.

  IF save_tab <> xy_obj-irobj_tab.
    PERFORM refresh_tree USING g_node_key
                         CHANGING xy_obj.
  ENDIF.

ENDFORM.                               " IROBJ_TAB_CHANGE
*&---------------------------------------------------------------------*
*&      Form  IROBJ_TAB_CHANGE_EHS
*&---------------------------------------------------------------------*
*       übernimmt Änderungen an Produktbereich, Abfallart, austauschbar
*----------------------------------------------------------------------*
FORM irobj_tab_change_ehs USING    ewaobjd TYPE ewaobjd
                         CHANGING xy_obj TYPE isuwa_obj.

  DATA: save_tab TYPE STANDARD TABLE OF isu_robj_tabc.
  DATA: ehs_data TYPE ewaobjd_ehs.

  save_tab = xy_obj-irobj_tab.

  MOVE-CORRESPONDING ewaobjd TO ehs_data.                   "#EC ENHOK
  MOVE-CORRESPONDING ehs_data TO xy_obj-wa_tab.             "#EC ENHOK
  MOVE ewaobjd-waste_type TO xy_obj-wa_tab-waste_type .

  SORT xy_obj-irobj_tab BY objnr.
  READ TABLE xy_obj-irobj_tab BINARY SEARCH
        WITH KEY objnr = xy_obj-wa_tab-objnr
        TRANSPORTING NO FIELDS.
  MODIFY xy_obj-irobj_tab INDEX sy-tabix FROM xy_obj-wa_tab.

*  IF save_tab <> obj-irobj_tab.
*    PERFORM refresh_tree USING g_node_key
*                         CHANGING obj.
*  ENDIF.

ENDFORM.                               " IROBJ_TAB_CHANGE

*&---------------------------------------------------------------------*
*&      Form  TRANSMIT_FIELDS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM transmit_fields.

  DATA: save_tsl TYPE isu_robj_tsl OCCURS 0,
        failed   TYPE kennzx,
        wa_tsl   TYPE isu_robj_tsl.

  CHECK NOT obj-wa_tsl IS INITIAL.

  " detecting changes has been repair-broken
  "-> interpret your individual '<mark>' here
  save_tsl[] = obj-irobj_tsl[].

* check if there are service changes
* in save_tsl the old values are already overwritten in case
* of service type changes e.g.
  PERFORM check_service_changes USING    ewaobjd
                                CHANGING obj.

* Eingaben aus "Details zur Servicehistorie" übernehmen
  PERFORM get_histdet_input     USING        ewaobjd
                                CHANGING     obj-irobj_tsl.

* falls sich obj-wa_tsl geändert hat muss der Tree aufgefrischt werden
  SORT save_tsl BY objnr laufnr bis.
  SORT obj-irobj_tsl BY objnr laufnr bis.
*  do not never mind wether changes has been made or not and not just transmit the fields
*  -> you may give up controll to some numpty
  IF save_tsl <> obj-irobj_tsl
  OR finputistransferredtoobj IS NOT INITIAL " <- '<mark>' i.e. 'X' you transferred input to the obj before
  OR NOT refresh_tree IS INITIAL.
    LOOP AT obj-irobj_tsl INTO wa_tsl
    WHERE ab = obj-wa_tsl-ab
    AND   bis = obj-wa_tsl-bis.
*   if special cancellation has already be invoked no additional check
*   is necessary
      CHECK obj-wa_tab-rev_kz IS INITIAL.
      PERFORM check_billing_date USING 'CHNG'
                                       obj-wa_tab-objnr
                                       wa_tsl-ab
                                 CHANGING wa_tsl
                                          obj
                                          failed.
      CHECK failed IS INITIAL.
    ENDLOOP.
*   neu eingefügte Zeitscheibe in den Zwischenspeicher schieben
    PERFORM insert_timeslc       USING     obj-wa_tsl-laufnr
                                           obj-wa_tsl-bis
                                           space
                                 CHANGING  obj.
*   den aktuellen Knoten ausfindig machen
    PERFORM refresh_tree USING g_node_key
                         CHANGING obj.
    CLEAR: refresh_tree, finputistransferredtoobj.
  ENDIF.

ENDFORM.                               " TRANSMIT_FIELDS
*&---------------------------------------------------------------------*
*&      Form  fill_tabstrip
*&---------------------------------------------------------------------*
*       belegt die Tabstrips der Services mit Daten
*----------------------------------------------------------------------*
FORM fill_tabstrip USING x_obj TYPE isuwa_obj
                   CHANGING ewaobjd TYPE ewaobjd.
  CLEAR ewaobjd-serv_date .
* When service type is initial, that means that the service
* frequency is going to be created. so default values setting in
* customer exit functions should not be overwritten. but the service date
* is the data coming from the screen and should be copied.
  IF NOT x_obj-wa_tsl-objnr IS INITIAL.
    IF NOT x_obj-irobj_tsl[] IS INITIAL.
      MOVE-CORRESPONDING x_obj-wa_tsl TO ewaobjd.           "#EC ENHOK
    ENDIF.
  ELSE.
*     if there is no any default value entered by customer-function for
*     status_serv and status_cust, take the default value defined by sap (filled in
*     insert_service subroutine)

*   clear fields
    MOVE-CORRESPONDING x_obj-wa_tsl TO ewaobjd.

    IF ewaobjd-status_serv IS INITIAL.
      ewaobjd-status_serv = x_obj-wa_tsl-status_serv.
    ENDIF.
    IF ewaobjd-status_cust IS INITIAL.
      ewaobjd-status_cust = x_obj-wa_tsl-status_cust.
    ENDIF.

  ENDIF.
* Wochentag füllen
*  PERFORM set_weekday  USING x_obj-wa_tsl
*                       CHANGING ewaobjd.
  IF NOT obj-wa_tsl-day_flag IS INITIAL.
    IF obj-wa_tsl-day_type = '1'.
      ewaobjd-serv_date = x_obj-wa_tsl-startdate.
      CLEAR : ewaobjd-day_perd, ewaobjd-flgdly.
    ELSEIF obj-wa_tsl-day_type = co_day_perd.  " '2' HG04082006
      ewaobjd-day_perd = 'X'.
      CLEAR: ewaobjd-flgdly.
    ELSEIF obj-wa_tsl-day_type = co_day_freq.  " '3' HG04082006
      ewaobjd-flgdly = 'X'.
      CLEAR: ewaobjd-day_perd.
    ENDIF.
  ELSE.
    CLEAR : ewaobjd-day_perd, ewaobjd-flgdly.
  ENDIF.
  ewaobjd-max_nr = x_obj-wa_tsl-laufnr.

*  falls der Servicerhythmus aus der Route übernommen wurde, darf der
*  Wochentag nicht mehr verändert werden
  CHECK NOT x_obj-wa_tsl-sfreplace IS INITIAL.
  mac_set_input_grp1 'DAY'  '1' '0' '1' '0' .

  IF NOT obj-wa_tsl-capacitykind IS INITIAL.
    LOOP AT SCREEN.
      IF screen-group1 = 'DAY'.
        screen-output = 0.
        screen-invisible = 1.
        screen-active = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
ENDFORM.                               " fill_tabstrip

*&---------------------------------------------------------------------*
*&      Form  get_histdet_input
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM get_histdet_input USING    ewaobjd TYPE ewaobjd
                       CHANGING service_data TYPE isuwa_t_robj_tsl.

  DATA : ls_service TYPE isu_robj_tsl,
         check_tsl TYPE isu_robj_tsl.

  FIELD-SYMBOLS:
         <ls_service_data> TYPE isu_robj_tsl.

  READ TABLE service_data INDEX 1 INTO check_tsl.
  CHECK obj-wa_tsl-objnr = check_tsl-objnr.

* Eingaben abmischen
  MOVE-CORRESPONDING obj-wa_tsl TO ls_service.
  MOVE-CORRESPONDING ewaobjd TO ls_service.                 "#EC ENHOK

* Wochentag auslesen
  PERFORM get_weekday  USING ewaobjd
                       CHANGING ls_service.

  IF obj-wa_tsl-day_type = '1'.
    ls_service-startdate = ewaobjd-serv_date.
  ENDIF.

  LOOP AT service_data ASSIGNING <ls_service_data>
  WHERE objnr = obj-wa_tsl-objnr
  AND laufnr = obj-wa_tsl-laufnr
  AND bis = obj-wa_tsl-bis.
    MOVE-CORRESPONDING ls_service TO <ls_service_data>.     "#EC ENHOK
  ENDLOOP.
  IF sy-subrc <> 0.
    APPEND ls_service TO service_data.
  ENDIF.

  MOVE-CORRESPONDING ls_service TO obj-wa_tsl.              "#EC ENHOK

ENDFORM.                               " get_histdet_input
*&---------------------------------------------------------------------*
*&      Form  get_list_box
*&---------------------------------------------------------------------*
FORM get_list_box USING    route TYPE eroute
                           route_main TYPE eroute
                  CHANGING service_type TYPE service_type
                           no_edit      TYPE kennzx.

  TRY.
    CALL METHOD cl_eewa_rfc_service_frequency=>get_stype_list_box
      EXPORTING
        i_ewaobjd      = ewaobjd
        i_route        = route
        i_day_type     = obj-wa_tsl-day_type
      CHANGING
        c_obj          = obj
        c_no_edit      = no_edit
        c_service_type = service_type.
      CATCH cx_eewa_md into lex.    " Ausnahmeklasse zum Servicerhythmus
        __display_msg.
  ENDTRY.

ENDFORM.                    " get_list_box
*&---------------------------------------------------------------------*
*&      Form  enqueue_objects_ex
*&---------------------------------------------------------------------*
FORM enqueue_objects_ex USING x_anlage TYPE eanl-anlage
                              x_sdaufnr TYPE vbak-vbeln
                              x_rob TYPE eewa_clean_rob
                              x_route TYPE eroute
                              x_servloc TYPE egpl-devloc
                              x_objnr TYPE eobjnr
                              X_SCOPE type DDENQSCOPE
                     CHANGING y_obj TYPE isuwa_obj raising CX_EEWA_MD.
  CALL METHOD cl_eewa_rfc_service_frequency=>enqueue_objects
    EXPORTING
      i_installation = x_anlage
      i_contract     = x_sdaufnr
      i_servloc      = x_servloc
      i_route        = x_route
      i_cleanobj     = x_rob
      i_objnr        = x_objnr
      i_wait         = y_obj-contr-nofullscreen
      I_SCOPE        = X_SCOPE
    CHANGING
      c_enq_done     = y_obj-contr-enq_done
      c_obj          = y_obj.
ENDFORM.                    " enqueue_objects_ex
*&---------------------------------------------------------------------*
*&      Form  enqueue_objects
*&---------------------------------------------------------------------*
FORM enqueue_objects USING    x_anlage TYPE eanl-anlage
                              x_sdaufnr TYPE vbak-vbeln
                              x_rob TYPE eewa_clean_rob
                              x_route TYPE eroute
                              x_servloc TYPE egpl-devloc
                              x_objnr TYPE eobjnr
                              X_SCOPE type DDENQSCOPE
                     CHANGING y_obj TYPE isuwa_obj.
  TRY.
      perform enqueue_objects_ex
        using x_anlage x_sdaufnr x_rob x_route x_servloc x_objnr X_SCOPE
        changing y_obj.
    CATCH cx_eewa_md into lex.    " Ausnahmeklasse zum Servicerhythmus
      __EXCEPTION_MSGPUTX LEX FOREIGN_LOCK.
  ENDTRY.
ENDFORM.                    " enqueue_objects
*&--------------------------------------------------------------------*
*&      Form  dequeue_objects
*&--------------------------------------------------------------------*
FORM dequeue_objects USING    x_anlage TYPE eanl-anlage
                              x_sdaufnr TYPE vbak-vbeln
                              x_rob TYPE eewa_clean_rob
                              x_route TYPE eroute
                              x_servloc TYPE egpl-devloc
                              x_wmode TYPE regen-wmode
                              x_scope TYPE DDENQSCOPE
                     CHANGING xy_obj TYPE isuwa_obj.



  TRY.
      CALL METHOD cl_eewa_rfc_service_frequency=>dequeue_objects
        EXPORTING
          i_installation = x_anlage
          i_contract     = x_sdaufnr
          i_servloc      = x_servloc
          i_route        = x_route
          i_cleanobj     = x_rob
          i_wmode        = x_wmode
          i_obj_tab      = xy_obj-ewatab
          i_obj_wa       = xy_obj-irobj_tab
*          I_SCOPE        = X_SCOPE " we may have the case that the lock scope is not determinable. so remove the whole lock
        CHANGING
          c_enq_done     = xy_obj-contr-enq_done.
    CATCH cx_eewa_md into lex.    " Ausnahmeklasse zum Servicerhythmus
      __EXCEPTION_MSGPUTX LEX SPACE.
  ENDTRY.

ENDFORM.                    " dequeue_objects

form do_dequeue_int
  using
    x_scope TYPE DDENQSCOPE
  CHANGING
    xy_obj TYPE isuwa_obj.

  PERFORM dequeue_objects
                    USING
                       xy_obj-anlage
                       xy_obj-sdaufnr
                       xy_obj-rob
                       xy_obj-route
                       xy_obj-servloc
                       xy_obj-contr-wmode
                       x_scope
                    CHANGING
                       xy_obj.
endform.

form do_dequeue CHANGING xy_obj TYPE isuwa_obj.

  PERFORM do_dequeue_int
                    USING
                       '1'
                    CHANGING
                       xy_obj.
endform.
*&---------------------------------------------------------------------*
*&      Form  get_container_Data
*&---------------------------------------------------------------------*
FORM get_container_data USING    w_bzg TYPE isuwa_bzg_line
                                 x_vstelle TYPE evbs-vstelle
                        CHANGING y_obj TYPE isuwa_obj.

  DATA:   w_container       TYPE ewa_container_data,
          wrobj_tab         TYPE isu_robj_tabc.


  MOVE-CORRESPONDING w_bzg TO wrobj_tab.
  wrobj_tab-beh_type_txt = w_bzg-text30.
  wrobj_tab-vstelle = x_vstelle.
  wrobj_tab-ab = w_bzg-bzg_ab.
  wrobj_tab-bis = w_bzg-bzg_bis.
  wrobj_tab-devgrp  = w_bzg-behgrp.
  wrobj_tab-ibase = w_bzg-ibase.
*     Behälterdaten zur Bezugsgröße besorgen über die Equinummer
  CALL FUNCTION 'ISU_GET_WASTE_CONTAINER'
    EXPORTING
      x_equnr      = w_bzg-equnr
      x_sernr      = w_bzg-behaelter
      x_matnr      = w_bzg-beh_type
      x_behgrp     = w_bzg-behgrp
      x_ibase      = w_bzg-ibase
    CHANGING
      xy_container = w_container.
  wrobj_tab-beh_type = w_container-beh_type.
  wrobj_tab-geraet = w_container-sernr.
  IF wrobj_tab-beh_type_txt IS INITIAL.
    wrobj_tab-beh_type_txt = w_container-beh_txt.
  ENDIF.
  wrobj_tab-product_area = w_container-product_area.
  wrobj_tab-logiknr = w_container-logiknr.
  APPEND wrobj_tab TO y_obj-irobj_tab.

ENDFORM.                    " get_container_Data
*&--------------------------------------------------------------------*
*&      Form  get_list_box
*&--------------------------------------------------------------------*
FORM get_notes_list_box  CHANGING notes TYPE diffcult.

  CHECK obj-object <> co_obj_sdorder.

  TRY.
    CALL METHOD cl_eewa_rfc_service_frequency=>get_notes_list_box
      EXPORTING
        i_contcat      = obj-wa_tab-beh_type
        i_cleanobj     = obj-wa_tab-rob
        i_cleanobj_cat = obj-wa_tab-robtyp.
    CATCH cx_eewa_md into lex.    " Ausnahmeklasse zum Servicerhythmus
      __display_msg.
  ENDTRY.

ENDFORM.                    " get_notes_list_box
*&--------------------------------------------------------------------*
*&      Form  get_upos_list_box
*&--------------------------------------------------------------------*
FORM get_upos_list_box  USING x_obj TYPE isuwa_obj
                        CHANGING upos TYPE matnr.


  CHECK NOT x_obj-wa_tab-product IS INITIAL.

  TRY.
      CALL METHOD cl_eewa_rfc_service_frequency=>get_upos_list_box
        EXPORTING
          i_elocsd_tab   = x_obj-mdata-ielocsd
          i_propsd_tab   = x_obj-mdata-ipropsd
          i_object_type  = x_obj-object
          i_contract_tab = x_obj-mdata-ivbap
          i_obj_wa       = x_obj-wa_tab
          i_from         = x_obj-wa_tsl-ab
          i_to           = x_obj-wa_tsl-bis
          i_vbeln        = ewaobjd-sdvertrag
          i_posnr        = ewaobjd-posnr
          i_ieewaprop_tab = x_obj-mdata-ieewaprop.
    CATCH cx_eewa_md into lex.    " Ausnahmeklasse zum Servicerhythmus
      __display_msg.
  ENDTRY.

ENDFORM.                    " get_upos_list_box
*&---------------------------------------------------------------------*
*&      Form  get_share_list_box
*&---------------------------------------------------------------------*
FORM get_share_list_box  USING x_obj TYPE isuwa_obj
                        CHANGING xy_vbeln TYPE vbeln.

  CHECK NOT x_obj-wa_tab-product IS INITIAL.

  TRY.
    CALL METHOD cl_eewa_rfc_service_frequency=>get_share_list_box
      EXPORTING
        i_elocsd_tab  = x_obj-mdata-ielocsd
        i_propsd_tab  = x_obj-mdata-ipropsd
        i_object_type = x_obj-object
        i_vbeln       = ewaobjd-sdvertrag
        i_vbeln_share = xy_vbeln
        i_obj_wa      = x_obj-wa_tab
        i_posnr       = ewaobjd-posnr
        i_tsl         = x_obj-wa_tsl
        i_ieewaprop_tab = x_obj-mdata-ieewaprop.
    CATCH cx_eewa_md into lex.    " Ausnahmeklasse zum Servicerhythmus
      __display_msg.
  ENDTRY.
ENDFORM.                    " get_share_list_box

*&---------------------------------------------------------------------*
*&      Form  authority_check
*&---------------------------------------------------------------------*
FORM authority_check USING x_obj TYPE isuwa_obj
                           wmode TYPE regen-wmode.

* macro for filling the auth-ids into table iauth
* (Makro zum füllen der auth_ids in Tabelle iauth)
  DEFINE load_authid.
    iauth-id    = &1.
    iauth-field = &2.
    append iauth.
  END-OF-DEFINITION.

* local declarations
  DATA: iauth       TYPE isu_author OCCURS 0 WITH HEADER LINE,
        auth_wmode  TYPE regen-wmode,
        auth_rc     TYPE sy-subrc.

  auth_wmode = wmode.

* fill id-table (Füllen der Übergabetabelle an ISU_AUTHORITY_CHECK)
  load_authid   co_authid_activity   auth_wmode.
  load_authid   co_authid_servobj    x_obj-object.

* call authorization-module (Aufruf der ISU-Berechtigungsprüfung)
  CALL FUNCTION 'ISU_AUTHORITY_CHECK'
    EXPORTING
      x_object  = co_auth_object
    IMPORTING
      y_subrc   = auth_rc
    TABLES
      xt_author = iauth
    EXCEPTIONS
      OTHERS    = 99.
  IF sy-subrc <> 0.
    mac_msg_putx co_msg_programming_error '887' 'E9'
                 'ISU_AUTHORITY_CHECK' 'OTHERS'
                 'FORM AUTH_TEST' space system_error.
*  for cross reference purpose only
    IF 1 = 2.
      MESSAGE a887(e9) WITH 'ISU_AUTHORITY_CHECK'
                            'OTHERS'
                             space
                            'FORM AUTH_TEST'.
    ENDIF.
  ENDIF.

* exception not_authorized
  IF auth_rc <> 0.
    PERFORM auth_error USING auth_wmode  'X'.
  ENDIF.

ENDFORM.                               " CHECK_USER
*&---------------------------------------------------------------------*
*&      Form  AUTH_ERROR
*&---------------------------------------------------------------------*
*       put an error message if authority check failed
*----------------------------------------------------------------------*
*  -->  x_wmode      wmode
*  <--  x_exception  Flag: Nachricht ausgeben
*----------------------------------------------------------------------*
FORM auth_error USING x_wmode TYPE regen-wmode
                      value(x_exception).

  DATA:  wmode_str(30) TYPE c.

* fill wmode-string (Füllen des wmode-Text)
  CASE x_wmode.
    WHEN co_display.
      wmode_str = text-t13.
    WHEN co_change.
      wmode_str = text-t12.
    WHEN co_create.
      wmode_str = text-t11.
  ENDCASE.

  IF x_exception IS INITIAL.
* no exception (keine Ausnahmebehandlung)
    mac_msg_putx co_msg_error '100' 'E9'
                 text-s27 wmode_str space space not_authorized.
    IF 1 = 2.
      MESSAGE e100(e9) WITH text-s27 wmode_str.
    ENDIF.
  ELSE.
* with exception (mit Ausnahmebehandlung)
    mac_msg_putx co_msg_error '100' 'E9'
                 text-s27 wmode_str space space not_authorized.
  ENDIF.

ENDFORM.                               " AUTH_ERROR
*&---------------------------------------------------------------------*
*&      Form  modify_billrlv_fields
*&---------------------------------------------------------------------*
FORM modify_billrlv_fields  USING   x_obj TYPE isuwa_obj.

  DATA: field(132) TYPE c.
  FIELD-SYMBOLS:
    <billfld> TYPE tewaservicebill.


*  IF x_obj-wa_tsl-bis LE x_obj-wa_tab-billdate
*  AND NOT x_obj-wa_tab-billdate IS INITIAL
*  AND x_obj-wa_tab-billdate <> co_date_infinite OR
*      x_obj-wa_tsl-day_type EQ co_day_once AND
*      obj-wa_tab-billdate GE obj-wa_tsl-ab.

* Changed C5095353
  IF NOT x_obj-wa_tab-billdate IS INITIAL " we have a valid billing date (not initial and not infinite)
     AND x_obj-wa_tab-billdate <> co_date_infinite
     and ( ( x_obj-wa_tsl-bis LE x_obj-wa_tab-billdate ) or " the billing-date is less than the end-date of the time slice
           ( x_obj-wa_tsl-day_type EQ co_day_once AND " or we have a one-off service and the service date (start date) is less than the billing date
             ( x_obj-wa_tab-billdate GE x_obj-wa_tsl-STARTDATE or x_obj-wa_tab-billdate GE x_obj-wa_tsl-ab ) " either service date is filled and greater or from-date is greater
           )
         ).

* wenn Kennzeichen für Anpassungsstorno gesetzt ist, muss keine Überprüfung gemacht werden
    CHECK x_obj-wa_tab-rev_kz IS INITIAL.
    LOOP AT x_obj-ibillfields ASSIGNING <billfld>.
      CONCATENATE 'EWAOBJD-' <billfld>-billfld INTO field.
      CASE <billfld>-billfld.
        WHEN 'EWEEKDAY'.
          LOOP AT SCREEN.
            IF screen-group1 = 'DAY'.
              screen-input = 0.
              MODIFY SCREEN.
            ENDIF.
          ENDLOOP.
        WHEN OTHERS.
          LOOP AT SCREEN.
            IF screen-name = field.
              screen-input = 0.
              MODIFY SCREEN.
            ENDIF.
          ENDLOOP.
      ENDCASE.
    ENDLOOP.
    LOOP AT SCREEN.
      IF screen-name = 'EWAOBJD-SERV_DATE'.
        screen-input = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
** workaround: Creation from Service-Group malfunctions -> TODO
    LOOP AT SCREEN. "BUG: Service-Group changes can unlock and overwrite Billing-fields
      IF screen-name = 'EWAOBJD-SERVICE_GROUP'.
        screen-input = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
** TODO: transfer workaround
*   "-> oder SERV_DATE und SERVICE_GROUP in TEWASERVICEBILL aufnehmen
  ENDIF.

ENDFORM.                    " modify_billrlv_fields
*&---------------------------------------------------------------------*
*&      Form  modify_sgroup_fields
*&---------------------------------------------------------------------*
FORM modify_sgroup_fields USING i_service_group TYPE service_group.

  DATA: output TYPE kennzx.

  CHECK obj-contr-wmode <> co_display.

*--- read customizing data
  READ TABLE gt_sgroup TRANSPORTING NO FIELDS
  WITH KEY service_group = i_service_group.
  IF sy-subrc <> 0.
    SELECT * FROM tewaservgrptmpl
    APPENDING TABLE gt_sgroup
    WHERE service_group = i_service_group.
    IF sy-subrc <> 0.
      EXIT.
    ENDIF.
  ENDIF.

  GET BADI badi_sf.

  LOOP AT SCREEN.
* überprüfen ob Feld im Customizing vorbelegt wurde
    CALL BADI badi_sf->modify_sgroup_input
      EXPORTING
        i_sgroup      = i_service_group
        i_fieldname   = screen-name
      IMPORTING
        e_input       = output
      EXCEPTIONS
        general_error = 1
        not_found     = 2
        OTHERS        = 99.
    IF sy-subrc = 0.
      screen-input = output.
      MODIFY SCREEN.
    ELSE.
      CONTINUE.
    ENDIF.

  ENDLOOP.

ENDFORM.                    " modify_sgroup_fields
*&---------------------------------------------------------------------*
*&      Form  MODIFY_HEAD_INPUT
*&---------------------------------------------------------------------*
*       Eingabebereitschaft von Feldern setzen / löschen
*----------------------------------------------------------------------*
FORM modify_head_input USING obj TYPE isuwa_obj.

*  TODO. for HEAD data

ENDFORM.                    " modify_head_input
*&---------------------------------------------------------------------*
*&      Form  MODIFY_TSL_INPUT
*&---------------------------------------------------------------------*
*       Eingabebereitschaft von Feldern setzen / löschen
*----------------------------------------------------------------------*
FORM modify_tsl_input USING obj TYPE isuwa_obj.
*  TSLC data
* BAdI-Check ob nur angezeigt werden darf oder ob Eingaben erlaubt sein sollen
  IF badi_sf IS INITIAL.
    GET BADI badi_sf.
  ENDIF.
  IF badi_sf IS NOT INITIAL.
    CALL BADI badi_sf->check_authorization
      EXPORTING
        i_fcode      = cl_eewa_rfc_service_frequency=>co_authorizationcheck_fcodes-input_timeslice
        i_wa_tsl     = obj-wa_tsl
        i_obj        = obj
      EXCEPTIONS
        not_allowed  = 1
        system_error = 2
        others       = 3.
    IF sy-subrc = 1. "! no ERROR messages in PBO
      DATA(lauthcheck_failed) = abap_true.
    ELSEIF sy-subrc = 2.
      cl_eewa_misc=>raise_symsg( par_exceptionclass = 'CX_EEWA_MD' ).
    ELSEIF sy-subrc > 2.
*    "execption handling:
*      MESSAGE ID sy-msgid TYPE 'S' NUMBER sy-msgno
*        WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4 DISPLAY LIKE 'E'.
*    else. "sy-subrc <= 0.
*      "all fine
    ENDIF.
  ENDIF.

  IF lauthcheck_failed IS NOT INITIAL.
    LOOP AT SCREEN.
      IF screen-group3 = 'DSP' .
        screen-input = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
ENDFORM.                    " modify_tsl_input