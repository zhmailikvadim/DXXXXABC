FUNCTION mmim_soa_xml_transfer_to_aif
  IMPORTING
    VALUE(iv_queue_name) TYPE /aif/pers_rtcfgr_name OPTIONAL
    VALUE(iv_queue_ns) TYPE /aif/pers_rtcfgr_ns OPTIONAL
    VALUE(it_notif) TYPE tt_mmim_soa_aif_notif_data OPTIONAL
    VALUE(is_confirmation) TYPE mmim_soa_matdoc_aif_conf_data OPTIONAL.





* Begin correction authority check                                  "vn_2513565
  DATA: lv_sacf_result TYPE sy-subrc,
        lv_debug       TYPE abap_bool.
  TRY.
      CALL METHOD cl_sacf=>auth_check_spec
        EXPORTING
          id_name   = 'MMIM_SOA_NOT'
          id_suso   = 'M_MSEG_WMB'
          id_fld1   = 'ACTVT'
          id_val1   = '03'
        RECEIVING
          ed_return = lv_sacf_result.

      IF lv_sacf_result <> 0.
*       The authorization scenario is used productively and checks are active.
*       The user does not have the required authorizations.
        MESSAGE e016(mmim_soa_matdoc).
      ENDIF.

    CATCH cx_sy_dyn_call_error.
*       Return success if the framework does not exist
      lv_sacf_result = 0.
  ENDTRY.
* End correction authority check                                    "^n_2513565

  TRY.
      IF it_notif IS SUPPLIED.
        IF lv_debug = abap_true.
          /aif/cl_enabler_xml=>transfer_to_aif_mult(
            EXPORTING
               it_any_structure = it_notif
               iv_queue_ns      = iv_queue_ns
                iv_queue_name    = iv_queue_name
          ).
        ELSE.
          /aif/cl_enabler_xml=>transfer_to_aif_mult(
            EXPORTING
              it_any_structure = it_notif
          ).
        ENDIF.
      ELSE.
        IF lv_debug = abap_true.
          /aif/cl_enabler_xml=>transfer_to_aif(
            EXPORTING
              is_any_structure = is_confirmation
              iv_queue_ns      = iv_queue_ns
              iv_queue_name    = iv_queue_name
          ).
        ELSE.
          /aif/cl_enabler_xml=>transfer_to_aif(
            EXPORTING
              is_any_structure = is_confirmation
          ).
        ENDIF.
      ENDIF.

    CATCH  /aif/cx_enabler_base
      /aif/cx_inf_det_base
      /aif/cx_aif_engine_not_found
      /aif/cx_error_handling_general
      /aif/cx_aif_engine_base.

      MESSAGE x015(mmim_soa_matdoc).  "creates shortdump as call is asynchronous
  ENDTRY.

ENDFUNCTION.