function OS_UPDATE_CLASS
  importing
    value(CLASSNAME) type SEOCLSNAME
    value(XCONTAINER) type XSTRING optional
  tables
    CONTAINER like INDX optional
  exceptions
    SHOULD_NOT_OCCUR.





  data AGENT_IF type ref to IF_OS_CA_SERVICE.
  field-symbols: <FS> type any.

  assign (CLASSNAME)=>AGENT to <FS>.
  AGENT_IF ?= <FS>.
  if CONTAINER[] is not initial.
*   * EXPORT/IMPORT ... DATABASE used
*   * old style
    clear CONTAINER_GLOBAL.
    refresh CONTAINER_GLOBAL.
    loop at CONTAINER.
      append CONTAINER to CONTAINER_GLOBAL.
    endloop.
    CLASSNAME_GLOBAL = CLASSNAME.
    call method AGENT_IF->SAVE_IN_UPDATE_TASK.
    clear CLASSNAME_GLOBAL.
    clear CONTAINER_GLOBAL.
    refresh CONTAINER_GLOBAL.
  else.
*   * EXPORT/IMPORT ... DATA BUFFER used
    call method AGENT_IF->SAVE_IN_UPDATE_TASK
      exporting
        XCONTAINER = XCONTAINER.
  endif.
endfunction.

* called by classagent instead of SAVE_TO_DATABASE in case of UPD-TASK
form EXPORT  tables INSERTS UPDATES DELETES
             using CLASSNAME type SEOCLSNAME.
  clear CONTAINER_GLOBAL.
  refresh CONTAINER_GLOBAL.
  export INSERTS UPDATES DELETES to database INDX(OS) id 'OS'
         using INDX_APPEND.
  call function 'OS_UPDATE_CLASS' in update task
    exporting
      CLASSNAME = CLASSNAME
    tables
      CONTAINER = CONTAINER_GLOBAL.
  clear CONTAINER_GLOBAL.
  refresh CONTAINER_GLOBAL.
endform.                    "EXPORT

* callback for EXPORT TO DATABASE
form INDX_APPEND using MODE. "#EC *
  append INDX to CONTAINER_GLOBAL.
endform.                    "INDX_APPEND

* called back by classagent in SAVE_IN_UPDATE_TASK
*             before calling SAVE_TO_DATABASE
form IMPORT tables INSERTS UPDATES DELETES
            using CLASSNAME type SEOCLSNAME.
  if CLASSNAME_GLOBAL <> CLASSNAME.
    raise SHOULD_NOT_OCCUR.
  endif.
  import INSERTS UPDATES DELETES from database INDX(OS) id 'OS'
         using INDX_READ.
endform.                    "IMPORT

* callback for IMPORT FROM DATABASE
form INDX_READ using MODE. "#EC *
  add 1 to INDX-SRTF2.
  read table CONTAINER_GLOBAL into INDX index INDX-SRTF2.
endform.                    "INDX_READ