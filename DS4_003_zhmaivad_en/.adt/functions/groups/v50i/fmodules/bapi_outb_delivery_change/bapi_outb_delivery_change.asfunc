FUNCTION bapi_outb_delivery_change
  IMPORTING
    VALUE(header_data) LIKE bapiobdlvhdrchg
    VALUE(header_control) LIKE bapiobdlvhdrctrlchg
    VALUE(delivery) LIKE bapiobdlvhdrchg-deliv_numb
    VALUE(techn_control) LIKE bapidlvcontrol OPTIONAL
    VALUE(header_data_spl) TYPE /spe/bapiobdlvhdrchg OPTIONAL
    VALUE(header_control_spl) TYPE /spe/bapiobdlvhdrctrlchg OPTIONAL
    VALUE(sender_system) TYPE tbdls-logsys OPTIONAL
    VALUE(change_decentral) TYPE de_v50agl_change_decentral OPTIONAL
  TABLES
    header_partner LIKE bapidlvpartnerchg OPTIONAL
    header_partner_addr LIKE bapidlvpartnaddrchg OPTIONAL
    header_deadlines LIKE bapidlvdeadln OPTIONAL
    item_data LIKE bapiobdlvitemchg OPTIONAL
    item_control LIKE bapiobdlvitemctrlchg OPTIONAL
    item_serial_no LIKE bapidlvitmserno OPTIONAL
    supplier_cons_data LIKE bapiobdlvitemsupcon OPTIONAL
    extension1 LIKE bapiextc OPTIONAL
    extension2 LIKE bapiext OPTIONAL
    return LIKE bapiret2
    tokenreference LIKE bapitokenreference OPTIONAL
    item_data_spl LIKE /spe/bapiobdlvitemchg OPTIONAL
    collective_change_items LIKE /spe/bapiobdlvcollchgir OPTIONAL
    new_item_data LIKE bapiobdlvitem OPTIONAL
    new_item_data_spl LIKE /spe/bapiobdlvitm OPTIONAL
    new_item_org LIKE bapiobdlvitemorg OPTIONAL
    item_data_docu_batch LIKE /spe/docubatch_dlv_item_sty OPTIONAL
    cwm_item_data LIKE /cwm/bapiobdlvitem OPTIONAL
    item_status_spl LIKE /spe/bapiobdlvitemstat OPTIONAL
    text_header LIKE bapidlvtxthdr OPTIONAL
    text_lines LIKE bapidlvtxtitem OPTIONAL
    handling_unit_header LIKE bapidlvhdunhdr OPTIONAL
    handling_unit_item LIKE bapidlvhdunitm OPTIONAL
    handling_unit_serno LIKE bapidlvhdunserno OPTIONAL.










ENHANCEMENT-POINT bapi_outb_delivery_change_g8 SPOTS es_saplv50i STATIC.

ENHANCEMENT-POINT bapi_outb_delivery_change_g6 SPOTS es_saplv50i.

** Start - FLE MATNR BAPI Changes on input
  DATA: ls_fnames   TYPE cl_matnr_chk_mapper=>ts_matnr_bapi_fnames,
        lt_fnames_1 TYPE cl_matnr_chk_mapper=>tt_matnr_bapi_fname,
        lt_fnames_2 TYPE cl_matnr_chk_mapper=>tt_matnr_bapi_fname.
  DATA  lt_fnames_3 TYPE cl_matnr_chk_mapper=>tt_matnr_bapi_fname.
  DATA  lt_fnames_4 TYPE cl_matnr_chk_mapper=>tt_matnr_bapi_fname.
  DATA  ls_bapiret2 TYPE bapiret2.

  ls_fnames-int  = 'MATERIAL'.
  ls_fnames-ext  = 'MATERIAL_EXTERNAL'.
  ls_fnames-vers = 'MATERIAL_VERSION'.
  ls_fnames-guid = 'MATERIAL_GUID'.
  ls_fnames-long = 'MATERIAL_LONG'.
  INSERT ls_fnames INTO TABLE lt_fnames_1.

  CALL METHOD cl_matnr_chk_mapper=>bapi_tables_conv_tab
    EXPORTING
      iv_int_to_external = ' '
      it_fnames          = lt_fnames_1
    CHANGING
      ct_matnr           = item_data[].

  ls_fnames-int  = 'MATERIAL'.
  ls_fnames-ext  = 'MATERIAL_EXTERNAL'.
  ls_fnames-vers = 'MATERIAL_VERSION'.
  ls_fnames-guid = 'MATERIAL_GUID'.
  ls_fnames-long = 'MATERIAL_LONG'.
  INSERT ls_fnames INTO TABLE lt_fnames_2.

  ls_fnames-int  = 'MAT_ENTRD'.
  ls_fnames-ext  = 'MAT_ENTRD_EXTERNAL'.
  ls_fnames-vers = 'MAT_ENTRD_VERSION'.
  ls_fnames-guid = 'MAT_ENTRD_GUID'.
  ls_fnames-long = 'MAT_ENTRD_LONG'.
  INSERT ls_fnames INTO TABLE lt_fnames_2.

  CALL METHOD cl_matnr_chk_mapper=>bapi_tables_conv_tab
    EXPORTING
      iv_int_to_external = ' '
      it_fnames          = lt_fnames_2
    CHANGING
      ct_matnr           = new_item_data[].

  ls_fnames-int  = 'SHIP_MAT'.
  ls_fnames-ext  = 'SHIP_MAT_EXTERNAL'.
  ls_fnames-vers = 'SHIP_MAT_VERSION'.
  ls_fnames-guid = 'SHIP_MAT_GUID'.
  ls_fnames-long = 'SHIP_MAT_LONG'.
  INSERT ls_fnames INTO TABLE lt_fnames_3.

  CALL METHOD cl_matnr_chk_mapper=>bapi_tables_conv_tab
    EXPORTING
      iv_int_to_external       = ' '
      it_fnames                = lt_fnames_3
    CHANGING
      ct_matnr                 = handling_unit_header[]
    EXCEPTIONS
      excp_matnr_ne            = 1
      excp_matnr_invalid_input = 2.

  IF sy-subrc <> 0.
    cl_matnr_chk_mapper=>bapi_get_last_error( IMPORTING ev_return = ls_bapiret2 ).
    APPEND ls_bapiret2 TO return.
    RETURN.
  ENDIF.

  ls_fnames-int  = 'MATERIAL'.
  ls_fnames-ext  = 'MATERIAL_EXTERNAL'.
  ls_fnames-vers = 'MATERIAL_VERSION'.
  ls_fnames-guid = 'MATERIAL_GUID'.
  ls_fnames-long = 'MATERIAL_LONG'.
  INSERT ls_fnames INTO TABLE lt_fnames_4.

  CALL METHOD cl_matnr_chk_mapper=>bapi_tables_conv_tab
    EXPORTING
      iv_int_to_external       = ' '
      it_fnames                = lt_fnames_4
    CHANGING
      ct_matnr                 = handling_unit_item[]
    EXCEPTIONS
      excp_matnr_ne            = 1
      excp_matnr_invalid_input = 2.

  IF sy-subrc <> 0.
    cl_matnr_chk_mapper=>bapi_get_last_error( IMPORTING ev_return = ls_bapiret2 ).
    APPEND ls_bapiret2 TO return.
    RETURN.
  ENDIF.

  DATA lt_item_data_con TYPE bapiobdlvitemcon OCCURS 0.
  MOVE-CORRESPONDING item_data[] TO lt_item_data_con[].

** End - FLE MATNR BAPI Changes on input
** Begin FLE segmentation BAPI Changes  on input
  DATA: ls_return2 TYPE bapiret2.
  PERFORM outb_dlv_sgt_long TABLES lt_item_data_con
                                   new_item_data
                            USING  ' '
                                   ls_return2.

  IF sy-subrc IS NOT INITIAL.
    APPEND ls_return2 TO return.
    RETURN.
  ENDIF.

** End FLE segmentation BAPI Changes
  DATA: lf_error             TYPE xfeld.
  DATA: lf_regular_bapi_call TYPE xfeld.
  DATA: lf_replace_hus       TYPE xfeld.
  DATA: ls_return            TYPE bapiret2.
  DATA: lv_timestamp  TYPE timestampl,                     "v_n_1294611
        lv_tstmp_char TYPE c LENGTH 22,
        lv_qname      TYPE trfcqnam,
        lv_subkey     TYPE c LENGTH 47,
        lv_tid        TYPE arfctid,
        lv_org_tid    TYPE rfcchar24.

  CALL METHOD /SPE/CL_QRFC_SERVICES=>DELAY_PROCESSING_START   "n_3110693
    EXPORTING
      iv_delivery = delivery.

* Set update task local to allow reprocessing of QRFCs
  CALL METHOD /spe/cl_qrfc_services=>set_update_handling. "n_1495589

* Logging of inbound call
* Get transaction ID of call and queue name
  CALL METHOD /spe/cl_qrfc_services=>get_current_tid_qname
    IMPORTING
      ev_tid     = lv_tid
      ev_org_tid = lv_org_tid
      ev_qname   = lv_qname.

  IF lv_tid IS NOT INITIAL. "FM was not called in a qRFC
* Create subkey with queue name and timestamp
    GET TIME STAMP FIELD lv_timestamp.
    WRITE lv_timestamp TO lv_tstmp_char. "Conversion into character
    CONCATENATE lv_qname lv_tstmp_char
                INTO lv_subkey SEPARATED BY space.

    LOG-POINT ID /spe/ewm_integration_obdlv_in SUBKEY lv_subkey "n_1403520
      FIELDS lv_tid
             lv_org_tid
             lv_qname.

    IF header_control_spl-initiator_process = gc_initiator_process-qtyreductn."v_n_1403520
      LOG-POINT ID /spe/ewm_int_quan_change SUBKEY lv_subkey
        FIELDS lv_tid
               lv_org_tid
               lv_qname.
    ENDIF.                                                 "^_n_1403520
  ENDIF.                                                   "^_n_1294611

*SPE Tool for performance tests
  CALL METHOD /spe/cl_perf_tools=>set_on
    EXPORTING
      iv_fmname = 'BAPI_OUTB_DELIVERY_CHANGE'.

  "Disable remote updates
  DATA(lo_cm) = cl_shp_change_management_setup=>get( )->set_receiving_delivery( delivery )->get_change_management( ).

  PERFORM dlv_token_useref TABLES tokenreference.           "n_1293740

ENHANCEMENT-POINT ehp603_bapi_outb_dlv_change01 SPOTS es_saplv50i.

  PERFORM initialize_change.

* Enable FORMs w/o ct_return to append messages
  GET REFERENCE OF return[] INTO lcl_message=>gr_return.

* Call for processing CSL token moved                       "n_1293740

  PERFORM obdlv_change_sort TABLES  header_partner
                                    header_partner_addr
                                    header_deadlines
                                    item_data
                                    item_control
                                    item_serial_no
                                    supplier_cons_data
                                    handling_unit_header
                                    handling_unit_item.

  PERFORM obdlv_interface_change TABLES   gt_vbpok
                                          gt_verko
                                          gt_verpo
                                          gt_vbsupcon
                                          return
                                          header_partner
                                          header_partner_addr
                                          header_deadlines
                                          item_data
                                          item_control
                                          item_serial_no
                                          item_data_spl
                                          collective_change_items
                                          item_data_docu_batch     "EhP 3
                                          supplier_cons_data
                                          new_item_data            "v_EhP 3
                                          new_item_data_spl
                                          new_item_org             "^_EhP 3
                                          item_status_spl
                                          text_header
                                          text_lines
                                          handling_unit_header
                                          handling_unit_item
                                          handling_unit_serno
                                 USING    header_data
                                          header_control
                                          header_data_spl
                                          header_control_spl
                                          techn_control
                                          change_decentral
                                 CHANGING gs_vbkok
                                          gt_partner_update
                                          gt_sernr_upd
                                          gt_husernr
                                          gt_new_items             "EhP 3
                                          gs_dlv_bapi_control
                                          gt_texth[]
                                          gt_textl[].

  LOG-POINT ID /cwm/enh SUBKEY to_upper( sy-tcode && '\/CWM/APPL_LES_SAPLV50I\BAPI_INB_DELIVERY_CHANGE_03\' && sy-cprog ) FIELDS /cwm/cl_enh_layer=>get_field( ).

  IF cwm_item_data[] IS NOT INITIAL.                        "1636022
    CALL FUNCTION '/CWM/FILL_DATA_CONFIRM'
      EXPORTING
        iv_tolcheck               = 'N'
      TABLES
        gt_vbpok                  = gt_vbpok
        gt_verpo                  = gt_verpo
        cwm_item_data             = cwm_item_data
*       cwm_hu_item               = cwm_hu_item
      EXCEPTIONS
        error_converting_iso_code = 1
        OTHERS                    = 2.

    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
              WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.
  ENDIF.
ENHANCEMENT-POINT bapi_inb_delivery_change_03 SPOTS es_saplv50i.

* Customer Exit '010' migrated to BAdI function
*    badi instance creation and/or check
  IF gref_badi_instance IS INITIAL.
    CALL METHOD cl_exithandler=>get_instance
      EXPORTING
        exit_name              = 'SMOD_V50B0001'
        null_instance_accepted = gc_true
      CHANGING
        instance               = gref_badi_instance.
  ENDIF.

  IF gref_badi_instance IS BOUND.
*   static method used as instance method
    CALL METHOD gref_badi_instance->exit_saplv50i_010
      CHANGING
        cs_vbkok       = gs_vbkok
        ct_vbpok       = gt_vbpok[]
        ct_vbsupcon    = gt_vbsupcon[]
        extension1     = extension1[]
        extension2     = extension2[]
        cf_replace_hus = lf_replace_hus.
  ENDIF.

  PERFORM debugging_control USING techn_control.

  PERFORM obdlv_delivery_change  TABLES gt_vbpok
                                        gt_verko
                                        gt_verpo
                                        gt_vbsupcon
                                        return
                                        gt_texth[]
                                        gt_textl[]
                                 USING  gs_vbkok
                                        gt_partner_update
                                        gt_sernr_upd
                                        gt_husernr
                                        gs_dlv_bapi_control
                                        gt_new_items       "EhP 3
                                        lf_replace_hus
                                        change_decentral.

  IF NOT gs_vbkok-likp_del IS INITIAL.                      "v_n_852990
    PERFORM csl_reorg TABLES tokenreference.
  ENDIF.                                                    "^_n_852990

* Only valid for production supply                          "v_n_1681227
*  if ( header_data_spl-initiator_process eq gc_psd OR
*       header_data_spl-initiator_process eq gc_psp ) and
  DATA: lt_return   TYPE bapirettab.
  IF NOT header_control_spl-bop_guid IS INITIAL AND
     gf_flag-rollback <> gc_true.
    CALL METHOD /spe/cl_ewm_staging_intf=>date_change_accept_process
      EXPORTING
        iv_guid     = header_control_spl-bop_guid
        iv_delivery = header_control_spl-deliv_numb
      IMPORTING
        et_return   = lt_return.

    LOOP AT lt_return TRANSPORTING NO FIELDS
                      WHERE type CA 'AE'.
    ENDLOOP.

    IF sy-subrc IS INITIAL.
      gf_flag-rollback = gc_true.
    ENDIF.
    APPEND LINES OF lt_return TO return.
  ENDIF.                                                    "^_n_1681227

  CLEAR lcl_message=>gr_return.

ENHANCEMENT-SECTION     ehp603_bapi_outb_dlv_change02 SPOTS es_saplv50i.
  PERFORM rollback_check.
END-ENHANCEMENT-SECTION.

  PERFORM spe_dequeue_all_at_siml USING header_control.

  PERFORM spe_store_messages TABLES return[].

  CALL METHOD /spe/cl_perf_tools=>set_off.
** Begin FLE segmentation BAPI Changes  on input
  CLEAR ls_return2.
  PERFORM outb_dlv_sgt_long TABLES lt_item_data_con
                                   new_item_data
                            USING  'X'
                                   ls_return2.

  IF sy-subrc IS NOT INITIAL.
    APPEND ls_return2 TO return.
    RETURN.
  ENDIF.
** End FLE segmentation BAPI Changes

ENHANCEMENT-POINT bapi_outb_delivery_change_g7 SPOTS es_saplv50i.

ENDFUNCTION.