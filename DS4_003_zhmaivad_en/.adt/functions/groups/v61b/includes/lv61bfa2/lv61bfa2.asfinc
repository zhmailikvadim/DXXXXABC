*-------------------------------------------------------------------
***INCLUDE LV61BFA2 .
*&---------------------------------------------------------------------*
*&      Form  FA2_PROCESS_MAIL_MESSAGE                                 *
*&---------------------------------------------------------------------*
*       replace text symbols and parameters for  o n e  record         *
*----------------------------------------------------------------------*
*  --> prog        program name for replacement if specified           *
*----------------------------------------------------------------------*
FORM fa2_process_mail_message  USING prog LIKE sy-repid.

  DATA: current_prg LIKE syst-repid.

  MOVE-CORRESPONDING xnast TO nast.

* reload T685B
  IF ( t685b-kappl <> nast-kappl  OR
       t685b-kschl <> nast-kschl ) OR
     ( t685b IS INITIAL ).
    SELECT SINGLE * FROM t685b WHERE kappl = nast-kappl AND
                                     kschl = nast-kschl.
  ENDIF.

  IF prog = space.
    current_prg = sy-repid.
  ELSE.
    current_prg = prog.
  ENDIF.

* create object, if necessary
* use BEWG text, has been copied from STAM before and might have
* been modified during output maintenance
  IF xnast-tdname EQ space.
* no template object: try to generate object from attributes
* we assume that BEWG text exists

    CALL FUNCTION 'NAST_CREATE_MESSAGE_OBJECT'
      EXPORTING
        pi_nast       = nast
        pi_text_id    = txtid_beweg
        pi_processing = space
      IMPORTING
        pe_objkey     = nast-tdname
      EXCEPTIONS
        OTHERS        = 0.

    xnast-tdname = nast-tdname.

  ENDIF.

* still no object?
  IF xnast-tdname EQ space.
    CALL FUNCTION 'NAST_MAIL_SYMBOL_REPLACE'
      EXPORTING
        nast          = nast
        curr_prg      = current_prg
        tprog         = t685b-tprog
        trout         = t685b-trout
      IMPORTING
        mailtitle     = xnast-tdcovtitle
      EXCEPTIONS
        read_error    = 01
        rewrite_error = 02.
    CALL FUNCTION 'NAST_MAIL_PARAMETER_REPLACE'
      EXPORTING
        pprog      = t685b-pprog
        prout      = t685b-prout
        mnast      = nast
      IMPORTING
        parameter1 = xnast-pfld1
        parameter2 = xnast-pfld2
        parameter3 = xnast-pfld3
        parameter4 = xnast-pfld4
        parameter5 = xnast-pfld5.
    MODIFY xnast.

  ELSE.
* object handling

* replace symbols
    CALL FUNCTION 'NAST_MAIL_SYMBOL_REPLACE_OBJ'
      EXPORTING
        pi_nast       = nast
        curr_prg      = current_prg
        tprog         = t685b-tprog
        trout         = t685b-trout
      EXCEPTIONS
        read_error    = 1
        rewrite_error = 2
        OTHERS        = 3.
    IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

* replace parameters
    CALL FUNCTION 'NAST_MAIL_PARAMETER_REPLACE_OB'
      EXPORTING
        pprog = t685b-pprog
        prout = t685b-prout
        mnast = nast.

  ENDIF.

ENDFORM.                               " FA1_PROCESS_MAIL_MESSAGES
*&---------------------------------------------------------------------*
*&      Form  TEXT_SYMBOL_REPLACE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM text_symbol_replace TABLES xtlines STRUCTURE tline
                         USING xthead STRUCTURE thead
                               snast  STRUCTURE nast.

  DATA: changed,
        currentprogram LIKE sy-repid.
  DATA: x_new_cursor_column LIKE sy-tabix,
        x_new_cursor_line   LIKE sy-tabix.
  DESCRIBE TABLE xtlines LINES  sy-tabix.
  IF sy-tabix EQ 0 AND NOT xthead IS INITIAL.
    CALL FUNCTION 'READ_TEXT'
         EXPORTING
              id        = xthead-tdid
              language  = xthead-tdspras
              name      = xthead-tdname
              object    = xthead-tdobject
*        IMPORTING
*             HEADER    =
         TABLES
              lines     = xtlines
         EXCEPTIONS
              id        = 01
              not_found = 04
              object    = 05
*              SAVEMODE  = 06                             " K11K065531
              language  = 02
              name      = 03.
  ENDIF.
  DESCRIBE TABLE xtlines LINES  sy-tabix.
  CHECK sy-tabix GT 0.
  currentprogram = sy-repid.
  CALL FUNCTION 'TEXT_SYMBOL_REPLACE'
       EXPORTING
            endline = sy-tabix
            header = xthead
*           INIT = 'X'
*           OPTION_DIALOG = E04
            program = currentprogram
*           REPLACE_PROGRAM = E06
*           REPLACE_STANDARD = 'X'
*           REPLACE_SYSTEM = 'X'
*           REPLACE_TEXT = 'X'
*           STARTLINE = E10
       IMPORTING
            changed = changed
*           NEWHEADER =
       TABLES
            lines = xtlines.
  CALL FUNCTION 'FORMAT_TEXTLINES'
*      EXPORTING
*           CURSOR_COLUMN = E01
*           CURSOR_LINE = E02
*           ENDLINE = E03
*           FORMATWIDTH = E04
*           LINEWIDTH = E05
*           STARTLINE = E06
       IMPORTING
            new_cursor_column = x_new_cursor_column
            new_cursor_line =   x_new_cursor_line
       TABLES
            lines = xtlines.
ENDFORM.                   " TEXT_SYMBOL_REPLACE