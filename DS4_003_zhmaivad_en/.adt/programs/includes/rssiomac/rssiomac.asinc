***INCLUDE RSSIOMAC.
* macros for packing list modification.
CONSTANTS: TEXT_TYPE(1)                       VALUE SPACE,
           ID_TYPE(1)                         VALUE 'I',
           BIN_TYPE(1)                        VALUE 'X'.
DATA: LONG_LINE(20000).
DATA: ATTRIBUTE_SELECTION LIKE SONV-FLAG VALUE SPACE.
  DATA LIST_INDEX LIKE SY-TABIX.
  DATA NEW_ENTRY LIKE SONV-FLAG.
  DATA ATTRIBUTE_LENGTH LIKE SINENTLST2-LENGTH.
  DATA LINE_LINES LIKE SY-TABIX.
  DATA NO_SET LIKE SONV-FLAG.
CONSTANTS: TAB_WIDTH LIKE SY-TABIX VALUE 255.
DATA: REST   LIKE SY-TABIX,
      OFFSET LIKE SY-TABIX,
      TOTAL_LENGTH LIKE SY-TABIX.
DEFINE REPLACE-ATTRIBUTE.
*  * &1 INDEX
*  * &2 NAME
*  * &3 VALUE
*  * &4 VALUE TYPE
*  * &5 LENGTH
* IF ATTRIBUTE_SELECTION NE ON.                 "sh30099945bHP HW 175275
    READ TABLE ATTRIBUTES_PACKING_LIST WITH KEY PROPNAME = &2.
    IF SY-SUBRC = OK.
      IF ATTRIBUTE_SELECTION NE ON.             "sh30099945bHP HW 175275
        DELETE  ATTRIBUTES_PACKING_LIST INDEX SY-TABIX. "sh30099945bHP
      ELSE.                                             "sh30099945bHP
        ATTRIBUTES_PACKING_LIST-OK_FLAG = SPACE.        "sh30099945bHP
        MODIFY  ATTRIBUTES_PACKING_LIST INDEX SY-TABIX. "sh30099945bHP
      ENDIF.                                    "sh30099945bHP HW 175275
    ENDIF.
* ENDIF.                                        "sh30099945bHP HW 175275
  SET-ATTRIBUTE &1 &2 &3 &4 &5.
END-OF-DEFINITION.
DEFINE UPDATE-ATTRIBUTE.
*  * &1 INDEX
*  * &2 NAME
*  * &3 VALUE
*  * &4 VALUE TYPE
*  * &5 LENGTH
  DELETE ATTRIBUTES_PACKING_LIST
         WHERE PROPNAME = &2
           AND IDINDEX = &1.
  SET-ATTRIBUTE &1 &2 &3 &4 &5.
END-OF-DEFINITION.
DEFINE SET-ATTRIBUTE.
*  * &1 INDEX
*  * &2 NAME
*  * &3 VALUE
*  * &4 VALUE TYPE
*  * &5 LENGTH
  CLEAR NO_SET.
  IF ATTRIBUTE_SELECTION = ON.
    READ TABLE ATTRIBUTES_PACKING_LIST WITH KEY PROPNAME = &2 BINARY
                                                              SEARCH.
    IF SY-SUBRC NE OK.
*     * attribute not wanted
*     CHECK 1 = 2.
      NO_SET = ON.
    ELSEIF ATTRIBUTES_PACKING_LIST-OK_FLAG = ON.
       CLEAR ATTRIBUTES_PACKING_LIST.
       MOVE SY-TABIX TO LIST_INDEX.
       NEW_ENTRY = ON.
    ELSE.
       MOVE SY-TABIX TO LIST_INDEX.
       NEW_ENTRY = OFF.
    ENDIF.
  ELSE.
    CLEAR ATTRIBUTES_PACKING_LIST.
    NEW_ENTRY = ON.
  ENDIF.
* insert value into table
  IF NO_SET = OFF.
    IF &4 = TEXT_TYPE OR
       &4 = ID_TYPE.
      DESCRIBE TABLE ATTRIBUTES_TEXT
               LINES ATTRIBUTES_PACKING_LIST-STARTPOS.
      ADD 1 TO ATTRIBUTES_PACKING_LIST-STARTPOS.
* PERFORM TRACE(RSSOEXTR) USING 2 'line to tab called'.
      LINETOTAB ATTRIBUTES_TEXT
                &3
                LINE_LINES.
    ELSEIF &4 = BIN_TYPE.
      DESCRIBE TABLE ATTRIBUTES_BINARY
               LINES ATTRIBUTES_PACKING_LIST-STARTPOS.
      ADD 1 TO ATTRIBUTES_PACKING_LIST-STARTPOS.
      LINETOTAB ATTRIBUTES_BINARY
                &3
                LINE_LINES.
    ELSE.
      NO_SET = ON.
    ENDIF.
  ENDIF.
  IF NO_SET = OFF.
* * get length if not given
    IF &5 = SPACE.
      DESCRIBE FIELD &3 LENGTH ATTRIBUTE_LENGTH in character mode.
    ELSE.
      MOVE &5 TO ATTRIBUTE_LENGTH.
    ENDIF.
* * enter information into packing list.
    MOVE: &1 TO ATTRIBUTES_PACKING_LIST-IDINDEX,
          &2 TO ATTRIBUTES_PACKING_LIST-PROPNAME,
          &4 TO ATTRIBUTES_PACKING_LIST-CONTTYPE,
          ATTRIBUTE_LENGTH TO ATTRIBUTES_PACKING_LIST-LENGTH,
          LINE_LINES   TO ATTRIBUTES_PACKING_LIST-NUMLINES,
          ON TO ATTRIBUTES_PACKING_LIST-OK_FLAG.
    IF ATTRIBUTE_SELECTION = OFF.
*  PERFORM TRACE(RSSOEXTR) USING 2 'new entry added'.
      APPEND ATTRIBUTES_PACKING_LIST.
    ELSEIF NEW_ENTRY = ON.
*  PERFORM TRACE(RSSOEXTR) USING 2 'new entry added'.
      INSERT ATTRIBUTES_PACKING_LIST INDEX LIST_INDEX.
    ELSE.
*  PERFORM TRACE(RSSOEXTR) USING 2 'entry modifyed'.
      MODIFY ATTRIBUTES_PACKING_LIST INDEX LIST_INDEX.
    ENDIF.
  ENDIF.

* PERFORM SET-ATTRIBUTE
*          TABLES ATTRIBUTES_PACKING_LIST
*                 ATTRIBUTES_TEXT
*                 ATTRIBUTES_BINARY
*          USING  ATTRIBUTE_SELECTION
*                 &1
*                 &2
*                 &3
*                 &4
*                 &5 .
END-OF-DEFINITION.
DEFINE LINETOTAB.
*  * &1 ATTRIBUTE_TAB STRUCTURE SINLI
*  * &2 VALUE(TAB_LINE)
*  * &3 LINES.
* long_line is a globale field for long line handling (20K)
  DESCRIBE FIELD &2 LENGTH TOTAL_LENGTH in character mode.
  IF TOTAL_LENGTH LE TAB_WIDTH.
    MOVE &2 TO &1-LINE.
    &3 = 1.
    APPEND &1.
  ELSE.
    CLEAR LONG_LINE.
    MOVE &2 TO LONG_LINE.
    &3 = TOTAL_LENGTH DIV TAB_WIDTH. " number of full rows
    REST  = TOTAL_LENGTH MOD TAB_WIDTH. " size of last row
    OFFSET = 0.
    DO &3 TIMES.
      CLEAR &1.
      MOVE LONG_LINE+OFFSET(TAB_WIDTH) TO &1-LINE.
      APPEND &1.
      ADD TAB_WIDTH TO OFFSET.
    ENDDO.
* * rest in next line only if there is anything
    IF REST GT 0.
      CLEAR &1.
      MOVE LONG_LINE+OFFSET(REST) TO &1-LINE.
      APPEND &1.
      ADD 1 TO &3.
    ENDIF.
  ENDIF.
END-OF-DEFINITION.
DEFINE GET-ATTRIBUTE.
*  * &1 INDEX
*  * &2 NAME
*  * &3 VALUE

  PERFORM GET-ATTRIBUTE
           TABLES ATTRIBUTES_PACKING_LIST
                  ATTRIBUTES_TEXT
                  ATTRIBUTES_BINARY
           USING  &1
                  &2
                  ON
                  &3.
END-OF-DEFINITION.
DEFINE READ-ATTRIBUTE.
*  * &1 INDEX
*  * &2 NAME
*  * &3 VALUE

  PERFORM GET-ATTRIBUTE
           TABLES ATTRIBUTES_PACKING_LIST
                  ATTRIBUTES_TEXT
                  ATTRIBUTES_BINARY
           USING  &1
                  &2
                  OFF
                  &3.
END-OF-DEFINITION.
DEFINE SET-TAB_ATTRIBUTE.
*  * &1 INDEX
*  * &2 NAME
*  * &3 VALUE
*  * &4 VALUE TYPE
*  * &5 LENGTH

  PERFORM SET-TAB_ATTRIBUTE
           TABLES ATTRIBUTES_PACKING_LIST
                  ATTRIBUTES_TEXT
                  ATTRIBUTES_BINARY
                  &3
           USING  ATTRIBUTE_SELECTION
                  &1
                  &2
                  &4
                  &5 .
END-OF-DEFINITION.
DEFINE GET-TAB_ATTRIBUTE.
*  * &1 INDEX
*  * &1 NAME
*  * &2 VALUE
  PERFORM GET-TAB_ATTRIBUTE
           TABLES ATTRIBUTES_PACKING_LIST
                  ATTRIBUTES_TEXT
                  ATTRIBUTES_BINARY
                  &3
           USING  &1
                  &2
                  ON.
END-OF-DEFINITION.
DEFINE READ-TAB_ATTRIBUTE.
*  * &1 INDEX
*  * &1 NAME
*  * &2 VALUE
  PERFORM GET-TAB_ATTRIBUTE
           TABLES ATTRIBUTES_PACKING_LIST
                  ATTRIBUTES_TEXT
                  ATTRIBUTES_BINARY
                  &3
           USING  &1
                  &2
                  OFF.
END-OF-DEFINITION.
DEFINE SET-ERROR.
   PERFORM SET-ERROR
           TABLES ATTRIBUTES_PACKING_LIST
                  ATTRIBUTES_TEXT
                  ATTRIBUTES_BINARY
           USING           &1
                           'E'
                           &2.
END-OF-DEFINITION.
DEFINE SET-ERROR_NO.
* &1 index
* &2 message iD
* &3 message type
* &4 message no
* &5 v1
* &6 v2
* &7 v3
* &8 v4
    PERFORM SET-ERROR_NO  TABLES ATTRIBUTES_PACKING_LIST
                                 ATTRIBUTES_TEXT
                                 ATTRIBUTES_BINARY
                          USING &1 &2 &3 &4 &5 &6 &7 &8.
END-OF-DEFINITION.


DEFINE IF-IS-GUI-TYPE.
*  * &1 OBJTP document type
  IF &1 = OBJ OR
     &1 = OFO OR
     &1 = FAX OR
     &1 = GRA OR
     &1 = ARC.
END-OF-DEFINITION.
DEFINE ELSEIF-IS-GUI-TYPE.
*  * &1 OBJTP document type
  ELSEIF &1 = OBJ OR
         &1 = OFO OR
         &1 = FAX OR
         &1 = GRA OR
         &1 = ARC.
END-OF-DEFINITION.
DEFINE IF-IS-NOT-TEXT.
*  * &1 OBJTP document type
*  * object types which don't have to be converted into attachments
  IF NOT (   &1 cs RAW OR                                        "891936
             &1 cs INT OR
             &1 cs RTF OR
             &1 cs HTM OR
             &1 cs TXT OR
             &1 cs ALI OR
             &1 cs SCR  OR
             ( &1 cs EXT AND &2 cs HTM ) OR
             ( &1 cs EXT AND &2 cs RTF )
          )                            .
END-OF-DEFINITION.
DEFINE IF-IS-RAW.
*  * &1 OBJTP document type
*  * object types which will be converted into RAW
  IF ( &1 = RAW OR
       &1 = ALI OR
       &1 = SCR ).
END-OF-DEFINITION.
DEFINE IF-IS-RAW-EXT.
*  * &1 OBJTP document type
*  * object types which are extensions of RAW
  IF ( &1 cs  INT  OR
       &1 cs  HTM  OR
       &1 cs 'ICS' OR
       &1 cs  TXT ).
END-OF-DEFINITION.

DEFINE IF-IS-PRIVAT.
  IF
  &1 = IN_FOL OR
  &1 = OU_FOL OR
  &1 = PR_FOL OR
  &1 = PW_FOL OR
  &1 = PL_FOL OR
  &1 = PV_FOL OR
  &1 = PN_FOL OR
  &1 = W1_FOL OR
  &1 = W2_FOL.
END-OF-DEFINITION.
DEFINE IF-IS-PUBLIC.
  IF
  &1 = CL_FOL OR
  &1 = GR_FOL OR
  &1 = PU_FOL OR
  &1 = PA_FOL OR
  &1 = SW_FOL OR
  &1 = SD_FOL.
END-OF-DEFINITION.

* make an sapoffice id out of an address number
DEFINE ADDRESS-TO-ID.
* &1 address number
* &2 sndart
* &3 lfdnr
* &4 SAPoffice ID to fill
  CLEAR &4.
  MOVE: EAD   TO &4(3),
        &1    TO &4+7(10),
        &3    TO &4+4(3).
  PERFORM SNDART_TO_ESC(SAPLSIOA) USING &2
                                        &4+3(1).


END-OF-DEFINITION.

** error text macro
FORM SET-ATTRIBUTE
           TABLES ATTRIBUTES_PACKING_LIST STRUCTURE SINENTLST2
                  ATTRIBUTES_TEXT   STRUCTURE SINLI
                  ATTRIBUTES_BINARY STRUCTURE SINLI
           USING  VALUE(ATTRIBUTE_SELECTION)
                  VALUE(IDINDEX)
                  VALUE(NAME)
                  VALUE(VALUE)
                  VALUE(VALUE_TYPE)
                  VALUE(VALUE_LENGTH).
  DATA LIST_INDEX LIKE SY-TABIX.
  DATA NEW_ENTRY LIKE SONV-FLAG.
  DATA ATTRIBUTE_LENGTH LIKE SINENTLST2-LENGTH.
  DATA LINE_LINES LIKE SY-TABIX.

* PERFORM TRACE(RSSOEXTR) USING 2 'set attribute called'.
* get entry in packing List if it is there.
  IF ATTRIBUTE_SELECTION = ON.
    READ TABLE ATTRIBUTES_PACKING_LIST WITH KEY PROPNAME = NAME.
    IF SY-SUBRC NE OK.
*     * attribute not wanted
      CHECK 1 = 2.
    ELSEIF ATTRIBUTES_PACKING_LIST-OK_FLAG = ON.
       CLEAR ATTRIBUTES_PACKING_LIST.
       NEW_ENTRY = ON.
    ELSE.
       MOVE SY-TABIX TO LIST_INDEX.
       NEW_ENTRY = OFF.
    ENDIF.
  ELSE.
    CLEAR ATTRIBUTES_PACKING_LIST.
    NEW_ENTRY = ON.
  ENDIF.
* insert value into table
  IF VALUE_TYPE = TEXT_TYPE OR
     VALUE_TYPE = ID_TYPE.
    DESCRIBE TABLE ATTRIBUTES_TEXT
             LINES ATTRIBUTES_PACKING_LIST-STARTPOS.
    ADD 1 TO ATTRIBUTES_PACKING_LIST-STARTPOS.
* PERFORM TRACE(RSSOEXTR) USING 2 'line to tab called'.
    PERFORM LINE_TO_TAB TABLES ATTRIBUTES_TEXT
                        USING  VALUE
                               LINE_LINES.
  ELSEIF VALUE_TYPE = BIN_TYPE.
    DESCRIBE TABLE ATTRIBUTES_BINARY
             LINES ATTRIBUTES_PACKING_LIST-STARTPOS.
    ADD 1 TO ATTRIBUTES_PACKING_LIST-STARTPOS.
    PERFORM LINE_TO_TAB TABLES ATTRIBUTES_BINARY
                        USING  VALUE
                               LINE_LINES.
  ELSE.
    CHECK 1 = 2.
  ENDIF.
* * get length if not given
  IF VALUE_LENGTH = SPACE.
    DESCRIBE FIELD VALUE LENGTH ATTRIBUTE_LENGTH in character mode.
  ELSE.
    MOVE VALUE_LENGTH TO ATTRIBUTE_LENGTH.
  ENDIF.
* * enter information into packing list.
  MOVE: IDINDEX TO ATTRIBUTES_PACKING_LIST-IDINDEX,
        NAME TO ATTRIBUTES_PACKING_LIST-PROPNAME,
        VALUE_TYPE TO ATTRIBUTES_PACKING_LIST-CONTTYPE,
        ATTRIBUTE_LENGTH TO ATTRIBUTES_PACKING_LIST-LENGTH,
        LINE_LINES   TO ATTRIBUTES_PACKING_LIST-NUMLINES,
        ON TO ATTRIBUTES_PACKING_LIST-OK_FLAG.
  IF NEW_ENTRY = ON.
*  PERFORM TRACE(RSSOEXTR) USING 2 'new entry added'.
    APPEND ATTRIBUTES_PACKING_LIST.
  ELSE.
*  PERFORM TRACE(RSSOEXTR) USING 2 'entry modifyed'.
    MODIFY ATTRIBUTES_PACKING_LIST INDEX LIST_INDEX.
  ENDIF.
ENDFORM.
FORM GET-ATTRIBUTE
           TABLES ATTRIBUTES_PACKING_LIST STRUCTURE SINENTLST2
                  ATTRIBUTES_TEXT   STRUCTURE SINLI
                  ATTRIBUTES_BINARY STRUCTURE SINLI
           USING  VALUE(IDINDEX)
                  VALUE(NAME)
                  VALUE(OK_FLAG)
                  VALUE .
  DATA LIST_INDEX LIKE SY-TABIX.
  DATA NEW_ENTRY LIKE SONV-FLAG.
  DATA ATTRIBUTE_LENGTH LIKE SINENTLST2-LENGTH.
  DATA LINE_LINES LIKE SY-TABIX.

  READ TABLE ATTRIBUTES_PACKING_LIST WITH KEY IDINDEX  = IDINDEX
                                              PROPNAME = NAME
                                              OK_FLAG  = OFF.
  IF SY-SUBRC NE OK.
*   * attribute not found
    SY-SUBRC = 4.
    EXIT.
  ENDIF.
  MOVE SY-TABIX TO LIST_INDEX.
* * get length if not given
  IF ATTRIBUTES_PACKING_LIST-LENGTH = SPACE.
    DESCRIBE FIELD VALUE LENGTH ATTRIBUTE_LENGTH in character mode.
  ELSE.
    MOVE ATTRIBUTES_PACKING_LIST-LENGTH TO ATTRIBUTE_LENGTH.
  ENDIF.
* insert value into table
  IF ATTRIBUTES_PACKING_LIST-CONTTYPE = TEXT_TYPE OR
     ATTRIBUTES_PACKING_LIST-CONTTYPE = ID_TYPE.
    PERFORM TAB_TO_LINE TABLES ATTRIBUTES_TEXT
                        USING  ATTRIBUTES_PACKING_LIST-STARTPOS
                               ATTRIBUTES_PACKING_LIST-NUMLINES
                               ATTRIBUTE_LENGTH
                               VALUE.
  ELSEIF ATTRIBUTES_PACKING_LIST-CONTTYPE = BIN_TYPE.
    PERFORM TAB_TO_LINE TABLES ATTRIBUTES_BINARY
                        USING  ATTRIBUTES_PACKING_LIST-STARTPOS
                               ATTRIBUTES_PACKING_LIST-NUMLINES
                               ATTRIBUTE_LENGTH
                               VALUE.
  ELSE.
    SY-SUBRC = 8.
    EXIT.
  ENDIF.
* * enter ok information into packing list.
  MOVE: OK_FLAG TO ATTRIBUTES_PACKING_LIST-OK_FLAG.
        MODIFY ATTRIBUTES_PACKING_LIST INDEX LIST_INDEX.
ENDFORM.
FORM SET-TAB_ATTRIBUTE
           TABLES ATTRIBUTES_PACKING_LIST STRUCTURE SINENTLST2
                  ATTRIBUTES_TEXT   STRUCTURE SINLI
                  ATTRIBUTES_BINARY STRUCTURE SINLI
                  TABLE
           USING  VALUE(ATTRIBUTE_SELECTION)
                  VALUE(IDINDEX)
                  VALUE(NAME)
                  VALUE(VALUE_TYPE)
                  VALUE(VALUE_LENGTH).
  DATA LIST_INDEX LIKE SY-TABIX.
  DATA NEW_ENTRY LIKE SONV-FLAG.
  DATA ATTRIBUTE_LENGTH LIKE SINENTLST2-LENGTH.
  DATA TAB_LINES LIKE SY-TABIX.

* get entry in packing List if it is there.
  IF ATTRIBUTE_SELECTION = ON.
    READ TABLE ATTRIBUTES_PACKING_LIST WITH KEY PROPNAME = NAME.
    IF SY-SUBRC NE OK.
*     * attribute not wanted
      CHECK 1 = 2.
    ELSEIF ATTRIBUTES_PACKING_LIST-OK_FLAG = ON.
       CLEAR ATTRIBUTES_PACKING_LIST.
       NEW_ENTRY = ON.
    ELSE.
       MOVE SY-TABIX TO LIST_INDEX.
       NEW_ENTRY = OFF.
    ENDIF.
  ELSE.
    CLEAR ATTRIBUTES_PACKING_LIST.
    NEW_ENTRY = ON.
  ENDIF.
* insert value into table
  IF VALUE_TYPE = TEXT_TYPE OR
     VALUE_TYPE = ID_TYPE.
    PERFORM TAB_TO_TAB TABLES TABLE
                              ATTRIBUTES_TEXT
                       USING  ATTRIBUTES_PACKING_LIST-STARTPOS
                              ATTRIBUTES_PACKING_LIST-NUMLINES.
  ELSEIF VALUE_TYPE = BIN_TYPE.
    PERFORM TAB_TO_TAB TABLES TABLE
                              ATTRIBUTES_BINARY
                       USING  ATTRIBUTES_PACKING_LIST-STARTPOS
                              ATTRIBUTES_PACKING_LIST-NUMLINES.
  ELSE.
    CHECK 1 = 2.
  ENDIF.
* * get length if not given
  IF VALUE_LENGTH = SPACE OR
     VALUE_LENGTH IS INITIAL.
    DESCRIBE FIELD TABLE LENGTH ATTRIBUTE_LENGTH in character mode.
    DESCRIBE TABLE TABLE LINES TAB_LINES.
    ATTRIBUTE_LENGTH = ATTRIBUTE_LENGTH * TAB_LINES.
  ELSE.
    MOVE VALUE_LENGTH TO ATTRIBUTE_LENGTH.
  ENDIF.
* * enter information into packing list.
  MOVE: IDINDEX TO ATTRIBUTES_PACKING_LIST-IDINDEX,
        NAME TO ATTRIBUTES_PACKING_LIST-PROPNAME,
        VALUE_TYPE TO ATTRIBUTES_PACKING_LIST-CONTTYPE,
        ATTRIBUTE_LENGTH TO ATTRIBUTES_PACKING_LIST-LENGTH,
        ON TO ATTRIBUTES_PACKING_LIST-OK_FLAG.
  IF NEW_ENTRY = ON.
    APPEND ATTRIBUTES_PACKING_LIST.
  ELSE.
    MODIFY ATTRIBUTES_PACKING_LIST INDEX LIST_INDEX.
  ENDIF.
ENDFORM.
FORM GET-TAB_ATTRIBUTE
           TABLES ATTRIBUTES_PACKING_LIST STRUCTURE SINENTLST2
                  ATTRIBUTES_TEXT   STRUCTURE SINLI
                  ATTRIBUTES_BINARY STRUCTURE SINLI
                  TABLE
           USING  VALUE(IDINDEX)
                  VALUE(NAME)
                  VALUE(OK_FLAG).
DATA LIST_INDEX LIKE SY-TABIX.
DATA TAB_LINES LIKE SY-TABIX.
DATA ATTRIBUTE_LENGTH LIKE SINENTLST2-LENGTH.

  READ TABLE ATTRIBUTES_PACKING_LIST WITH KEY IDINDEX  = IDINDEX
                                              PROPNAME = NAME
                                              OK_FLAG  = OFF.
  IF SY-SUBRC NE OK.
*   * attribute not found
    SY-SUBRC = 4.
    EXIT.
  ENDIF.
  MOVE SY-TABIX TO LIST_INDEX.
* * get length if not given
  IF ATTRIBUTES_PACKING_LIST-LENGTH = SPACE.
    DESCRIBE FIELD TABLE LENGTH ATTRIBUTE_LENGTH in character mode.
    DESCRIBE TABLE TABLE LINES TAB_LINES.
    ATTRIBUTE_LENGTH = ATTRIBUTE_LENGTH * TAB_LINES.
  ELSE.
    MOVE ATTRIBUTES_PACKING_LIST-LENGTH TO ATTRIBUTE_LENGTH.
  ENDIF.
* insert table into tab
  IF ATTRIBUTES_PACKING_LIST-CONTTYPE = TEXT_TYPE OR
     ATTRIBUTES_PACKING_LIST-CONTTYPE = ID_TYPE .
    PERFORM TAB_FROM_TAB TABLES TABLE
                                ATTRIBUTES_TEXT
                         USING  ATTRIBUTES_PACKING_LIST-STARTPOS
                                ATTRIBUTE_LENGTH
                                ATTRIBUTES_PACKING_LIST-NUMLINES.
  ELSEIF ATTRIBUTES_PACKING_LIST-CONTTYPE = BIN_TYPE.
    PERFORM TAB_FROM_TAB TABLES TABLE
                                ATTRIBUTES_BINARY
                         USING  ATTRIBUTES_PACKING_LIST-STARTPOS
                                ATTRIBUTE_LENGTH
                                ATTRIBUTES_PACKING_LIST-NUMLINES.
  ELSE.
    SY-SUBRC = 8.
    EXIT.
  ENDIF.
* * enter ok information into packing list.
  MOVE OK_FLAG TO ATTRIBUTES_PACKING_LIST-OK_FLAG.
  MODIFY ATTRIBUTES_PACKING_LIST INDEX LIST_INDEX.
ENDFORM.
FORM LINE_TO_TAB TABLES ATTRIBUTE_TAB STRUCTURE SINLI
                 USING  VALUE(TAB_LINE)
                        LINES.
CONSTANTS: TAB_WIDTH LIKE SY-TABIX VALUE 255.
DATA: REST   LIKE SY-TABIX,
      OFFSET LIKE SY-TABIX,
      TOTAL_LENGTH LIKE SY-TABIX.
* long_line is a globale field for long line handling (20K)
  CLEAR LONG_LINE.
  MOVE TAB_LINE TO LONG_LINE.
  DESCRIBE FIELD TAB_LINE LENGTH TOTAL_LENGTH in character mode.
* * sh 041198 46A : make 90% case fast
  IF TOTAL_LENGTH = TAB_WIDTH.
    LINES = 1.
    REST  = 0.
  ELSEIF TOTAL_LENGTH LT TAB_WIDTH.
    LINES = 0.
    REST  = TOTAL_LENGTH.
  ELSE.
    LINES = TOTAL_LENGTH DIV TAB_WIDTH. " number of full rows
    REST  = TOTAL_LENGTH MOD TAB_WIDTH. " size of last row
  ENDIF.
  OFFSET = 0.
  DO LINES TIMES.
    CLEAR ATTRIBUTE_TAB.
    MOVE LONG_LINE+OFFSET(TAB_WIDTH) TO ATTRIBUTE_TAB-LINE.
    APPEND ATTRIBUTE_TAB.
    ADD TAB_WIDTH TO OFFSET.
  ENDDO.
* * rest in next line only if there is anything
  IF REST GT 0.
    CLEAR ATTRIBUTE_TAB.
    MOVE LONG_LINE+OFFSET(REST) TO ATTRIBUTE_TAB-LINE.
    APPEND ATTRIBUTE_TAB.
    ADD 1 TO LINES.
  ENDIF.

ENDFORM.                    " LINE_TO_TAB
*&---------------------------------------------------------------------*
*&      Form  TAB_TO_LINE
*&---------------------------------------------------------------------*
*       text                                                           *
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM TAB_TO_LINE TABLES TAB STRUCTURE SINLI
                 USING  VALUE(START)
                        VALUE_LINES
                        VALUE(LENGTH)
                        VALUE.
CONSTANTS: TAB_WIDTH LIKE SY-TABIX VALUE 255.
DATA: REST   LIKE SY-TABIX,
      OFFSET LIKE SY-TABIX,
      LINES  LIKE SY-TABIX,
     POS LIKE SY-TABIX.
* long_line is a globale field for long line handling (20K)
  CLEAR LONG_LINE.
  POS = START.
  CHECK POS NE 0.
  LINES = LENGTH DIV TAB_WIDTH. " number of full rows
  REST  = LENGTH MOD TAB_WIDTH. " size of last row
  IF REST GT 0.
    ADD 1 TO LINES.    " line with a rest
  ENDIF.
  IF LINES GT VALUE_LINES.
    MOVE VALUE_LINES TO LINES.         "maximum lines to read allowed
  ENDIF.
  OFFSET = 0.
  DO LINES TIMES.
    READ TABLE TAB INDEX POS.
    CHECK SY-SUBRC = OK.

    IF SY-INDEX = LINES AND  " last line
       REST GT 0.
       MOVE TAB-LINE TO LONG_LINE+OFFSET(REST).
    ELSE.
       MOVE TAB-LINE TO LONG_LINE+OFFSET(TAB_WIDTH).
    ENDIF.
    ADD 1 TO POS.
    ADD TAB_WIDTH TO OFFSET.
  ENDDO.
  MOVE LONG_LINE(LENGTH) TO VALUE.
  IF LINES GT VALUE_LINES.
    MOVE VALUE_LINES TO LINES.
  ELSE.
    MOVE LINES TO VALUE_LINES.
  ENDIF.
ENDFORM.

FORM TAB_FROM_TAB TABLES TAB
                         ATTRIBUTES_TAB  STRUCTURE SINLI
                  USING  STARTPOS
                         TOTAL_LENGTH
                         TOTAL_LINES.
DATA ACTUAL_LINES LIKE SY-TABIX.
DATA USED_LINES   LIKE SY-TABIX.
DATA LEFT_LINES   LIKE SY-TABIX.
DATA ACTUAL_POS   LIKE SY-TABIX.
DATA TAB_WIDTH    LIKE SY-TABIX.

    REFRESH TAB.
    DESCRIBE FIELD TAB LENGTH TAB_WIDTH in character mode.
    LEFT_LINES = TOTAL_LINES.
    ACTUAL_POS = STARTPOS.
    DO.
      CLEAR TAB.
      USED_LINES = LEFT_LINES.
      PERFORM TAB_TO_LINE TABLES ATTRIBUTES_TAB
                          USING  ACTUAL_POS
                                 USED_LINES
                                 TAB_WIDTH
                                 TAB.
      IF USED_LINES  LT 1.
        EXIT.
      ELSE.
        APPEND TAB.
        SUBTRACT USED_LINES FROM LEFT_LINES.
        ADD USED_LINES TO ACTUAL_POS.
      ENDIF.
      IF LEFT_LINES LE 0.
        EXIT.
      ENDIF.
    ENDDO.
ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  TAB_TO_TAB
*&---------------------------------------------------------------------*
*       text                                                           *
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM TAB_TO_TAB TABLES TAB
                       ATTRIBUTE_TAB  STRUCTURE SINLI
                USING  STARTPOS
                       LINES.
DATA LINE_LINES LIKE SY-TABIX.

    DESCRIBE TABLE ATTRIBUTE_TAB LINES STARTPOS.
    LINES = 0.
    ADD 1 TO STARTPOS.
    LOOP AT TAB.
      PERFORM LINE_TO_TAB TABLES ATTRIBUTE_TAB
                          USING  TAB
                                 LINE_LINES.
      ADD LINE_LINES TO LINES.
    ENDLOOP.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET-ERROR
*&---------------------------------------------------------------------*
*       text                                                           *
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET-ERROR
           TABLES ATTRIBUTES_PACKING_LIST STRUCTURE SINENTLST2
                  ATTRIBUTES_TEXT   STRUCTURE SINLI
                  ATTRIBUTES_BINARY STRUCTURE SINLI
           USING
                  VALUE(IDINDEX)
                  VALUE(TYPE)
                  VALUE(TEXT).
DATA SAVE_ATTRIBUTE_SELECTION LIKE ATTRIBUTE_SELECTION.

* * temporarily stop attribute selection since error properties
* * normaly are not marked as "wanted"
  MOVE ATTRIBUTE_SELECTION TO SAVE_ATTRIBUTE_SELECTION.
  MOVE OFF TO ATTRIBUTE_SELECTION.
* * sett error type and text
  SET-ATTRIBUTE IDINDEX 'ERRORFLAG' TYPE TEXT_TYPE SPACE.
  SET-ATTRIBUTE IDINDEX 'ERRORTEXT' TEXT TEXT_TYPE SPACE.
* * switch back "normal" attribute selection flag
  MOVE SAVE_ATTRIBUTE_SELECTION TO ATTRIBUTE_SELECTION.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET-ERROR_NO
*&---------------------------------------------------------------------*
*       text                                                           *
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET-ERROR_NO
           TABLES ATTRIBUTES_PACKING_LIST STRUCTURE SINENTLST2
                  ATTRIBUTES_TEXT         STRUCTURE SINLI
                  ATTRIBUTES_BINARY       STRUCTURE SINLI
           USING IDINDEX
                 MSGID
                 MSGTY
                 MSGNO
                 MSGV1
                 MSGV2
                 MSGV3
                 MSGV4.
DATA ERROR_TEXT(200).
    CLEAR ERROR_TEXT.
    PERFORM T100_SELECT(SAPLSO02) USING    SY-LANGU
                                           MSGID
                                           MSGNO
                                  CHANGING ERROR_TEXT.
   REPLACE '&' WITH MSGV1 INTO ERROR_TEXT.
   CONDENSE ERROR_TEXT.
   REPLACE '&' WITH MSGV2 INTO ERROR_TEXT.
   CONDENSE ERROR_TEXT.
   REPLACE '&' WITH MSGV3 INTO ERROR_TEXT.
   CONDENSE ERROR_TEXT.
   REPLACE '&' WITH MSGV4 INTO ERROR_TEXT.
   CONDENSE ERROR_TEXT.
   PERFORM SET-ERROR
           TABLES ATTRIBUTES_PACKING_LIST
                  ATTRIBUTES_TEXT
                  ATTRIBUTES_BINARY
           USING           IDINDEX
                           MSGTY
                           ERROR_TEXT.
ENDFORM.