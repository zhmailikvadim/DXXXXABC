CLASS lcl_hm_demo_switch DEFINITION CREATE PRIVATE FINAL.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* CANOCAR      | 14.02.2022 | 9407      : Hardcode Manager             *
*              |            | DS4K900411                               *
*----------------------------------------------------------------------*

  PUBLIC SECTION.
    CLASS-METHODS start_of_selection.

  PRIVATE SECTION.

ENDCLASS.

CLASS lcl_hm_demo_switch IMPLEMENTATION.

  METHOD start_of_selection.


    IF rb_001 = abap_true.
      DATA: lv_filter_001 TYPE zpe_hm_type VALUE '1'.

      TRY.
          IF zcl_pe_hm_switch=>is_active( iv_id     = '13'
                                          is_filter = lv_filter_001 ).
            cl_demo_output=>display( TEXT-001 ).
          ENDIF.
        CATCH zcx_pe_hm INTO DATA(lo_exc_001).
          MESSAGE lo_exc_001.
      ENDTRY.
    ENDIF.


    IF rb_002 = abap_true.
      DATA: lv_filter_002 TYPE zpe_hm_type VALUE '2'.

      TRY.
          IF zcl_pe_hm_switch=>is_active( iv_id     = '13'
                                          is_filter = lv_filter_002 ).
            cl_demo_output=>display( TEXT-001 ).
          ELSE.
            cl_demo_output=>display( TEXT-002 ).
          ENDIF.
        CATCH zcx_pe_hm INTO DATA(lo_exc_002).
          MESSAGE lo_exc_002.
      ENDTRY.
    ENDIF.


    IF rb_003 = abap_true.
      DATA: lv_filter_003 TYPE zpe_hm_type VALUE '1'.

      TRY.
          IF zcl_pe_hm_switch=>is_active( iv_id     = 'NOT_FOUND'
                                          is_filter = lv_filter_003 ).
            cl_demo_output=>display( TEXT-001 ).
          ENDIF.
        CATCH zcx_pe_hm INTO DATA(lo_exc_003).
          MESSAGE lo_exc_003.
      ENDTRY.
    ENDIF.


    IF rb_004 = abap_true.
      DATA: lv_filter_004 TYPE zpe_hm_type VALUE '1'.

      TRY.
          IF zcl_pe_hm_switch=>is_active( iv_id     = '14'
                                          is_filter = lv_filter_004 ).
            cl_demo_output=>display( TEXT-001 ).
          ELSE.
            cl_demo_output=>display( TEXT-002 ).
          ENDIF.
        CATCH zcx_pe_hm INTO DATA(lo_exc_004).
          MESSAGE lo_exc_004.
      ENDTRY.
    ENDIF.


    IF rb_005 = abap_true.

      TYPES: BEGIN OF ltyp_s_005,
               bukrs   TYPE bukrs,
               another TYPE string,
               werks_d TYPE werks_d,
             END OF ltyp_s_005.

      TRY.
          IF zcl_pe_hm_switch=>is_active( iv_id     = '15'
                                          is_filter = VALUE ltyp_s_005( bukrs = 'ES01' werks_d = 'DE01'  ) ).
            cl_demo_output=>display( TEXT-001 ).
          ENDIF.
        CATCH zcx_pe_hm INTO DATA(lo_exc_005).
          MESSAGE lo_exc_005.
      ENDTRY.
    ENDIF.


    IF rb_006 = abap_true.

      TYPES: BEGIN OF ltyp_s_006,
               cc      TYPE bukrs,
               another TYPE string,
               plant   TYPE werks_d,
             END OF ltyp_s_006.

      TRY.
          IF zcl_pe_hm_switch=>is_active( iv_id           = '15'
                                          is_filter       = VALUE ltyp_s_006( cc = 'ES01' plant = 'DE01'  )
                                          iv_mapping_type = zcl_pe_hm=>gc_s_mapping_type-data_elements ).
            cl_demo_output=>display( TEXT-001 ).
          ENDIF.
        CATCH zcx_pe_hm INTO DATA(lo_exc_006).
          MESSAGE lo_exc_006.
      ENDTRY.
    ENDIF.


    IF rb_007 = abap_true.

      TYPES: BEGIN OF ltyp_s_007,
               bukrs   TYPE bukrs,
               another TYPE string,
               werks_d TYPE werks_d,
             END OF ltyp_s_007.

      TRY.
          IF zcl_pe_hm_switch=>is_active( iv_id     = '15'
                                          is_filter = VALUE ltyp_s_005( bukrs = 'ES01' werks_d = 'DE02'  ) ).
            cl_demo_output=>display( TEXT-001 ).
          ELSE.
            cl_demo_output=>display( TEXT-002 ).
          ENDIF.
        CATCH zcx_pe_hm INTO DATA(lo_exc_007).
          MESSAGE lo_exc_007.
      ENDTRY.
    ENDIF.

  ENDMETHOD.

ENDCLASS.