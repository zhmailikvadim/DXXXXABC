" -----------------------------------------------------------------------
"  R E V I S I O N   H I S T O R Y                                     -
" -----------------------------------------------------------------------
" AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              -
"              |            | TRANSPORT REQUESTS                       -
" -----------------------------------------------------------------------
" ZHMAIVAD     | 06.06.2023 | 20960     : [Build] - Stock reconciliati -
"              |            | DS4K951475                               -
" -----------------------------------------------------------------------
" ZHMAIVAD     | 07.08.2023 | 22859     : [Build] - Stock reconciliati -
"              |            | DS4K957133                               -
" -----------------------------------------------------------------------
" ZHMAIVAD     | 27.02.2024 | 29294     : [Feature] [Build] - Stock re -
"              |            | DS4K980553                               -
" -----------------------------------------------------------------------
" ZHMAIVAD     | 13.03.2024 | 29314     : [Feature] [Build] - Stock re -
"              |            | DS4K982092                               -
" -----------------------------------------------------------------------
" ZHMAIVAD     | 28.03.2024 | 30550     : [Feature] [Build] - Stock re -
"              |            | DS4K985335                                -
" -----------------------------------------------------------------------
" ZHMAIVAD     | 28.03.2024 | 30550     : [Feature] [Build] - Stock re -
"              |            | DS4K985371                                -
" -----------------------------------------------------------------------
FORM make_snapshot.
  IF s_storg IS NOT INITIAL.
    SELECT i_storagelocation~plant           AS plant,
           i_storagelocation~storagelocation AS storagelocation
      FROM i_storagelocation
             INNER JOIN
               i_plant       ON i_storagelocation~plant = i_plant~plant
      INTO TABLE @DATA(lt_storagelocation)
      WHERE i_storagelocation~plant IN @s_plant AND i_storagelocation~storagelocation IN @s_storg.
  ELSE.
    SELECT plant AS plant FROM i_plant
      INTO CORRESPONDING FIELDS OF TABLE @lt_storagelocation ##TOO_MANY_ITAB_FIELDS
      WHERE plant IN @s_plant.
  ENDIF.
  IF sy-subrc <> 0.
    RETURN.
  ENDIF.
  IF lines( lt_storagelocation ) > 0.
    LOOP AT lt_storagelocation ASSIGNING FIELD-SYMBOL(<ls_storagelocation>).
      MODIFY ENTITIES OF zsd_i_sap_snapshot
             ENTITY sapsnapshot
             EXECUTE  makesnapshotwithparams FROM VALUE #(
                 ( %param-plant            = <ls_storagelocation>-plant
                   %param-storage_location = <ls_storagelocation>-storagelocation ) )
             FAILED FINAL(ls_snpch_failed).
      COMMIT ENTITIES.
      SELECT COUNT( * ) INTO @DATA(lv_count)
        FROM zsd_t_snapshot_a
        WHERE plant = @<ls_storagelocation>-plant AND storage_location = @<ls_storagelocation>-storagelocation. "#EC CI_SEL_NESTED
      IF sy-subrc = 0 AND lv_count > 0 AND sy-batch = abap_true.
        MESSAGE i012(zcm_sd_stcock_snapsh) WITH lv_count <ls_storagelocation>-plant <ls_storagelocation>-storagelocation DISPLAY LIKE 'I'.
      ENDIF.
      IF ls_snpch_failed IS NOT INITIAL.
        DATA lt_snpch_failed LIKE TABLE OF ls_snpch_failed.
        MESSAGE i004(zcm_sd_stcock_snapsh) DISPLAY LIKE 'I'. " Error
        APPEND ls_snpch_failed TO lt_snpch_failed.
      ENDIF.
      CLEAR lv_count.
    ENDLOOP.
  ELSE.
    MESSAGE i008(zcm_sd_stcock_snapsh) DISPLAY LIKE 'I'. " Check Plant
  ENDIF.

  IF lt_snpch_failed IS INITIAL.
    MESSAGE i001(zcm_sd_stcock_snapsh) " Snapshot successfully created
            DISPLAY LIKE 'I'.
  ELSE.
    MESSAGE i004(zcm_sd_stcock_snapsh) DISPLAY LIKE 'I'. " Error
  ENDIF.
ENDFORM.