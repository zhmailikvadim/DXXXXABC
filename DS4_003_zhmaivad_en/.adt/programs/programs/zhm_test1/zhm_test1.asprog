*&---------------------------------------------------------------------*
*& Report ZHM_TEST1
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT zhm_test1.
DATA:
  lv_service     TYPE string,
  lv_uri         TYPE string,
  lv_result      TYPE xstring,
  lo_http_client TYPE REF TO if_http_client.




LEAVE PROGRAM.

lv_service = 'https://s4dev.adidas.com/sap/opu/odata4/sap/zsd_ui_s4_stock_snapsh_o4/srvd/sap/zsd_ui_s4_stock_snapshot/0001/?sap-client=100'.
lv_uri = '/sap/opu/odata4/sap/zsd_ui_s4_stock_snapsh_o4/srvd/sap/zsd_ui_s4_stock_snapshot/0001/SapStockSnapshotReport/com.sap.gateway.srvd.zsd_ui_s4_stock_snapshot.v0001.MakeSnapShotWithParams(plant=`0CN1`,storage_location=`T001`)'.

*** Use CL_HTTP_CLIENT to consume the OData service using the method "create_by_url"
cl_http_client=>create_by_url(
     EXPORTING
       url                = lv_service
     IMPORTING
       client             = lo_http_client
     EXCEPTIONS
       argument_not_found = 1
       plugin_not_active  = 2
       internal_error     = 3
       OTHERS             = 4 ).


lo_http_client->propertytype_accept_cookie = if_http_client=>co_enabled.
lo_http_client->request->set_method( method = if_http_request=>co_request_method_get ).
lo_http_client->request->set_content_type( 'application/xml' ).
lo_http_client->request->set_header_field( name  = 'x-csrf-token' value = 'fetch').

**** Send the request
lo_http_client->send(
      EXCEPTIONS
        http_communication_failure = 1
        http_invalid_state         = 2 ).

*** Receive the respose
lo_http_client->receive(
   EXCEPTIONS
     http_communication_failure = 1
     http_invalid_state         = 2
     http_processing_failed     = 3 ).

*** Read the result
CLEAR lv_result .
lv_result = lo_http_client->response->get_data( ).
DATA(lv_token) = lo_http_client->response->get_header_field( name = 'x-csrf-token' ).

*** Set cookies
DATA it_cookies TYPE tihttpcki.
lo_http_client->response->get_cookies( CHANGING cookies = it_cookies ).
LOOP AT it_cookies ASSIGNING FIELD-SYMBOL(<cookie>).
  lo_http_client->request->set_cookie( name = <cookie>-name value = <cookie>-value ).
ENDLOOP.

*** Post request
lo_http_client->request->set_header_field( name  = 'x-csrf-token' value = lv_token ).
lo_http_client->request->set_method( method = if_http_request=>co_request_method_post ).
lo_http_client->request->set_content_type( 'application/json' ).

cl_http_utility=>set_request_uri( request = lo_http_client->request uri = lv_uri ).



**** Send the request
lo_http_client->send(
      EXCEPTIONS
        http_communication_failure = 1
        http_invalid_state         = 2 ).

*** Receive the respose
lo_http_client->receive(
   EXCEPTIONS
     http_communication_failure = 1
     http_invalid_state         = 2
     http_processing_failed     = 3 ).

*** Read the result
CLEAR lv_result .
lv_result = lo_http_client->response->get_data( ).
**Displays XML File
IF lv_result IS NOT INITIAL.
  cl_abap_browser=>show_html(
       html_xstring = lv_result
       size         = cl_abap_browser=>large ).
ELSE.
  WRITE: 'Is OK'.
ENDIF.
lo_http_client->close( ).