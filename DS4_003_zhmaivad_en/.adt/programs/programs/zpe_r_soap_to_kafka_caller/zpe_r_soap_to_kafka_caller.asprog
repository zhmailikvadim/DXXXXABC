*&---------------------------------------------------------------------*
*& Report ZPE_R_SOAP_TO_KAFKA_CALLER
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT zpe_r_soap_to_kafka_caller.

PARAMETERS: p_statu type zsc_s_zpurchase_order_log-purchase_order_bulk_log-status,
            p_refer type zsc_s_zpurchase_order_log-purchase_order_bulk_log-reference_id,
            p_idocn type zsc_s_zpurchase_order_log-purchase_order_bulk_log-idoc_number,
            p_stonu type zsc_s_zpurchase_order_log-purchase_order_bulk_log-stonumber.


* Data declarations for Consumer Proxy
DATA: lo_proxy      TYPE REF TO zcl_sc_co_zpurchase_order_log.   "Replace <Data_Structure> with the actual structure of the input data


START-OF-SELECTION.

  TRY.
* Initialize the consumer proxy
      CREATE OBJECT lo_proxy.


* Populate input data (if required)
      DATA(ls_input_data) = VALUE zsc_s_zpurchase_order_log( purchase_order_bulk_log-status = p_statu
                                                               purchase_order_bulk_log-reference_id = p_refer
                                                               purchase_order_bulk_log-idoc_number = p_idocn
                                                               purchase_order_bulk_log-stonumber = p_stonu ).
* Call the consumer proxy method
      CALL METHOD lo_proxy->purchase_order_log_out    "Replace <Consumer_Proxy_Method> with the method you want to call
        EXPORTING
          output = ls_input_data.

    CATCH cx_ai_system_fault INTO DATA(lx_system_fault).
      " Handle system-level exceptions (e.g., communication errors).
      WRITE: / 'System Fault:', lx_system_fault->get_text( ).

    CATCH cx_ai_application_fault INTO DATA(lx_app_fault).
      " Handle application-level exceptions (e.g., business errors).
      WRITE: / 'Application Fault:', lx_app_fault->get_text( ).

  ENDTRY.

  COMMIT WORK.