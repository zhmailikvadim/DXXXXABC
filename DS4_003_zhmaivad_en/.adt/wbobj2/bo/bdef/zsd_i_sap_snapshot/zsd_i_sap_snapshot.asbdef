/************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* ZHMAIVAD     | 26.09.2022 | 13444     : [Build] - Stock reconciliation with WMS *
*              |            | DS4K929106                               *
************************************************************************
* ZHMAIVAD     | 19.12.2022 | 16311     : [Feature] [Build] - Stock re *
*              |            | DS4K938447                               *
*----------------------------------------------------------------------*
* ZHMAIVAD     | 20.04.2023 | 19611     : [Feature] [Build] - Stock re *
*              |            | DS4K950069                               *
*----------------------------------------------------------------------*
" ZHMAIVAD     | 06.06.2023 | 20960     : [Build] - Stock reconciliati -
"              |            | DS4K951475                               -
----------------------------------------------------------------------*
" ZHMAIVAD     | 07.08.2023 | 22859     : [Feature] [Build] - Stock re -
"              |            | DS4K957133                               -
" ----------------------------------------------------------------------*/
managed implementation in class zbp_sd_i_sap_snapshot unique;
strict;

define behavior for zsd_i_sap_snapshot alias SapSnapshot
persistent table zsd_t_snapshot_a
lock master
authorization master ( global, instance )
etag master ChangedOn
{
  create;
  update;
  delete;

  static action DeleteAll;
  static action DeleteLessThenTimestamp parameter zsd_d_stock_snapshot_date;
  static action MakeSnapShotWithParams parameter zsd_d_stock_snapshot_params;

  mapping for zsd_t_snapshot_a
  {
    SapSnapshotDate = snapshot_date;
    Plant = plant;
    StorageLocation = storage_location;
    SalesOrderNumber = sales_order_number;
    SalesOrderItem = sales_order_item;
    Article = article;
    SapTimestamp = sap_timestamp;
    UuQty = uu_qty;
    BlQty = bl_qty;
    QiQty = qi_qty;
    UuDiff = uu_diff;
    BlDiff = bl_diff;
    QiDiff = qi_diff;
    UuRealDiff = uu_real_diff;
    BlRealDiff = bl_real_diff;
    QiRealDiff = qi_real_diff;
    UuDiffValue = uu_diff_value;
    BlDiffValue = bl_diff_value;
    QiDiffValue = qi_diff_value;
    ErrorsUuTiming = errors_uu_timing;
    ErrorsBlTiming = errors_bl_timing;
    ErrorsQiTiming = errors_qi_timing;
    ErrorsGrUuQty = errors_gr_uu_qty;
    ErrorsGrQiQty = errors_gr_qi_qty;
    ErrorsGrBlQty = errors_gr_bl_qty;
    ErrorsGiUuQty = errors_gi_uu_qty;
    ErrorGrEcom = error_gr_ecom;
    ErrorGiEcom = error_gi_ecom;
    ErrorsInvpostUuQty = errors_invpost_uu_qty;
    ErrorsInvpostBlQty = errors_invpost_bl_qty;
    ErrorsInvpostQiQty = errors_invpost_qi_qty;
    TotalNetDiff = total_net_diff;
    TotalNetDiffAbs = total_net_diff_abs;
    TotalDiffValue = total_diff_value;
    TotalDiffValueAbs = total_diff_value_abs;
    price = price;
    HasDifference = has_difference;
    Currency = waers;
    UnitOfMeasure = meins;
    ErrorsChangedOn = errors_changed_on;
    ErrorsChangedBy = Errors_Changed_By;
    CreatedOn = created_on;
    CreatedBy = created_by;
    ChangedOn = changed_on;
    ChangedBy = changed_by;
  }
}