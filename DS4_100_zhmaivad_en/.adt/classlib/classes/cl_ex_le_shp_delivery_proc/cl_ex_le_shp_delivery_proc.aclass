class CL_EX_LE_SHP_DELIVERY_PROC definition
  public
  final
  create public .

*"* public components of class CL_EX_LE_SHP_DELIVERY_PROC
*"* do not include other source files here!!!
public section.

  interfaces IF_BADI_CONTEXT .
  interfaces IF_BADI_INTERFACE .
  interfaces IF_EX_LE_SHP_DELIVERY_PROC .

  constants VERSION type VERSION value 000001. "#EC NOTEXT
protected section.
*"* protected components of class CL_EX_LE_SHP_DELIVERY_PROC
*"* do not include other source files here!!!
private section.
*"* private components of class CL_EX_LE_SHP_DELIVERY_PROC
*"* do not include other source files here!!!

  class-data SINGLETON type ref to CL_EX_LE_SHP_DELIVERY_PROC .
ENDCLASS.



CLASS CL_EX_LE_SHP_DELIVERY_PROC IMPLEMENTATION.


method IF_EX_LE_SHP_DELIVERY_PROC~CHANGE_DELIVERY_HEADER.
  CLASS CL_EXIT_MASTER DEFINITION LOAD.

  DATA l_badi TYPE REF TO LE_SHP_DELIVERY_PROC.





  TRY.

    GET BADI l_badi
     CONTEXT me.

    CALL BADI l_badi->CHANGE_DELIVERY_HEADER
     EXPORTING
       IF_TCODE = IF_TCODE
       IF_TRTYP = IF_TRTYP
       IS_V50AGL = IS_V50AGL
       IT_XVBADR = IT_XVBADR
       IT_YVBUP = IT_YVBUP
       IT_XVBUP = IT_XVBUP
       IT_YVBUK = IT_YVBUK
       IT_XVBUK = IT_XVBUK
       IT_XLIKP = IT_XLIKP
       IT_YLIKP = IT_YLIKP
       IT_XLIPS = IT_XLIPS
       IT_YLIPS = IT_YLIPS
       IT_XVBPA = IT_XVBPA
       IT_YVBPA = IT_YVBPA
       IT_XVBFA = IT_XVBFA
       IT_YVBFA = IT_YVBFA
     CHANGING
       CS_LIKP = CS_LIKP
       CS_LIKPD = CS_LIKPD
       CS_V50AGL_CUST = CS_V50AGL_CUST
       CT_LOG = CT_LOG.



    CATCH CX_BADI_NOT_IMPLEMENTED CX_BADI_INITIAL_REFERENCE.
  ENDTRY.
endmethod.


method IF_EX_LE_SHP_DELIVERY_PROC~CHANGE_DELIVERY_ITEM.
  CLASS CL_EXIT_MASTER DEFINITION LOAD.

  DATA l_badi TYPE REF TO LE_SHP_DELIVERY_PROC.





  TRY.

    GET BADI l_badi
     CONTEXT me.

    CALL BADI l_badi->CHANGE_DELIVERY_ITEM
     EXPORTING
       IT_YVBUP = IT_YVBUP
       IT_XVBUP = IT_XVBUP
       IT_YVBUK = IT_YVBUK
       IT_XVBUK = IT_XVBUK
       IT_YVBFA = IT_YVBFA
       IT_XVBFA = IT_XVBFA
       IT_YVBPA = IT_YVBPA
       IT_XVBPA = IT_XVBPA
       IF_FLAG_NEW_ITEM = IF_FLAG_NEW_ITEM
       IS_V50AGL = IS_V50AGL
       IF_TRTYP = IF_TRTYP
       IF_TCODE = IF_TCODE
       IT_XLIKP = IT_XLIKP
       IT_YLIKP = IT_YLIKP
       IT_XLIPS = IT_XLIPS
       IT_YLIPS = IT_YLIPS
     CHANGING
       CS_LIPS = CS_LIPS
       CS_LIPSD = CS_LIPSD
       CS_LIKP = CS_LIKP
       CS_LIKPD = CS_LIKPD
       CF_FLAG_DELETE_ITEM = CF_FLAG_DELETE_ITEM
       CS_V50AGL_CUST = CS_V50AGL_CUST
       CT_LOG = CT_LOG.



    CATCH CX_BADI_NOT_IMPLEMENTED CX_BADI_INITIAL_REFERENCE.
  ENDTRY.
endmethod.


method IF_EX_LE_SHP_DELIVERY_PROC~CHANGE_FCODE_ATTRIBUTES.
  CLASS CL_EXIT_MASTER DEFINITION LOAD.

  DATA l_badi TYPE REF TO LE_SHP_DELIVERY_PROC.





  TRY.

    GET BADI l_badi
     CONTEXT me.

    CALL BADI l_badi->CHANGE_FCODE_ATTRIBUTES
     EXPORTING
       IS_LIKPD = IS_LIKPD
       IS_LIKP = IS_LIKP
       IS_LIPSD = IS_LIPSD
       IS_LIPS = IS_LIPS
       IT_YVBUP = IT_YVBUP
       IT_XVBUP = IT_XVBUP
       IT_YVBUK = IT_YVBUK
       IT_XVBUK = IT_XVBUK
       IT_YVBFA = IT_YVBFA
       IT_XVBFA = IT_XVBFA
       IF_TRTYP = IF_TRTYP
       IF_TCODE = IF_TCODE
       IS_V50AGL = IS_V50AGL
       IF_SCREEN_GROUP = IF_SCREEN_GROUP
       IF_PANEL = IF_PANEL
       IT_YLIKP = IT_YLIKP
       IT_XLIPS = IT_XLIPS
       IT_YLIPS = IT_YLIPS
       IT_XVBPA = IT_XVBPA
       IT_YVBPA = IT_YVBPA
     CHANGING
       CT_CUA_EXCLUDE = CT_CUA_EXCLUDE
       CS_V50AGL_CUST = CS_V50AGL_CUST.



    CATCH CX_BADI_NOT_IMPLEMENTED CX_BADI_INITIAL_REFERENCE.
  ENDTRY.
endmethod.


method IF_EX_LE_SHP_DELIVERY_PROC~CHANGE_FIELD_ATTRIBUTES.
  CLASS CL_EXIT_MASTER DEFINITION LOAD.

  DATA l_badi TYPE REF TO LE_SHP_DELIVERY_PROC.





  TRY.

    GET BADI l_badi
     CONTEXT me.

    CALL BADI l_badi->CHANGE_FIELD_ATTRIBUTES
     EXPORTING
       IS_LIKPD = IS_LIKPD
       IS_LIKP = IS_LIKP
       IS_LIPSD = IS_LIPSD
       IS_LIPS = IS_LIPS
       IT_YVBUP = IT_YVBUP
       IT_XVBUP = IT_XVBUP
       IT_YVBUK = IT_YVBUK
       IT_XVBUK = IT_XVBUK
       IT_YVBFA = IT_YVBFA
       IT_XVBFA = IT_XVBFA
       IS_V50AGL = IS_V50AGL
       IF_TRTYP = IF_TRTYP
       IF_TCODE = IF_TCODE
       IF_SCREEN_GROUP = IF_SCREEN_GROUP
       IF_PANEL = IF_PANEL
       IT_YLIKP = IT_YLIKP
       IT_XLIPS = IT_XLIPS
       IT_YLIPS = IT_YLIPS
       IT_XVBPA = IT_XVBPA
       IT_YVBPA = IT_YVBPA
     CHANGING
       CT_FIELD_ATTRIBUTES = CT_FIELD_ATTRIBUTES
       CS_V50AGL_CUST = CS_V50AGL_CUST.



    CATCH CX_BADI_NOT_IMPLEMENTED CX_BADI_INITIAL_REFERENCE.
  ENDTRY.
endmethod.


method IF_EX_LE_SHP_DELIVERY_PROC~CHECK_ITEM_DELETION.
  CLASS CL_EXIT_MASTER DEFINITION LOAD.

  DATA l_badi TYPE REF TO LE_SHP_DELIVERY_PROC.





  TRY.

    GET BADI l_badi
     CONTEXT me.

    CALL BADI l_badi->CHECK_ITEM_DELETION
     EXPORTING
       IF_TCODE = IF_TCODE
       IF_TRTYP = IF_TRTYP
       IS_V50AGL = IS_V50AGL
       IT_YVBFA = IT_YVBFA
       IT_XVBFA = IT_XVBFA
       IT_YVBPA = IT_YVBPA
       IT_XVBPA = IT_XVBPA
       IT_YLIPS = IT_YLIPS
       IT_XLIPS = IT_XLIPS
       IS_XLIPS = IS_XLIPS
       IS_LIKP = IS_LIKP
       IS_LIKPD = IS_LIKPD
       IT_XVBUK = IT_XVBUK
       IT_YVBUK = IT_YVBUK
       IT_XVBUP = IT_XVBUP
       IT_YVBUP = IT_YVBUP
       IT_XLIKP = IT_XLIKP
       IT_YLIKP = IT_YLIKP
     CHANGING
       CS_V50AGL_CUST = CS_V50AGL_CUST
       CF_ITEM_NOT_DELETABLE = CF_ITEM_NOT_DELETABLE
       CT_LOG = CT_LOG.



    CATCH CX_BADI_NOT_IMPLEMENTED CX_BADI_INITIAL_REFERENCE.
  ENDTRY.
endmethod.


method IF_EX_LE_SHP_DELIVERY_PROC~DELIVERY_DELETION.
  CLASS CL_EXIT_MASTER DEFINITION LOAD.

  DATA l_badi TYPE REF TO LE_SHP_DELIVERY_PROC.





  TRY.

    GET BADI l_badi
     CONTEXT me.

    CALL BADI l_badi->DELIVERY_DELETION
     EXPORTING
       IF_TCODE = IF_TCODE
       IF_TRTYP = IF_TRTYP
       IS_V50AGL = IS_V50AGL
       IT_XVBADR = IT_XVBADR
       IT_YVBFA = IT_YVBFA
       IT_XVBFA = IT_XVBFA
       IT_YVBPA = IT_YVBPA
       IT_YLIPS = IT_YLIPS
       IT_XLIPS = IT_XLIPS
       IT_YLIKP = IT_YLIKP
       IT_YVBUP = IT_YVBUP
       IT_YVBUK = IT_YVBUK
       IS_LIKPD = IS_LIKPD
       IS_LIKP = IS_LIKP
     CHANGING
       CS_V50AGL_CUST = CS_V50AGL_CUST.



    CATCH CX_BADI_NOT_IMPLEMENTED CX_BADI_INITIAL_REFERENCE.
  ENDTRY.
endmethod.


method IF_EX_LE_SHP_DELIVERY_PROC~DELIVERY_FINAL_CHECK.
  CLASS CL_EXIT_MASTER DEFINITION LOAD.

  DATA l_badi TYPE REF TO LE_SHP_DELIVERY_PROC.





  TRY.

    GET BADI l_badi
     CONTEXT me.

    CALL BADI l_badi->DELIVERY_FINAL_CHECK
     EXPORTING
       IF_TCODE = IF_TCODE
       IF_TRTYP = IF_TRTYP
       IS_V50AGL = IS_V50AGL
       IT_XVBADR = IT_XVBADR
       IT_YVBUP = IT_YVBUP
       IT_XVBUP = IT_XVBUP
       IT_YVBUK = IT_YVBUK
       IT_XVBUK = IT_XVBUK
       IT_YVBFA = IT_YVBFA
       IT_XVBFA = IT_XVBFA
       IT_YVBPA = IT_YVBPA
       IT_XVBPA = IT_XVBPA
       IT_YLIPS = IT_YLIPS
       IT_XLIPS = IT_XLIPS
       IT_YLIKP = IT_YLIKP
       IT_XLIKP = IT_XLIKP
     CHANGING
       CS_V50AGL_CUST = CS_V50AGL_CUST
       CT_FINCHDEL = CT_FINCHDEL.



    CATCH CX_BADI_NOT_IMPLEMENTED CX_BADI_INITIAL_REFERENCE.
  ENDTRY.
endmethod.


method IF_EX_LE_SHP_DELIVERY_PROC~DOCUMENT_NUMBER_PUBLISH.
  CLASS CL_EXIT_MASTER DEFINITION LOAD.

  DATA l_badi TYPE REF TO LE_SHP_DELIVERY_PROC.





  TRY.

    GET BADI l_badi
     CONTEXT me.

    CALL BADI l_badi->DOCUMENT_NUMBER_PUBLISH
     EXPORTING
       IT_DOCNUM_PUBLISH = IT_DOCNUM_PUBLISH
       IS_V50AGL = IS_V50AGL
       IF_TRTYP = IF_TRTYP
       IF_TCODE = IF_TCODE
     CHANGING
       CS_V50AGL_CUST = CS_V50AGL_CUST.



    CATCH CX_BADI_NOT_IMPLEMENTED CX_BADI_INITIAL_REFERENCE.
  ENDTRY.
endmethod.


method IF_EX_LE_SHP_DELIVERY_PROC~FILL_DELIVERY_HEADER.
  CLASS CL_EXIT_MASTER DEFINITION LOAD.

  DATA l_badi TYPE REF TO LE_SHP_DELIVERY_PROC.





  TRY.

    GET BADI l_badi
     CONTEXT me.

    CALL BADI l_badi->FILL_DELIVERY_HEADER
     EXPORTING
       IT_XLIKP = IT_XLIKP
       IT_XLIPS = IT_XLIPS
       IT_XVBPA = IT_XVBPA
       IS_V50AGL = IS_V50AGL
       IF_TRTYP = IF_TRTYP
       IF_TCODE = IF_TCODE
     CHANGING
       CS_LIKP = CS_LIKP
       CS_LIKPD = CS_LIKPD
       CS_V50AGL_CUST = CS_V50AGL_CUST
       CT_LOG = CT_LOG.



    CATCH CX_BADI_NOT_IMPLEMENTED CX_BADI_INITIAL_REFERENCE.
  ENDTRY.
endmethod.


method IF_EX_LE_SHP_DELIVERY_PROC~FILL_DELIVERY_ITEM.
  CLASS CL_EXIT_MASTER DEFINITION LOAD.

  DATA l_badi TYPE REF TO LE_SHP_DELIVERY_PROC.





  TRY.

    GET BADI l_badi
     CONTEXT me.

    CALL BADI l_badi->FILL_DELIVERY_ITEM
     EXPORTING
       IF_TCODE = IF_TCODE
       IF_TRTYP = IF_TRTYP
       IS_V50AGL = IS_V50AGL
       IT_XVBPA = IT_XVBPA
       IT_XLIPS = IT_XLIPS
       IT_XLIKP = IT_XLIKP
       IS_LIKPD = IS_LIKPD
       IS_LIKP = IS_LIKP
     CHANGING
       CS_LIPS = CS_LIPS
       CS_LIPSD = CS_LIPSD
       CS_V50AGL_CUST = CS_V50AGL_CUST
       CT_LOG = CT_LOG.



    CATCH CX_BADI_NOT_IMPLEMENTED CX_BADI_INITIAL_REFERENCE.
  ENDTRY.
endmethod.


method IF_EX_LE_SHP_DELIVERY_PROC~INITIALIZE_DELIVERY.
  CLASS CL_EXIT_MASTER DEFINITION LOAD.

  DATA l_badi TYPE REF TO LE_SHP_DELIVERY_PROC.





  TRY.

    GET BADI l_badi
     CONTEXT me.

    CALL BADI l_badi->INITIALIZE_DELIVERY
     EXPORTING
       IS_V50AGL = IS_V50AGL
       IF_TRTYP = IF_TRTYP
       IF_TCODE = IF_TCODE
     CHANGING
       CS_V50AGL_CUST = CS_V50AGL_CUST.



    CATCH CX_BADI_NOT_IMPLEMENTED CX_BADI_INITIAL_REFERENCE.
  ENDTRY.
endmethod.


method IF_EX_LE_SHP_DELIVERY_PROC~ITEM_DELETION.
  CLASS CL_EXIT_MASTER DEFINITION LOAD.

  DATA l_badi TYPE REF TO LE_SHP_DELIVERY_PROC.





  TRY.

    GET BADI l_badi
     CONTEXT me.

    CALL BADI l_badi->ITEM_DELETION
     EXPORTING
       IF_TCODE = IF_TCODE
       IF_TRTYP = IF_TRTYP
       IS_V50AGL = IS_V50AGL
       IT_YVBFA = IT_YVBFA
       IT_XVBFA = IT_XVBFA
       IT_YVBPA = IT_YVBPA
       IT_XVBPA = IT_XVBPA
       IT_YLIPS = IT_YLIPS
       IT_XLIPS = IT_XLIPS
       IT_YLIKP = IT_YLIKP
       IT_XLIKP = IT_XLIKP
       IT_YVBUP = IT_YVBUP
       IT_XVBUP = IT_XVBUP
       IT_YVBUK = IT_YVBUK
       IT_XVBUK = IT_XVBUK
       IS_LIKPD = IS_LIKPD
       IS_LIKP = IS_LIKP
       IS_XLIPS = IS_XLIPS
     CHANGING
       CS_V50AGL_CUST = CS_V50AGL_CUST.



    CATCH CX_BADI_NOT_IMPLEMENTED CX_BADI_INITIAL_REFERENCE.
  ENDTRY.
endmethod.


method IF_EX_LE_SHP_DELIVERY_PROC~PUBLISH_DELIVERY_ITEM.
  CLASS CL_EXIT_MASTER DEFINITION LOAD.

  DATA l_badi TYPE REF TO LE_SHP_DELIVERY_PROC.





  TRY.

    GET BADI l_badi
     CONTEXT me.

    CALL BADI l_badi->PUBLISH_DELIVERY_ITEM
     EXPORTING
       IF_TCODE = IF_TCODE
       IF_TRTYP = IF_TRTYP
       IS_V50AGL = IS_V50AGL
       IT_YVBUP = IT_YVBUP
       IT_XVBUP = IT_XVBUP
       IT_YVBUK = IT_YVBUK
       IT_XVBUK = IT_XVBUK
       IT_YVBFA = IT_YVBFA
       IT_XVBFA = IT_XVBFA
       IT_YVBPA = IT_YVBPA
       IT_XVBPA = IT_XVBPA
       IT_YLIPS = IT_YLIPS
       IT_XLIPS = IT_XLIPS
       IT_YLIKP = IT_YLIKP
       IT_XLIKP = IT_XLIKP
       IS_XLIPS = IS_XLIPS
       IS_LIKPD = IS_LIKPD
       IS_LIKP = IS_LIKP
     CHANGING
       CS_V50AGL_CUST = CS_V50AGL_CUST.



    CATCH CX_BADI_NOT_IMPLEMENTED CX_BADI_INITIAL_REFERENCE.
  ENDTRY.
endmethod.


method IF_EX_LE_SHP_DELIVERY_PROC~READ_DELIVERY.
  CLASS CL_EXIT_MASTER DEFINITION LOAD.

  DATA l_badi TYPE REF TO LE_SHP_DELIVERY_PROC.





  TRY.

    GET BADI l_badi
     CONTEXT me.

    CALL BADI l_badi->READ_DELIVERY
     EXPORTING
       IF_TCODE = IF_TCODE
       IF_TRTYP = IF_TRTYP
       IS_V50AGL = IS_V50AGL
       IT_YVBUP = IT_YVBUP
       IT_XVBUP = IT_XVBUP
       IT_YVBUK = IT_YVBUK
       IT_XVBUK = IT_XVBUK
     CHANGING
       CS_V50AGL_CUST = CS_V50AGL_CUST
       CF_FORCE_STATUS_UPDATE = CF_FORCE_STATUS_UPDATE
       CT_XVBADR = CT_XVBADR
       CT_YVBFA = CT_YVBFA
       CT_XVBFA = CT_XVBFA
       CT_YVBPA = CT_YVBPA
       CT_XVBPA = CT_XVBPA
       CT_YLIPS = CT_YLIPS
       CT_XLIPS = CT_XLIPS
       CT_YLIKP = CT_YLIKP
       CS_LIKPD = CS_LIKPD
       CS_LIKP = CS_LIKP.



    CATCH CX_BADI_NOT_IMPLEMENTED CX_BADI_INITIAL_REFERENCE.
  ENDTRY.
endmethod.


method IF_EX_LE_SHP_DELIVERY_PROC~SAVE_AND_PUBLISH_BEFORE_OUTPUT.
  CLASS CL_EXIT_MASTER DEFINITION LOAD.

  DATA l_badi TYPE REF TO LE_SHP_DELIVERY_PROC.





  TRY.

    GET BADI l_badi
     CONTEXT me.

    CALL BADI l_badi->SAVE_AND_PUBLISH_BEFORE_OUTPUT
     EXPORTING
       IV_REPAIR_DOCFLOW = IV_REPAIR_DOCFLOW
       IT_VBFS = IT_VBFS
       IF_TCODE = IF_TCODE
       IF_TRTYP = IF_TRTYP
       IS_V50AGL = IS_V50AGL
       IT_XVBADR = IT_XVBADR
       IT_YVBFA = IT_YVBFA
       IT_XVBFA = IT_XVBFA
       IT_YVBPA = IT_YVBPA
       IT_XVBPA = IT_XVBPA
       IT_YLIPS = IT_YLIPS
       IT_XLIPS = IT_XLIPS
       IT_YVBUP = IT_YVBUP
       IT_XVBUP = IT_XVBUP
       IT_YVBUK = IT_YVBUK
       IT_XVBUK = IT_XVBUK
       IT_YLIKP = IT_YLIKP
       IT_XLIKP = IT_XLIKP
     CHANGING
       CS_V50AGL_CUST = CS_V50AGL_CUST.



    CATCH CX_BADI_NOT_IMPLEMENTED CX_BADI_INITIAL_REFERENCE.
  ENDTRY.
endmethod.


method IF_EX_LE_SHP_DELIVERY_PROC~SAVE_AND_PUBLISH_DOCUMENT.
  CLASS CL_EXIT_MASTER DEFINITION LOAD.

  DATA l_badi TYPE REF TO LE_SHP_DELIVERY_PROC.





  TRY.

    GET BADI l_badi
     CONTEXT me.

    CALL BADI l_badi->SAVE_AND_PUBLISH_DOCUMENT
     EXPORTING
       IV_REPAIR_DOCFLOW = IV_REPAIR_DOCFLOW
       IT_VBFS = IT_VBFS
       IF_TCODE = IF_TCODE
       IF_TRTYP = IF_TRTYP
       IS_V50AGL = IS_V50AGL
       IT_XVBADR = IT_XVBADR
       IT_YVBFA = IT_YVBFA
       IT_XVBFA = IT_XVBFA
       IT_YVBPA = IT_YVBPA
       IT_XVBPA = IT_XVBPA
       IT_YLIPS = IT_YLIPS
       IT_XLIPS = IT_XLIPS
       IT_YVBUP = IT_YVBUP
       IT_XVBUP = IT_XVBUP
       IT_YVBUK = IT_YVBUK
       IT_XVBUK = IT_XVBUK
       IT_YLIKP = IT_YLIKP
       IT_XLIKP = IT_XLIKP
     CHANGING
       CS_V50AGL_CUST = CS_V50AGL_CUST.



    CATCH CX_BADI_NOT_IMPLEMENTED CX_BADI_INITIAL_REFERENCE.
  ENDTRY.
endmethod.


method IF_EX_LE_SHP_DELIVERY_PROC~SAVE_DOCUMENT_PREPARE.
  CLASS CL_EXIT_MASTER DEFINITION LOAD.

  DATA l_badi TYPE REF TO LE_SHP_DELIVERY_PROC.





  TRY.

    GET BADI l_badi
     CONTEXT me.

    CALL BADI l_badi->SAVE_DOCUMENT_PREPARE
     EXPORTING
       IF_TCODE = IF_TCODE
       IF_TRTYP = IF_TRTYP
       IS_V50AGL = IS_V50AGL
       IT_YVBUP = IT_YVBUP
       IT_XVBUP = IT_XVBUP
       IT_YVBUK = IT_YVBUK
       IT_XVBUK = IT_XVBUK
     CHANGING
       CT_LOG = CT_LOG
       CS_V50AGL_CUST = CS_V50AGL_CUST
       CF_FORCE_STATUS_UPDATE = CF_FORCE_STATUS_UPDATE
       CT_XVBADR = CT_XVBADR
       CT_YVBFA = CT_YVBFA
       CT_XVBFA = CT_XVBFA
       CT_YVBPA = CT_YVBPA
       CT_XVBPA = CT_XVBPA
       CT_YLIPS = CT_YLIPS
       CT_XLIPS = CT_XLIPS
       CT_YLIKP = CT_YLIKP
       CT_XLIKP = CT_XLIKP.



    CATCH CX_BADI_NOT_IMPLEMENTED CX_BADI_INITIAL_REFERENCE.
  ENDTRY.
endmethod.
ENDCLASS.