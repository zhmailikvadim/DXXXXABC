class CL_RLFW_SYSTEM_RUNLEVEL definition
  public
  final
  create public .

public section.

  constants C_SYS_RL_RUNNING type RLFW_SYSTEM_RL value 0. "#EC NOTEXT
  constants C_SYS_RL_RESTRICT_WD type RLFW_SYSTEM_RL value 4. "#EC NOTEXT
  constants C_SYS_RL_COOLDOWN type RLFW_SYSTEM_RL value 9. "#EC NOTEXT
  constants C_SYS_RL_MAINTENANCE type RLFW_SYSTEM_RL value 100. "#EC NOTEXT
  constants C_SYS_RL_ERROR type RLFW_SYSTEM_RL value 999. "#EC NOTEXT
  constants C_RL_DESC_RUNNING type RLFW_RL_DESC value 'RUNNING'. "#EC NOTEXT
  constants C_RL_DESC_RESTRICT_WD type RLFW_RL_DESC value 'RESTRICT WEB DISPATCHER'. "#EC NOTEXT
  constants C_RL_DESC_COOLDOWN type RLFW_RL_DESC value 'COOLDOWN'. "#EC NOTEXT
  constants C_RL_DESC_MAINTENANCE type RLFW_RL_DESC value 'MAINTENANCE'. "#EC NOTEXT
  constants C_RL_DESC_ERROR type RLFW_RL_DESC value 'ERROR'. "#EC NOTEXT
  constants C_RL_DESC_UNKNOWN type RLFW_RL_DESC value 'UNKNOWN'. "#EC NOTEXT

  class-methods GET_CURRENT_MODE
    importing
      !IV_TESTMODE type I default 0
    exporting
      !EV_MODE type I
      !EV_RC type I
      !EV_USER_TYPE type RL_USER_TYPE .
  class-methods SET_CURRENT_MODE
    importing
      !IV_TESTMODE type I default 0
      !IV_MODE type I
      !IV_USER_TYPE type RL_USER_TYPE default SPACE
      !IV_WORKFLOW type RLFW_WORKFLOW optional
    exporting
      !EV_RC type I .
  class-methods SET_CURRENT_MODE_CLIENT
    importing
      !IV_TESTMODE type I default 0
      !IV_MODE type I
      !IV_USER_TYPE type RL_USER_TYPE default SPACE
      !IV_WORKFLOW type RLFW_WORKFLOW optional
      !IV_CLIENT type MANDT optional
    exporting
      !EV_RC type I .
  class-methods GET_CURRENT_MODE_CLIENT
    importing
      !IV_TESTMODE type I default 0
      !IV_CLIENT type MANDT default SY-MANDT
    exporting
      !EV_MODE type I
      !EV_RC type I
      !EV_USER_TYPE type RL_USER_TYPE .
  class-methods GET_CURRENT_MODE_SYS
    importing
      !IV_TESTMODE type I default 0
    exporting
      !EV_MODE type I
      !EV_RC type I
      !EV_USER_TYPE type RL_USER_TYPE .
  class-methods MODE_TO_STRING
    importing
      !IV_MODE type RLFW_SYSTEM_RL
    returning
      value(RV_MODE_DESC) type RLFW_RL_DESC .
protected section.
private section.

  class-methods GET_CURRENT_MODE_UTYPE_PRIV
    importing
      !IV_TESTMODE type I
    exporting
      !EV_MODE type I
      !EV_RC type I
      !EV_USER_TYPE type RL_USER_TYPE .
  class-methods SET_CURRENT_MODE_UTYPE_PRIV
    importing
      !IV_TESTMODE type I
      !IV_MODE type I
      !IV_USER_TYPE type RL_USER_TYPE
    exporting
      !EV_RC type I .
ENDCLASS.



CLASS CL_RLFW_SYSTEM_RUNLEVEL IMPLEMENTATION.


  method get_current_mode.

    data lv_rc type i.

    get_current_mode_utype_priv( exporting iv_testmode  = iv_testmode
                                 importing ev_mode      = ev_mode
                                           ev_user_type = ev_user_type
                                           ev_rc        = lv_rc  ).
    ev_rc = lv_rc.

  endmethod.


  method get_current_mode_client.

    data: lv_rl_type type rlfw_clnt_rl-rl_type.

    clear: ev_mode, ev_user_type, ev_rc.

    if iv_testmode = 0.
      lv_rl_type = srlfw_rl_type_prod.
    else.
      lv_rl_type = srlfw_rl_type_test.
    endif.

    select single client_rl, user_type
                  from rlfw_clnt_rl
                  using client @iv_client
                  into ( @ev_mode, @ev_user_type )
                  where rl_type = @lv_rl_type.

    ev_rc = sy-subrc.

  endmethod.


  method get_current_mode_sys.

    data: lv_rl_type type rlfw_clnt_rl-rl_type.

    clear: ev_mode, ev_rc, ev_user_type.

    if iv_testmode = 0.
      lv_rl_type = srlfw_rl_type_prod.
    else.
      lv_rl_type = srlfw_rl_type_test.
    endif.

    select single system_rl, user_type
                  from rlfw_sys_rl
                  into ( @ev_mode, @ev_user_type )
                  where rl_type = @lv_rl_type.
    ev_rc = sy-subrc.

  endmethod.


  method get_current_mode_utype_priv
    by kernel module rlfwkgetcurrentmodeutype fail.
  endmethod.


  method mode_to_string.

    case iv_mode.

      when c_sys_rl_running.
        rv_mode_desc = c_rl_desc_running.
      when c_sys_rl_restrict_wd.
        rv_mode_desc = c_rl_desc_restrict_wd.
      when c_sys_rl_cooldown.
        rv_mode_desc = c_rl_desc_cooldown.
      when c_sys_rl_maintenance.
        rv_mode_desc = c_rl_desc_maintenance.
      when c_sys_rl_error.
        rv_mode_desc = c_rl_desc_error.
      when others.
        rv_mode_desc = c_rl_desc_unknown.

    endcase.

  endmethod.


  method set_current_mode.

    data lv_rc type i.

    set_current_mode_utype_priv( exporting iv_testmode  = iv_testmode
                                           iv_mode      = iv_mode
                                           iv_user_type = iv_user_type
                                 importing ev_rc        = lv_rc  ).
    ev_rc = lv_rc.

    " we reset the table buffer of table RLFW_SYS_RL after the call of the method
    " because we have to ensure that new data is committed before the refresh happens
    commit work.

  endmethod.


  method set_current_mode_client.

    data: lv_client type mandt,
          wa        type rlfw_clnt_rl.

    if iv_client is supplied.
      lv_client = iv_client.
    else.
      lv_client = sy-mandt.
    endif.
    wa-mandt     = lv_client.

    if iv_testmode = 0.
      wa-rl_type = SRLFW_RL_TYPE_PROD.
    else.
      wa-rl_type = SRLFW_RL_TYPE_TEST.
    endif.
    wa-client_rl = iv_mode.
    wa-user_type = iv_user_type.

    modify rlfw_clnt_rl client specified from @wa. "#EC CI_CLIENT
    ev_rc = sy-subrc.

    " we reset the table buffer of table RLFW_SYS_RL after the call of the method
    " because we have to ensure that new data is committed before the refresh happens
    commit work.

  endmethod.


  METHOD set_current_mode_utype_priv
    BY KERNEL MODULE rlfwKsetCurrentModeUtype fail.
  ENDMETHOD.
ENDCLASS.