CLASS zcl_im_sd_po_me_status_update DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES if_badi_interface.
    INTERFACES if_ex_me_process_po_cust.
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.

CLASS zcl_im_sd_po_me_status_update IMPLEMENTATION.
  METHOD if_ex_me_process_po_cust~process_item.
    DATA(ls_item) = im_item->get_data( ).
    IF im_item->get_data( )-ebeln  IS INITIAL
     AND im_item->get_header( )->get_data( )-zz1_zorderreason_pdh IN zcl_sd_sto_status_update=>gs_hm_data-order_reason_range.
      im_item->if_longtexts_mm~set_text(
          im_tdid      = zcl_sd_sto_status_update=>gc_text_id
          im_textlines = VALUE mmpur_t_textlines( ( tdline = zcl_sd_sto_status_update=>gc_sto_status-confirmed ) ) ).
    ENDIF.
    IF im_item->get_data(  )-zz1_menge_pdi = im_item->get_data(  )-menge.
      im_item->if_longtexts_mm~set_text(
        im_tdid      = zcl_sd_sto_status_update=>gc_text_id
        im_textlines = VALUE mmpur_t_textlines( ( tdline = zcl_sd_sto_status_update=>gc_sto_status-cancelled ) ) ).
    ENDIF.
  ENDMETHOD.

  METHOD if_ex_me_process_po_cust~check.
    RETURN.
  ENDMETHOD.

  METHOD if_ex_me_process_po_cust~close.
    RETURN.
  ENDMETHOD.

  METHOD if_ex_me_process_po_cust~fieldselection_header.
    RETURN.
  ENDMETHOD.

  METHOD if_ex_me_process_po_cust~fieldselection_header_refkeys.
    RETURN.
  ENDMETHOD.

  METHOD if_ex_me_process_po_cust~fieldselection_item.
    RETURN.
  ENDMETHOD.

  METHOD if_ex_me_process_po_cust~fieldselection_item_refkeys.
    RETURN.
  ENDMETHOD.

  METHOD if_ex_me_process_po_cust~initialize.
    RETURN.
  ENDMETHOD.

  METHOD if_ex_me_process_po_cust~open.
    RETURN.
  ENDMETHOD.

  METHOD if_ex_me_process_po_cust~post.
*    LOOP AT im_header->get_items( ) ASSIGNING FIELD-SYMBOL(<ls_po_item>).
*      IF <ls_po_item>-item->get_data( )-zz1_menge_pdi <= 0.
*        CONTINUE.
*      ENDIF.
**      zcl_sd_sto_status_update=>set_text_po_item( iv_po_number = <ls_po_item>-item->get_data( )-ebeln
**                                                  iv_po_item   = <ls_po_item>-item->get_data( )-ebelp
**                                                  iv_status    = zcl_sd_sto_status_update=>gc_sto_status-shipped ).
*    ENDLOOP.
    im_header->set_changed(  ).
    DATA(lv_changeable) = im_header->is_changeable(  ).
    LOOP AT im_header->get_items( ) ASSIGNING FIELD-SYMBOL(<ls_po_item>).
      IF <ls_po_item>-item->get_data( )-zz1_menge_pdi = <ls_po_item>-item->get_data( )-menge.
          <ls_po_item>-item->if_longtexts_mm~set_text(
              im_tdid      = zcl_sd_sto_status_update=>gc_text_id
              im_textlines = VALUE mmpur_t_textlines( ( tdline = zcl_sd_sto_status_update=>gc_sto_status-shipped ) ) ).
        <ls_po_item>-item->if_longtexts_mm~get_text( EXPORTING im_tdid      = zcl_sd_sto_status_update=>gc_text_id
                                                     IMPORTING ex_textlines = DATA(lt_textlines) ).
        <ls_po_item>-item->if_longtexts_mm~adopt_text( im_tdid = zcl_sd_sto_status_update=>gc_text_id ).

      ENDIF.
    ENDLOOP.
  ENDMETHOD.

  METHOD if_ex_me_process_po_cust~process_account.
    RETURN.
  ENDMETHOD.

  METHOD if_ex_me_process_po_cust~process_header.
    RETURN.
  ENDMETHOD.

  METHOD if_ex_me_process_po_cust~process_schedule.
    RETURN.
  ENDMETHOD.
ENDCLASS.