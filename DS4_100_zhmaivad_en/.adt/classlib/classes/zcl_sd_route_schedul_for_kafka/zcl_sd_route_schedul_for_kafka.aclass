CLASS zcl_sd_route_schedul_for_kafka DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES if_oo_adt_classrun .

    TYPES:
      gtyp_range_departure          TYPE RANGE OF t001w-werks,
      gtyp_range_destination        TYPE RANGE OF t001w-werks,
      gtyp_range_shipping_point     TYPE  RANGE OF tvst-vstel,
      gtyp_range_shipping_condition TYPE  RANGE OF trolz-vsbed.

    METHODS get_data
      IMPORTING
        it_departures          TYPE gtyp_range_departure OPTIONAL
        it_destinations        TYPE gtyp_range_destination OPTIONAL
        it_shipping_points     TYPE gtyp_range_shipping_point OPTIONAL
        it_shipping_conditions TYPE gtyp_range_shipping_condition OPTIONAL .
    METHODS send_to_kafka .
  PROTECTED SECTION.
  PRIVATE SECTION.

    DATA:
      mt_dncreationleadtimes   TYPE TABLE OF zsd_i_dncreationleadtimes .
    DATA:
      mt_dnprocessingleadtimes TYPE TABLE OF zsd_i_dnprocessingleadtimes .
    DATA:
      mt_dnloadingleadtimes    TYPE TABLE OF zsd_i_dnloadingleadtimes .
    DATA:
      mt_vasleadtimes          TYPE TABLE OF zsd_i_vasleadtimes .
    DATA:
      mts_outboundschedulinglt TYPE SORTED TABLE OF zsd_i_outboundschedulinglt WITH NON-UNIQUE KEY departuresite shippingpoint .
    DATA mt_value TYPE zsd_tt_outboundschedulinglt .
    CONSTANTS mc_event_name TYPE string VALUE 'Update' ##NO_TEXT.
    CONSTANTS mc_kafka_topic TYPE string VALUE 'csd_fulfilment.s4hana.event.outboundscheduling' ##NO_TEXT.

    METHODS: get_db_data
      IMPORTING
        it_departures          TYPE gtyp_range_departure OPTIONAL
        it_destinations        TYPE gtyp_range_destination OPTIONAL
        it_shipping_points     TYPE gtyp_range_shipping_point OPTIONAL
        it_shipping_conditions TYPE gtyp_range_shipping_condition OPTIONAL,
      get_payload.
ENDCLASS.



CLASS zcl_sd_route_schedul_for_kafka IMPLEMENTATION.


  METHOD get_data.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* ZHMAIVAD     | 03.01.2023 | 16554     : [Feature] [Platform] [Custom *
*              |            | DS4K939267                               *
*----------------------------------------------------------------------*
    get_db_data( it_departures          = it_departures
                 it_destinations        = it_destinations
                 it_shipping_points     = it_shipping_points
                 it_shipping_conditions = it_shipping_conditions ).

    get_payload(  ).
  ENDMETHOD.


  METHOD get_db_data.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* ZHMAIVAD     | 03.01.2023 | 16554     : [Feature] [Platform] [Custom *
*              |            | DS4K939267                               *
*----------------------------------------------------------------------*
    SELECT DISTINCT departuresite, shippingpoint, destinationsite, shippingcondition, destinationsitelt
      FROM zsd_i_outboundschedulinglt
      INTO CORRESPONDING FIELDS OF TABLE @mts_outboundschedulinglt ##TOO_MANY_ITAB_FIELDS
      WHERE departuresite IN @it_departures AND
            destinationsite IN @it_destinations AND
            shippingpoint IN @it_shipping_points AND
            shippingcondition IN @it_shipping_conditions
      ORDER BY departuresite, shippingpoint, destinationsite, shippingcondition, destinationsitelt. "#EC CI_SUBRC "#EC CI_NOWHERE

    SELECT *
      FROM zsd_i_dncreationleadtimes AS ltimes
      JOIN zsd_i_outboundschedulinglt AS shedul ON ltimes~departuresite = shedul~departuresite AND
                                                   ltimes~shippingpoint = shedul~shippingpoint
      WHERE shedul~departuresite IN @it_departures AND
            destinationsite IN @it_destinations AND
            shedul~shippingpoint IN @it_shipping_points AND
            shedul~shippingcondition IN @it_shipping_conditions
      INTO CORRESPONDING FIELDS OF TABLE @mt_dncreationleadtimes. "#EC CI_SUBRC "#EC CI_NOWHERE

    SELECT *
      FROM zsd_i_dnprocessingleadtimes AS ltimes
      JOIN zsd_i_outboundschedulinglt AS shedul ON ltimes~departuresite = shedul~departuresite AND
                                                   ltimes~shippingpoint = shedul~shippingpoint
      WHERE shedul~departuresite IN @it_departures AND
            destinationsite IN @it_destinations AND
            shedul~shippingpoint IN @it_shipping_points AND
            shedul~shippingcondition IN @it_shipping_conditions
      INTO CORRESPONDING FIELDS OF TABLE @mt_dnprocessingleadtimes. "#EC CI_SUBRC "#EC CI_NOWHERE

    SELECT *
      FROM zsd_i_dnloadingleadtimes AS ltimes
      JOIN zsd_i_outboundschedulinglt AS shedul ON ltimes~departuresite = shedul~departuresite AND
                                                   ltimes~shippingpoint = shedul~shippingpoint
      WHERE shedul~departuresite IN @it_departures AND
            destinationsite IN @it_destinations AND
            shedul~shippingpoint IN @it_shipping_points AND
            shedul~shippingcondition IN @it_shipping_conditions
      INTO CORRESPONDING FIELDS OF TABLE @mt_dnloadingleadtimes. "#EC CI_SUBRC "#EC CI_NOWHERE

    SELECT *
      FROM zsd_i_vasleadtimes AS ltimes
      JOIN zsd_i_outboundschedulinglt AS shedul ON ltimes~departuresite = shedul~departuresite AND
                                                   ltimes~shippingpoint = shedul~shippingpoint
      WHERE shedul~departuresite IN @it_departures AND
            destinationsite IN @it_destinations AND
            shedul~shippingpoint IN @it_shipping_points AND
            shedul~shippingcondition IN @it_shipping_conditions
      INTO CORRESPONDING FIELDS OF TABLE @mt_vasleadtimes. "#EC CI_SUBRC "#EC CI_NOWHERE
  ENDMETHOD.


  METHOD if_oo_adt_classrun~main.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* ZHMAIVAD     | 08.01.2023 | 16554     : [Feature] [Platform] [Custom *
*              |            | DS4K939267                               *
*----------------------------------------------------------------------*

    send_to_kafka( ).
  ENDMETHOD.


  METHOD send_to_kafka.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* ZHMAIVAD     | 09.01.2023 | 16554     : [Feature] [Platform] [Custom *
*              |            | DS4K939267                               *
*----------------------------------------------------------------------*
    IF lines( mt_value ) = 0.
      MESSAGE w002(zcm_sd_schedul_rout).
      RETURN.
    ENDIF.

    LOOP AT mt_value ASSIGNING FIELD-SYMBOL(<ls_value>).
      DATA(ls_kafka_key) = VALUE zpe_s_kafka_key( event_name = mc_event_name
                                              event_key = |{ condense( val = |{ <ls_value>-departuresite ALPHA = OUT }| ) }_{ <ls_value>-shippingpoint }| ).

      DATA(ls_kafka_data) = VALUE zsd_s_aif_out_scheduling_kafka( topic = mc_kafka_topic
                                                                  key = ls_kafka_key
                                                                  value-metadata = CORRESPONDING #( ls_kafka_key )
                                                                  value-payload  = <ls_value> ).

      TRY.
          /aif/cl_enabler_xml=>transfer_to_aif( ls_kafka_data ).

        ##CATCH_ALL CATCH cx_root INTO DATA(lo_cx).

          MESSAGE lo_cx->get_longtext( ) TYPE 'I'.
      ENDTRY.
    ENDLOOP.

    MESSAGE s001(zcm_sd_schedul_rout).
  ENDMETHOD.


  METHOD get_payload.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* ZHMAIVAD     | 06.02.2023 | 16554     : [Feature] [Platform] [Custom *
*              |            | DS4K939267                               *
*----------------------------------------------------------------------*

    CHECK lines( mts_outboundschedulinglt ) > 0.

    mt_value = CORRESPONDING #( mts_outboundschedulinglt ).
    DELETE ADJACENT DUPLICATES FROM mt_value COMPARING departuresite shippingpoint.

    LOOP AT mt_value ASSIGNING FIELD-SYMBOL(<ls_outboundschedulinglt>).
      LOOP AT mts_outboundschedulinglt ASSIGNING FIELD-SYMBOL(<ls_outboundschedulinglt_all>) "#EC CI_NESTED
                                                                              WHERE departuresite = <ls_outboundschedulinglt>-departuresite AND
                                                                              shippingpoint = <ls_outboundschedulinglt>-shippingpoint.

        READ TABLE <ls_outboundschedulinglt>-leadtimes-transportationlt ASSIGNING FIELD-SYMBOL(<ls_transportationlt>) "#EC CI_STDSEQ
                                                                        WITH KEY destinationsite = <ls_outboundschedulinglt_all>-destinationsite.
        IF sy-subrc <> 0.
          APPEND INITIAL LINE TO <ls_outboundschedulinglt>-leadtimes-transportationlt ASSIGNING <ls_transportationlt>.
        ENDIF.
        <ls_transportationlt>-destinationsite = <ls_outboundschedulinglt_all>-destinationsite.

        APPEND INITIAL LINE TO <ls_transportationlt>-destinationlt ASSIGNING FIELD-SYMBOL(<ls_destinationlt>).
        <ls_destinationlt>-shippingcondition = <ls_outboundschedulinglt_all>-shippingcondition.
        <ls_destinationlt>-destinationsitelt = <ls_outboundschedulinglt_all>-destinationsitelt.
      ENDLOOP.

      SELECT distributionchannel, ordertype, orderreason, dncreationlt
        FROM @mt_dncreationleadtimes AS _leadtimes ##ITAB_KEY_IN_SELECT
        WHERE departuresite = @<ls_outboundschedulinglt>-departuresite AND shippingpoint = @<ls_outboundschedulinglt>-shippingpoint
        INTO CORRESPONDING FIELDS OF TABLE @<ls_outboundschedulinglt>-leadtimes-dncreationleadtimes. "#EC CI_SUBRC

      SELECT distributionchannel, ordertype, orderreason, dnprocessinglt
        FROM @mt_dnprocessingleadtimes AS _leadtimes ##ITAB_KEY_IN_SELECT
        WHERE departuresite = @<ls_outboundschedulinglt>-departuresite AND shippingpoint = @<ls_outboundschedulinglt>-shippingpoint
        INTO CORRESPONDING FIELDS OF TABLE @<ls_outboundschedulinglt>-leadtimes-dnprocessingleadtimes. "#EC CI_SUBRC

      SELECT distributionchannel, shippingcondition, ordertype, orderreason, dnloadinglt
        FROM @mt_dnloadingleadtimes AS _leadtimes ##ITAB_KEY_IN_SELECT
        WHERE departuresite = @<ls_outboundschedulinglt>-departuresite AND shippingpoint = @<ls_outboundschedulinglt>-shippingpoint
        INTO CORRESPONDING FIELDS OF TABLE @<ls_outboundschedulinglt>-leadtimes-dnloadingleadtimes. "#EC CI_SUBRC

      SELECT vascode,vaslt
        FROM @mt_vasleadtimes AS _leadtimes ##ITAB_KEY_IN_SELECT
        WHERE departuresite = @<ls_outboundschedulinglt>-departuresite AND shippingpoint = @<ls_outboundschedulinglt>-shippingpoint
        INTO CORRESPONDING FIELDS OF TABLE @<ls_outboundschedulinglt>-leadtimes-vasleadtimes. "#EC CI_SUBRC
    ENDLOOP.
  ENDMETHOD.
ENDCLASS.