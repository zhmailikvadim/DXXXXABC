FUNCTION fclm_mm_staging_add
  IMPORTING
    VALUE(it_delta) TYPE fclm_t_mm_delta
    VALUE(iv_staging) TYPE fclm_staging DEFAULT '2'.






  DATA: lv_cloud TYPE boolean VALUE space.

  CHECK it_delta[] IS NOT INITIAL.
  LOOP AT it_delta ASSIGNING FIELD-SYMBOL(<fs_delta>).
    READ TABLE gt_staging_mm
      TRANSPORTING NO FIELDS
      WITH TABLE KEY bukrs = <fs_delta>-bukrs
                     ebeln = <fs_delta>-ebeln
                     banfn = <fs_delta>-banfn
                     staging = iv_staging .
    IF sy-subrc NE 0.
      DATA ls_staging LIKE LINE OF gt_staging_mm.
      MOVE-CORRESPONDING <fs_delta> TO ls_staging.
      ls_staging-staging = iv_staging.
      INSERT ls_staging INTO TABLE gt_staging_mm.
    ENDIF.
  ENDLOOP.

*  " Cloud edition
*  CALL METHOD cl_cos_utilities=>is_s4h_cloud
*      RECEIVING
*        rv_is_s4h_cloud = lv_cloud.
*
*  IF lv_cloud IS INITIAL.
    PERFORM submit_staging_mm ON COMMIT.
*  ELSE.
*    PERFORM submit_staging_mm..
*  ENDIF.

ENDFUNCTION.

FORM submit_staging_mm.
  IF gt_staging_mm[] IS NOT INITIAL.
    data lv_timestmp type timestampl.
    GET TIME STAMP FIELD lv_timestmp.
    LOOP AT gt_staging_mm ASSIGNING FIELD-SYMBOL(<fs_delta>).
      <fs_delta>-created_at = lv_timestmp.
    ENDLOOP.
    INSERT fclm_mm_staging FROM TABLE gt_staging_mm ACCEPTING DUPLICATE KEYS.
    CLEAR: gt_staging_mm.
  ENDIF.
ENDFORM.