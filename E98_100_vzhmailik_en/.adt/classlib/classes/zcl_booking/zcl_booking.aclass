CLASS zcl_booking DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES zif_output .
    INTERFACES zif_cud .

    DATA ms_booking TYPE zabc_d_booking .

    METHODS constructor
      IMPORTING
        !im_book_id          TYPE zabc_book_id OPTIONAL
        !im_person_id        TYPE zabc_person_id OPTIONAL
        !im_booking_status   TYPE zabc_booking_status OPTIONAL
        !im_booking_beg_date TYPE zabc_booking_beg_date OPTIONAL
        !im_booking_beg_time TYPE zabc_booking_beg_time OPTIONAL
        !im_booking_end_date TYPE zabc_booking_end_date OPTIONAL
        !im_booking_end_time TYPE zabc_booking_end_time OPTIONAL
        !im_booking_id       TYPE zabc_booking_id OPTIONAL .
    METHODS return_the_book .
  PROTECTED SECTION.
  PRIVATE SECTION.

    METHODS validate_data
      EXCEPTIONS
        dates_wrong .
ENDCLASS.



CLASS zcl_booking IMPLEMENTATION.


  METHOD constructor.
    ms_booking-booking_id = COND #( WHEN im_booking_id IS NOT SUPPLIED THEN zcl_library=>get_next_number( ir_object = me )
                                    WHEN im_booking_id IS SUPPLIED THEN im_booking_id ).
    ms_booking-booking_status = 2.
    ms_booking-book_id = im_book_id.
    ms_booking-person_id = im_person_id.

    ms_booking-booking_status =   COND #( WHEN im_booking_status IS INITIAL THEN 2
                                          WHEN im_booking_status IS NOT INITIAL THEN im_booking_status ).

    ms_booking-booking_beg_date = COND #( WHEN im_booking_beg_date IS INITIAL THEN sy-datum
                                          WHEN im_booking_beg_date IS NOT INITIAL THEN im_booking_beg_date ).

    ms_booking-booking_beg_time = COND #( WHEN im_booking_beg_time IS INITIAL THEN sy-uzeit
                                          WHEN im_booking_beg_time IS NOT INITIAL THEN im_booking_beg_time ).

    ms_booking-booking_end_date = COND #( WHEN im_booking_end_date IS INITIAL THEN sy-datum + 10
                                          WHEN im_booking_end_date IS NOT INITIAL THEN im_booking_end_date ).

    ms_booking-booking_end_time = COND #( WHEN im_booking_end_time IS INITIAL THEN sy-uzeit
                                          WHEN im_booking_end_time IS NOT INITIAL THEN im_booking_end_time ).
  ENDMETHOD.


  METHOD zif_output~display_data.
    WRITE:  / 'Booking ID:', ms_booking-booking_id, 'Person ID: ', ms_booking-person_id, 'Book ID:', ms_booking-book_id.
  ENDMETHOD.


  METHOD return_the_book.
    ms_booking-booking_status = 1.
    ms_booking-booking_end_date = sy-datum.
    ms_booking-booking_end_time = sy-uzeit.

    zif_cud~update_in_library( ).
  ENDMETHOD.


  METHOD validate_data.
    IF ms_booking-booking_beg_date > ms_booking-booking_end_date OR
      ( ms_booking-booking_beg_date =  ms_booking-booking_end_date AND
       ms_booking-booking_beg_time > ms_booking-booking_end_time ).

      RAISE dates_wrong.
    ENDIF.

    DATA(lo_library) = zcl_library=>get_instance( ).


    lo_library->check_id_exist( EXPORTING im_id            = ms_booking-book_id
                                          ir_object        = lo_library->mo_book
                                          im_expected_true = 'X' ).

    lo_library->check_id_exist( EXPORTING im_id            = ms_booking-person_id
                                          ir_object        = lo_library->mo_reader
                                          im_expected_true = 'X' ).
  ENDMETHOD.


  METHOD zif_cud~add_to_library.
*    TRY.

    validate_data( EXCEPTIONS dates_wrong = 1 ).
    IF sy-subrc <> 0.
      MESSAGE w005(zmc_abc_oop).
    ENDIF.

*    CATCH zcx_library INTO DATA(r_exception).
*       MESSAGE r_exception->get_text( ) TYPE 'W'.
*       EXIT.
*    ENDTRY.

    ms_booking-booking_id = zcl_library=>get_next_number( ir_object = me ).
    ms_booking-booking_status = 2.

    RAISE EVENT zif_cud~change_entity EXPORTING ex_entity = ms_booking
                                                ex_insert = 'X'.
  ENDMETHOD.


  METHOD zif_cud~delete_from_library.
    RAISE EVENT zif_cud~change_entity EXPORTING ex_entity = ms_booking
                                                ex_delete = 'X'.
  ENDMETHOD.


  METHOD zif_cud~update_in_library.

    TRY.
        validate_data( EXCEPTIONS dates_wrong = 1 ).
        IF sy-subrc <> 0.
          MESSAGE w005(zmc_abc_oop).
        ENDIF.

      CATCH zcx_library INTO DATA(r_exception).
        MESSAGE r_exception->get_text( ) TYPE 'W'.
        EXIT.
    ENDTRY.

    RAISE EVENT zif_cud~change_entity EXPORTING ex_entity = ms_booking
                                                ex_update = 'X'.
  ENDMETHOD.
ENDCLASS.