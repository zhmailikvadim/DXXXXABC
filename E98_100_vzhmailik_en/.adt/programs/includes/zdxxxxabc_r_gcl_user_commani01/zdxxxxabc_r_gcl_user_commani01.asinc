*----------------------------------------------------------------------*
***INCLUDE ZDXXXXABC_R_GCL_USER_COMMANI01.
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0200  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0200 INPUT.
  CASE sy-ucomm.
    WHEN 'EXIT'.
      SET SCREEN 0.
      LEAVE SCREEN.
    WHEN 'BACK'.
      SET SCREEN 0.
      LEAVE SCREEN.
    WHEN 'CANCEL'.
      LEAVE PROGRAM.
    WHEN 'BOOKINGS'.
      lo_library->display_list( iv_booking = 'X' ).
    WHEN 'BOOKS'.
      lo_library->display_list( iv_book = 'X' ).
    WHEN 'READERS'.
      lo_library->display_list( iv_reader = 'X' ).
    WHEN 'AUTHORS'.
      lo_library->display_list( iv_author = 'X' ).
    WHEN 'NEW_BOOK'.
      FREE lo_library->mo_book.
    WHEN 'INSERT_BOOK'.
      lo_library->mo_book->zif_cud~add_to_library( ).
    WHEN 'SAVE_BOOK'.
      lo_library->mo_book->zif_cud~update_in_library( ).
    WHEN 'DELETE_BOOK'.
      lo_library->mo_book->zif_cud~delete_from_library( ).
    WHEN 'INSERT_BOOKING'.
      lo_library->mo_booking->zif_cud~add_to_library( ).
      FREE: lo_library->mo_booking, lo_library->mo_book, lo_library->mo_reader.
    WHEN 'UPDATE_TERM'.
      lo_library->mo_booking->zif_cud~update_in_library( ).
    WHEN 'DELETE_BOOKING'.
      lo_library->mo_booking->zif_cud~delete_from_library( ).
    WHEN 'RETURN_BOOK'.
      lo_library->mo_booking->return_the_book( ).
    WHEN 'NEW_AUTHOR'.
      FREE lo_library->mo_author.
    WHEN 'INSERT_AUTHOR'.
      lo_library->mo_author->zif_cud~add_to_library( ).
    WHEN 'SAVE_AUTHOR'.
      lo_library->mo_author->zif_cud~update_in_library( ).
    WHEN 'DELETE_AUTHOR'.
      lo_library->mo_author->zif_cud~delete_from_library( ).
    WHEN 'NEW_READER'.
      FREE lo_library->mo_reader.
    WHEN 'INSERT_READER'.
      lo_library->mo_reader->zif_cud~add_to_library( ).
    WHEN 'SAVE_READER'.
      lo_library->mo_reader->zif_cud~update_in_library( ).
    WHEN 'DELETE_READER'.
      lo_library->mo_reader->zif_cud~delete_from_library( ).
  ENDCASE.
ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  CHECK_BOOK_ID  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE check_book_id INPUT.
  CHECK lo_library->mo_book IS BOUND.
  CHECK lo_library->mo_book->ms_book-book_id  IS NOT INITIAL.

  IF sy-ucomm IS INITIAL.
    DATA(lo_book) = lo_library->get_obj_book_via_id( lo_library->mo_book->ms_book-book_id ).
    DATA(lo_author_for_book) = lo_library->get_obj_author_via_id( lo_book->ms_book-author_id ).
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  CHECK_AUTHOR_ID  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE check_author_id INPUT.
  CHECK lo_library->mo_author IS BOUND.
  CHECK lo_library->mo_author->id IS NOT INITIAL.

  IF sy-ucomm IS INITIAL.
    DATA(lo_author) = lo_library->get_obj_author_via_id( lo_library->mo_author->id ).
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  CHECK_READER_ID  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE check_reader_id INPUT.
  CHECK lo_library->mo_reader IS BOUND.
  CHECK lo_library->mo_reader->id IS NOT INITIAL.

  IF sy-ucomm IS INITIAL.
    DATA(lo_reader) = lo_library->get_obj_reader_via_id( lo_library->mo_reader->id ).
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  CHECK_BOOKING_ID  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE check_booking_id INPUT.
  CHECK lo_library->mo_booking IS BOUND.
  CHECK lo_library->mo_booking->ms_booking-booking_id IS NOT INITIAL.

  IF sy-ucomm IS INITIAL.
    DATA(lo_booking) = lo_library->get_obj_booking_via_id( lo_library->mo_booking->ms_booking-booking_id ).
    DATA(lo_book_for_booking) = lo_library->get_obj_book_via_id( lo_booking->ms_booking-book_id ).
    DATA(lo_reader_for_booking) = lo_library->get_obj_reader_via_id( lo_booking->ms_booking-person_id ).
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  CHECK_BOOKING_BOOK_ID  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE check_booking_book_id INPUT.
  CHECK lo_library->mo_booking IS BOUND.
  CHECK lo_library->mo_booking->ms_booking-book_id IS NOT INITIAL.

  IF sy-ucomm IS INITIAL.
    lo_book_for_booking = lo_library->get_obj_book_via_id( lo_library->mo_booking->ms_booking-book_id ).
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  CHECK_BOOKING_READER_ID  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE check_booking_reader_id INPUT.
  CHECK lo_library->mo_booking IS BOUND.
  CHECK lo_library->mo_booking->ms_booking-person_id IS NOT INITIAL.

  IF sy-ucomm IS INITIAL.
    lo_reader_for_booking = lo_library->get_obj_reader_via_id( lo_library->mo_booking->ms_booking-person_id ).
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  CHECK_AUTHORID_FOR_BOOK  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE check_authorid_for_book INPUT.
  CHECK lo_library->mo_book IS BOUND.
  CHECK lo_library->mo_book->ms_book-author_id IS NOT INITIAL.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  FINALIZE_CHANGES  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE finalize_changes INPUT.
  IF lo_library->mo_booking IS NOT BOUND.
    lo_library->mo_booking = NEW #( im_id = '0' ).
  ENDIF.

  IF lo_library->mo_book IS NOT BOUND.
    lo_library->mo_book = NEW #( im_id = '0' ).
  ENDIF.

  IF lo_library->mo_reader IS NOT BOUND.
    lo_library->mo_reader = NEW #( im_id = '0' ).
  ENDIF.

  IF lo_library->mo_author IS NOT BOUND.
    lo_library->mo_author = NEW #( im_id = '0' ).
  ENDIF.

  IF lo_book IS BOUND.
    lo_library->mo_book = lo_book.
    FREE lo_book.
  ENDIF.

  IF lo_author IS BOUND.
    lo_library->mo_author = lo_author.
    FREE lo_author.
  ENDIF.

  IF lo_reader IS BOUND.
    lo_library->mo_reader = lo_reader.
    FREE lo_reader.
  ENDIF.

  IF lo_booking IS BOUND.
    lo_library->mo_booking = lo_booking.
    FREE lo_booking.
  ENDIF.

  IF lo_book_for_booking IS BOUND.
    lo_library->mo_book_for_booking = lo_book_for_booking.
    FREE lo_book_for_booking.
  ENDIF.

  IF lo_reader_for_booking IS BOUND.
    lo_library->mo_reader_for_booking = lo_reader_for_booking.
    FREE lo_reader_for_booking.
  ENDIF.

  IF lo_author_for_book IS BOUND.
    lo_library->mo_author_for_book = lo_author_for_book.
    FREE lo_author_for_book.
  ENDIF.
ENDMODULE.

*&SPWIZARD: INPUT MODULE FOR TS 'LIBRARY_TS'. DO NOT CHANGE THIS LINE!
*&SPWIZARD: GETS ACTIVE TAB
MODULE library_ts_active_tab_get INPUT.
  ok_code = sy-ucomm.
  CASE ok_code.
    WHEN c_library_ts-tab1.
      g_library_ts-pressed_tab = c_library_ts-tab1.
    WHEN c_library_ts-tab2.
      g_library_ts-pressed_tab = c_library_ts-tab2.
    WHEN c_library_ts-tab3.
      g_library_ts-pressed_tab = c_library_ts-tab3.
    WHEN c_library_ts-tab4.
      g_library_ts-pressed_tab = c_library_ts-tab4.
    WHEN OTHERS.
*&SPWIZARD:      DO NOTHING
  ENDCASE.
ENDMODULE.