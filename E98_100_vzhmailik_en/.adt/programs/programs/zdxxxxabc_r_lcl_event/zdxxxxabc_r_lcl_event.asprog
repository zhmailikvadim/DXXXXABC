*&---------------------------------------------------------------------*
*& Report zdxxxxabc_r_lcl
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT zdxxxxabc_r_lcl_event.
INTERFACE lif_output.
  METHODS:display_data.
ENDINTERFACE.
CLASS lcl_person DEFINITION.
  PUBLIC SECTION.
    DATA person_id TYPE zabc_person_id.
    INTERFACES:lif_output.
    METHODS:
      constructor IMPORTING im_id         TYPE zabc_person_id
                            im_first_name TYPE zabc_first_name
                            im_last_name  TYPE zabc_last_name
                            im_birth_date TYPE zabc_birth_date,

      get_info RETURNING VALUE(re_info) TYPE string.

  PROTECTED SECTION.
    DATA:
      id         TYPE zabc_person_id,
      first_name TYPE zabc_first_name,
      last_name  TYPE zabc_last_name,
      birth_date TYPE zabc_birth_date.
ENDCLASS.
CLASS lcl_author DEFINITION INHERITING FROM lcl_person.
  PUBLIC SECTION.
    METHODS:
      constructor IMPORTING im_id         TYPE zabc_person_id
                            im_first_name TYPE zabc_first_name
                            im_last_name  TYPE zabc_last_name
                            im_birth_date TYPE zabc_birth_date
                            im_country    TYPE land1,
      get_info REDEFINITION.
  PRIVATE SECTION.
    DATA:
          country TYPE land1.
ENDCLASS.
CLASS lcl_reader DEFINITION INHERITING FROM lcl_person.
  PUBLIC SECTION.
    METHODS:
      constructor IMPORTING im_id           TYPE zabc_person_id
                            im_first_name   TYPE zabc_first_name
                            im_last_name    TYPE zabc_last_name
                            im_birth_date   TYPE zabc_birth_date
                            im_phone_number TYPE zabc_phone_number,
      get_info REDEFINITION.

  PROTECTED SECTION.
    DATA:
          phone_number TYPE zabc_phone_number.
ENDCLASS.
CLASS lcl_booking DEFINITION.
  PUBLIC SECTION.
    EVENTS: goldenreader_add_bonus EXPORTING VALUE(ex_point) TYPE i.
    INTERFACES: lif_output.
    TYPES:
      BEGIN OF t_person,
        person_id    TYPE zabc_person_id,
        birth_date   TYPE zabc_birth_date,
        phone_number TYPE zabc_phone_number,
      END OF t_person,

      BEGIN OF t_book,
        book_id   TYPE zabc_book_id,
        book_name TYPE zabc_book_name,
        author_id TYPE zabc_author_id,
        pages_num TYPE zabc_pages,
        copy_qty  TYPE zabc_copy_qty,
      END OF t_book.

    DATA:
         booking_id TYPE zabc_booking_id.

    CLASS-DATA:
                booking_count TYPE i.

    METHODS:
      constructor IMPORTING im_booking_id   TYPE zabc_booking_id OPTIONAL
                            im_person_id    TYPE zabc_person_id  OPTIONAL
                            im_goldenreader TYPE flag            OPTIONAL,
      set_booking_id IMPORTING im_id        TYPE zabc_booking_id
                               im_person_id TYPE zabc_person_id OPTIONAL,
      get_booking_cost IMPORTING im_days        TYPE i
                       RETURNING VALUE(re_cost) TYPE f.

    CLASS-METHODS:
      get_count RETURNING VALUE(re_count) TYPE i,
      increase_count.

  PRIVATE SECTION.
    METHODS:
      set_person_id IMPORTING im_id TYPE zabc_person_id.

    DATA:
      book_id          TYPE zabc_book_id,
      person_id        TYPE zabc_person_id,
      booking_status   TYPE zabc_booking_status,
      booking_beg_date TYPE zabc_booking_beg_date,
      booking_beg_time TYPE zabc_booking_beg_time,
      booking_end_date TYPE zabc_booking_end_date,
      booking_end_time TYPE zabc_booking_end_time.

ENDCLASS.
CLASS lcl_goldenreader DEFINITION INHERITING FROM lcl_reader.
  PUBLIC SECTION.
    METHODS:
      constructor IMPORTING im_id           TYPE zabc_person_id
                            im_first_name   TYPE zabc_first_name
                            im_last_name    TYPE zabc_last_name
                            im_birth_date   TYPE zabc_birth_date
                            im_phone_number TYPE zabc_phone_number
                            im_bonus_point  TYPE i,
      get_info REDEFINITION,
      add_bonus_point FOR EVENT goldenreader_add_bonus OF lcl_booking IMPORTING ex_point.
  PRIVATE SECTION.
    DATA:
          bonus_point TYPE i.
ENDCLASS.
CLASS lcl_person IMPLEMENTATION.
  METHOD lif_output~display_data.
    WRITE / get_info( ).
  ENDMETHOD.
  METHOD constructor.
    id = im_id.
    first_name = im_first_name.
    last_name = im_last_name.
    birth_date = im_birth_date.
    person_id = im_id.
  ENDMETHOD.
  METHOD get_info.
    re_info = first_name && ' ' && last_name && ', Birth Date: ' && birth_date.
  ENDMETHOD.
ENDCLASS.
CLASS lcl_author IMPLEMENTATION.
  METHOD constructor.
    super->constructor(
      im_id         = im_id
      im_first_name = im_first_name
      im_last_name  = im_last_name
      im_birth_date = im_birth_date ).

    country    = im_country.
  ENDMETHOD.
  METHOD get_info.
    re_info = super->get_info( ) && ', Country: ' && country.
  ENDMETHOD.
ENDCLASS.
CLASS lcl_reader IMPLEMENTATION.
  METHOD constructor.
    super->constructor(
      im_id         = im_id
      im_first_name = im_first_name
      im_last_name  = im_last_name
      im_birth_date = im_birth_date ).

    phone_number = im_phone_number.
  ENDMETHOD.
  METHOD get_info.
    re_info = super->get_info( ) && ', Phone: ' && phone_number.
  ENDMETHOD.
ENDCLASS.
CLASS lcl_goldenreader IMPLEMENTATION.
  METHOD constructor.
    super->constructor(
      im_id           = im_id
      im_first_name   = im_first_name
      im_last_name    = im_last_name
      im_birth_date   = im_birth_date
      im_phone_number = im_phone_number ).

    bonus_point = im_bonus_point.
  ENDMETHOD.
  METHOD get_info.
    re_info = super->get_info( ) && ', bonus_point: ' && bonus_point.
  ENDMETHOD.
  METHOD add_bonus_point.
    bonus_point = bonus_point + ex_point.
  ENDMETHOD.
ENDCLASS.
CLASS lcl_booking IMPLEMENTATION.
  METHOD constructor.
    booking_id = im_booking_id.
    person_id = im_person_id.
    increase_count( ).
    IF im_goldenreader = abap_true.
      RAISE EVENT goldenreader_add_bonus EXPORTING ex_point = 1.
    ENDIF.
  ENDMETHOD.
  METHOD get_count.
    re_count = booking_count.
  ENDMETHOD.
  METHOD set_booking_id.
    booking_id = im_id.

    increase_count( ).

    set_person_id( im_id = im_person_id ).
  ENDMETHOD.
  METHOD increase_count.
    booking_count = booking_count + 1.
  ENDMETHOD.
  METHOD set_person_id.
    person_id = im_id.
  ENDMETHOD.
  METHOD get_booking_cost.
    re_cost = im_days * '0.50'.
  ENDMETHOD.
  METHOD lif_output~display_data.
    WRITE:  / 'Booking ID:', booking_id, 'Person ID: ', person_id.
  ENDMETHOD.
ENDCLASS.

DATA:
  lo_booking       TYPE REF TO lcl_booking,
  lo_booking2      TYPE REF TO lcl_booking,
  lv_booking_count TYPE i,
  lv_info          TYPE string,
  lv_bonus_point   TYPE i.

DATA:
  lo_person       TYPE REF TO lcl_person,
  lo_goldenreader TYPE REF TO lcl_goldenreader,
  lt_lif_output   TYPE TABLE OF REF TO  lif_output.

START-OF-SELECTION.

  lo_goldenreader = NEW #(
    im_id           = 1002
    im_first_name   = 'Mark'
    im_last_name    = 'Huston'
    im_birth_date   = '20120612'
    im_phone_number = '41295636987'
    im_bonus_point  = '5' ).

  SET HANDLER lo_goldenreader->add_bonus_point FOR ALL INSTANCES.

  lo_person = lo_goldenreader.

  lo_booking = NEW #(
    im_booking_id   = '1001'
    im_person_id    = lo_person->person_id
    im_goldenreader = 'X' ).

  lo_booking2 = NEW #(
    im_booking_id   = '1002'
    im_person_id    = lo_person->person_id
    im_goldenreader = 'X' ).

  lv_booking_count = lcl_booking=>booking_count.
  lv_info          = lo_goldenreader->get_info( ).

  APPEND lo_booking TO lt_lif_output.
  APPEND lo_booking2 TO lt_lif_output.
  APPEND lo_goldenreader TO lt_lif_output.

  LOOP AT lt_lif_output ASSIGNING FIELD-SYMBOL(<fs_lif_output>).
    <fs_lif_output>->display_data( ).
  ENDLOOP.