class CL_HRRCF_M_CAND_OVERVIEW_UI definition
  public
  inheriting from CL_WD_COMPONENT_ASSISTANCE
  create public .

public section.

  class-data GT_EDUCATION_DETAILS type RCF_T_CAND_EDUCATION_PL .
  class-data GT_WORK_EXP_DETAILS type RCF_T_CAND_WORK_EXP_PL .
  class-data GV_APPL_DATA_ENTRY_FLAG type BOOLE_D .
  class-data GV_DETAIL_LINK type WDY_BOOLEAN .
  class-data GV_PERNR_CHANGE type BOOLE_D .
  constants GC_DEFAULT_LINK type STRING value 'http://' ##NO_TEXT.
  class-data GV_PRINT_PREVIEW_CALLED type WDY_BOOLEAN .
  data GV_BP type BU_PARTNER .
  data GV_PREFERRED_EMAIL type AD_SMTPADR .
  data GV_PVT_EMAIL type AD_SMTPADR .
  data GT_EMAIL type BAPIADSMTP_T .
  data GV_SELECTED_CHOICE type STRING .

  methods GET_PLVAR
    returning
      value(RV_PLVAR) type PLVAR .
  methods CHECK_BRANCH_LOCATIONS
    exporting
      !EV_BRANCH_LOCATIONS type BOOLE_D .
  methods CHECK_COMMN_DATA
    importing
      !IS_CAND_HROBJECT type HROBJECT
      !IV_PREFERRED_PHONE_CHANNEL type RCF_COMM_CHANNEL optional
      !IV_PREFERRED_ADDRESS_CHANNEL type RCF_COMM_CHANNEL optional
      !IV_EMAIL type AD_SMTPADR
      !IT_PHONE_DATA type RCF_T_CAND_COMMN_TELE_PL optional
      !IT_ADDRESS_DATA type RCF_T_CAND_COMMN_ADDRESS_PL optional
    exporting
      !ET_MESSAGES type BAPIRETTAB .
  methods CHECK_EMAIL_FORMAT
    importing
      !IV_EMAIL type AD_SMTPADR
    exporting
      !ET_MESSAGES type BAPIRETTAB .
  methods DEQUEUE_CANDIDATE
    importing
      !IS_CAND_HROBJECT type HROBJECT .
  methods CHECK_FORMATTED_RESUME
    importing
      !IV_PRM type RCF_PRM_PL optional
    exporting
      !ES_T77RCF_PRM_PL type T77RCF_PRM_PL .
  methods CHECK_POSTALCODE_REQ
    importing
      !IV_COUNTRY type LAND1
    exporting
      !EV_POSTCODE_REQ type BOOLE_D .
  methods CHECK_SWITCH_HRDATA
    exporting
      !EV_HRDATA type BOOLE_D .
  methods GET_ACADAMIC_TITLE_LIST
    exporting
      !ET_ACADAMIC_TITLE type RCF_T_VH_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_AGENCY_LIST
    importing
      !IV_APPL_SOURCE type RCF_APPL_SOURCE
    exporting
      !ET_AGENCY_LIST type RCF_T_BUPA_LIST
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_APPL_SOURCE_LIST
    importing
      !APPL_SOURCE_TYPE type RCF_APPL_SOURCE_TYPE
    exporting
      !ET_APPLICATION_SOURCE type RCF_T_VH_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_APPL_SOURCE_TYPE_LIST
    exporting
      !ET_APPL_SOURCE_TYPE type RCF_T_VH_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_ASSIGNMENT_ACTIVITIES
    importing
      !IS_CAND_HROBJECT type HROBJECT
    exporting
      !ET_ACTIVITIES type RCF_T_CAND_ACTIVITES_LIST_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_CANDIDATE_INFO
    importing
      !IS_CAND_HROBJECT type HROBJECT
    exporting
      !EV_CAND_NAME type BU_NAME1TX
      !EV_PERNR type PERNR_D
      !EV_UNAME type SYUNAME
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_CANDIDATE_NOTES
    importing
      !IS_CAND_HROBJECT type HROBJECT
    exporting
      !ET_NOTES type RCF_T_CAND_NOTES
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_CANDIDATE_RANKING
    importing
      !IS_CAND_HROBJECT type HROBJECT
      !IS_REQUI_HROBJECT type HROBJECT optional
      !IS_CDCY_HROBJECT type HROBJECT optional
    exporting
      !EV_TRM_RANKING type STEXT
      !EV_ASSIGNMENT_RANKING type STEXT
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_CANDIDATE_STATUS
    importing
      !IS_CAND_HROBJECT type HROBJECT
    exporting
      !EV_STATUS type RCF_CAND_STATUS
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_CAND_ASSIGNMENTS
    importing
      !IS_CAND_HROBJECT type HROBJECT
      !IV_OVERVIEW type BOOLE_D optional
      !IS_REQ_HROBJECT type HROBJECT optional
    exporting
      !ET_ASSIGNMENTS type RCF_T_CAND_ASSIGNMENTS_LIST_PL
      !ET_MESSAGE type BAPIRETTAB
      !EV_ASSIGNMENTS_COUNT type I
      !ES_APPL_HROBJECT type HROBJECT .
  methods GET_CAND_PROFILE_SUMMARY
    importing
      !IS_CAND_HROBJECT type HROBJECT
    exporting
      !EV_LAST_UPD_DATE type DATUM
      !EV_LAST_UPD_BY type BU_NAME1TX
      !EV_LAST_LOGIN_DATE type DATUM
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_CITY_FOR_DESIRED_JOB_LOC
    importing
      !IV_LANGU type SPRAS default SY-LANGU
      !IV_COUNTRY type LAND1
      !IV_REGION type REGIO
    exporting
      !ET_CITY_LIST type RCF_T_VH_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_CONTRACT_TYPE
    exporting
      !ET_CONTRACT_TYPE type RCF_T_VH_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_COUNTRY_FOR_DES_JOB_LOC
    exporting
      !ET_COUNTRY type RCF_T_VH_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_COUNTRY_LIST
    exporting
      !ET_COUNTRY type RCF_T_VH_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_DEGREE_LEVEL_LIST
    exporting
      !ET_DEGREE_LEVEL type RCF_T_VH_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_EDUCATION_FIELD_LIST
    exporting
      !ET_EDUCATION_FIELD type RCF_T_VH_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_EDUCATION_TYPE_LIST
    exporting
      !ET_EDUCATION_TYPE type RCF_T_VH_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_EMPLOYMENT_FRACTION_LIST
    exporting
      !ET_EMPLOYMENT_FRACTION type RCF_T_VH_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_FORMATTED_RESUME
    importing
      !PS_CAND_HROBJECT type HROBJECT
      !P_LANGUAGE type SYLANGU optional
    returning
      value(P_FORMATTED_RESUME) type P5134 .
  methods GET_FULLNAME_FOR_PERNR
    importing
      !IV_PERNR type PERNR_D
    exporting
      !EV_FULLNAME type BU_NAME1TX
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_FUNCTIONAL_AREA
    exporting
      !ET_FUNCTIONAL_AREA type RCF_T_VH_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_GENDER_LIST
    exporting
      !ET_GENDER type RCF_T_VH_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_HEADER_DATA
    importing
      !IS_REQ_HROBJECT type HROBJECT
    exporting
      !ES_REQ_HEADER_DATA type RCF_S_REQ_HEADER_DATA_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_HIERARCHY_LEVEL_LIST
    exporting
      !ET_HIERARCHY type RCF_T_VH_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_INDUSTRY_LIST
    exporting
      !ET_INDUSTRY type RCF_T_VH_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_LATEST_RESUME_ATTACHMENT
    importing
      !IS_CAND_HROBJECT type HROBJECT
      !IV_LANGU type SPRAS default SY-LANGU
    exporting
      !ES_LATEST_RESUME type RCF_S_CAND_ATTACHMENT_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_OTHER_TITLE_LIST
    exporting
      !ET_OTHER_TITLE type RCF_T_VH_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_PERNR_FOR_USER
    importing
      !IV_USER type SYUNAME
    exporting
      !EV_PERNR type PERNR_D .
  methods GET_PREFIX_LIST
    exporting
      !ET_PREFIX type RCF_T_VH_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_REGION_FOR_DESIRED_JOB_LOC
    importing
      !IV_COUNTRY type LAND1
    exporting
      !ET_REGION type RCF_T_VH_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_REGION_LIST
    importing
      !IV_COUNTRY type LAND1
    exporting
      !ET_REGION type RCF_T_VH_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_RELOCATE_LIST
    exporting
      !ET_RELOCATE type RCF_T_VH_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_SALARY_CURRENCY_LIST
    exporting
      !ET_SALARY_CURRENCY type RCF_T_VH_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_SALARY_RANGES_LIST
    importing
      !P_CURRENCY type RCF_SAL_CURRENCY
    exporting
      !ET_SALARY_RANGES type RCF_T_VH_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_SEX_FOR_FOA
    importing
      !IV_FORMOFADDRESS type AD_TITLE
    exporting
      !ET_MESSAGE type BAPIRETTAB
    changing
      !CV_SEX type BU_SEXID .
  methods GET_TARGET_GROUP
    exporting
      !ET_TARGET_GROUP type RCF_T_VH_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_TG_LIST
    importing
      !IS_TG_HROBJECT type HROBJECT
    exporting
      !ET_TG_LIST type RCF_T_TG_ASSIGNMENT_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_TITLE_LIST
    exporting
      !ET_TITLE type RCF_T_VH_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_TRM_ACTIVITIES
    importing
      !IS_CAND_HROBJECT type HROBJECT
    exporting
      !ET_ACTIVITIES type RCF_T_CAND_TRM_ACTVTS_LIST_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods GET_URL_CATEGORIES
    exporting
      !ET_URL_CATEGORIES type RCF_T_VH_PL
      !ET_MESSAGES type BAPIRETTAB .
  methods GET_USER_FULLNAME
    importing
      !IV_UNAME type SYUNAME
    exporting
      !EV_FULLNAME type BU_NAME1TX
      !ET_MESSAGE type BAPIRETTAB .
  methods IS_HR_QUALIFICATION_SUPPORTED
    exporting
      !EV_SUPPORTED type WDY_BOOLEAN .
  methods IS_INTERNAL_CAND
    importing
      !IS_CAND_HROBJECT type HROBJECT
    exporting
      !EV_IS_INTERNAL type WDY_BOOLEAN
      !ET_MESSAGES type BAPIRETTAB .
  methods IS_SUPP_TEAM_MEMBER
    importing
      !IS_REQ_HROBJECT type HROBJECT
    exporting
      !EV_IS_SUPP_TEAM_MEMBER type WDY_BOOLEAN
      !ET_MESSAGES type BAPIRETTAB .
  methods READ_APPLICATION_DETAILS
    importing
      !IS_APPL_HROBJECT type HROBJECT
    exporting
      !ES_APPLICATION_SOURCE type RCF_S_APPL_SOURCE_PL
      !ES_COVER_LETTER type RCF_S_ITF_DESCRIPTION
      !EV_APPLICATION_DATE type RCF_APPLICATION_DATE
      !EV_STATUS type RCF_APPLICATION_STATUS
      !EV_STATUS_TXT type DDTEXT
      !EV_AGENCY_TYPE type SCLAS
      !EV_AGENCY type SOBID
      !ET_MESSAGE type BAPIRETTAB
      !EV_APPL_SOURCE_PERNR type PERNR_D .
  methods READ_ATTACHMENT_CONTENT
    importing
      !IS_CAND_HROBJECT type HROBJECT
      !IS_P5134 type P5134
    exporting
      !EV_DOCUMENT_CONTENT type XSTRING
      !EV_MIME_TYPE type STRING
      !EV_FILENAME type STRING
      !ET_MESSAGES type BAPIRETTAB .
  methods READ_CANDIDACY
    importing
      !IS_HROBJECT type HROBJECT
      !IS_REQ_HROBJECT type HROBJECT optional
    exporting
      !CDCY_HROBJECT type RCF_T_HROBJECT
      !ET_MESSAGE type BAPIRETTAB .
  methods READ_CAND_ATTACHMENTS
    importing
      !IS_CAND_HROBJECT type HROBJECT
    exporting
      !ET_ATTACHMENTS type RCF_T_CAND_ATTACHMENT_PL
      !ET_MESSAGES type BAPIRETTAB .
  methods READ_CAND_COMMUNICATION_INFO
    importing
      !IS_CAND_HROBJECT type HROBJECT
    exporting
      !ET_PHONE_DATA type RCF_T_CAND_COMMN_TELE_PL
      !ET_ADDRESS_DATA type RCF_T_CAND_COMMN_ADDRESS_PL
      !EV_PREFERRED_PHONE type RCF_COMM_CHANNEL
      !EV_PREFERRED_ADDRESS type RCF_COMM_CHANNEL
      !EV_EMAIL type AD_SMTPADR
      !ET_MESSAGES type BAPIRETTAB .
  methods READ_CAND_EDUCATION
    importing
      !IS_CAND_HROBJECT type HROBJECT
    exporting
      !ET_EDUCATION_RECORDS type RCF_T_CAND_EDUCATION_PL
      !ET_MESSAGES type BAPIRETTAB .
  methods READ_CAND_INTERNET_REFERENCES
    importing
      !IS_CAND_HROBJECT type HROBJECT
    exporting
      !ET_INTERNET_REFERENCES type RCF_T_CAND_INTERNET_REF_PL
      !ET_MESSAGES type BAPIRETTAB .
  methods READ_CAND_PERSONAL_DATA
    importing
      !IS_CAND_HROBJECT type HROBJECT
    exporting
      !ES_PERSONAL_DATA type RCF_S_CAND_PERSONAL_DATA_PL
      !ET_MESSAGES type BAPIRETTAB .
  methods READ_CAND_PREFERENCES
    importing
      !IS_CAND_HROBJECT type HROBJECT
    exporting
      !ET_DESIRED_JOB type RCF_T_CAND_DESIRED_JOB_PL
      !EV_INTEREST_GROUP type RCF_TARGET_GRP
      !ET_MESSAGES type BAPIRETTAB
      !ET_DESIRED_LOCATION type RCF_T_CAND_LOCATION_PL .
  methods READ_CAND_WORK_EXP
    importing
      !IS_CAND_HROBJECT type HROBJECT
    exporting
      !ET_WORK_EXP_RECORDS type RCF_T_CAND_WORK_EXP_PL
      !ET_MESSAGES type BAPIRETTAB .
  methods READ_IMAGE
    importing
      !IS_CAND_HROBJECT type HROBJECT
    exporting
      !EV_URI type TOAURI-URI
      !ET_MESSAGES type BAPIRETTAB
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods READ_PROF_LIST
    importing
      !IV_OBJID type RCF_Q_ID
    exporting
      !ET_PROF_LIST type RCF_T_QUALI_PROFICIENCY_PL
      !ET_MESSAGE type BAPIRETTAB .
  methods READ_QUALIFICATIONS
    importing
      !IS_HROBJECT type HROBJECT
    exporting
      !ET_QUALIFICATIONS type RCF_T_SELECTED_QUALI_DETAIL_PL
      !ET_MESSAGES type BAPIRETTAB .
  methods READ_QUESTIONNAIRE
    importing
      !IS_CAND_HROBJECT type HROBJECT optional
      !IS_CDCY_HROBJECT type HROBJECT optional
      !IV_READ_CAND_QAS_X type BOOLE_D optional
      !IV_READ_EEO_QAS_X type BOOLE_D optional
    exporting
      !ET_MESSAGE type BAPIRETTAB
      !ET_QA_ACTIVITY type RCF_T_ACT_QA_INFO_TEXT_PL
      !EV_OVERALL_SUITABILITY type RCF_QA_RATING
      !ET_DOC_WITH_SCORE type RCF_T_QA_RATING .
  methods SAVE_APPLICATION_DETAILS
    importing
      !IV_APPL_HROBJECT type HROBJECT
      !IV_APPL_SOURCE_INFO type RCF_APPL_SOURCE_INFO
      !IV_APPL_SOURCE type RCF_APPL_SOURCE
      !IV_AGENCY_TYPE type SCLAS optional
      !IV_AGENCY type SOBID optional
      !IV_APPL_SOURCE_PERNR type PERNR_D optional
    exporting
      !ET_MESSAGE type BAPIRETTAB .
  methods SAVE_CANDIDATE_NOTE
    importing
      !IS_CAND_HROBJECT type HROBJECT
      !IV_NOTE type STRING
    exporting
      !ET_MESSAGE type BAPIRETTAB .
  methods SAVE_CAND_EDUCATION_DATA
    importing
      !IS_CAND_HROBJECT type HROBJECT
      !IT_EDUCATION_RECORDS type RCF_T_CAND_EDUCATION_PL
    exporting
      !ET_MESSAGES type BAPIRETTAB .
  methods SAVE_CAND_WORKEXP_DATA
    importing
      !IS_CAND_HROBJECT type HROBJECT
      !IT_WORK_EXP_RECORDS type RCF_T_CAND_WORK_EXP_PL
    exporting
      !ET_MESSAGES type BAPIRETTAB .
  methods SAVE_PROFILE_DATA
    importing
      !IS_CAND_HROBJECT type HROBJECT
      !IV_INTEREST_GROUP type RCF_TARGET_GRP
      !IT_DESIRED_JOB type RCF_T_CAND_DESIRED_JOB_PL
      !IS_PERSONAL_DATA type RCF_S_CAND_PERSONAL_DATA_PL
      !IV_PREFERRED_PHONE_CHANNEL type RCF_COMM_CHANNEL
      !IV_PREFERRED_ADDRESS_CHANNEL type RCF_COMM_CHANNEL
      !IV_EMAIL type AD_SMTPADR
      !IT_PHONE_DATA type RCF_T_CAND_COMMN_TELE_PL
      !IT_ADDRESS_DATA type RCF_T_CAND_COMMN_ADDRESS_PL
      !IT_DESIRED_LOCATION type RCF_T_CAND_LOCATION_PL
      !IT_INTERNET_REFERENCES type RCF_T_CAND_INTERNET_REF_PL optional
    exporting
      !ET_MESSAGES type BAPIRETTAB .
  methods ENQUEUE_CANDIDATE
    importing
      !IS_CAND_HROBJECT type HROBJECT
    exporting
      !EV_ALREADY_LOCKED type BOOLE_D
      !ET_MESSAGE type BAPIRETTAB .
  methods READ_EMAIL_DATA
    importing
      !IS_CAND_HROBJECT type HROBJECT
    exporting
      !EV_BUS_EMAIL type AD_SMTPADR
      !EV_PVT_EMAIL type AD_SMTPADR
      !EV_SELECTED_CHOICE type STRING
      !ET_MESSAGES type BAPIRETTAB .
  methods SAVE_EMAIL_DATA
    importing
      !IS_CAND_HROBJECT type HROBJECT
      !IV_PVT_EMAIL type AD_SMTPADR
    exporting
      !ET_MESSAGES type BAPIRETTAB
    changing
      !CV_SELECTED_CHOICE type STRING .
  methods GET_LANG_TEXT
    importing
      !IV_SPRAS type SPRAS
    exporting
      !EV_SPTXT type SPTXT .
  methods READ_SWITCH_PRLNG
    returning
      value(EV_GSVAL) type GSVAL .
  methods READ_SWITCH_ATTIE
    returning
      value(EV_GSVAL) type GSVAL .
  methods IS_BLOCKED
    importing
      !PT_CANDIDATES type RCF_T_HROBJECT
    exporting
      !PT_EXCL_CANDIDATES type RCF_T_HROBJECT .
protected section.
*"* protected components of class CL_HRRCF_M_CAND_OVERVIEW_UI
*"* do not include other source files here!!!
private section.

  data GV_BUSS_EMAIL type AD_SMTPADR .
*"* private components of class CL_HRRCF_M_CAND_OVERVIEW_UI
*"* do not include other source files here!!!
ENDCLASS.



CLASS CL_HRRCF_M_CAND_OVERVIEW_UI IMPLEMENTATION.


METHOD check_branch_locations.

  CALL METHOD cl_hrrcf_cand_overview_pl=>check_branch_locations
    IMPORTING
      ev_branch_locations = ev_branch_locations.

ENDMETHOD.


METHOD check_commn_data.

  DATA lt_messages TYPE bapirettab.

* Call method to check if Communication data can be successfully saved:
  CALL METHOD cl_hrrcf_cand_overview_pl=>check_commn_data
    EXPORTING
      is_cand_hrobject             = is_cand_hrobject
      iv_preferred_phone_channel   = iv_preferred_phone_channel
      iv_preferred_address_channel = iv_preferred_address_channel
      iv_email                     = iv_email
      it_phone_data                = it_phone_data
      it_address_data              = it_address_data
    IMPORTING
      et_messages                  = lt_messages.

  APPEND LINES OF lt_messages TO et_messages.
  CLEAR lt_messages.

ENDMETHOD.


METHOD check_email_format.

  CALL METHOD cl_hrrcf_cand_overview_pl=>check_email_format
    EXPORTING
      iv_email    = iv_email
    IMPORTING
      et_messages = et_messages.

ENDMETHOD.


METHOD CHECK_FORMATTED_RESUME.

  CALL METHOD cl_hrrcf_cand_overview_pl=>check_formatted_resume
    IMPORTING
      es_t77rcf_prm_pl = es_t77rcf_prm_pl.

ENDMETHOD.


method CHECK_POSTALCODE_REQ.

* author: CG

  CALL METHOD cl_hrrcf_cand_overview_pl=>check_postalcode_req
    EXPORTING
      iv_country      = iv_country
    IMPORTING
      ev_postcode_req = ev_postcode_req.

endmethod.


method CHECK_SWITCH_HRDATA.

  CALL METHOD cl_hrrcf_cand_overview_pl=>check_switch_hrdat
    IMPORTING
      ev_hrdata = ev_hrdata      .

endmethod.


METHOD dequeue_candidate.
* Author: PEV

  CALL METHOD cl_hrrcf_cand_overview_pl=>dequeue_candidate
    EXPORTING
      is_cand_hrobject = is_cand_hrobject
*  IMPORTING
*    et_message       =
      .

ENDMETHOD.


METHOD enqueue_candidate.

  CALL METHOD cl_hrrcf_cand_overview_pl=>enqueue_candidate
    EXPORTING
      is_cand_hrobject  = is_cand_hrobject
    IMPORTING
      ev_already_locked = ev_already_locked
      et_message        = et_message.

ENDMETHOD.


METHOD get_acadamic_title_list.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_academic_title_list
    IMPORTING
      et_vh_acadamic_title = et_acadamic_title
      et_message           = et_message.

ENDMETHOD.


METHOD get_agency_list.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_agency_list
    EXPORTING
      iv_appl_source = iv_appl_source
    IMPORTING
      et_agency_list = et_agency_list
      et_message     = et_message.

ENDMETHOD.


METHOD get_appl_source_list.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_appl_source_list
    EXPORTING
      p_aapl_source_type       = appl_source_type
    IMPORTING
      et_vh_application_source = et_application_source
      et_message               = et_message.

ENDMETHOD.


METHOD get_appl_source_type_list.


  CALL METHOD cl_hrrcf_cand_overview_pl=>get_appl_source_type_list
    IMPORTING
      et_vh_appl_source_type = et_appl_source_type
      et_message             = et_message.

ENDMETHOD.


METHOD get_assignment_activities.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_assignment_activities
    EXPORTING
      is_cand_hrobject = is_cand_hrobject
    IMPORTING
      et_activities    = et_activities
      et_message       = et_message
.
ENDMETHOD.


method GET_CANDIDATE_INFO.

CALL METHOD cl_hrrcf_cand_overview_pl=>get_candidate_info
  EXPORTING
    is_cand_hrobject = is_cand_hrobject
    iv_assure_active_pernr = abap_true
  IMPORTING
    ev_cand_name     = ev_cand_name
    ev_pernr         = ev_pernr
    ev_uname         = ev_uname
    et_message       = et_message
.
endmethod.


method GET_CANDIDATE_NOTES.

    CALL METHOD cl_hrrcf_cand_overview_pl=>get_candidate_notes
    EXPORTING
      is_cand_hrobject = is_cand_hrobject
    IMPORTING
      et_notes         = et_notes
      et_message       = et_message.

endmethod.


METHOD get_candidate_ranking.

  IF is_requi_hrobject IS SUPPLIED.
    CALL METHOD cl_hrrcf_cand_overview_pl=>get_candidate_ranking
      EXPORTING
        is_cand_hrobject      = is_cand_hrobject
        is_requi_hrobject     = is_requi_hrobject
        is_cdcy_hrobject      = is_cdcy_hrobject
      IMPORTING
        ev_trm_ranking        = ev_trm_ranking
        ev_assignment_ranking = ev_assignment_ranking
        et_message            = et_message.

  ELSE.
    CALL METHOD cl_hrrcf_cand_overview_pl=>get_candidate_ranking
      EXPORTING
        is_cand_hrobject = is_cand_hrobject
      IMPORTING
        ev_trm_ranking   = ev_trm_ranking
        et_message       = et_message.

  ENDIF.
ENDMETHOD.


METHOD get_candidate_status.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_candidate_status
    EXPORTING
      is_cand_hrobject = is_cand_hrobject
    IMPORTING
      ev_status        = ev_status
      et_message       = et_message.

ENDMETHOD.


METHOD get_cand_assignments.


  CALL METHOD cl_hrrcf_cand_overview_pl=>get_cand_assignments
    EXPORTING
      is_cand_hrobject      = is_cand_hrobject
      iv_overview           = iv_overview
      is_req_hrobject       = is_req_hrobject
    IMPORTING
      et_assignments        = et_assignments
      ev_assignments_count  = ev_assignments_count
      es_appl_hrobject      = es_appl_hrobject
      et_message       = et_message
.
ENDMETHOD.


METHOD get_cand_profile_summary.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_cand_profile_summary
    EXPORTING
      is_cand_hrobject   = is_cand_hrobject
    IMPORTING
      ev_last_upd_date   = ev_last_upd_date
      ev_last_upd_by     = ev_last_upd_by
      ev_last_login_date = ev_last_login_date
      et_message         = et_message
.
ENDMETHOD.


METHOD get_city_for_desired_job_loc.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_city_for_desired_job_loc
    EXPORTING
      iv_langu     = iv_langu
      iv_country   = iv_country
      iv_region    = iv_region
    IMPORTING
      et_city_list = et_city_list
      et_message   = et_message.

ENDMETHOD.


METHOD get_contract_type.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_contract_type_list
    IMPORTING
      et_vh_contract_type = et_contract_type
      et_message          = et_message.

ENDMETHOD.


METHOD get_country_for_des_job_loc.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_country_for_des_job_loc
    IMPORTING
      et_vh_country = et_country
      et_message    = et_message.

ENDMETHOD.


METHOD get_country_list.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_country_list
    IMPORTING
      et_vh_country = et_country
      et_message    = et_message.

ENDMETHOD.


METHOD get_degree_level_list.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_degree_level_list
    IMPORTING
      et_vh_degree_level = et_degree_level
      et_message         = et_message.

ENDMETHOD.


METHOD get_education_field_list.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_education_field_list
    IMPORTING
      et_vh_education_field = et_education_field
      et_message            = et_message.

ENDMETHOD.


METHOD get_education_type_list.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_education_type_list
    IMPORTING
      et_vh_education_type = et_education_type
      et_message           = et_message.

ENDMETHOD.


METHOD get_employment_fraction_list.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_employment_fraction_list
    IMPORTING
      et_vh_employment_fraction = et_employment_fraction
      et_message                = et_message.

ENDMETHOD.


method GET_FORMATTED_RESUME.



  CALL METHOD cl_hrrcf_cand_overview_pl=>get_format_resume
    EXPORTING
      ps_cand_hrobject   = PS_CAND_HROBJECT
      p_language         = P_LANGUAGE
    receiving
      p_formatted_resume =  P_FORMATTED_RESUME .




endmethod.


method GET_FULLNAME_FOR_PERNR.

CALL METHOD cl_hrrcf_cand_overview_pl=>get_fullname_for_pernr
  EXPORTING
    iv_pernr    = iv_pernr
  IMPORTING
    ev_fullname = ev_fullname
    et_message  = et_message.

endmethod.


METHOD get_functional_area.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_functional_area_list
    IMPORTING
      et_vh_functional_area = et_functional_area
      et_message            = et_message.

ENDMETHOD.


METHOD get_gender_list.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_gender_list
    IMPORTING
      et_vh_gender = et_gender
      et_message   = et_message.

ENDMETHOD.


METHOD get_header_data.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_header_data
    EXPORTING
      is_req_hrobject    = is_req_hrobject
    IMPORTING
      es_req_header_data = es_req_header_data
      et_message         = et_message.

ENDMETHOD.


METHOD get_hierarchy_level_list.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_hierarchy_level_list
    IMPORTING
      et_vh_hierarchy = et_hierarchy
      et_message      = et_message.

ENDMETHOD.


METHOD get_industry_list.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_industry_list
    IMPORTING
      et_vh_industry = et_industry
      et_message     = et_message.

ENDMETHOD.


METHOD get_lang_text.

  TRY.
      CALL METHOD cl_hrrcf_t002t=>read_description
        EXPORTING
          act_language            = sy-langu
          requested_language      = iv_spras
        IMPORTING
          requested_language_text = ev_sptxt.
    CATCH cx_hrrcf_customizing .
  ENDTRY.

ENDMETHOD.


METHOD get_latest_resume_attachment.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_latest_resume_attachment
    EXPORTING
      is_cand_hrobject = is_cand_hrobject
      iv_langu         = sy-langu
    IMPORTING
      es_latest_resume = es_latest_resume
      et_message       = et_message.

ENDMETHOD.


METHOD get_other_title_list.


  CALL METHOD cl_hrrcf_cand_overview_pl=>get_other_title_list
    IMPORTING
      et_vh_other_title = et_other_title
      et_message        = et_message.




ENDMETHOD.


METHOD get_pernr_for_user.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_pernr_for_user
    EXPORTING
      iv_user  = iv_user
    IMPORTING
      ev_pernr = ev_pernr.

ENDMETHOD.


METHOD get_plvar.

* get plan variant
  rv_plvar = cl_hrrcf_cand_overview_pl=>get_plvar( ).

ENDMETHOD.


method GET_PREFIX_LIST.

CALL METHOD cl_hrrcf_cand_overview_pl=>get_prefix_list
  IMPORTING
    et_vh_prefix = et_prefix
    et_message   = et_message
    .

endmethod.


METHOD get_region_for_desired_job_loc.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_region_for_desired_job_loc
    EXPORTING
      iv_country   = iv_country
    IMPORTING
      et_vh_region = et_region
      et_message   = et_message.

ENDMETHOD.


METHOD get_region_list.
  CALL METHOD cl_hrrcf_cand_overview_pl=>get_region_list
    EXPORTING
      iv_country   = iv_country
    IMPORTING
      et_vh_region = et_region
      et_message   = et_message.


ENDMETHOD.


METHOD get_relocate_list.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_relocate_list
    IMPORTING
      et_vh_relocate = et_relocate
      et_message     = et_message.

ENDMETHOD.


METHOD get_salary_currency_list.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_salary_currency_list
    IMPORTING
      et_vh_salary_currency = et_salary_currency
      et_message            = et_message.

ENDMETHOD.


METHOD get_salary_ranges_list.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_salary_range_list
    EXPORTING
      p_currency          = p_currency
    IMPORTING
      et_vh_salary_ranges = et_salary_ranges
      et_message          = et_message.

ENDMETHOD.


METHOD get_sex_for_foa.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_sex_for_foa
    EXPORTING
      iv_formofaddress = iv_formofaddress
    IMPORTING
      et_message       = et_message
    CHANGING
      cv_sex           = cv_sex.

ENDMETHOD.


METHOD get_target_group.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_target_group_list
    IMPORTING
      et_vh_target_group = et_target_group
      et_message         = et_message.

ENDMETHOD.


METHOD get_tg_list.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_tg_list
    EXPORTING
      is_tg_hrobject = is_tg_hrobject
    importing
      et_tg_list     = et_tg_list
      et_message     = et_message      .

ENDMETHOD.


method GET_TITLE_LIST.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_title_list
    IMPORTING
      et_vh_title = et_title
      et_message  = et_message     .

endmethod.


METHOD get_trm_activities.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_trm_activities
    EXPORTING
      is_cand_hrobject = is_cand_hrobject
    IMPORTING
      et_activities    = et_activities
      et_message       = et_message.

ENDMETHOD.


method get_url_categories.

  clear: et_url_categories,
         et_messages.

  cl_hrrcf_cand_overview_pl=>get_url_categories(
    importing
      et_vh_url_categories = et_url_categories
      et_messages          = et_messages ).

endmethod.


METHOD get_user_fullname.

  CALL METHOD cl_hrrcf_cand_overview_pl=>get_user_fullname
    EXPORTING
      iv_uname    = iv_uname
    IMPORTING
      ev_fullname = ev_fullname
      et_message  = et_message.

ENDMETHOD.


method IS_BLOCKED.

  CALL METHOD cl_hrrcf_candidate_admin_bl=>check_bupa_auth
    EXPORTING
      pt_candidates      = pt_candidates
      p_only_blocked     = abap_true
    IMPORTING
      pt_excl_candidates = pt_excl_candidates.

endmethod.


METHOD is_hr_qualification_supported.

  CALL METHOD cl_hrrcf_cand_overview_pl=>is_hr_qualification_supported
    IMPORTING
      ev_supported = ev_supported.

ENDMETHOD.


method IS_INTERNAL_CAND.
  CALL METHOD cl_hrrcf_cand_overview_pl=>is_internal_cand
    EXPORTING
      is_cand_hrobject = IS_CAND_HROBJECT
    IMPORTING
      ev_is_internal   = EV_IS_INTERNAL
      et_messages      = ET_MESSAGES.

endmethod.


METHOD is_supp_team_member.

  CALL METHOD cl_hrrcf_cand_overview_pl=>is_support_team_member
    EXPORTING
      is_req_hrobject        = is_req_hrobject
    IMPORTING
      ev_is_supp_team_member = ev_is_supp_team_member
      et_messages            = et_messages.

ENDMETHOD.


METHOD read_application_details.

  CALL METHOD cl_hrrcf_cand_overview_pl=>read_application_details
    EXPORTING
      is_appl_hrobject      = is_appl_hrobject
    IMPORTING
      es_application_source = es_application_source
      es_cover_letter       = es_cover_letter
      ev_application_date   = ev_application_date
      ev_status             = ev_status
      ev_status_txt         = ev_status_txt
      ev_agency_type        = ev_agency_type
      ev_agency             = ev_agency
      ev_appl_source_pernr  = ev_appl_source_pernr
      et_message            = et_message.

ENDMETHOD.


METHOD read_attachment_content.

* Call Process layer method to read attachment content:
  CALL METHOD cl_hrrcf_cand_overview_pl=>read_attachment_content
    EXPORTING
      is_cand_hrobject    = is_cand_hrobject
      is_p5134            = is_p5134
    IMPORTING
      ev_document_content = ev_document_content
      ev_mime_type        = ev_mime_type
      ev_filename         = ev_filename
      et_messages         = et_messages.

ENDMETHOD.


METHOD read_candidacy.

  CALL METHOD cl_hrrcf_cand_overview_pl=>read_candidacy
    EXPORTING
      is_hrobject      = is_hrobject
      is_req_hrobject  = is_req_hrobject
    IMPORTING
      et_message       = et_message
      et_cdcy_hrobject = cdcy_hrobject.

ENDMETHOD.


method READ_CAND_ATTACHMENTS.
  CALL METHOD cl_hrrcf_cand_overview_pl=>read_cand_attachments
    EXPORTING
      is_cand_hrobject = IS_CAND_HROBJECT
    IMPORTING
      et_attachments   = ET_ATTACHMENTS
      et_messages      = ET_MESSAGES.

endmethod.


method READ_CAND_COMMUNICATION_INFO.
  CALL METHOD cl_hrrcf_cand_overview_pl=>read_cand_communication_info
    EXPORTING
      is_cand_hrobject     = IS_CAND_HROBJECT
    IMPORTING
      et_phone_data        = ET_PHONE_DATA
      et_address_data      = ET_ADDRESS_DATA
      ev_preferred_phone   = EV_PREFERRED_PHONE
      ev_preferred_address = EV_PREFERRED_ADDRESS
      ev_email             = EV_EMAIL
      et_messages          = ET_MESSAGES.

endmethod.


METHOD read_cand_education.

  CALL METHOD cl_hrrcf_cand_overview_pl=>read_cand_education
    EXPORTING
      is_cand_hrobject     = is_cand_hrobject
    IMPORTING
      et_education_records = et_education_records
      et_messages          = et_messages.

ENDMETHOD.


method read_cand_internet_references.

  clear: et_internet_references,
         et_messages.

  cl_hrrcf_cand_overview_pl=>read_cand_internet_references(
    exporting
      is_cand_hrobject       = is_cand_hrobject
    importing
      et_internet_references = et_internet_references
      et_messages            = et_messages ).

endmethod.


method READ_CAND_PERSONAL_DATA.
  CALL METHOD cl_hrrcf_cand_overview_pl=>read_cand_personal_data
    EXPORTING
      is_cand_hrobject = IS_CAND_HROBJECT
    IMPORTING
      es_personal_data = ES_PERSONAL_DATA
      et_messages      = ET_MESSAGES.

endmethod.


METHOD read_cand_preferences.

  CALL METHOD cl_hrrcf_cand_overview_pl=>read_cand_preferences
    EXPORTING
      is_cand_hrobject  = is_cand_hrobject
    IMPORTING
      et_desired_job      = et_desired_job
      ev_interest_group   = ev_interest_group
      et_messages         = et_messages
      et_desired_location = et_desired_location.

ENDMETHOD.


method READ_CAND_WORK_EXP.
  CALL METHOD cl_hrrcf_cand_overview_pl=>read_cand_work_exp
    EXPORTING
      is_cand_hrobject    = IS_CAND_HROBJECT
    IMPORTING
      et_work_exp_records = ET_WORK_EXP_RECORDS
      et_messages         = ET_MESSAGES.

endmethod.


METHOD read_email_data.

  DATA lo_candidate     TYPE REF TO   cl_hrrcf_candidate.
  DATA lt_message_bp    TYPE          bapirettab.
  DATA lt_email         TYPE TABLE OF bapiadsmtp.
  DATA ls_email         TYPE          bapiadsmtp .
  DATA lv_pvt_email     TYPE          ad_smtpadr.
  DATA ls_return        TYPE          bapireturn1.
  DATA lt_emaildata     TYPE          rcf_t_emaildata_bp.
  DATA lv_pernr         TYPE          personid.
  DATA lo_cand_info     TYPE REF TO   cl_hrrcf_candidate_info.
  DATA lv_message(80)   TYPE c.

  CLEAR:ev_bus_email,
        ev_pvt_email,
        ev_selected_choice,
        et_messages.

  TRY.
      CALL METHOD cl_hrrcf_candidate=>get
        EXPORTING
          id        = is_cand_hrobject-objid
        IMPORTING
          candidate = lo_candidate.

      gv_bp = lo_candidate->partner .
      lv_pernr = lo_candidate->employeeid.

      CALL FUNCTION 'BAPI_BUPA_CENTRAL_GETDETAIL'
        EXPORTING
          businesspartner      = gv_bp
        TABLES
          e_maildatanonaddress = lt_email
          return               = lt_message_bp.
      LOOP AT lt_message_bp  TRANSPORTING NO FIELDS WHERE type = 'A' OR type = 'E'.
        APPEND LINES OF lt_message_bp TO et_messages.
        RETURN.
      ENDLOOP.

    CATCH cx_hrrcf_maintain_object .
      RETURN.
    CATCH cx_hrrcf_infotype_operation .
      RETURN.
    CATCH cx_hrrcf .
      RETURN.
  ENDTRY.

* Get the generic email stored in HRP5102
  CALL METHOD cl_hrrcf_candidate_info=>get_instance
    EXPORTING
      hrobject = is_cand_hrobject
    IMPORTING
      instance = lo_cand_info.

  CALL METHOD lo_cand_info->read_private_email
    IMPORTING
      ps_email = lv_pvt_email.

* Business Email: common email ID in BP and HR.
    LOOP AT lt_email INTO ls_email.
      IF ls_email-e_mail = lv_pvt_email.
        ev_pvt_email = ls_email-e_mail.
        IF ls_email-std_no = 'X'.
          ev_selected_choice = cl_hrrcf_wd_ui_constants=>gc_pvt_email_choice.
        ENDIF.
      ELSE.
        ev_bus_email = ls_email-e_mail.
        IF ls_email-std_no = 'X'.
          ev_selected_choice = cl_hrrcf_wd_ui_constants=>gc_bus_email_choice.
        ENDIF.
      ENDIF.
    ENDLOOP.

  CLEAR gt_email.
  gt_email = lt_email.
  gv_pvt_email = ev_pvt_email.
  gv_buss_email = ev_bus_email.
  gv_selected_choice = ev_selected_choice.

ENDMETHOD.


method READ_IMAGE.
  CALL METHOD cl_hrrcf_cand_overview_pl=>read_image
    EXPORTING
      is_cand_hrobject = IS_CAND_HROBJECT
    IMPORTING
      ev_uri           = EV_URI
      et_messages      = ET_MESSAGES.

endmethod.


method READ_PROF_LIST.


  CALL METHOD cl_hrrcf_cand_overview_pl=>get_prof_list
    EXPORTING
      iv_objid     = iv_objid
    IMPORTING
      et_prof_list = et_prof_list
      et_message   = et_message.




endmethod.


METHOD read_qualifications.

  CALL METHOD cl_hrrcf_cand_overview_pl=>read_qualifications
    EXPORTING
      is_hrobject       = is_hrobject
    IMPORTING
      et_qualifications = et_qualifications
      et_messages       = et_messages.

ENDMETHOD.


METHOD read_questionnaire.

  CALL METHOD cl_hrrcf_cand_overview_pl=>read_questionnaire
    EXPORTING
      is_cand_hrobject       = is_cand_hrobject
      is_cdcy_hrobject       = is_cdcy_hrobject
      iv_read_cand_qas_x     = iv_read_cand_qas_x
      iv_read_eeo_qas_x      = iv_read_eeo_qas_x
    IMPORTING
      et_message             = et_message
      et_qa_activity         = et_qa_activity
      ev_overall_suitability = ev_overall_suitability
      et_doc_with_score      = et_doc_with_score.

ENDMETHOD.


method READ_SWITCH_ATTIE.

  DATA ls_t77s0 TYPE t77s0.

* Read switch
  CALL METHOD cl_hr_t77s0=>read
    EXPORTING
      grpid  = 'RECFA'
      semid  = 'ATTIE'
    RECEIVING
      t77s0  = ls_t77s0 .

  ev_gsval = ls_t77s0-gsval.

endmethod.


method READ_SWITCH_PRLNG.

  DATA ls_t77s0 TYPE t77s0.

* Read switch
  CALL METHOD cl_hr_t77s0=>read
    EXPORTING
      grpid  = 'RECFA'
      semid  = 'PRLNG'
    RECEIVING
      t77s0  = ls_t77s0 .

  ev_gsval = ls_t77s0-gsval.

endmethod.


METHOD save_application_details.

  CALL METHOD cl_hrrcf_cand_overview_pl=>save_application_details
    EXPORTING
      iv_appl_hrobject     = iv_appl_hrobject
      iv_appl_source_info  = iv_appl_source_info
      iv_appl_source       = iv_appl_source
      iv_agency_type       = iv_agency_type
      iv_agency            = iv_agency
      iv_appl_source_pernr = iv_appl_source_pernr
    IMPORTING
      et_message           = et_message.

ENDMETHOD.


method SAVE_CANDIDATE_NOTE.

    CALL METHOD cl_hrrcf_cand_overview_pl=>save_candidate_note
    EXPORTING
      is_cand_hrobject = is_cand_hrobject
      iv_note          = iv_note
    IMPORTING
      et_message       = et_message.
endmethod.


METHOD save_cand_education_data.

  CALL METHOD cl_hrrcf_cand_overview_pl=>save_cand_education_data
    EXPORTING
      is_cand_hrobject     = is_cand_hrobject
      it_education_records = it_education_records
    IMPORTING
      et_messages          = et_messages.

ENDMETHOD.


METHOD save_cand_workexp_data.

  CALL METHOD cl_hrrcf_cand_overview_pl=>save_cand_work_exp_data
    EXPORTING
      is_cand_hrobject    = is_cand_hrobject
      it_work_exp_records = it_work_exp_records
    IMPORTING
      et_messages         = et_messages.

ENDMETHOD.


METHOD save_email_data.
  DATA lo_cand_bupa_bl             TYPE REF TO   cl_hrrcf_candidate_bupa_bl.
  DATA lo_cand_info                TYPE REF TO   cl_hrrcf_candidate_info.
  DATA lo_ex                       TYPE REF TO cx_hrrcf.
  DATA lt_messages                 TYPE          bapirettab.
  DATA lt_email                    TYPE          bapiadsmtp_t.
  DATA ls_emaildata_x              TYPE          bapiadsmtx.
  DATA lt_emaildata_x              TYPE TABLE OF bapiadsmtx.
  DATA ls_email                    TYPE          bapiadsmtp.
  DATA lv_choice                   TYPE          string.
  DATA lv_email_unique             TYPE          boole_d.
  DATA ls_message                  TYPE          bapiret2.
  DATA ls_cand_hrobject	           TYPE          hrobject.
  DATA lv_pref_email               TYPE          boole_d.

  lv_choice = cv_selected_choice.

*     get instance of business logic facade
  CALL METHOD cl_hrrcf_candidate_bupa_bl=>get_instance
    RECEIVING
      return = lo_cand_bupa_bl.

  CHECK lo_cand_bupa_bl IS BOUND.

  CHECK cv_selected_choice <> gv_selected_choice OR iv_pvt_email <> gv_pvt_email.

  CLEAR: ls_emaildata_x, lt_email, lt_emaildata_x, ls_email.

  IF iv_pvt_email <> gv_pvt_email.
    IF iv_pvt_email IS INITIAL AND gv_pvt_email IS NOT INITIAL.
*      DELETE and if the current private email is set as stardard then set 001 consumer number as stardard and pass info message
      READ TABLE gt_email INTO ls_email WITH KEY e_mail = gv_pvt_email.
      IF sy-subrc = 0.
*        CLEAR: ls_emaildata_x, lt_email, lt_emaildata_x.
        CLEAR: ls_emaildata_x.
        APPEND ls_email TO lt_email.
        ls_emaildata_x-e_mail = 'X'.
        ls_emaildata_x-updateflag = 'D'.
        APPEND ls_emaildata_x TO lt_emaildata_x.
        IF ls_email-std_no = 'X'.
*          CLEAR: ls_emaildata_x, lt_email, lt_emaildata_x.
          CLEAR: ls_emaildata_x.
          READ TABLE gt_email INTO ls_email WITH KEY e_mail = gv_buss_email.
          IF sy-subrc = 0.
            ls_email-std_no = 'X'.
            APPEND ls_email TO lt_email.
            ls_emaildata_x-e_mail = 'X'.
            ls_emaildata_x-std_no = 'X'.
            ls_emaildata_x-updateflag = 'U'.
            APPEND ls_emaildata_x TO lt_emaildata_x.
            lv_choice = cl_hrrcf_wd_ui_constants=>gc_bus_email_choice.
          ENDIF.
        ENDIF.
      ENDIF.
    ELSE.
*      check for uniqueness and the format
      CALL METHOD cl_hrrcf_candidate_bupa_bl=>check_email_format
        EXPORTING
          p_email = iv_pvt_email
        IMPORTING
          return  = lt_messages.
      LOOP AT lt_messages TRANSPORTING NO FIELDS WHERE type = 'A' OR type = 'E'.
        APPEND LINES OF lt_messages TO et_messages.
        RETURN.
      ENDLOOP.
      TRY .
          CALL METHOD lo_cand_bupa_bl->check_email_uniqueness
            EXPORTING
              p_email  = iv_pvt_email
            RECEIVING
              p_result = lv_email_unique.
        CATCH cx_hrrcf INTO lo_ex.
          cl_hrrcf_exception_handler=>write_exception_log( ex = lo_ex ).
      ENDTRY.
      IF lv_email_unique = abap_false.
        IF 1 = 2.
          MESSAGE e143(hrrcf0005).
        ENDIF.
        CALL FUNCTION 'BALW_BAPIRETURN_GET2'
          EXPORTING
            type   = 'E'
            cl     = 'HRRCF0005'
            number = '143'
          IMPORTING
            return = ls_message.
        APPEND ls_message TO et_messages.
        RETURN.
      ENDIF.
      IF gv_pvt_email IS INITIAL.
*      INSERT the record and also set the stardard flag
        READ TABLE gt_email INTO ls_email WITH KEY std_no = 'X'.
        IF sy-subrc  = 0.
          IF ( cv_selected_choice = cl_hrrcf_wd_ui_constants=>gc_pvt_email_choice ) OR
               ( cv_selected_choice = cl_hrrcf_wd_ui_constants=>gc_bus_email_choice AND ls_email-e_mail <> gv_buss_email ) .
            ls_email-std_no = ' '.
            APPEND ls_email TO lt_email.
            ls_emaildata_x-e_mail = 'X'.
            ls_emaildata_x-std_no = 'X'.
            ls_emaildata_x-updateflag = 'U'.
            APPEND ls_emaildata_x TO lt_emaildata_x.
            IF cv_selected_choice = cl_hrrcf_wd_ui_constants=>gc_bus_email_choice AND ls_email-e_mail <> gv_buss_email.
              READ TABLE gt_email INTO ls_email WITH KEY e_mail = gv_buss_email.
              IF sy-subrc  = 0.
                ls_email-std_no = 'X'.
                APPEND ls_email TO lt_email.
                ls_emaildata_x-e_mail = 'X'.
                ls_emaildata_x-std_no = 'X'.
                ls_emaildata_x-updateflag = 'U'.
                APPEND ls_emaildata_x TO lt_emaildata_x.
              ENDIF.
            ENDIF.
          ENDIF.
        ENDIF.
*        CLEAR: ls_emaildata_x, lt_email, lt_emaildata_x, ls_email.
        CLEAR: ls_email, ls_emaildata_x.
        ls_email-e_mail = iv_pvt_email.
        IF cv_selected_choice = cl_hrrcf_wd_ui_constants=>gc_pvt_email_choice.
          ls_email-std_no = 'X'.
        ENDIF.
        APPEND ls_email TO lt_email.
        ls_emaildata_x-e_mail = 'X'.
        ls_emaildata_x-std_no = 'X'.
        ls_emaildata_x-updateflag = 'I'.
        APPEND ls_emaildata_x TO lt_emaildata_x.
      ELSE.
*      MODIFY the record and also set the stardard flag
*        CLEAR: ls_emaildata_x, lt_email, lt_emaildata_x, ls_email.
        CLEAR: ls_email, ls_emaildata_x.
        READ TABLE gt_email INTO ls_email WITH KEY e_mail = gv_pvt_email.
        IF sy-subrc = 0.
          ls_email-e_mail = iv_pvt_email.
          IF cv_selected_choice = cl_hrrcf_wd_ui_constants=>gc_pvt_email_choice.
            ls_email-std_no = 'X'.
          ENDIF.
          APPEND ls_email TO lt_email.
          ls_emaildata_x-e_mail = 'X'.
          ls_emaildata_x-std_no = 'X'.
          ls_emaildata_x-updateflag = 'U'.
          APPEND ls_emaildata_x TO lt_emaildata_x.
          IF cv_selected_choice = cl_hrrcf_wd_ui_constants=>gc_bus_email_choice.
            CLEAR ls_email.
            READ TABLE gt_email INTO ls_email WITH KEY e_mail = gv_buss_email.
            IF ls_email-std_no <> 'X'.
              ls_email-std_no = 'X'.
              APPEND ls_email TO lt_email.
              ls_emaildata_x-e_mail = 'X'.
              ls_emaildata_x-std_no = 'X'.
              ls_emaildata_x-updateflag = 'U'.
              APPEND ls_emaildata_x TO lt_emaildata_x.
            ENDIF.
          ENDIF.
        ENDIF.
      ENDIF.
    ENDIF.

* Update the generic email stored in HRP5102
    ls_cand_hrobject = is_cand_hrobject.
    IF is_cand_hrobject IS INITIAL.
      TRY.
          CALL METHOD cl_hrrcf_candidate_admin_bl=>get_candidate
            EXPORTING
              p_user          = sy-uname
            IMPORTING
              p_cand_hrobject = ls_cand_hrobject.
        CATCH cx_hrrcf INTO lo_ex.
          cl_hrrcf_exception_handler=>write_exception_log( ex = lo_ex ).
      ENDTRY.
    ENDIF.
    CALL METHOD cl_hrrcf_candidate_info=>get_instance
      EXPORTING
        hrobject = ls_cand_hrobject
      IMPORTING
        instance = lo_cand_info.
    IF cv_selected_choice = cl_hrrcf_wd_ui_constants=>gc_pvt_email_choice.
      lv_pref_email = abap_true.
    ENDIF.
    TRY.
        CALL METHOD lo_cand_info->update_private_email
          EXPORTING
            ps_email           = iv_pvt_email
            im_v_pvt_mail_upd  = lv_pref_email
            pv_external_commit = abap_true
          IMPORTING
            pt_return          = lt_messages.
      CATCH cx_hrrcf INTO lo_ex.
        cl_hrrcf_exception_handler=>write_exception_log( ex = lo_ex ).
    ENDTRY.
    LOOP AT lt_messages TRANSPORTING NO FIELDS WHERE type = 'A' OR type = 'E'.
      RETURN.
    ENDLOOP.
  ELSE.
*    only set the stardard flag
    IF gv_pvt_email IS INITIAL AND cv_selected_choice = cl_hrrcf_wd_ui_constants=>gc_pvt_email_choice.
      cv_selected_choice = gv_selected_choice.
      RETURN.
    ENDIF.
    IF cv_selected_choice IS NOT INITIAL.
      READ TABLE gt_email INTO ls_email WITH KEY std_no = 'X'.
      IF sy-subrc = 0.
        ls_email-std_no = ' '.
        APPEND ls_email TO lt_email.
        ls_emaildata_x-e_mail = 'X'.
        ls_emaildata_x-std_no = 'X'.
        ls_emaildata_x-updateflag = 'U'.
        APPEND ls_emaildata_x TO lt_emaildata_x.
      ENDIF.
      IF cv_selected_choice = cl_hrrcf_wd_ui_constants=>gc_bus_email_choice.
        READ TABLE gt_email INTO ls_email WITH KEY e_mail = gv_buss_email.
        IF sy-subrc = 0.
          ls_email-std_no = 'X'.
          APPEND ls_email TO lt_email.
          ls_emaildata_x-e_mail = 'X'.
          ls_emaildata_x-std_no = 'X'.
          ls_emaildata_x-updateflag = 'U'.
          APPEND ls_emaildata_x TO lt_emaildata_x.
        ENDIF.
      ELSEIF cv_selected_choice = cl_hrrcf_wd_ui_constants=>gc_pvt_email_choice.
        READ TABLE gt_email INTO ls_email WITH KEY e_mail = gv_pvt_email.
        IF sy-subrc = 0.
          ls_email-std_no = 'X'.
          APPEND ls_email TO lt_email.
          ls_emaildata_x-e_mail = 'X'.
          ls_emaildata_x-std_no = 'X'.
          ls_emaildata_x-updateflag = 'U'.
          APPEND ls_emaildata_x TO lt_emaildata_x.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDIF.

  IF lt_email IS NOT INITIAL AND lt_emaildata_x IS NOT INITIAL.

    CALL FUNCTION 'BAPI_BUPA_CENTRAL_CHANGE'
      EXPORTING
        businesspartner       = gv_bp
      TABLES
        e_maildatanonaddress  = lt_email
        e_maildatanonaddressx = lt_emaildata_x
        return                = lt_messages.

    LOOP AT lt_messages TRANSPORTING NO FIELDS WHERE type = 'A' OR type = 'E'.
      APPEND LINES OF lt_messages TO et_messages.
      RETURN.
    ENDLOOP.

    READ TABLE lt_emaildata_x WITH KEY updateflag = 'D' TRANSPORTING NO FIELDS.
    IF sy-subrc = 0.
      DELETE lt_email INDEX sy-tabix.
    ENDIF.

*    gt_email = lt_email.
    LOOP AT lt_email INTO ls_email.
      READ TABLE gt_email WITH KEY consnumber = ls_email-consnumber TRANSPORTING NO FIELDS.
      IF sy-subrc = 0.
        MODIFY gt_email FROM ls_email INDEX sy-tabix.
      ELSE.
        APPEND ls_email TO gt_email.
      ENDIF.
    ENDLOOP.
    cv_selected_choice = lv_choice.
    gv_pvt_email = iv_pvt_email.
    gv_selected_choice = cv_selected_choice.

  ENDIF.

ENDMETHOD.


method save_profile_data.

  clear: et_messages.

  call method cl_hrrcf_cand_overview_pl=>save_profile_data
    exporting
      is_cand_hrobject             = is_cand_hrobject
      iv_interest_group            = iv_interest_group
      it_desired_job               = it_desired_job
      is_personal_data             = is_personal_data
      iv_preferred_phone_channel   = iv_preferred_phone_channel
      iv_preferred_address_channel = iv_preferred_address_channel
      iv_email                     = iv_email
      it_phone_data                = it_phone_data
      it_desired_location          = it_desired_location
      it_address_data              = it_address_data
      it_internet_references       = it_internet_references
    importing
      et_messages                  = et_messages.

endmethod.
ENDCLASS.