class CL_HRRCF_M_JOB_AGENTS definition
  public
  inheriting from CL_WD_COMPONENT_ASSISTANCE
  create public .

public section.

*"* public components of class CL_HRRCF_M_JOB_AGENTS
*"* do not include other source files here!!!
  methods CONSTRUCTOR .
  methods SC_CREATE_JOB_AGENT
    importing
      !IV_SEARCH_TASK type RCF_PARENT_COMP_ID
      !IV_JOB_AGENT_NAME type RCF_AGENT_NAME
    exporting
      !ET_MESSAGES type BAPIRETTAB
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_DELETE_JOB_AGENT
    importing
      !IV_SEARCH_TASK type RCF_PARENT_COMP_ID
      !IS_QUERY type RCF_S_MDL_JOB_AGENTS_DET
      !IT_SME_QUERY_TAB type RCF_T_MDL_SME_QUERY_TAB
      !IT_SM_ELEMENT_TAB type RCF_T_MDL_SMASK_ELEMENT_TAB
      !IT_SMASK_TAB type RCF_T_MDL_SMGV_SMASK
      !IV_USER type SYUNAME default SY-UNAME
    exporting
      !ET_MESSAGES type BAPIRETTAB
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_FILL_SM_ELEMENT
    importing
      !IV_SEARCH_TASK type RCF_PARENT_COMP_ID
      !IV_SMASK_ID type RCF_SMASK_ID
      !IV_SM_ELEMENT_ID type RCF_SM_ELEMENT
      !IT_QUERY_TAB type RCF_T_SME_QUERY_TAB
      !IS_VALUEHELP_LINE type RCF_S_UI_VALUEHELP
    exporting
      !ET_MESSAGES type BAPIRETTAB
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_GET_MAX_JOB_AGENTS
    exporting
      !ET_MESSAGES type BAPIRETTAB
      !EV_MAX_JOB_AGENTS type ATTRIBUTE_VALUE
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_GET_VERIFICATION_STATUS
    importing
      !IV_CANDIDATE_HROBJECT type HROBJECT optional
    exporting
      !EV_VERIFICATION_STATUS type RCF_VERIFICATION_STATUS
      !ET_MESSAGES type BAPIRETTAB
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_IS_EXT_CAND
    importing
      !IS_CAND_HROBJECT type HROBJECT optional
    exporting
      !ET_MESSAGES type BAPIRETTAB
      !EV_IS_EXTERNAL_CANDIDATE type BOOLE_D
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_RESET_SEARCH_MASK_GROUP
    importing
      !IV_SEARCH_TASK type RCF_PARENT_COMP_ID
    exporting
      !ET_MESSAGES type BAPIRETTAB
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_RETRIEVE_ALL_JOB_AGENTS
    importing
      !IV_SEARCH_TASK type RCF_PARENT_COMP_ID
      !IV_USER type SYUNAME default SY-UNAME
    exporting
      !ET_MESSAGES type BAPIRETTAB
      !ES_JOB_AGENTS type RCF_S_MDL_JOB_AGENTS
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_RETRIEVE_JOB_AGENT
    importing
      !IV_SEARCH_TASK type RCF_PARENT_COMP_ID
      !IV_AGENT_NAME type RCF_AGENT_NAME
      !IV_USER type SYUNAME default SY-UNAME
    exporting
      !ET_MESSAGES type BAPIRETTAB
      !ES_QUERY type RCF_S_MDL_JOB_AGENTS_DET
      !ET_SME_QUERY_TAB type RCF_T_MDL_SME_QUERY_TAB
      !ET_SM_ELEMENT_TAB type RCF_T_MDL_SMASK_ELEMENT_TAB
      !ET_SMASK_TAB type RCF_T_MDL_SMGV_SMASK
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_SAVE_ALL_JOB_AGENTS
    importing
      !IS_JOB_AGENTS type RCF_S_MDL_JOB_AGENTS
      !IV_SEARCH_TASK type RCF_PARENT_COMP_ID
    exporting
      !ET_MESSAGES type BAPIRETTAB
    raising
      CX_HRRCF .
  methods SC_SAVE_PROFILE_AGENT
    importing
      !IS_JOB_AGENTS type RCF_S_MDL_JOB_AGENTS
      !IV_SEARCH_TASK type RCF_PARENT_COMP_ID
    exporting
      !ET_MESSAGES type BAPIRETTAB
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_START_SEARCH_JOB_AGENTS
    importing
      !IV_SEARCH_TASK type RCF_PARENT_COMP_ID
      !IT_HIDDEN_INFO_TAB type RCF_T_NAME_VALUE
      !IV_SEARCH_LANGUAGE type SPRAS
      !IV_MAX_HITS type RCF_HL_MAX_NUMBER
      !IV_LOG_OP_FULLTEXT type RCF_MDL_LOG_OPERATOR_FTS
      !IV_LOG_OP type RCF_SQ_LOG_OP
      !IV_THRESHOLD type RCF_THRESHOLD
    exporting
      !ET_MESSAGES type BAPIRETTAB
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_UPDATE_JOB_AGENT
    importing
      !IV_SEARCH_TASK type RCF_PARENT_COMP_ID
      !IS_QUERY type RCF_S_MDL_JOB_AGENTS_DET
      !IT_SME_QUERY_TAB type RCF_T_MDL_SME_QUERY_TAB
      !IT_SM_ELEMENT_TAB type RCF_T_MDL_SMASK_ELEMENT_TAB
      !IT_SMASK_TAB type RCF_T_MDL_SMGV_SMASK
      !IV_IS_NEW_AGENT type BOOLE_D
    exporting
      !ET_MESSAGES type BAPIRETTAB
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_GET_EXPIRATION_PERIOD
    exporting
      !ET_MESSAGES type BAPIRETTAB
      !EV_EXP_PERIOD type ATTRIBUTE_VALUE
    raising
      CX_HRRCF_RFC_COMMUNICATION .
protected section.
*"* protected components of class CL_HRRCF_M_JOB_AGENTS
*"* do not include other source files here!!!
private section.
*"* private components of class CL_HRRCF_M_JOB_AGENTS
*"* do not include other source files here!!!

  data GV_RFC_DEST type RFCDEST .

  methods GET_RFC_DESTINATION
    returning
      value(RV_RFC_DEST) type RFCDEST .
  methods SET_RFC_DESTINATION
    importing
      !IV_RFC_DEST type RFCDEST .
ENDCLASS.



CLASS CL_HRRCF_M_JOB_AGENTS IMPLEMENTATION.


METHOD constructor.

  DATA: lv_dest TYPE rfcdest.

  super->constructor( ).

* get rfc destination
  CALL METHOD cl_hrrcf_wd_services=>get_bl_destination
    RECEIVING
      rfc_dest = lv_dest.

  CALL METHOD me->set_rfc_destination
    EXPORTING
      iv_rfc_dest = lv_dest.

ENDMETHOD.


METHOD get_rfc_destination.

  rv_rfc_dest = me->gv_rfc_dest.

ENDMETHOD.


METHOD SC_CREATE_JOB_AGENT.

  DATA: lv_rfc_dest             TYPE rfcdest,
          lv_message(80)          TYPE c.

  CLEAR: et_messages.

* get RFC destination
  lv_rfc_dest = me->get_rfc_destination( ).

* create a search variant
  CALL FUNCTION 'HRRCF_MDL_JOBS_AGENT_CREATE'
    DESTINATION lv_rfc_dest
    EXPORTING
      search_task           = iv_search_task
      agent_name            = iv_job_agent_name
    IMPORTING
      messages              = et_messages
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with RFC connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.


ENDMETHOD.


METHOD SC_DELETE_JOB_AGENT.

  DATA: lv_rfc_dest             TYPE rfcdest,
          lv_message(80)          TYPE c.

  CLEAR: et_messages.

* get RFC destination
  lv_rfc_dest = me->get_rfc_destination( ).

* delete specified search variant
  CALL FUNCTION 'HRRCF_MDL_JOBS_AGENT_DELETE'
    DESTINATION lv_rfc_dest
    EXPORTING
      search_task           = iv_search_task
      agent                 = is_query
      sme_query_tab         = it_sme_query_tab
      sm_element_tab        = it_sm_element_tab
      smask_tab             = it_smask_tab
      iv_user               = iv_user             "N_2345465
    IMPORTING
      messages              = et_messages
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with RFC connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.

ENDMETHOD.


METHOD sc_fill_sm_element.

  DATA: lv_rfc_dest             TYPE rfcdest,
         lv_message(80)          TYPE c.

  CLEAR: et_messages.

* get RFC destination
  lv_rfc_dest = me->get_rfc_destination( ).

* set query for the specified search mask element
  CALL FUNCTION 'HRRCF_MDL_SRCH_SM_ELEM_SET'
    DESTINATION lv_rfc_dest
    EXPORTING
      search_task           = iv_search_task
      smask_id              = iv_smask_id
      sm_element_id         = iv_sm_element_id
      query_tab             = it_query_tab
      valuehelp_line        = is_valuehelp_line
    IMPORTING
      messages              = et_messages
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with RFC connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.

ENDMETHOD.


METHOD SC_GET_EXPIRATION_PERIOD.
"N_2345465

  DATA: lv_rfc_dest             TYPE rfcdest,
        lv_message(80)          TYPE c.

  CLEAR: et_messages.

* get RFC destination
  lv_rfc_dest = me->get_rfc_destination( ).

* Get expiration period
  CALL FUNCTION 'HRRCF_MDL_JOBS_AGENT_EXPPERIOD'
    DESTINATION lv_rfc_dest
    IMPORTING
      exp_period            = ev_exp_period
      messages              = et_messages
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with RFC connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.


ENDMETHOD.


METHOD sc_get_max_job_agents.

  DATA: lv_rfc_dest             TYPE rfcdest,
            lv_message(80)          TYPE c.

  CLEAR: et_messages.

* get RFC destination
  lv_rfc_dest = me->get_rfc_destination( ).

* create a search variant
  CALL FUNCTION 'HRRCF_MDL_JOBS_AGENT_MAXAGENTS'
    DESTINATION lv_rfc_dest
    IMPORTING
      max_job_agents        = ev_max_job_agents
      messages              = et_messages
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with RFC connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.


ENDMETHOD.


method sc_get_verification_status.

* NOTE: This is a copy from class CL_HRRCF_M_REGISTER.

  data: lv_dest                type rfcdest,
        lv_verification_status type rcf_verification_status,
        lv_message(80)         type c.

  clear: ev_verification_status,
         et_messages.

  call method cl_hrrcf_wd_services=>get_bl_destination
    receiving
      rfc_dest = lv_dest.

  call function 'HRRCF_MDL_VERIF_STAT_RETRIEVE'
    destination lv_dest
    exporting
      is_candidate_hrobject  = iv_candidate_hrobject
    importing
      ev_verification_status = ev_verification_status
      et_messages            = et_messages
    exceptions
      system_failure         = 1  message lv_message
      communication_failure  = 2  message lv_message.

  if sy-subrc <> 0.
*   problem with RFC connection
    case sy-subrc.
      when 1.
        raise exception type cx_hrrcf_rfc_communication
          exporting
            textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      when 2.
        raise exception type cx_hrrcf_rfc_communication
          exporting
            textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    endcase.
  endif.

endmethod.


METHOD sc_is_ext_cand.

  DATA: lv_rfc_dest             TYPE rfcdest,
            lv_message(80)          TYPE c.

  CLEAR: et_messages.

* get RFC destination
  lv_rfc_dest = me->get_rfc_destination( ).

* update an existing search variant
  CALL FUNCTION 'HRRCF_MDL_ADMN_IS_EXT_CAND'
    DESTINATION lv_rfc_dest
    EXPORTING
      candidate             = is_cand_hrobject
    IMPORTING
      is_external           = ev_is_external_candidate
      messages              = et_messages
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with RFC connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.

ENDMETHOD.


METHOD sc_reset_search_mask_group.

  DATA: lv_rfc_dest             TYPE rfcdest,
          lv_message(80)          TYPE c.

  CLEAR: et_messages.

* get RFC destination
  lv_rfc_dest = me->get_rfc_destination( ).

* reset the search mask group
  CALL FUNCTION 'HRRCF_MDL_SRCH_RESET'
    DESTINATION lv_rfc_dest
    EXPORTING
      search_task           = iv_search_task
    IMPORTING
      messages              = et_messages
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with RFC connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.

ENDMETHOD.


METHOD sc_retrieve_all_job_agents.
  DATA: lv_rfc_dest             TYPE rfcdest,
          lv_message(80)          TYPE c.

  CLEAR: et_messages,
          es_job_agents.

* get RFC destination
  lv_rfc_dest = me->get_rfc_destination( ).

* retrieve search variant names
  CALL FUNCTION 'HRRCF_MDL_JOBS_AGENT_RETRIEVE'
    DESTINATION lv_rfc_dest
    EXPORTING
      search_task           = iv_search_task
      iv_user               = iv_user               "N_2345465
    IMPORTING
      agent_list            = es_job_agents
      messages              = et_messages
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with RFC connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.

ENDMETHOD.


METHOD sc_retrieve_job_agent.

  DATA: lv_rfc_dest             TYPE rfcdest,
          lv_message(80)          TYPE c.

  CLEAR: es_query,
         et_messages,
         et_sme_query_tab,
         et_sm_element_tab,
         et_smask_tab.

* get RFC destination
  lv_rfc_dest = me->get_rfc_destination( ).

* retrieve information about the specified search variant
  CALL FUNCTION 'HRRCF_MDL_JOBS_AGENT_READ'
    DESTINATION lv_rfc_dest
    EXPORTING
      search_task           = iv_search_task
      agent_name            = iv_agent_name
      iv_user               = iv_user         "N_2345465
    IMPORTING
      agent                 = es_query
      messages              = et_messages
      sme_query_tab         = et_sme_query_tab
      sm_element_tab        = et_sm_element_tab
      smask_tab             = et_smask_tab
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with RFC connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.

ENDMETHOD.


method SC_SAVE_ALL_JOB_AGENTS.

DATA: lv_rfc_dest             TYPE rfcdest,
          lv_message(80)          TYPE c.
DATA : lv_user  TYPE    sy-uname.           "N_2345465
  CLEAR: et_messages.

  lv_user = is_job_agents-uname.        "N_2345465
  IF lv_user IS INITIAL.                "N_2345465
    lv_user = sy-uname.                 "N_2345465
  ENDIF.                                "N_2345465

* get RFC destination
  lv_rfc_dest = me->get_rfc_destination( ).

* Save details of all agents
  CALL FUNCTION 'HRRCF_MDL_JOBS_AGENT_SAVE'
    DESTINATION lv_rfc_dest
    EXPORTING
      search_task           = iv_search_task
      agent_list            = is_job_agents
*      user                  = sy-uname                                 "HEGDEPR 2047565    "N_2345465
      user                  = lv_user                                   "N_2345465
    IMPORTING
      messages              = et_messages
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with RFC connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.

endmethod.


METHOD sc_save_profile_agent.

 DATA: lv_rfc_dest             TYPE rfcdest,
          lv_message(80)          TYPE c.

  CLEAR: et_messages.

* get RFC destination
  lv_rfc_dest = me->get_rfc_destination( ).

* update an existing search variant
  CALL FUNCTION 'HRRCF_MDL_JOBS_AGENT_SAVE_PROF'
    DESTINATION lv_rfc_dest
    EXPORTING
      profile                 = is_job_agents-profile
      search_task             = iv_search_task
      iv_user                 = is_job_agents-uname                 "N_2345465
    IMPORTING
      messages              = et_messages
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with RFC connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.



ENDMETHOD.


METHOD sc_start_search_job_agents.

  DATA: lv_rfc_dest             TYPE rfcdest,
          lv_message(80)          TYPE c.

  CLEAR: et_messages.

* get RFC destination
  lv_rfc_dest = me->get_rfc_destination( ).

* refresh RFC destination and buffer
  cl_hrrcf_m_rfc_services=>refresh_buffer( lv_rfc_dest ).

* start the search
  CALL FUNCTION 'HRRCF_MDL_SRCH_SEARCH'
    DESTINATION lv_rfc_dest
    EXPORTING
      search_task           = iv_search_task
      hidden_info_tab       = it_hidden_info_tab
      search_language       = iv_search_language
      max_hits              = iv_max_hits
      log_op_fulltext       = iv_log_op_fulltext
      log_op                = iv_log_op
      threshold             = iv_threshold
    IMPORTING
      messages              = et_messages
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with RFC connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.

ENDMETHOD.


METHOD SC_UPDATE_JOB_AGENT.

  DATA: lv_rfc_dest             TYPE rfcdest,
          lv_message(80)          TYPE c.

  CLEAR: et_messages.

* get RFC destination
  lv_rfc_dest = me->get_rfc_destination( ).

* update an existing search variant
  CALL FUNCTION 'HRRCF_MDL_JOBS_AGENT_UPDATE'
    DESTINATION lv_rfc_dest
    EXPORTING
      search_task           = iv_search_task
      agent                 = is_query
      sme_query_tab         = it_sme_query_tab
      sm_element_tab        = it_sm_element_tab
      smask_tab             = it_smask_tab
      is_new_agent          = iv_is_new_agent
    IMPORTING
      messages              = et_messages
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with RFC connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.


ENDMETHOD.


METHOD set_rfc_destination.

  me->gv_rfc_dest = iv_rfc_dest.
ENDMETHOD.
ENDCLASS.