class CL_HRRCF_M_PREFERENCES definition
  public
  inheriting from CL_WD_COMPONENT_ASSISTANCE
  create public .

*"* public components of class CL_HRRCF_M_PREFERENCES
*"* do not include other source files here!!!
public section.

  methods SC_RETRIEVE_DATA
    importing
      !IS_CAND_HROBJECT type HROBJECT
    exporting
      !ET_MESSAGES type BAPIRETTAB
      !EV_INTEREST_GROUP type RCF_TARGET_GRP
      !ET_DJ_RECORDS type RCF_T_MDL_CAND_DESIRED_JOB
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_SET_DATA
    importing
      !IS_CAND_HROBJECT type HROBJECT
      !IV_INTEREST_GROUP type RCF_TARGET_GRP
      !IT_RECORDS type RCF_T_MDL_CAND_DESIRED_JOB
    exporting
      !ET_MESSAGES type BAPIRETTAB
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_DELETE_LOCATION
    importing
      !IS_CAND_HROBJECT type HROBJECT
      !IS_RECORD type RCF_S_MDL_CAND_LOCATION
    exporting
      !ET_MESSAGES type BAPIRETTAB
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_CREATE_LOCATION
    importing
      !IS_CAND_HROBJECT type HROBJECT
      !IS_RECORD type RCF_S_MDL_CAND_LOCATION
    exporting
      !ET_MESSAGES type BAPIRETTAB
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_UPDATE_LOCATION
    importing
      !IS_CAND_HROBJECT type HROBJECT
      !IS_RECORD type RCF_S_MDL_CAND_LOCATION
    exporting
      !ET_MESSAGES type BAPIRETTAB
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_RETRIEVE_LOCATION
    importing
      !IS_CAND_HROBJECT type HROBJECT
    exporting
      !ET_MESSAGES type BAPIRETTAB
      !ET_DL_RECORDS type RCF_T_MDL_CAND_LOCATION
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_RETRIEVE_SYSTEM_SETTING
    exporting
      !ET_MESSAGES type BAPIRETTAB
      !EV_VALUE type GSVAL
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_RETRIEVE_CITIES
    importing
      !IV_REGION type REGIO
      !IV_COUNTRY type LAND1
    exporting
      !ET_MESSAGES type BAPIRETTAB
      !ET_CITIES type RCF_T_MDL_VH
    raising
      CX_HRRCF_RFC_COMMUNICATION .
protected section.
*"* protected components of class CL_HRRCF_M_PREFERENCES
*"* do not include other source files here!!!
private section.
*"* private components of class CL_HRRCF_M_PREFERENCES
*"* do not include other source files here!!!
ENDCLASS.



CLASS CL_HRRCF_M_PREFERENCES IMPLEMENTATION.


METHOD sc_create_location.

  DATA: lv_dest           TYPE rfcdest,
        lt_messages       TYPE bapirettab,
        lv_message(80)    TYPE c.

  CHECK is_cand_hrobject IS NOT INITIAL.

* get rfc destination
  CALL METHOD cl_hrrcf_wd_services=>get_bl_destination
    RECEIVING
      rfc_dest = lv_dest.

  CALL FUNCTION 'HRRCF_MDL_CAND_LOCN_CREATE'
    DESTINATION lv_dest
    EXPORTING
      record                = is_record
      cand_hrobject         = is_cand_hrobject
    IMPORTING
      messages              = et_messages
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with rfc connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.

  cl_hrrcf_m_rfc_services=>commit_and_refresh( lv_dest ).

ENDMETHOD.


METHOD sc_delete_location.

  DATA: lv_dest           TYPE rfcdest,
        lt_messages       TYPE bapirettab,
        lv_message(80)    TYPE c.

  CHECK is_cand_hrobject IS NOT INITIAL.

* get rfc destination
  CALL METHOD cl_hrrcf_wd_services=>get_bl_destination
    RECEIVING
      rfc_dest = lv_dest.

  CALL FUNCTION 'HRRCF_MDL_CAND_LOCN_DELETE'
    DESTINATION lv_dest
    EXPORTING
      record                = is_record
      cand_hrobject         = is_cand_hrobject
    IMPORTING
      messages              = et_messages
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with rfc connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.

  cl_hrrcf_m_rfc_services=>commit_and_refresh( lv_dest ).

ENDMETHOD.


METHOD sc_retrieve_cities.


  DATA: lv_dest   TYPE rfcdest,
        lt_cities TYPE rcf_t_mdl_vh,
        ls_city   TYPE rcf_s_mdl_vh,
        ls_branch_city TYPE rcf_s_branch_city,
        lv_message(80) TYPE c.

  lv_dest = cl_hrrcf_wd_services=>get_bl_destination( ).

* read cities for country/region
  CALL FUNCTION 'HRRCF_MDL_VH_CITY_DES_JOB'
    DESTINATION lv_dest
    EXPORTING
      country               = iv_country
      region                = iv_region
    IMPORTING
      vh_city               = et_cities
      messages              = et_messages
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with rfc connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.

ENDMETHOD.


METHOD sc_retrieve_data.

  DATA: lv_dest           TYPE rfcdest,
        lt_messages       TYPE bapirettab,
        lv_message(80)    TYPE c.


  CHECK is_cand_hrobject IS NOT INITIAL.

* get rfc destination
  CALL METHOD cl_hrrcf_wd_services=>get_bl_destination
    RECEIVING
      rfc_dest = lv_dest.

* retrieve target group
  CALL FUNCTION 'HRRCF_MDL_CAND_IGRP_RETRIEVE'
    DESTINATION lv_dest
    EXPORTING
      cand_hrobject         = is_cand_hrobject
    IMPORTING
      messages              = lt_messages
      interest_group        = ev_interest_group
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with rfc connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.

  APPEND LINES OF lt_messages TO et_messages.

  CALL FUNCTION 'HRRCF_MDL_CAND_DJOB_RETRIEVE'
   DESTINATION lv_dest
   EXPORTING
*   LANGU               = SY-LANGU
     cand_hrobject       = is_cand_hrobject
   IMPORTING
     records             = et_dj_records
     messages            = lt_messages
   EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with rfc connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.

  APPEND LINES OF lt_messages TO et_messages.

ENDMETHOD.


METHOD sc_retrieve_location.

  DATA: lv_dest           TYPE rfcdest,
        lt_messages       TYPE bapirettab,
        lv_message(80)    TYPE c.


  CHECK is_cand_hrobject IS NOT INITIAL.

* get rfc destination
  CALL METHOD cl_hrrcf_wd_services=>get_bl_destination
    RECEIVING
      rfc_dest = lv_dest.

  CALL FUNCTION 'HRRCF_MDL_CAND_LOCN_RETRIEVE'
    DESTINATION lv_dest
    EXPORTING
      cand_hrobject         = is_cand_hrobject
    IMPORTING
      records               = et_dl_records
      messages              = lt_messages
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with rfc connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.

  APPEND LINES OF lt_messages TO et_messages.

ENDMETHOD.


METHOD sc_retrieve_system_setting.

  DATA: lv_dest        TYPE rfcdest,
        lv_message(80) TYPE c.

  lv_dest = cl_hrrcf_wd_services=>get_bl_destination( ).

* read source for desired job data
  CALL FUNCTION 'HRRCF_MDL_UIS_SWITCH_RETRIEVE'
    DESTINATION lv_dest
    EXPORTING
      grp_id                = 'RECFA'
      sem_id                = 'LOCFI'
    IMPORTING
      gs_val                = ev_value
      messages              = et_messages
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with rfc connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.

ENDMETHOD.


METHOD sc_set_data.

  DATA: lv_dest           TYPE rfcdest,
        lt_messages       TYPE bapirettab,
        lv_message(80)    TYPE c.


  CHECK is_cand_hrobject IS NOT INITIAL.

* get rfc destination
  CALL METHOD cl_hrrcf_wd_services=>get_bl_destination
    RECEIVING
      rfc_dest = lv_dest.

* retrieve target group
  CALL FUNCTION 'HRRCF_MDL_CAND_IGRP_SAVE'
    DESTINATION lv_dest
    EXPORTING
      cand_hrobject         = is_cand_hrobject
      interest_group        = iv_interest_group
    IMPORTING
      messages              = lt_messages
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with rfc connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.

  APPEND LINES OF lt_messages TO et_messages.

  IF it_records IS NOT INITIAL.
    CLEAR lt_messages.
* update desired job data
    CALL FUNCTION 'HRRCF_MDL_CAND_DJOB_UPDATE'
      DESTINATION lv_dest
      EXPORTING
        records               = it_records
        cand_hrobject         = is_cand_hrobject
      IMPORTING
        messages              = lt_messages
      EXCEPTIONS
        system_failure        = 1  MESSAGE lv_message
        communication_failure = 2  MESSAGE lv_message.

    IF sy-subrc <> 0.
*   problem with rfc connection
      CASE sy-subrc.
        WHEN 1.
          RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
            EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
        WHEN 2.
          RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
            EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
      ENDCASE.
    ENDIF.

    APPEND LINES OF lt_messages TO et_messages.
  ENDIF.
  cl_hrrcf_m_rfc_services=>commit_and_refresh( lv_dest ).

ENDMETHOD.


METHOD sc_update_location.

  DATA: lv_dest           TYPE rfcdest,
        lt_messages       TYPE bapirettab,
        lv_message(80)    type c.

  CHECK is_cand_hrobject IS NOT INITIAL.

* get rfc destination
  CALL METHOD cl_hrrcf_wd_services=>get_bl_destination
    RECEIVING
      rfc_dest = lv_dest.

  CALL FUNCTION 'HRRCF_MDL_CAND_LOCN_UPDATE'
    DESTINATION lv_dest
    EXPORTING
      record                = is_record
      cand_hrobject         = is_cand_hrobject
    IMPORTING
      messages              = et_messages
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with rfc connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.

  cl_hrrcf_m_rfc_services=>commit_and_refresh( lv_dest ).

ENDMETHOD.
ENDCLASS.