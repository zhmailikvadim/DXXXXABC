class CL_HRRCF_M_WORK_EXP definition
  public
  inheriting from CL_WD_COMPONENT_ASSISTANCE
  create public .

*"* public components of class CL_HRRCF_M_WORK_EXP
*"* do not include other source files here!!!
public section.

  methods SC_RETRIEVE_WORK_EXP
    importing
      !IS_CAND_HROBJECT type HROBJECT
    exporting
      !ET_MESSAGES type BAPIRETTAB
      !ET_WORK_EXPERIENCE type RCF_T_MDL_CAND_WORK_EXPERIENCE
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_CREATE_WORK_EXP
    importing
      !IS_CAND_HROBJECT type HROBJECT
      !IS_WORKEXPERIENCE type RCF_S_MDL_CAND_WORK_EXPERIENCE
    exporting
      !ET_MESSAGES type BAPIRETTAB
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_UPDATE_WORK_EXP
    importing
      !IS_CAND_HROBJECT type HROBJECT
      !IS_WORKEXPERIENCE type RCF_S_MDL_CAND_WORK_EXPERIENCE
    exporting
      !ET_MESSAGES type BAPIRETTAB
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_DELETE_WORK_EXP
    importing
      !IS_CAND_HROBJECT type HROBJECT
      !IS_WORKEXPERIENCE type RCF_S_MDL_CAND_WORK_EXPERIENCE
    exporting
      !ET_MESSAGES type BAPIRETTAB
    raising
      CX_HRRCF_RFC_COMMUNICATION .
protected section.
*"* protected components of class CL_HRRCF_M_WORK_EXP
*"* do not include other source files here!!!
private section.
*"* private components of class CL_HRRCF_M_WORK_EXP
*"* do not include other source files here!!!
ENDCLASS.



CLASS CL_HRRCF_M_WORK_EXP IMPLEMENTATION.


METHOD sc_create_work_exp.

  DATA: lv_dest        TYPE rfcdest,
        lv_message(80) TYPE c.

* get rfc destination
  CALL METHOD cl_hrrcf_wd_services=>get_bl_destination
    RECEIVING
      rfc_dest = lv_dest.

  CALL FUNCTION 'HRRCF_MDL_CAND_WORK_CREATE'
    DESTINATION lv_dest
    EXPORTING
      record                = is_workexperience
      cand_hrobject         = is_cand_hrobject
    IMPORTING
      messages              = et_messages
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with rfc connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.

  cl_hrrcf_m_rfc_services=>commit_and_refresh( lv_dest ).

ENDMETHOD.


METHOD sc_delete_work_exp.

  DATA: lv_dest        TYPE rfcdest,
        lv_message(80) TYPE c.

* get rfc destination
  CALL METHOD cl_hrrcf_wd_services=>get_bl_destination
    RECEIVING
      rfc_dest = lv_dest.

  CALL FUNCTION 'HRRCF_MDL_CAND_WORK_DELETE'
    DESTINATION lv_dest
    EXPORTING
      record                = is_workexperience
      cand_hrobject         = is_cand_hrobject
    IMPORTING
      messages              = et_messages
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with rfc connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.

  cl_hrrcf_m_rfc_services=>commit_and_refresh( lv_dest ).

ENDMETHOD.


METHOD sc_retrieve_work_exp.

  DATA: lv_dest        TYPE rfcdest,
        lv_message(80) TYPE c.

* get rfc destination
  CALL METHOD cl_hrrcf_wd_services=>get_bl_destination
    RECEIVING
      rfc_dest = lv_dest.

* close rfc connection for destroying buffer
  cl_hrrcf_m_rfc_services=>reset_rfc_connection( lv_dest ).

  CALL FUNCTION 'HRRCF_MDL_CAND_WORK_RETRIEVE'
    DESTINATION lv_dest
    EXPORTING
      cand_hrobject         = is_cand_hrobject
    IMPORTING
      records               = et_work_experience
      messages              = et_messages
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with rfc connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.

ENDMETHOD.


METHOD sc_update_work_exp.

  DATA: lv_dest        TYPE rfcdest,
        lv_message(80) TYPE c.

* get rfc destination
  CALL METHOD cl_hrrcf_wd_services=>get_bl_destination
    RECEIVING
      rfc_dest = lv_dest.
  CALL FUNCTION 'HRRCF_MDL_CDCYLIST_UPDATE_SET'
   DESTINATION lv_dest
    EXPORTING
      iv_no_cdcylist_update       = abap_true
      is_hrobject                 = is_cand_hrobject
          .
  CALL FUNCTION 'HRRCF_MDL_CAND_WORK_UPDATE'
    DESTINATION lv_dest
    EXPORTING
      record                = is_workexperience
      cand_hrobject         = is_cand_hrobject
    IMPORTING
      messages              = et_messages
    EXCEPTIONS
      system_failure        = 1  MESSAGE lv_message
      communication_failure = 2  MESSAGE lv_message.

  IF sy-subrc <> 0.
*   problem with rfc connection
    CASE sy-subrc.
      WHEN 1.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.
  CALL FUNCTION 'HRRCF_MDL_CDCYLIST_UPDATE_SET'
   DESTINATION lv_dest
    EXPORTING
      iv_no_cdcylist_update       = abap_true
      is_hrobject                 = is_cand_hrobject
          .
  cl_hrrcf_m_rfc_services=>commit_and_refresh( lv_dest ).

ENDMETHOD.
ENDCLASS.