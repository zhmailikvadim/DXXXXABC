class ZCL_HRRCF_PUBLISHER_CENTR definition
  public
  final
  create public .

public section.

  interfaces IF_HRRCF_CONSTANTS .
  interfaces IF_HRRCF_PUBLISHER .
protected section.
private section.

  aliases FALSE
    for IF_HRRCF_CONSTANTS~FALSE .
  aliases TRUE
    for IF_HRRCF_CONSTANTS~TRUE .
  aliases REPUBLISH_REQUIRED
    for IF_HRRCF_PUBLISHER~REPUBLISH_REQUIRED .
  aliases WITHDRAW_POSSIBLE
    for IF_HRRCF_PUBLISHER~WITHDRAW_POSSIBLE .

  constants POSTING_CHANNEL_EXT type RCF_POSTING_CHANNEL value '9001'. "#EC NOTEXT
ENDCLASS.



CLASS ZCL_HRRCF_PUBLISHER_CENTR IMPLEMENTATION.


  method IF_HRRCF_PUBLISHER~HJ_FLAG_CHANGEABLE.
    return = false.
  endmethod.


  method IF_HRRCF_PUBLISHER~HOT_JOBS_ALLOWED.
    return = false.
  endmethod.


  method IF_HRRCF_PUBLISHER~ON_PUBL_PERIOD_CHANGE.
    IF NOT ps_posting_instance-posting_channel = posting_channel_ext.
*     No further processing in case a different posting channel is used

    ELSEIF me->if_hrrcf_publisher~publ_period_changeable( ps_posting_instance-posting_channel ) = false.
*     This situation can not really happen as the value should always be 'true' in this class
      RAISE EXCEPTION TYPE cx_hrrcf.
    ELSE.
*     Update T77RCF_EXT_PUB
      CALL METHOD cl_hrrcf_t77rcf_ext_pub=>change_publ_period
        EXPORTING
          ps_posting_instance = ps_posting_instance.
    ENDIF.
  endmethod.


  method IF_HRRCF_PUBLISHER~PUBLISH.
    DATA:
      ls_external_publication TYPE t77rcf_ext_pub.
*
    IF NOT posting_instance-posting_channel = posting_channel_ext.
*     RAISE EXCEPTION TYPE cx_hrrcf.
    ELSE.
     MOVE-CORRESPONDING posting_instance TO ls_external_publication.
     cl_hrrcf_t77rcf_ext_pub=>insert_record( ls_external_publication ).
    ENDIF.
*
  endmethod.


  method IF_HRRCF_PUBLISHER~PUBL_PERIOD_CHANGEABLE.
    IF NOT p_posting_channel = posting_channel_ext.
      p_publ_period_changeable = false.
    ELSE.
      p_publ_period_changeable = true.
    ENDIF.
  endmethod.


  method IF_HRRCF_PUBLISHER~REPUBLISH.

    data: lo_post_instance_bl   type ref to cl_hrrcf_posting_inst_bl,
          ls_publ_text          type t77rcf_publ_txts.

    if not ps_posting_instance-posting_channel = posting_channel_ext.
*     No further processing in case a different posting channel is used

    elseif me->republish_required( ps_posting_instance-posting_channel ) = false.
*     This situation can not really happen as republish_required should always be 'true' here

      raise exception type cx_hrrcf.

    else.

*     Mark the publication as unpublished, so that it gets published again
      call method cl_hrrcf_t77rcf_ext_pub=>mark_as_unpublished
        exporting
          ps_posting_instance = ps_posting_instance.

*     Update table T77RCF_PUBL_TXTS, because the posting title might have been changed
      lo_post_instance_bl = cl_hrrcf_posting_inst_bl=>get_instance( ).

      ls_publ_text-langu = ps_posting_instance-language.
      ls_publ_text-pinst_guid = ps_posting_instance-pinst_guid.
      ls_publ_text-mandt = sy-mandt.
      ls_publ_text-posting_channel = posting_channel_ext.

      lo_post_instance_bl->get_frozen_post_inst_data(
        exporting
          p_pinst_guid  = ps_posting_instance-pinst_guid
        importing
          p_post_header = ls_publ_text-posting_header ).

      cl_hrrcf_t77rcf_publ_txts=>update_publ_text( ls_publ_text ).

    endif.
  endmethod.


  method IF_HRRCF_PUBLISHER~REPUBLISH_REQUIRED.
    IF NOT p_posting_channel = posting_channel_ext.
      return = false.
    ELSE.
      return = true.
    ENDIF.

  endmethod.


  method IF_HRRCF_PUBLISHER~WITHDRAW.
*   This method is called only if the status of the posting instance is
*   changed from 'released' to 'withdrawn'
    DATA:
      ls_hrikey TYPE hrikey.
*
*   This method is only responsible for for one posting channel
    IF NOT posting_instance-posting_channel = posting_channel_ext.
      RAISE EXCEPTION TYPE cx_hrrcf.
*
*   Check if the status transition is allowed
    ELSEIF me->withdraw_possible(
                              posting_instance-posting_channel ) = false.
      RAISE EXCEPTION TYPE cx_hrrcf.
*   Postings of this channel are automatically invisible after the
*   publication period is over. Afterwards a reorg may delete the entry
*   and the method 'set_withdraw_flag' would fail
    ELSEIF posting_instance-end_date GE sy-datum.
      MOVE-CORRESPONDING posting_instance TO ls_hrikey.
      cl_hrrcf_t77rcf_ext_pub=>set_withdraw_flag( ls_hrikey ).
    ENDIF.
*
  endmethod.


  method IF_HRRCF_PUBLISHER~WITHDRAW_POSSIBLE.
* This method is only responsible for for one posting channel
    IF NOT posting_channel = posting_channel_ext.
      return = false.
    ELSE.
      return = true.
    ENDIF.
*
  endmethod.
ENDCLASS.