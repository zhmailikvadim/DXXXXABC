CLASS zcl_recruitment_static DEFINITION
  PUBLIC FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.
    CLASS-METHODS set_candidate_personal
      IMPORTING is_candidate TYPE zhr_s_sync_btw_erp_and_hr.
ENDCLASS.


CLASS zcl_recruitment_static IMPLEMENTATION.
  METHOD set_candidate_personal.
    DATA ls_personal_data             TYPE rcf_s_mdl_cand_personal_data.
    DATA ls_cand_hrobject             TYPE hrobject.
    DATA lv_email                     TYPE ad_smtpadr.
    DATA lt_phone_data                TYPE rcf_t_mdl_cand_commn_telephone.
    DATA lt_address_data              TYPE rcf_t_mdl_cand_commn_address.
    DATA lv_preferred_phone_channel   TYPE rcf_comm_channel.
    DATA lv_preferred_address_channel TYPE rcf_comm_channel.
    DATA lo_ex                        TYPE REF TO cx_root.
    DATA lo_message_manager           TYPE REF TO if_wd_message_manager.

    "sy-uname = is_candidate-candidate_header-zhr_user.

    ls_personal_data = CORRESPONDING #( is_candidate-candidate_header MAPPING birthdate = gbdat
                                                                              firstname = vorna
                                                                              lastname =  nachn
                                                                              middlename = nach2 ).

    ls_cand_hrobject = CORRESPONDING #( is_candidate-candidate_header MAPPING objid = objid
                                                                              otype = otype
                                                                              plvar = plvar ).

    lv_email = is_candidate-candidate_header-num01_email.

    lt_phone_data = VALUE #(
        ( channel = '01' channel_description = 'Домашний телефон' telephone = is_candidate-candidate_header-num02_phone1 )
        ( channel = '02' channel_description = 'Мобильный телефон' telephone = is_candidate-candidate_header-num02_phone2 ) ).

    lt_address_data = VALUE #( channel_description = 'Адрес постоянной регистрации'
                               ( channel = '01'
                                 street  = is_candidate-candidate_header-stras
                                 street2 = is_candidate-candidate_header-hsnmr
                                 region  = is_candidate-candidate_header-state
                                 city    = is_candidate-candidate_header-ort01 )
                               ( channel = '02'
                                 street  = is_candidate-candidate_header-strasf
                                 street2 = is_candidate-candidate_header-hsnmrf
                                 region  = is_candidate-candidate_header-statef
                                 city    = is_candidate-candidate_header-ort01f ) ).

    TRY.
        "
        DATA(lo_hrrcf_m_personl_data) = NEW cl_hrrcf_m_personl_data( ).
        lo_hrrcf_m_personl_data->sc_save_cand_data(
          EXPORTING is_personal_data             = ls_personal_data
                    is_cand_hrobject             = ls_cand_hrobject
                    iv_preferred_phone_channel   = lv_preferred_phone_channel
                    iv_preferred_address_channel = lv_preferred_address_channel
                    iv_email                     = lv_email
                    it_phone_data                = lt_phone_data
                    it_address_data              = lt_address_data
          IMPORTING
          " TODO: variable is assigned but never used (ABAP cleaner)
                    et_messages                  = DATA(et_messages) ).

      CATCH cx_root INTO lo_ex.
        cl_hrrcf_exception_handler=>write_exception_log( ex = lo_ex ).

        lo_message_manager->report_t100_message( msgid = 'HRRCF0002'
                                                 msgno = '800'
                                                 msgty = 'E' ).
    ENDTRY.
  ENDMETHOD.
ENDCLASS.