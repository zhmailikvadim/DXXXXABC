*----------------------------------------------------------------------*
*   INCLUDE LBUBA_4A02                                                 *
*----------------------------------------------------------------------*
*       Authority check : business partner data                        *
*----------------------------------------------------------------------*
FORM PARTNER_AUTHORITY_CHECK TABLES ET_RETURN STRUCTURE BAPIRET2
                             USING  IV_AKTYP LIKE TBZ0K-AKTYP
                                    IV_AUTHORIZATIONGROUP LIKE
                                    BUT000-AUGRP
                                    IV_RLTYP LIKE BUS0RLTYP-RLTYP.

*------ local data declaration ----------------------------------------
  DATA: LS_RETURN                LIKE BAPIRET2,
        LV_MSGV1                 LIKE SY-MSGV1,
        LV_RC                    LIKE SY-SUBRC,
        LV_AUTH_CHECK_SUPPRESSED LIKE BOOLE-BOOLE.
  DATA: ls_auth_buf_grp TYPE ty_auth_buf_grp,
        ls_auth_buf_rlt TYPE ty_auth_buf_rlt.

*---> Authority check: Autority-check: Authorization group
  IF NOT IV_AUTHORIZATIONGROUP IS INITIAL.
    READ TABLE gt_auth_buf_grp INTO ls_auth_buf_grp WITH KEY activitytype = iv_aktyp begru = iv_authorizationgroup.
        IF sy-subrc = 0.
           lv_rc = ls_auth_buf_grp-status.
        ELSE.
           AUTHORITY-CHECK OBJECT 'B_BUPA_GRP'
             ID 'ACTVT' FIELD IV_AKTYP
             ID 'BEGRU' FIELD IV_AUTHORIZATIONGROUP.

           LV_RC = SY-SUBRC.
           ls_auth_buf_grp-begru = iv_authorizationgroup.
           ls_auth_buf_grp-activitytype = iv_aktyp.
           ls_auth_buf_grp-status = sy-subrc.
           APPEND ls_auth_buf_grp TO gt_auth_buf_grp.
        ENDIF.
  ENDIF.

*----> No authority
*--> Activity: Create
  IF NOT LV_RC IS INITIAL.
    CASE IV_AKTYP.
      WHEN GC_AKTYP_CREATE.
        IF 1 = 2. MESSAGE E272(R1) WITH IV_AUTHORIZATIONGROUP. ENDIF.
        LV_MSGV1 = IV_AUTHORIZATIONGROUP.
        CALL FUNCTION 'BALW_BAPIRETURN_GET2'
             EXPORTING
                  TYPE   = GC_MSGTY_ERROR
                  CL     = GC_MSGID_R1
                  NUMBER = 272
                  PAR1   = LV_MSGV1
             IMPORTING
                  RETURN = LS_RETURN.
        APPEND LS_RETURN TO ET_RETURN.
        EXIT.

*--> activity: change
      WHEN GC_AKTYP_CHANGE.
        IF 1 = 2. MESSAGE E273(R1) WITH IV_AUTHORIZATIONGROUP. ENDIF.
        LV_MSGV1 = IV_AUTHORIZATIONGROUP.
        CALL FUNCTION 'BALW_BAPIRETURN_GET2'
             EXPORTING
                  TYPE   = GC_MSGTY_ERROR
                  CL     = GC_MSGID_R1
                  NUMBER = 273
                  PAR1   = LV_MSGV1
             IMPORTING
                  RETURN = LS_RETURN.
        APPEND LS_RETURN TO ET_RETURN.
        EXIT.

*--> activity: Display
      WHEN GC_AKTYP_DISPLAY.
        IF 1 = 2. MESSAGE E274(R1) WITH IV_AUTHORIZATIONGROUP. ENDIF.
        LV_MSGV1 = IV_AUTHORIZATIONGROUP.
        CALL FUNCTION 'BALW_BAPIRETURN_GET2'
             EXPORTING
                  TYPE   = GC_MSGTY_ERROR
                  CL     = GC_MSGID_R1
                  NUMBER = 274
                  PAR1   = LV_MSGV1
             IMPORTING
                  RETURN = LS_RETURN.
        APPEND LS_RETURN TO ET_RETURN.
        EXIT.
    ENDCASE.
  ENDIF.

  IF  IV_RLTYP   EQ   SPACE.
    READ TABLE gt_auth_buf_rlt INTO ls_auth_buf_rlt WITH KEY activitytype = iv_aktyp rltyp = ' '.
      IF sy-subrc = 0.
         lv_rc = ls_auth_buf_rlt-status.
      ELSE.
         AUTHORITY-CHECK OBJECT 'B_BUPA_RLT'
            ID 'ACTVT' FIELD IV_AKTYP
            ID 'RLTYP' DUMMY.  "EC NEEDED
         lv_rc = sy-subrc.
         ls_auth_buf_rlt-rltyp = ' '.
         ls_auth_buf_rlt-activitytype = iv_aktyp.
         ls_auth_buf_rlt-status = sy-subrc.
         APPEND ls_auth_buf_rlt TO gt_auth_buf_rlt.
      ENDIF.
  ELSE.
     READ TABLE gt_auth_buf_rlt INTO ls_auth_buf_rlt WITH KEY activitytype = iv_aktyp rltyp = iv_rltyp.
      IF sy-subrc = 0.
         lv_rc = ls_auth_buf_rlt-status.
      ELSE.
*---> Authority B_BUPA_RLT (check role type)
        AUTHORITY-CHECK OBJECT 'B_BUPA_RLT'
            ID 'ACTVT' FIELD IV_AKTYP
            ID 'RLTYP' FIELD IV_RLTYP.
         lv_rc = sy-subrc.
         ls_auth_buf_rlt-rltyp = iv_rltyp.
         ls_auth_buf_rlt-activitytype = iv_aktyp.
         ls_auth_buf_rlt-status = sy-subrc.
         APPEND ls_auth_buf_rlt TO gt_auth_buf_rlt.
      ENDIF.
  ENDIF.

*  LV_RC = SY-SUBRC.

*--> no authority => error message
  IF NOT LV_RC IS INITIAL.
    If IV_RLTYP EQ SPACE.
      IV_RLTYP = '000000'.
      ENDIF.
    SELECT SINGLE * FROM TBZ0T WHERE SPRAS = SY-LANGU
                               AND   OBJAP = GC_OBJAP_BUPA
                               AND   RLTYP = IV_RLTYP.
    CASE IV_AKTYP.

*--> activity: Create
      WHEN GC_AKTYP_CREATE.
        IF 1 = 2. MESSAGE E275(R1) WITH TBZ0T-RTITL. ENDIF.
        LV_MSGV1 = TBZ0T-RTITL.
        CALL FUNCTION 'BALW_BAPIRETURN_GET2'
             EXPORTING
                  TYPE   = GC_MSGTY_ERROR
                  CL     = GC_MSGID_R1
                  NUMBER = 275
                  PAR1   = LV_MSGV1
             IMPORTING
                  RETURN = LS_RETURN.
        APPEND LS_RETURN TO ET_RETURN.
        EXIT.

*--> activity: change
      WHEN GC_AKTYP_CHANGE.
        IF 1 = 2. MESSAGE E276(R1) WITH TBZ0T-RTITL. ENDIF.
        LV_MSGV1 = TBZ0T-RTITL.
        CALL FUNCTION 'BALW_BAPIRETURN_GET2'
             EXPORTING
                  TYPE   = GC_MSGTY_ERROR
                  CL     = GC_MSGID_R1
                  NUMBER = 276
                  PAR1   = LV_MSGV1
             IMPORTING
                  RETURN = LS_RETURN.
        APPEND LS_RETURN TO ET_RETURN.
        EXIT.

*--> activity: display
      WHEN GC_AKTYP_DISPLAY.
        IF 1 = 2. MESSAGE E277(R1) WITH TBZ0T-RTITL. ENDIF.
        LV_MSGV1 = TBZ0T-RTITL.
        CALL FUNCTION 'BALW_BAPIRETURN_GET2'
             EXPORTING
                  TYPE   = GC_MSGTY_ERROR
                  CL     = GC_MSGID_R1
                  NUMBER = 277
                  PAR1   = LV_MSGV1
             IMPORTING
                  RETURN = LS_RETURN.
        APPEND LS_RETURN TO ET_RETURN.
        EXIT.
    ENDCASE.
  ENDIF.
ENDFORM.
*eject.


*----------------------------------------------------------------------*
*       Authority check; Business partner data; only the roles         *
*----------------------------------------------------------------------*
FORM AUTHORITY_CHECK TABLES ET_RETURN STRUCTURE BAPIRET2
                             USING  IV_AKTYP LIKE TBZ0K-AKTYP
                                    IV_RLTYP LIKE BUS0RLTYP-RLTYP.

*------ local data declaration ----------------------------------------
  DATA: LS_RETURN LIKE BAPIRET2,
        LV_MSGV1 LIKE SY-MSGV1,
        LV_RC LIKE SY-SUBRC,
        ls_auth_buf_rlt TYPE ty_auth_buf_rlt.


  READ TABLE gt_auth_buf_rlt INTO ls_auth_buf_rlt WITH KEY activitytype = iv_aktyp rltyp = iv_rltyp.
  IF sy-subrc = 0.
     lv_rc = ls_auth_buf_rlt-status.
  ELSE.
*---> Autority B_BUPA_RLT (check role type)
*Authority Check  note 2441447 Start
  IF IV_AKTYP EQ 'F4'.
    AUTHORITY-CHECK OBJECT 'B_BUPA_RLT'
            ID 'ACTVT' FIELD  'F4'
            ID 'RLTYP' FIELD  IV_RLTYP.

  IF sy-subrc IS NOT INITIAL.
    AUTHORITY-CHECK OBJECT 'B_BUPA_RLT'
            ID 'ACTVT' FIELD '03'
            ID 'RLTYP' FIELD IV_RLTYP.
  ENDIF.
  ELSE.
    AUTHORITY-CHECK OBJECT 'B_BUPA_RLT'
              ID 'ACTVT' FIELD IV_AKTYP
              ID 'RLTYP' FIELD  IV_RLTYP.
  ENDIF.
*Authority Check  note 2441447 End

  LV_RC = SY-SUBRC.
     ls_auth_buf_rlt-rltyp = iv_rltyp.
     ls_auth_buf_rlt-activitytype = iv_aktyp.
     ls_auth_buf_rlt-status = sy-subrc.
     APPEND ls_auth_buf_rlt TO gt_auth_buf_rlt.
  ENDIF.

*--> no authority => error message
  IF NOT LV_RC IS INITIAL.
    SELECT SINGLE * FROM TBZ0T WHERE SPRAS = SY-LANGU
                               AND   OBJAP = GC_OBJAP_BUPA
                               AND   RLTYP = IV_RLTYP.
    CASE IV_AKTYP.

*--> activity: Create
      WHEN GC_AKTYP_CREATE.
        IF 1 = 2. MESSAGE E275(R1) WITH TBZ0T-RTITL. ENDIF.
        LV_MSGV1 = TBZ0T-RTITL.
        CALL FUNCTION 'BALW_BAPIRETURN_GET2'
             EXPORTING
                  TYPE   = GC_MSGTY_ERROR
                  CL     = GC_MSGID_R1
                  NUMBER = 275
                  PAR1   = LV_MSGV1
             IMPORTING
                  RETURN = LS_RETURN.
        APPEND LS_RETURN TO ET_RETURN.
        EXIT.

*--> actvity: Change
      WHEN GC_AKTYP_CHANGE.
        IF 1 = 2. MESSAGE E276(R1) WITH TBZ0T-RTITL. ENDIF.
        LV_MSGV1 = TBZ0T-RTITL.
        CALL FUNCTION 'BALW_BAPIRETURN_GET2'
             EXPORTING
                  TYPE   = GC_MSGTY_ERROR
                  CL     = GC_MSGID_R1
                  NUMBER = 276
                  PAR1   = LV_MSGV1
             IMPORTING
                  RETURN = LS_RETURN.
        APPEND LS_RETURN TO ET_RETURN.
        EXIT.

*--> activity: display
      WHEN GC_AKTYP_DISPLAY.
        IF 1 = 2. MESSAGE E277(R1) WITH TBZ0T-RTITL. ENDIF.
        LV_MSGV1 = TBZ0T-RTITL.
        CALL FUNCTION 'BALW_BAPIRETURN_GET2'
             EXPORTING
                  TYPE   = GC_MSGTY_ERROR
                  CL     = GC_MSGID_R1
                  NUMBER = 277
                  PAR1   = LV_MSGV1
             IMPORTING
                  RETURN = LS_RETURN.
        APPEND LS_RETURN TO ET_RETURN.
        EXIT.
    ENDCASE.
  ENDIF.
ENDFORM.
