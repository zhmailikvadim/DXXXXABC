FUNCTION HR_ERC_REGISTER_CANDIDATE
  IMPORTING
    EXT_APPL_DATA LIKE BAPI_ERC_MD_EXT
    VALUE(IV_EA_FLAG) TYPE BOOLE_D OPTIONAL
  EXPORTING
    CANDIDATE LIKE HROBJECT
  TABLES
    RETURN LIKE BAPIRET2.





* Author   : PC
* Additions: AS, HGB

  DATA: lo_exception TYPE REF TO cx_hrrcf,
        lt_return    TYPE bapirettab,
        ls_return    TYPE bapiret2,
        ls_ext_appl_data TYPE REF TO BAPI_ERC_MD_EXT,
        lo_cand_info TYPE REF TO cl_hrrcf_candidate_info.

  CLEAR: candidate,
         return,
         return[].

" check if email is already
    IF NOT EXT_APPL_DATA-E_MAIL IS INITIAL.
    TRY.
      IF cl_hrrcf_address_service=>is_email_unique( EXT_APPL_DATA-E_MAIL ) = false.
*   the email exists
          IF 1 EQ 0.
            MESSAGE e014(hrrcf0002).
          ENDIF.

          CALL FUNCTION 'BALW_BAPIRETURN_GET2'
            EXPORTING
              type   = 'E'
              cl     = 'HRRCF0002'
              number = 014
            IMPORTING
              return = ls_return.
          APPEND ls_return TO return.
        ENDIF.
      CATCH cx_hrrcf_address_service INTO lo_exception.
    ENDTRY.
  ENDIF.

CHECK return[] IS INITIAL.

  TRY.
*     Create candidate object and enter candidate's personal data
      PERFORM register_candidate
        TABLES
          lt_return
        USING
          ext_appl_data
          iv_ea_flag
        CHANGING
          candidate.

      IF lt_return IS NOT INITIAL.
        APPEND LINES OF lt_return TO return.
      ENDIF.

      IF candidate IS NOT INITIAL.
*       Assign candidate's target group
        PERFORM assign_target_group
          TABLES
            lt_return
          USING
            candidate
            ext_appl_data-interest_grp.

        IF lt_return IS NOT INITIAL.
          APPEND LINES OF lt_return TO return.
        ENDIF.

*       Enter candidate's contact data
        PERFORM insert_contact_data_mde
          TABLES
            lt_return
          USING
            candidate
            ext_appl_data.

        IF lt_return IS NOT INITIAL.
          APPEND LINES OF lt_return TO return.
        ENDIF.

        CALL METHOD cl_hrrcf_candidate_info=>get_instance      "N1783912
          EXPORTING
            hrobject = candidate
          IMPORTING
            instance = lo_cand_info.

        CALL METHOD lo_cand_info->update_private_email
         EXPORTING
          ps_email     = ext_appl_data-e_mail.                 "N1783912

      ENDIF.

    CATCH cx_hrrcf INTO lo_exception.
      CALL METHOD cl_hrrcf_exception_handler=>write_exception_log
        EXPORTING
          ex      = lo_exception.
      CALL FUNCTION 'BALW_BAPIRETURN_GET2'
        EXPORTING
          type    = lo_exception->message_type
          cl      = lo_exception->message_class
          number  = lo_exception->message_number
          par1    = lo_exception->message_par1
          par2    = lo_exception->message_par2
          par3    = lo_exception->message_par3
          par4    = lo_exception->message_par4
        IMPORTING
          return  = return.
      APPEND return TO return.
  ENDTRY.

  DELETE return WHERE type NE c_error AND type NE c_abort.

ENDFUNCTION.
