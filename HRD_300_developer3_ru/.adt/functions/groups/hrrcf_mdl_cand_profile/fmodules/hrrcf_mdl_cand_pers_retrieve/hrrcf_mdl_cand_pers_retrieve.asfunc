FUNCTION HRRCF_MDL_CAND_PERS_RETRIEVE
  IMPORTING
    VALUE(LANGU) TYPE SPRAS DEFAULT SY-LANGU
    VALUE(CAND_HROBJECT) TYPE HROBJECT OPTIONAL
  EXPORTING
    VALUE(PERSONAL_DATA) TYPE RCF_S_MDL_CAND_PERSONAL_DATA
    VALUE(MESSAGES) TYPE BAPIRETTAB.



*
* Author: BM

*
  DATA:
    ls_cand_hrobject       TYPE hrobject,
    ls_mdl                 TYPE rcf_s_mdl_cand_personal_data,
    ls_message             TYPE bapiret2,
    lo_cand_bupa_bl        TYPE REF TO cl_hrrcf_candidate_bupa_bl,
    ls_centraldata_person  TYPE bapibus1006_central_person,
    ls_centraldata         TYPE bapibus1006_central,
    lo_ex                  TYPE REF TO cx_root.

  TRY.
*--   Clear return parameters
      CLEAR: personal_data, messages[].

*--   Get candidate hrobject for user, if necessary
      IF NOT cand_hrobject IS SUPPLIED.
        CALL METHOD cl_hrrcf_candidate_admin_bl=>get_candidate
          EXPORTING
            p_user          = sy-uname
          IMPORTING
            p_cand_hrobject = ls_cand_hrobject.
      ELSE.
*--   Check whether imported candidate object belongs to user
        IF cl_hrrcf_candidate_admin_bl=>is_cand_of_current_user( is_cand = cand_hrobject ) = abap_true.
          ls_cand_hrobject = cand_hrobject.
        ELSE.
          AUTHORITY-CHECK OBJECT 'P_RCF_POOL' ID 'RCF_POOL' FIELD 'DIRECT_ACC'.
          IF sy-subrc <> 0.
            RAISE EXCEPTION TYPE cx_hrrcf_authority
            EXPORTING
              message_class  = 'HRRCF0002'
              message_number = '300'
              message_type   = 'A'.
          ELSE.
            ls_cand_hrobject = cand_hrobject.
          ENDIF.
        ENDIF.
      ENDIF.

*--   Get instance of business logic facade
      CALL METHOD cl_hrrcf_candidate_bupa_bl=>get_instance
        RECEIVING
          return = lo_cand_bupa_bl.

      CHECK lo_cand_bupa_bl IS BOUND.

*--   Read Bupa data

      CALL METHOD lo_cand_bupa_bl->get_pers_data
        EXPORTING
          ps_cand_hrobject     = ls_cand_hrobject
        IMPORTING
          ps_centraldata       = ls_centraldata
          ps_centraldataperson = ls_centraldata_person.

      MOVE ls_centraldata-title_key TO personal_data-formofaddress.
      MOVE ls_centraldata_person-firstname TO personal_data-firstname.
      MOVE ls_centraldata_person-lastname TO personal_data-lastname.
      MOVE ls_centraldata_person-middlename TO personal_data-middlename.
      MOVE ls_centraldata_person-title_aca1 TO personal_data-title.
      MOVE ls_centraldata_person-sex TO personal_data-sex.
      MOVE ls_centraldata_person-birthdate TO personal_data-birthdate.
      MOVE ls_centraldata_person-fullname TO personal_data-fullname.
      MOVE ls_centraldata_person-prefix1 TO personal_data-prefix1.
      MOVE ls_centraldata_person-title_aca2 TO personal_data-title_aca2.
      MOVE ls_centraldata_person-title_sppl TO personal_data-title_sppl.

    CATCH cx_root INTO lo_ex.
*     write exception to slg1
      cl_hrrcf_exception_handler=>write_exception_log( ex = lo_ex ).

*--   Convert exception into BAPI return parameter
      IF 1 = 0.
        MESSAGE a802(hrrcf0002) WITH 'HRRCF_MDL_CAND_PERS_RETRIEVE'.
      ENDIF.
      CALL FUNCTION 'BALW_BAPIRETURN_GET2'
        EXPORTING
          type   = 'A'
          cl     = 'HRRCF0002'
          number = '802'
          par1   = 'HRRCF_MDL_CAND_PERS_RETRIEVE'
        IMPORTING
          return = ls_message.
      APPEND ls_message TO messages.
  ENDTRY.

ENDFUNCTION.
