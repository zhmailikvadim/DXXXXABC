FUNCTION HRRCF_MDL_CAND_PERS_UPDATE
  IMPORTING
    VALUE(PERSONAL_DATA) TYPE RCF_S_MDL_CAND_PERSONAL_DATA
    VALUE(CAND_HROBJECT) TYPE HROBJECT OPTIONAL
  EXPORTING
    VALUE(MESSAGES) TYPE BAPIRETTAB.




  DATA ls_cand_hrobject TYPE hrobject.
  DATA lo_cand_bupa_bl TYPE REF TO cl_hrrcf_candidate_bupa_bl.
  DATA lo_ex TYPE REF TO cx_root.
  DATA: ls_message TYPE bapiret2,
        ls_centraldata_person_new  TYPE bapibus1006_central_person,
        ls_centraldata_new TYPE bapibus1006_central,
        ls_centraldata_person  TYPE bapibus1006_central_person,
        ls_centraldata TYPE bapibus1006_central.


* clear returning parameters
  REFRESH messages.

  TRY.

*     get candidate hrobject for user, if necessary
      IF NOT cand_hrobject IS SUPPLIED.
        CALL METHOD cl_hrrcf_candidate_admin_bl=>get_candidate
          EXPORTING
            p_user          = sy-uname
          IMPORTING
            p_cand_hrobject = ls_cand_hrobject.
      ELSE.
*     check whether imported candidate object belongs to user
        IF cl_hrrcf_candidate_admin_bl=>is_cand_of_current_user( is_cand = cand_hrobject ) = abap_true.
          ls_cand_hrobject = cand_hrobject.
        ELSE.
          RAISE EXCEPTION TYPE cx_hrrcf_authority
            EXPORTING
              message_class  = 'HRRCF0002'
              message_number = '300'
              message_type   = 'A'.
        ENDIF.
      ENDIF.

*     get instance of business logic facade
      CALL METHOD cl_hrrcf_candidate_bupa_bl=>get_instance
        RECEIVING
          return = lo_cand_bupa_bl.

      CHECK lo_cand_bupa_bl IS BOUND.
*--get central person information for saving

      CALL METHOD lo_cand_bupa_bl->get_pers_data
        IMPORTING
          ps_centraldataperson = ls_centraldata_person
          ps_centraldata       = ls_centraldata.

      IF personal_data-lastname IS INITIAL.
*       last name needs to be filled
        IF 1 = 0.
          MESSAGE e125(hrrcf0002).
        ENDIF.
        CALL FUNCTION 'BALW_BAPIRETURN_GET2'
          EXPORTING
            type   = 'E'
            cl     = 'HRRCF0002'
            number = '125'
          IMPORTING
            return = ls_message.
        APPEND ls_message TO messages.
        RETURN.
      ENDIF.

*     set LUW mode
*      cl_hrrcf_simple_main_object=>set_luw_mode( ).
      SET UPDATE TASK LOCAL.

*      MOVE personal_data-formofaddress TO ls_centraldata-title_key.
*      MOVE personal_data-firstname TO ls_centraldata_person-firstname.
*      MOVE personal_data-lastname TO ls_centraldata_person-lastname.
*      MOVE personal_data-middlename TO ls_centraldata_person-middlename.
*      MOVE personal_data-title TO ls_centraldata_person-title_aca1.
*      MOVE personal_data-sex TO ls_centraldata_person-sex .
*      MOVE personal_data-birthdate TO ls_centraldata_person-birthdate .
*      MOVE personal_data-prefix1 TO ls_centraldata_person-prefix1.
*      MOVE personal_data-title_aca2 TO ls_centraldata_person-title_aca2.
*      MOVE personal_data-title_sppl TO ls_centraldata_person-title_sppl.

      MOVE-CORRESPONDING ls_centraldata_person TO ls_centraldata_person_new.
      MOVE-CORRESPONDING ls_centraldata TO ls_centraldata_new.

      MOVE personal_data-formofaddress TO ls_centraldata_new-title_key.
      MOVE personal_data-firstname TO ls_centraldata_person_new-firstname.
      MOVE personal_data-lastname TO ls_centraldata_person_new-lastname.
      MOVE personal_data-middlename TO ls_centraldata_person_new-middlename.
      MOVE personal_data-title TO ls_centraldata_person_new-title_aca1.
      MOVE personal_data-sex TO ls_centraldata_person_new-sex .
      MOVE personal_data-birthdate TO ls_centraldata_person_new-birthdate .
      MOVE personal_data-prefix1 TO ls_centraldata_person_new-prefix1.
      MOVE personal_data-title_aca2 TO ls_centraldata_person_new-title_aca2.
      MOVE personal_data-title_sppl TO ls_centraldata_person_new-title_sppl.
      MOVE personal_data-fullname TO ls_centraldata_person_new-fullname.

      CHECK ls_centraldata_person <> ls_centraldata_person_new
          OR ls_centraldata <> ls_centraldata_new.
*     update infotype data
      CALL METHOD lo_cand_bupa_bl->maintain_pers_data
        EXPORTING
          ps_cand_hrobject     = ls_cand_hrobject
          ps_centraldata       = ls_centraldata_new
          ps_centraldataperson = ls_centraldata_person_new
        IMPORTING
          pt_return            = messages.

    CATCH cx_root INTO lo_ex.
*     write exception to slg1
      cl_hrrcf_exception_handler=>write_exception_log( ex = lo_ex ).

*--   Convert exception into BAPI return parameter
      IF 1 = 0.
        MESSAGE a802(hrrcf0002) WITH 'HRRCF_MDL_CAND_PERS_UPDATE'.
      ENDIF.
      CALL FUNCTION 'BALW_BAPIRETURN_GET2'
        EXPORTING
          type   = 'A'
          cl     = 'HRRCF0002'
          number = '802'
          par1   = 'HRRCF_MDL_CAND_PERS_UPDATE'
        IMPORTING
          return = ls_message.
      APPEND ls_message TO messages.
  ENDTRY.

ENDFUNCTION.
