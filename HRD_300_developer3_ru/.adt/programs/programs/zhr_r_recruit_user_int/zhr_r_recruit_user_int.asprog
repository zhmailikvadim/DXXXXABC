*&---------------------------------------------------------------------*
*& Report  ZHR_R_RECRUIT_USER_INT
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT zhr_r_recruit_user_int.

DATA:
  p_first     LIKE bapibus1006_central_person-firstname,
  p_last      LIKE bapibus1006_central_person-lastname,
  p_user      TYPE syuname,
  p_pernr     TYPE pernr_d,
  p_plans     TYPE plans,
  p_email     TYPE ad_smtpadr,
  p_role      TYPE t77rcf_role-role,
  lt_pa0001   TYPE TABLE OF pa0001,
  ls_pa0001   TYPE pa0001,
  lv_fakemail TYPE i,
  lv_name     TYPE string,
  lv_surname  TYPE string,
  lo_empl     TYPE REF TO zcl_hr_employee,
  lo_employee TYPE REF TO cl_hrrcf_employee.

SELECT pernr FROM pa0001 INTO CORRESPONDING FIELDS OF TABLE lt_pa0001 WHERE endda >= sy-datum.
  DELETE ADJACENT DUPLICATES FROM lt_pa0001.


LOOP AT lt_pa0001 INTO ls_pa0001.

  p_pernr = ls_pa0001-pernr.

  CLEAR: p_user, lo_empl, lv_name, lv_surname, p_plans, p_email.
  CALL FUNCTION 'HR_GET_USER_FROM_EMPLOYEE'    " получаем лицо по логину
    EXPORTING
      pernr = p_pernr
    IMPORTING
      user  = p_user.

  IF p_user IS NOT INITIAL AND p_user+0(2) <> 'EE'.
    TRY.
        CREATE OBJECT lo_empl
            EXPORTING
              iv_pernr = p_pernr.
        CATCH zcx_hr.
             ENDTRY.

      lv_name = lo_empl->get_ename(
          iv_date  = sy-datum
          iv_frmt  = '03'
      ).
      lv_surname = lo_empl->get_ename(
          iv_date  = sy-datum
          iv_frmt  = '02'
      ).

    p_plans = lo_empl->get_plans( ).

    DATA(lt_emails) = lo_empl->get_email( ).
    READ TABLE lt_emails INTO DATA(ls_emails) INDEX 1.
    p_email = ls_emails.
    IF ls_emails IS INITIAL.
      lv_fakemail = lv_fakemail + 1.
      DATA(lv_temp) = CONV string( lv_fakemail ).
      CONCATENATE 'fakemailcand'  lv_temp'@mail.tt' INTO p_email.
    ENDIF.


      SUBMIT zrcf_create_user WITH p_first = lv_name
                       WITH p_last =  lv_surname
                       WITH p_user =  p_user
                       WITH p_pernr = p_pernr
                       WITH p_plans = p_plans
                       WITH p_email = p_email AND RETURN.

    TRY.
        CALL METHOD cl_hrrcf_employee=>get
          EXPORTING
            user     = p_user
          IMPORTING
            employee = lo_employee.
      CATCH cx_hrrcf.
* no reaction, existence check only (xdp)
    ENDTRY.
    IF lo_employee IS NOT INITIAL.
    SUBMIT rcf_user_role WITH p_user = p_user
                         WITH p_role = '1' AND RETURN. "внутренний кандидат

    ENDIF.
  ENDIF.

ENDLOOP.