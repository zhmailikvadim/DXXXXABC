class CL_HRRCF_M_CANDPROFILE definition
  public
  inheriting from CL_WD_COMPONENT_ASSISTANCE
  create public .

public section.
*"* public components of class CL_HRRCF_M_CANDPROFILE
*"* do not include other source files here!!!

  class-methods SC_GET_CAND_HROBJECT
    importing
      !IV_USER type XUBNAME
    returning
      value(RS_HROBJECT) type HROBJECT
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_GET_VERIFICATION_STATUS
    importing
      !IV_CANDIDATE_HROBJECT type HROBJECT optional
    exporting
      !EV_VERIFICATION_STATUS type RCF_VERIFICATION_STATUS
      !ET_MESSAGES type BAPIRETTAB
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_LOCK_CAND_HROBJECT
    importing
      !IS_CAND_HROBJECT type HROBJECT
    exporting
      !ET_MESSAGES type BAPIRETTAB
    raising
      CX_HRRCF_RFC_COMMUNICATION .
  methods SC_UNLOCK_CAND_HROBJECT
    importing
      !IS_CAND_HROBJECT type HROBJECT
    exporting
      !ET_MESSAGES type BAPIRETTAB .
protected section.
*"* protected components of class CL_HRRCF_M_CANDPROFILE
*"* do not include other source files here!!!
private section.
*"* private components of class CL_HRRCF_M_CANDPROFILE
*"* do not include other source files here!!!
ENDCLASS.



CLASS CL_HRRCF_M_CANDPROFILE IMPLEMENTATION.


METHOD sc_get_cand_hrobject.

  DATA: lv_dest          TYPE rfcdest,
        ls_cand_hrobject TYPE hrobject,
        lv_message(80)   TYPE c.

* get rfc connection
  CALL METHOD cl_hrrcf_wd_services=>get_bl_destination
    RECEIVING
      rfc_dest = lv_dest.

* determine candidate object for user
  CALL FUNCTION 'HRRCF_MDL_ADMN_CAND_RETRIEVE'
    DESTINATION lv_dest
    EXPORTING
      iv_user               = iv_user
    IMPORTING
      ev_cand_hrobject      = ls_cand_hrobject
    EXCEPTIONS
      failed                = 1
      system_failure        = 2  MESSAGE lv_message
      communication_failure = 3  MESSAGE lv_message
      others                = 4.

  IF sy-subrc <> 0.
    CASE sy-subrc.
      WHEN 1 OR 4.
*      todo: error handling
      WHEN 2.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      WHEN 3.
        RAISE EXCEPTION TYPE cx_hrrcf_rfc_communication
          EXPORTING textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    ENDCASE.
  ENDIF.

  rs_hrobject = ls_cand_hrobject.

ENDMETHOD.


method sc_get_verification_status.

* NOTE: This is a copy from class CL_HRRCF_M_REGISTER.

  data: lv_dest                type rfcdest,
        lv_verification_status type rcf_verification_status,
        lv_message(80)         type c.

  clear: ev_verification_status,
         et_messages.

  call method cl_hrrcf_wd_services=>get_bl_destination
    receiving
      rfc_dest = lv_dest.

  call function 'HRRCF_MDL_VERIF_STAT_RETRIEVE'
    destination lv_dest
    exporting
      is_candidate_hrobject  = iv_candidate_hrobject
    importing
      ev_verification_status = ev_verification_status
      et_messages            = et_messages
    exceptions
      system_failure         = 1  message lv_message
      communication_failure  = 2  message lv_message.

  if sy-subrc <> 0.
*   problem with RFC connection
    case sy-subrc.
      when 1.
        raise exception type cx_hrrcf_rfc_communication
          exporting
            textid = 'CX_HRRCF_RFC_SYSTEM_FAILURE'.
      when 2.
        raise exception type cx_hrrcf_rfc_communication
          exporting
            textid = 'CX_HRRCF_RFC_COMM_FAILURE'.
    endcase.
  endif.

endmethod.


METHOD sc_lock_cand_hrobject.

  DATA: lv_dest                TYPE rfcdest,
        lv_verification_status TYPE rcf_verification_status,
        lv_plogsys             TYPE csl_de-eols,
        lv_message(80)         TYPE c.


  CLEAR: et_messages.

  CALL METHOD cl_hrrcf_wd_services=>get_bl_destination
    RECEIVING
      rfc_dest = lv_dest.

  lv_plogsys = lv_dest.

  CALL FUNCTION 'HRRCF_MDL_CAND_PROF_ENQUEUE'
    EXPORTING
      is_cand_hrobject = is_cand_hrobject
      iv_plogsys       = lv_plogsys
    IMPORTING
      et_messages      = et_messages.

ENDMETHOD.


METHOD sc_unlock_cand_hrobject.

  DATA: lv_dest                TYPE rfcdest,
        lv_verification_status TYPE rcf_verification_status,
        lv_plogsys             TYPE csl_de-eols,
        lv_message(80)         TYPE c.


  CLEAR: et_messages.

  CALL METHOD cl_hrrcf_wd_services=>get_bl_destination
    RECEIVING
      rfc_dest = lv_dest.

  lv_plogsys = lv_dest.

  CALL FUNCTION 'HRRCF_MDL_CAND_PROF_DEQUEUE'
    EXPORTING
      is_cand_hrobject = is_cand_hrobject
      iv_plogsys       = lv_plogsys
    IMPORTING
      et_messages      = et_messages.

ENDMETHOD.
ENDCLASS.