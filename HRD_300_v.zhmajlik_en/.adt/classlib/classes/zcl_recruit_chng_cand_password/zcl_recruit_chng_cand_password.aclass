class zcl_recruit_chng_cand_password definition
  public final
  create public.

  public section.
    class-methods change_password_for_e_mail
      importing iv_e_mail        type zhr_s_sync_btw_erp_and_hr-candidate_header-num01_email
                iv_password      type char08
      returning value(rt_return) type bapirettab.

  private section.
    class-methods get_username_by_e_mail
      importing iv_e_mail      type zhr_s_sync_btw_erp_and_hr-candidate_header-num01_email
      returning value(rv_user) type uname.

    class-methods generate_password
      returning value(rv_password) type char08.

    class-methods modify_user_password
      importing iv_username      type uname
                iv_user_password type char08
      returning value(rt_return) type bapirettab.
endclass.


class zcl_recruit_chng_cand_password implementation.
  method change_password_for_e_mail.
    data(lv_username) = get_username_by_e_mail( iv_e_mail ).

    rt_return = modify_user_password( iv_username      = lv_username
                                      iv_user_password = iv_password ).
  endmethod.

  method generate_password.
    data lc_alphanum type c length 1.
    data lv_password type c length 8.

    call function 'RSEC_GENERATE_PASSWORD'
      exporting
        alphabet      = lc_alphanum
        output_length = 8
      importing
        output        = lv_password
      exceptions
        some_error    = 1
        others        = 2.
    if sy-subrc = 0.
      rv_password = lv_password.
    endif.
  endmethod.

  method get_username_by_e_mail.
    data lt_selection_range type table of bapiussrge.
    data lt_userlist        type table of bapiusname.

    lt_selection_range = value #( field     = 'E_MAIL'
                                  parameter = 'ADDRESS'
                                  sign      = 'I'
                                  option    = 'EQ'
                                  ( low = iv_e_mail )  ).

    call function 'BAPI_USER_GETLIST'
      tables
        selection_range = lt_selection_range
        userlist        = lt_userlist.
    if lines( lt_userlist ) > 0.
      rv_user = lt_userlist[ 1 ]-username.
    endif.
  endmethod.

  method modify_user_password.
    data ls_cross    type bapipwdx.
    data ls_password type bapipwd.

    ls_cross-bapipwd    = 'X'.
    ls_password-bapipwd = iv_user_password.

    call function 'BAPI_USER_CHANGE'
      exporting
        username  = iv_username
        password  = ls_password
        passwordx = ls_cross
      tables
        return    = rt_return.
  endmethod.
endclass.