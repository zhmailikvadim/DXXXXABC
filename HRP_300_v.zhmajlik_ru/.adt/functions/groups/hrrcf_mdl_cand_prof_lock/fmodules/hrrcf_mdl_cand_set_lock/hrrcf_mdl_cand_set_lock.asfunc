FUNCTION HRRCF_MDL_CAND_SET_LOCK
  IMPORTING
    VALUE(IS_CAND_HROBJECT) TYPE HROBJECT
  EXPORTING
    VALUE(ET_MESSAGES) TYPE BAPIRETTAB.




* Author: PEV
  DATA:    l_ret2                 TYPE        bapiret2.
  DATA:    lo_ex                  TYPE REF TO cx_root.


* TODO: Authorization check
  TRY.
      CLEAR: et_messages[].
* 1. SAP lock
**  Set exclusive lock
      CALL METHOD cl_hrrcf_candidate_admin_bl=>enqueue_candidate
        EXPORTING
          ps_cand_hrobject = is_cand_hrobject
          iv_enqmode       = 'E'
          iv_scope         = '1'
        RECEIVING
          pt_return        = et_messages.

      IF et_messages IS NOT INITIAL.
**    Already optimistic lock available -> right of way
        CALL METHOD cl_hrrcf_candidate_admin_bl=>enqueue_candidate
          EXPORTING
            ps_cand_hrobject = is_cand_hrobject
            iv_enqmode       = 'O'
            iv_scope         = '1'
          RECEIVING
            pt_return        = et_messages.

        IF et_messages IS INITIAL.
          CALL METHOD cl_hrrcf_candidate_admin_bl=>enqueue_candidate
            EXPORTING
              ps_cand_hrobject = is_cand_hrobject
              iv_enqmode       = 'R'
              iv_scope         = '1'
            RECEIVING
              pt_return        = et_messages.
        ELSE.
* Other lock type: against right of way rule
        ENDIF.
      ENDIF.

    CATCH cx_root INTO lo_ex.
*     write exception to slg1
      cl_hrrcf_exception_handler=>write_exception_log( ex = lo_ex ).

**   Convert exception into BAPI return parameter
      IF 1 = 0.
*       For where-used list
        MESSAGE a802(hrrcf0002) WITH 'HRRCF_MDL_CAND_PROF_ENQUEUE'.
      ENDIF.
      CALL FUNCTION 'BALW_BAPIRETURN_GET2'
        EXPORTING
          type   = 'A'
          cl     = 'HRRCF0002'
          number = '802'
          par1   = 'HRRCF_MDL_CAND_PROF_ENQUEUE'
        IMPORTING
          return = l_ret2.
      APPEND l_ret2 TO et_messages.
  ENDTRY.

ENDFUNCTION.
