FUNCTION ZHR_FM_REGISTER_CANDIDATE
  IMPORTING
    VALUE(IS_CANDIDATE) TYPE ZHR_S_SYNC_BTW_ERP_AND_HR
    VALUE(IV_SET_ALL_DATA) TYPE BOOLEAN OPTIONAL
  EXPORTING
    VALUE(ET_MESSAGES) TYPE BAPIRETTAB
    VALUE(ES_CANDIDATE) TYPE ZHR_S_SYNC_BTW_ERP_AND_HR.



  DATA lo_register_candidate TYPE REF TO cl_hrrcf_candidate_register.
  DATA ls_centraldataperson  TYPE bapibus1006_central_person.
  DATA ls_cand_hrobject      TYPE hrobject.

  es_candidate = is_candidate.

  CASE iv_set_all_data.
    WHEN abap_false.
      lo_register_candidate = NEW cl_hrrcf_candidate_register( ).

      TRY.
          lo_register_candidate->register_external(
            EXPORTING centraldataperson = ls_centraldataperson
                      p_alias           = CONV #( es_candidate-candidate_header-useralias )
                      p_password        = CONV #( es_candidate-candidate_header-password )
                      p_email           = CONV #( es_candidate-candidate_header-num01_email )
                      p_self_reg        = abap_true
            IMPORTING pt_return         = DATA(lt_return) ).
          APPEND LINES OF lt_return TO et_messages.

          IF lo_register_candidate->candidate IS BOUND.
            es_candidate-candidate_header-useralias = lo_register_candidate->alias.
            es_candidate-candidate_header-password  = lo_register_candidate->password.
            es_candidate-candidate_header-zhr_user  = lo_register_candidate->candidate->user.
            es_candidate-candidate_header-objid     = lo_register_candidate->candidate->hrobject-objid.
            es_candidate-candidate_header-otype     = lo_register_candidate->candidate->hrobject-otype.
            es_candidate-candidate_header-plvar     = lo_register_candidate->candidate->hrobject-plvar.
          ENDIF.
        CATCH cx_hrrcf_registration.
      ENDTRY.
    WHEN abap_true.
      TRY.
          cl_hrrcf_candidate_admin_bl=>get_candidate(
            EXPORTING p_user          = es_candidate-candidate_header-zhr_user
            IMPORTING p_cand_hrobject = ls_cand_hrobject ).
        CATCH cx_hrrcf.
      ENDTRY.

      DATA(lo_recruitment_set_cand_data) = NEW zcl_recruitment_set_cand_data( is_candidate = es_candidate is_cand_hrobject = ls_cand_hrobject ).
      IF iv_set_all_data = abap_true.
        APPEND LINES OF lo_recruitment_set_cand_data->set_data( ) TO et_messages.
      ENDIF.
  ENDCASE.
ENDFUNCTION.
