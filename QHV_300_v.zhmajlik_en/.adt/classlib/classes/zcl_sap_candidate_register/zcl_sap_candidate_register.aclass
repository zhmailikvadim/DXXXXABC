class zcl_sap_candidate_register definition
  public final
  create public.

  public section.
    data user     type bapibname-bapibname.
    data alias    type bapialias.
    data password type bapipwd.

    events send_email
      exporting
        value(alias) type bapialias
        value(password) type bapipwd.

    methods register_external
      importing p_email    type bapiaddr3-e_mail
                p_alias    type bapialias
                p_password type bapipwd
                p_user     type xubname

      exporting pt_return  type bapirettab
      raising   cx_hrrcf_registration.

  private section.
    data lastname type bapiaddr3-lastname.
    data email    type bapiaddr3-e_mail.

    methods create_user
      importing p_self_reg type boole_d
      exporting pt_return  type bapirettab
      raising   cx_hrrcf_registration.

    methods delete_user.

ENDCLASS.



CLASS ZCL_SAP_CANDIDATE_REGISTER IMPLEMENTATION.


  method create_user.
    constants c_usertype_communicate type c length 1 value 'C'.

    data ls_address   type bapiaddr3.
    data ls_ref_user  type bapirefus.
    data ls_defaults  type bapidefaul.
    data ls_logondata type bapilogond.
    data ls_uclass    type bapiuclass.
    data lt_return    type bapirettab.
    data ls_return    type bapiret2.

    ls_address-lastname  = lastname.

    ls_ref_user-ref_user = 'RCF_CAND_EXT'.

    call function 'BAPI_USER_GET_DETAIL'
      exporting
        username  = ls_ref_user-ref_user
      importing
        defaults  = ls_defaults
        logondata = ls_logondata                                                      " INS Note 0001324887
        uclass    = ls_uclass                                                         " INS Note 0001324887
      tables
        return    = lt_return.
    clear lt_return.

    " LogonData                                                                         "INS Note 0001324887
    ls_logondata-ustyp = c_usertype_communicate.                                         " INS Note 0001324887
    ls_logondata-gltgv = sy-datum.                                                  " INS Note 0001324887
    ls_logondata-gltgb = '99991231'.                                                " INS Note 0001324887

    " Create the user with the generated username
    call function 'BAPI_USER_CREATE1'
      exporting
        username                = user
        logondata               = ls_logondata
        password                = password
        defaults                = ls_defaults       " Note 888982
        address                 = ls_address
        ref_user                = ls_ref_user
        alias                   = alias
        uclass                  = ls_uclass                                           " INS Note 0001324887
        force_system_assignment = 'X'
        self_register           = p_self_reg
      tables
        return                  = lt_return.

    delete lt_return where type <> 'A' and type <> 'E'.
    if lt_return is not initial.
    endif.

  endmethod.


  method delete_user.
    data lt_return type bapirettab.
    data ls_return type bapiret2 ##NEEDED.

    call function 'BAPI_USER_DELETE'
      exporting
        username = user
      tables
        return   = lt_return.

    delete lt_return where type <> 'E' and type <> 'A'.

    if lt_return is initial.
      return.
    endif.

    read table lt_return into ls_return with key type = 'A' ##NEEDED.
    if sy-subrc is not initial.
      read table lt_return into ls_return with key type = 'E' ##NEEDED.
    endif.
  endmethod.


  method register_external.
    " TODO: parameter CENTRALDATA is never used (ABAP cleaner)
    " TODO: parameter P_PASSWORD is never used (ABAP cleaner)
    " TODO: parameter P_PASSWORD2 is never used (ABAP cleaner)
    " TODO: parameter P_PRIVACY_STATUS is never used (ABAP cleaner)
    " TODO: parameter P_VERIFICATION_STATUS is never used (ABAP cleaner)
    " TODO: parameter IV_EA_FLAG is never used (ABAP cleaner)

    data lt_return type bapirettab.

    lastname = lastname.
    alias    = p_alias.
    email    = p_email.
    user = p_user.

    create_user( exporting p_self_reg = abap_true
                 importing pt_return  = lt_return ).
    if lt_return is not initial.
      append lines of lt_return to pt_return.
      return.
    endif.
    call function 'BAPI_TRANSACTION_COMMIT'
      exporting
        wait = 'X'.
  endmethod.
ENDCLASS.