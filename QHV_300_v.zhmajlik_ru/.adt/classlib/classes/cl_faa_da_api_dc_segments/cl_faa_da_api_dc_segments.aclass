CLASS cl_faa_da_api_dc_segments DEFINITION
  PUBLIC
  CREATE PRIVATE GLOBAL FRIENDS cl_faa_da_api_factory. "the factory is allowed to instantiate

  PUBLIC SECTION.
    INTERFACES if_faa_dc_segments_720.
  PROTECTED SECTION.
  PRIVATE SECTION.
    METHODS _raise_exception.
ENDCLASS.



CLASS CL_FAA_DA_API_DC_SEGMENTS IMPLEMENTATION.


  METHOD if_faa_dc_segments_720~check_badi_is_active.
    rv_badi_is_active = cl_faa_dc_segments_720=>check_badi_is_active(
      IMPORTING
        ev_customer_badi_is_active = ev_customer_badi_is_active
        ev_country_badi_is_active  = ev_country_badi_is_active ).
  ENDMETHOD.


  METHOD if_faa_dc_segments_720~get_asset_data.
    "instance method, no need for delegation
    _raise_exception( ).
  ENDMETHOD.


  METHOD if_faa_dc_segments_720~get_previous_segment.
    "instance method, no need for delegation
    _raise_exception( ).
  ENDMETHOD.


  METHOD if_faa_dc_segments_720~get_proc_data.
    "instance method, no need for delegation
    _raise_exception( ).
  ENDMETHOD.


  METHOD if_faa_dc_segments_720~get_start_segment.
    "instance method, no need for delegation
    _raise_exception( ).
  ENDMETHOD.


  METHOD if_faa_dc_segments_720~perform_calc_with_implicit_cf.
    "the following IF statement was added for testing ACDOCP forecasting
    IF io_dc_segments_previous IS NOT INITIAL AND
       cl_faa_plan_horizon_params=>get_instance( )->get_error_test_type( ) EQ if_faa_plan_horizon_params=>calculation_error.
      RAISE EXCEPTION NEW cm_faa_t100_dc_720( textid = VALUE #( msgid = 'AA' msgno = '685' attr1 = is_asset_data-s_asset_key ) ).
    ENDIF.

    cl_faa_dc_segments_720=>perform_calc_with_implicit_cf(
      EXPORTING
        is_processing_info      = is_processing_info
        is_asset_data           = is_asset_data
        io_dc_segments_previous = io_dc_segments_previous
      RECEIVING
        ro_dc_calc_handle       = ro_dc_calc_handle
    ).
  ENDMETHOD.


  METHOD if_faa_dc_segments_720~perform_step_processing.
    cl_faa_dc_segments_720=>perform_step_processing(
      EXPORTING
        id_comp     = id_comp
        id_process  = id_process
        id_procmode = id_procmode
        id_step     = id_step
        io_handle   = io_handle
    ).
  ENDMETHOD.


  METHOD if_faa_dc_segments_720~reset_previous_segment.
    "instance method, no need for delegation
    _raise_exception( ).
  ENDMETHOD.


  METHOD if_faa_dc_segments_720~reset_start_segment.
    "instance method, no need for delegation
    _raise_exception( ).
  ENDMETHOD.


  METHOD if_faa_dc_segments_720~set_asset_data.
    "instance method, no need for delegation
    _raise_exception( ).
  ENDMETHOD.


  METHOD if_faa_dc_segments_720~set_previous_segment_ref.
    "instance method, no need for delegation
    _raise_exception( ).
  ENDMETHOD.


  METHOD if_faa_dc_segments_720~set_proc_data.
    "instance method, no need for delegation
    _raise_exception( ).
  ENDMETHOD.


  METHOD if_faa_dc_segments_720~set_start_segment_ref.
    "instance method, no need for delegation
    _raise_exception( ).
  ENDMETHOD.


  METHOD if_os_clone~clone.
    "instance method, no need for delegation
    _raise_exception( ).
  ENDMETHOD.


  METHOD _raise_exception.
    RAISE EXCEPTION TYPE cx_fatal_exception.
  ENDMETHOD.
ENDCLASS.