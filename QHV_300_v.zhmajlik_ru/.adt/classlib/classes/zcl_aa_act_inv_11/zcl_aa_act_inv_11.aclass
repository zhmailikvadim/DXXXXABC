*------------------------------------------------------------------------------*
* Описание          : Акт инвентаризации (Форма 11-инв)                        *
* Код ТС            : АСУБН.САП-КСУП.DEV.030-БНУ.57.О-303    #15014            *
* Разработчик       : Жудро Н.В.                                               *
* Постановка задачи : Сергеева И.В.                                            *
* Дата постановки   : 30.10.2017                                               *
* Дата создания     : 23.11.2017                                               *
*------------------------------------------------------------------------------*
* Изменения * Дата Автор Заявка Характер и причина изменения                   *
*------------------------------------------------------------------------------*
*                                                                              *
*------------------------------------------------------------------------------*
CLASS zcl_aa_act_inv_11 DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    INTERFACES if_amdp_marker_hdb.

    TYPES:
      BEGIN OF gty_s_data,
        npp        TYPE i,                       "Номер по порядку
        bukrs      TYPE anla-bukrs,              "БЕ
        anln1      TYPE anla-anln1,              "Номер ОС
        anln2      TYPE anla-anln2,              "Субномер ОС
        anlkl      TYPE anla-anlkl,              "Класс основных средств
        hkont      TYPE t095-ktansw,             "Счет бухгалтерско-го учета
        txtf1      TYPE string,                  "Вид расхода
        kansw      TYPE acdoca-wsl,              "Первоначальная сумма расходов
        aktiv      TYPE anla-aktiv,              "Дата возникновения расходов
        termt      TYPE i,                       "Срок погашения расходов (по месяцам)
        wsl_wo     TYPE acdoca-wsl,              "Расчетная сумма к списанию (Первоначальная сумма расходов / Срок погашения расходов)
        knafa      TYPE acdoca-wsl,              "Списано (погашено) расходов до начала инвентаризации
        wsl_be     TYPE acdoca-wsl,              "Остаток расходов на начало инвентаризации по данным учета (Первоначальная сумма расходов - Списано расходов до начала инвентаризации)
        wsl_br     TYPE acdoca-wsl,              "Расчетный остаток расходов, подлежащих погашению в будущем периоде (Остаток расходов на начало инвентаризации по данным учета. Ручная корректировка)
        wsl_cm     TYPE acdoca-wsl,              "Подлежит досписанию (Остаток расходов на начало инвентаризации - Расчетный остаток расходов, подлежащих погашению в будущем периоде)
        wsl_ex     TYPE acdoca-wsl,              "Излишнее списание (Расчетный остаток расходов, подлежащих погашению в будущем периоде - Остаток расходов на начало инвентаризации)
      END OF gty_s_data,

      BEGIN OF gty_s_bukrs,
        taxnum1 TYPE dfkkbptaxnum-taxnum,        "УНП для TAXTYPE = BY2
        taxnum2 TYPE dfkkbptaxnum-taxnum,        "УНП для TAXTYPE = BY0
        name1   TYPE char255,                    "Наименование организации
        name2   TYPE char255,                    "Подразделение организации
      END OF gty_s_bukrs,

      BEGIN OF gty_s_sum,
        sum_01 TYPE acdoca-wsl,                  "Сумма строк по графe 3
        sum_02 TYPE acdoca-wsl,                  "Сумма строк по графe 6
        sum_03 TYPE acdoca-wsl,                  "Сумма строк по графe 7
        sum_04 TYPE acdoca-wsl,                  "Сумма строк по графe 8
        sum_05 TYPE acdoca-wsl,                  "Сумма строк по графe 9
        sum_06 TYPE acdoca-wsl,                  "Сумма строк по графe 10
        sum_07 TYPE acdoca-wsl,                  "Сумма строк по графe 11
      END OF gty_s_sum,

      gty_t_data  TYPE STANDARD TABLE OF gty_s_data  WITH EMPTY KEY,
      gty_t_bukrs TYPE STANDARD TABLE OF gty_s_bukrs WITH EMPTY KEY.

    CLASS-METHODS get_data
      IMPORTING
        VALUE(iv_bukrs) TYPE anla-bukrs
        VALUE(iv_date)  TYPE sy-datum
        VALUE(iv_cond)  TYPE string
      EXPORTING
        VALUE(et_data)  TYPE gty_t_data
        VALUE(et_bukrs) TYPE gty_t_bukrs.

  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS ZCL_AA_ACT_INV_11 IMPLEMENTATION.


  METHOD get_data BY DATABASE PROCEDURE FOR     HDB
                     LANGUAGE SQLSCRIPT OPTIONS READ-ONLY
                     USING anla t095 zaa_utils_hdb=>get_asset_values zafull anlu anlb t001 DFKKBPTAXNUM BUT000.

    DECLARE LV_MANDT CHAR(3) := SESSION_CONTEXT('CLIENT');
    DECLARE LV_SPRAS CHAR(1) := SESSION_CONTEXT('LOCALE_SAP');

    ET_DATA =
      SELECT DISTINCT
        0 AS NPP,
        ANLA.BUKRS,
        ANLA.ANLN1,
        ANLA.ANLN2,
        ANLA.ANLKL,
        T095.KTANSW AS HKONT,
        ZF.TXTF1 || ZF.TXTF2 as TXTF1,
        VALS.KANSW AS KANSW,
        ANLA.AKTIV,
        ANLB.NDJAR * 12 + ANLB.NDPER AS TERMT,
        0 AS WSL_WO,
        VALS.KANSW - VALS.NETVL AS KNAFA,
        NETVL AS WSL_BE,
        NETVL AS WSL_BR,
        0 AS WSL_CM,
        0 AS WSL_EX
      FROM ANLA AS ANLA
        INNER JOIN T095 AS T095 ON  T095.KTOGR = ANLA.KTOGR
                                AND T095.MANDT = ANLA.MANDT
        INNER JOIN "ZAA_UTILS_HDB=>GET_ASSET_VALUES"( :LV_MANDT, :IV_DATE,  '' )
                        AS VALS ON VALS.BUKRS = ANLA.BUKRS
                               AND VALS.ANLN1 = ANLA.ANLN1
                               AND VALS.ANLN2 = ANLA.ANLN2
                               AND VALS.AFABE = '01'
        LEFT JOIN ZAFULL AS ZF  ON ZF.BUKRS = ANLA.BUKRS
                               AND ZF.MANDT = ANLA.MANDT
                               AND ZF.ANLN1 = ANLA.ANLN1
                               AND ZF.ANLN2 = ANLA.ANLN2
        LEFT JOIN ANLU AS ANLU  ON ANLU.BUKRS = ANLA.BUKRS
                               AND ANLU.MANDT = ANLA.MANDT
                               AND ANLU.ANLN1 = ANLA.ANLN1
                               AND ANLU.ANLN2 = ANLA.ANLN2
        LEFT JOIN ANLB AS ANLB  ON ANLB.BUKRS = ANLA.BUKRS
                               AND ANLB.MANDT = ANLA.MANDT
                               AND ANLB.ANLN1 = ANLA.ANLN1
                               AND ANLB.ANLN2 = ANLA.ANLN2
                               AND ANLB.AFABE = '01'
            WHERE ANLA.MANDT  = :LV_MANDT
              AND ANLA.BUKRS  = :IV_BUKRS
              AND ANLA.DEAKT <= :IV_DATE
              AND T095.AFABE  = '01'
              AND NOT( VALS.KANSW = 0 AND VALS.KNAFA = 0 )
            ORDER BY ANLA.BUKRS, ANLA.ANLN1, ANLA.ANLN2;

    ET_DATA = APPLY_FILTER (:ET_DATA, :IV_COND);

    ET_DATA = SELECT ROW_NUMBER() OVER () AS NPP, BUKRS, ANLN1, ANLN2, ANLKL, HKONT, TXTF1, KANSW, AKTIV, TERMT,
                     CASE WHEN TERMT <>0 THEN KANSW / TERMT END AS WSL_WO, KNAFA, WSL_BE, WSL_BR, WSL_CM, WSL_EX
                FROM ( SELECT NPP, BUKRS, ANLN1, ANLN2, ANLKL, HKONT, TXTF1, KANSW, AKTIV, TERMT, WSL_WO, KNAFA, WSL_BE, WSL_BR, WSL_CM, WSL_EX
                         FROM :ET_DATA );

    ET_BUKRS =
      SELECT DISTINCT
        DF1.TAXNUM AS TAXNUM1,
        DF2.TAXNUM AS TAXNUM2,
        AB.NAME_ORG3 || CHAR(32) || AB.NAME_ORG4 AS NAME1,
        AB.NAME_ORG1 || CHAR(32) || AB.NAME_ORG2 || AB.NAME_ORG3 || CHAR(32) || AB.NAME_ORG4 AS NAME2
      FROM T001 AS T0
        LEFT JOIN DFKKBPTAXNUM AS DF1  ON DF1.CLIENT  = T0.MANDT
                                      AND DF1.PARTNER = CONCAT( '00000000' , T0.BUKRS )
                                      AND DF1.TAXTYPE = 'BY2'
        LEFT JOIN DFKKBPTAXNUM AS DF2  ON DF2.CLIENT  = T0.MANDT
                                      AND DF2.PARTNER = CONCAT( '00000000' , T0.BUKRS )
                                      AND DF2.TAXTYPE = 'BY0'
        LEFT JOIN BUT000       AS AB   ON AB.CLIENT   = T0.MANDT
                                      AND AB.PARTNER  = T0.BUKRS
          WHERE T0.MANDT = :LV_MANDT
            AND T0.BUKRS = :IV_BUKRS;
  ENDMETHOD.
ENDCLASS.