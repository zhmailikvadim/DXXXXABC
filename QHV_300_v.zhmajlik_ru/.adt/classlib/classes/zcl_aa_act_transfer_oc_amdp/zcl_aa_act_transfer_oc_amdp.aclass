***********************************************************************************************
* ОПИСАНИЕ   :«АКТ О ПРИЕМЕ-ПЕРЕДАЧЕ ОС».
* КОД ТС     : АСУБН.САП-КСУП.DEV.030-БНУ.03.О-209 #13167
* РАЗРАБОТЧИК: ТИМОШЕНКО И.И.
* ПОСТАНОВКА ЗАДАЧИ: БУЛАНОВА ВИКТОРИЯ
***********************************************************************************************
CLASS ZCL_AA_ACT_TRANSFER_OC_AMDP DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES IF_AMDP_MARKER_HDB .

    TYPES:
      BEGIN OF GTY_S_DATA,
        DLVR_TAXNUM       TYPE BPTAXNUMXL,           "УНП (ФОРМА ПО ОКЮЛП)
        DLVR_ORG_NAME     TYPE CHAR140,              "ОРГАНИЗАЦИЯ-СДАТЧИК НАИМЕНОВАНИЕ ОРГАНИЗАЦИИ
        DLVR_DEPT_NAME    TYPE char300,              " СТРУКТУРНОЕ ПОРАЗДЕЛЕНИЕ CHAR40 -- AK_BUTVILOVSK #25598 AS03 Акт приёма-передачи ОС - ошибка вызова AMDP метода
        RCV_TAXNUM        TYPE BPTAXNUMXL,           "УНП (ФОРМА ПО ОКЮЛП)
        RCV_ORG_NAME      TYPE CHAR140,              "ОРГАНИЗАЦИЯ-ПОЛУЧАТЕЛЬ НАИМЕНОВАНИЕ ОРГАНИЗАЦИИ
        RCV_DEPT_NAME     TYPE CHAR140,         "СТРУКТУРНОЕ ПОРАЗДЕЛЕНИЕ
        ZUGDT             TYPE ANLA-ZUGDT,           "ДАТА ПРИНЯТИЯ К БУХГАЛТЕРСКОМУ УЧЕТУ
        DATE_DEAKT        TYPE ANLA-DEAKT,           "ДАТА СПИСАНИЯ С БУХГАЛТЕРСКОГО УЧЕТА
        ACCOUNT           TYPE KTANSW,               "СЧЕТ, СУБСЧЕТ
        INVNR             TYPE ANLA-INVNR,           "ИНВЕНТАРНЫЙ НОМЕР
        PLANTNR           TYPE ZANLU-PLANTNR,        "ЗАВОДСКОЙ НОМЕР
        ZZNUMREGDOC       TYPE ZNUMREGDOC,           "НОМЕР ГОСУДАРСТВЕННОЙ РЕГИСТРАЦИИ
        ZZDATEREG         TYPE ZDATEREG,             "ДАТА ГОСУДАРСТВЕННОЙ РЕГИСТРАЦИИ
        NAME_OC           TYPE TEXT200,              "ОБЪЕКТ ОС
        ADDRESS           TYPE TEXT200,              "МЕСТО НАХОЖДЕНИЯ ОБЪЕКТА ОС
        MANUF             TYPE ZANLU-MANUF,          "(ПЕРЕДАВАЕМОГО ОС) ОРГАНИЗАЦИЯ - ИЗГОТОВИТЕЛЬ
        WAERS             TYPE ZANLU-WAERS,          "НАИМЕНОВАНИЕ ИНОСТРАННОЙ ВАЛЮТЫ
        KURSF             TYPE ZANLU-KURSF,          "КУРС ИНОСТРАННОЙ ВАЛЮТЫ
        COSTRE            TYPE ZANLU-COSTRE,         "СУММА
        DATE_BUILD        TYPE ZGJAHR_B,             "ДАТА ВЫПУСКА
        DATE_AKTIV        TYPE ANLA-AKTIV,           "ДАТА НАЧАЛА ИСПОЛЬЗОВАНИЯ
        DATE_FACT         TYPE CHAR20,               "ФАКТИЧЕСКИЙ СРОК ЭКСПЛУАТАЦИИ, ЛЕТ МЕСЯЦЕВ
        PERST             TYPE KANSW,                "ПЕРВОНАЧАЛЬНАЯ СТОИМОСТЬ, РУБ.КОП.
        AMORT             TYPE KNAFA,                "СУММА НАКОПЛЕННОЙ АМОРТИЗАЦИИ, РУБ.КОП.
        STOIM_BEZ_NDS     TYPE BSET-HWBAS,           "СТОИМОСТЬ ПЕРЕДАВАЕМОГО ОБЪЕКТА ОСНОВНЫХ СРЕДСТВ БЕЗ НДС*, РУБ.
        RATE              TYPE CHAR13,               "СТАВКА НДС, %
        KBETR             TYPE BSET-KBETR,
        SUM_NDS           TYPE BSET-HWSTE,           "СУММА НДС, РУБ.КОП.
        STOIM_NDS         TYPE BSEG-WRBTR,           "СТОИМОСТЬ ПЕРЕДАВАЕМОГО ОБЪЕКТА ОС С НДС, РУБ.КОП.
        COSTRE_AC         TYPE ZANLU-COSTRE_AC,      "ПЕРВОНАЧАЛЬНАЯ СТОИМОСТЬ, РУБ.
        DATE_WRNT         TYPE CHAR15,               "СРОК ПОЛЕЗНОГО ИСПОЛЬЗОВАНИЯ
        AMORT_MODE_NAME   TYPE CHAR50,               "НАИМЕНОВАНИЕ СПОСОБА НАЧИСЛЕНИЯ АМОРТИЗАЦИИ
        AMORT_COUNT_NORMT TYPE CHAR13,               "НОРМА НАЧИСЛЕНИЯ АМОРТИЗАЦИИ
        OBJNR             TYPE VIBDAO-OBJNR,
        RBUKRS            TYPE BUKRS,
        GITCOL            TYPE GITCOL,
        XBLNR             TYPE BKPF-XBLNR,
        TDNAME            TYPE TDOBNAME,
        TXTF              TYPE STRING,
        PARTNER           TYPE BUT000-PARTNER,
      END OF GTY_S_DATA,
      GTY_T_DATA TYPE STANDARD TABLE OF GTY_S_DATA,

      BEGIN OF GTY_S_MEAS,
        VAL0 TYPE I,
        VAL1 TYPE I,
        VAL2 TYPE I,
        VAL3 TYPE I,
        VAL4 TYPE I,
      END OF GTY_S_MEAS,
      GTY_T_MEAS TYPE STANDARD TABLE OF GTY_S_MEAS,

      BEGIN OF GTY_S_MEAS_EMP,
        MEAS TYPE REBDAOTYPE.
        INCLUDE TYPE GTY_S_MEAS.
    TYPES:
    END OF GTY_S_MEAS_EMP,
    GTY_T_MEAS_EMP TYPE STANDARD TABLE OF GTY_S_MEAS_EMP,

      BEGIN OF GTY_S_DRAG,
        NAMES_OC TYPE CHAR300,      "ОБЪЕКТ OC
        MENGE    TYPE CHAR25,       "КОЛИЧЕСТВО ANEK-MENGE,
        DRAG_MET TYPE CHAR255,      "НАИМЕНОВАНИЕ ДРАГОЦЕННЫХ/ПОЛУДРАГОЦЕННЫХ МАТЕРИАЛОВ
        MEASURE  TYPE CHAR25,       "ЕДИНИЦА ИЗМЕРЕНИЯ
        WEIGHT   TYPE CHAR25,       "КОЛИЧЕСТВО
        PARTNER  TYPE BU_PARTNER,   "ПАРТНЁР #26104 AS02 Акт о приеме-передачи ОС (разделение ДМ при частичном долевом выбытии)
      END OF GTY_S_DRAG,
      GTY_T_DRAG TYPE STANDARD TABLE OF GTY_S_DRAG,

      BEGIN OF GTY_S_PROP,
        PARTNER_NAME TYPE STRING,   "УЧАСТНИКИ ДОЛЕВОЙ СОБСТВЕННОСТИ
        PROP_PER     TYPE CHAR100,  "ДОЛЯ В ПРАВЕ ОБЩЕЙ СОБСТВЕННОСТИ, % (ZFI_PROP-PROP_PER)
      END OF GTY_S_PROP,
      GTY_T_PROP TYPE STANDARD TABLE OF GTY_S_PROP,

      BEGIN OF GTY_S_PARTNER,
        TAXNUM   TYPE BPTAXNUMXL,   "УНП
        ORG_NAME TYPE CHAR140,      "НАИМЕНОВАНИЕ ОРГАНИЗАЦИИ
      END OF GTY_S_PARTNER,
      GTY_T_PARTNER TYPE STANDARD TABLE OF GTY_S_PARTNER.

    DATA GT_PARTNER TYPE ZCL_ACT_NMA_HDB=>TY_T_PARTNER .

    CLASS-METHODS GET_DATA
      IMPORTING
        VALUE(IV_ANLN1) TYPE ANLA-ANLN1
        VALUE(IV_ANLN2) TYPE ANLA-ANLN2
        VALUE(IV_BUKRS) TYPE ANLA-BUKRS
        VALUE(IV_BUDAT) TYPE BUDAT
        VALUE(IV_SYDAT) TYPE BUDAT
        VALUE(IV_AFABE) TYPE ANLC-AFABE
        VALUE(IV_TAXTP) TYPE DFKKBPTAXNUM-TAXTYPE
        VALUE(IV_FLAG)  TYPE ABAP_BOOL "CHAR1
        VALUE(IV_TYPE)  TYPE ABAP_BOOL
        VALUE(IV_GRAMM) TYPE CHAR5
        VALUE(IV_KARAT) TYPE CHAR5
        VALUE(IV_YEARS) TYPE CHAR10
        VALUE(IV_MONTH) TYPE CHAR10
        VALUE(IV_NO)    TYPE TEXT10
        VALUE(IT_EMPT)  TYPE GTY_T_MEAS_EMP
        VALUE(IV_DMTEXT) TYPE STRING                                           "ДМ ПОСЛЕ СПИСАНИЯ
      EXPORTING
        VALUE(ET_DATA)  TYPE GTY_T_DATA
        VALUE(ET_MEAS)  TYPE GTY_T_MEAS
        VALUE(ET_DRAG)  TYPE GTY_T_DRAG
        VALUE(ET_PROP)  TYPE GTY_T_PROP
      RAISING
        CX_AMDP_ERROR .
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS ZCL_AA_ACT_TRANSFER_OC_AMDP IMPLEMENTATION.


  METHOD GET_DATA BY DATABASE PROCEDURE FOR HDB LANGUAGE SQLSCRIPT OPTIONS READ-ONLY
                  USING ANLA ANLZ ANLB T095 ZAFULL ZANLU ANLBZA T090NAT ZFI_DRAG_MET TVARVC T001
                  VIBDNODE VIBDMEAS ZFI_DRAG_MOVEH ZFI_DRAG_MOVEI ZFI_DRAG_MET_TX FAAV_ANEK TCURF
                  ZAA_V0_MOVE ACDOCA VIBDOBJASS VIBDPR VIBDOBJREL VIBDAO ADRC ZFI_PROP VIBDBU
                  ZAA_LINK_AA_RE_HDB=>GET_AA_RE_VALUES DFKKBPTAXNUM BUT000 TABW TABWG HRP1000
                  BKPF BSEG BSET ZAA_UTILS_HDB=>GET_ASSET_SPI FAAV_ANEP ACDOCA ZRE_ASSET_LINK VZOBJECT
                  ADRCITY ZREDISTRICT T005U T005T.

    DECLARE LV_MANDT    CHAR(3) := SESSION_CONTEXT('CLIENT');
    DECLARE LV_SPRAS    CHAR(1) := SESSION_CONTEXT('LOCALE_SAP');
    DECLARE LV_DATE     CHAR(8) := SESSION_CONTEXT('SAP_SYSTEM_DATE');
    DECLARE I           INT;
    DECLARE LV_AFAPL    CHAR(4) := 'BNFT';
    DECLARE LV_PARTNER2 CHAR(10);
    DECLARE LV_OBJNRTRG CHAR(22) := CONCAT( CONCAT( CONCAT( 'AN' , RPAD( :IV_BUKRS, 4, '  ' ) ), :IV_ANLN1), :IV_ANLN2 );
    DECLARE lv_recv     string;

    --ОС
    LT_DATA =
      SELECT
          ANLA.BUKRS,
          ANLA.ANLN1,
          ANLA.ANLN2,
          ANLA.ZUGDT,                                                                                                             --ДАТА ПРИНЯТИЯ К БУХГАЛТЕРСКОМУ УЧЕТУ
          ANLA.DEAKT                                                                                          AS DATE_DEAKT,      --ДАТА СПИСАНИЯ С БУХГАЛТЕРСКОГО УЧЕТА
          T095.KTANSW                                                                                         AS ACCOUNT,         --СЧЕТ, СУБСЧЕТ
          ANLA.INVNR,                                                                                                             --ИНВЕНТАРНЫЙ НОМЕР
          ZANLU.PLANTNR,                                                                                                          --ЗАВОДСКОЙ НОМЕР
          AA_RE_VAL.ZZNUMREGDOC,                                                                                                  --НОМЕР ГОСУДАРСТВЕННОЙ РЕГИСТРАЦИИ
          AA_RE_VAL.ZZDATEREG,                                                                                                    --ДАТА ГОСУДАРСТВЕННОЙ РЕГИСТРАЦИИ
          ZAFULL.TXTF1 || ' ' ||  ZAFULL.TXTF2                                                                AS NAME_OC,         --ОБЪЕКТ ОСНОВНЫХ СРЕДСТВ
-- --> AK_BUTVILOVSK #25386 Акт о приеме-передачи ОС
--          ADRC.CITY1 || CASE ADRC.STREET WHEN '' THEN '' ELSE ',' || CHAR(32) || ADRC.STREET END ||
--                        CASE ADRC.ZZNUM  WHEN '' THEN '' ELSE ',' || CHAR(32) || ADRC.ZZNUM END               AS ADDRESS,
-- <-- AK_BUTVILOVSK #25386
          ZANLU.MANUF,                                                                                                            --ОРГАНИЗАЦИЯ - ИЗГОТОВИТЕЛЬ
          ZANLU.WAERS,
          -- КУРС ВАЛЮТ ВЫВОДИТСЯ АНАЛОГИЧНО ОТОБРАЖАЕМОМУ В КАРТОЧКЕ ОС.
          ZANLU.KURSF                                                                                         AS KURSF,           --КУРС ИНОСТРАННОЙ ВАЛЮТЫ                    --НАИМЕНОВАНИЕ ИНОСТРАННОЙ ВАЛЮТЫ
          --ZANLU.KURSF * TCURF.TFACT / COALESCE( TCURF.FFACT, 1 )                                              AS KURSF,           --КУРС ИНОСТРАННОЙ ВАЛЮТЫ
          ZANLU.COSTRE,                                                                                                           --ПЕРВОНАЧАЛЬНАЯ СТОИМОСТЬ, РУБ.
          ZANLU.COSTRE_AC,                                                                                                        --ПЕРВОНОЧАЛЬНАЯ СУММА
          CASE WHEN ZANLU.GJAHR_B <> 0 THEN ZANLU.GJAHR_B ELSE '' END                                         AS DATE_BUILD,      --ДАТА ВЫПУСКА
          CASE WHEN ANLA.AKTIV <> 0 THEN ANLA.AKTIV ELSE '' END                                               AS DATE_AKTIV,      --ДАТА НАЧАЛА ИСПОЛЬЗОВАНИЯ

          SPI.USEJ || CHAR(32) || :IV_YEARS || CHAR(32) || SPI.USEP || CHAR(32) ||:IV_MONTH                   AS DATE_FACT,       --ФАКТИЧЕСКИЙ СРОК ЭКСПЛУАТАЦИИ, ЛЕТ МЕСЯЦЕВ
          MOVS.KANSW                                                                                          AS PERST,           --ПЕРВОНАЧАЛЬНАЯ СТОИМОСТЬ, РУБ.КОП.
          MOVS.KNAFA                                                                                          AS AMORT,           --СУММА НАКОПЛЕННОЙ АМОРТИЗАЦИИ, РУБ.КОП.
          COALESCE(COALESCE(BSET.HWBAS,BS.WRBTR),0)                           AS HWBAS,
          COALESCE(ROUND( CAST((BSET.KBETR / 10) AS DECIMAL( 15, 2 )) ,2), 0) AS KBETR,
          COALESCE(BSET.HWSTE, 0)                                             AS SUM_NDS,
          COALESCE(COALESCE(BS.WRBTR,(BSET.HWBAS + BSET.HWSTE)),0)            AS STOIM_NDS,
          LPAD( ANLA.BUKRS, 10, '0' )                                                                         AS PARTNER1,
          CASE WHEN MOVS.GITCOL = '2' THEN LPAD( ZANLU.BU_PARTNER, 10, '0' ) ELSE MOVS.PARTNER END            AS PARTNER2,
          DF.TAXNUM                                                                                           AS DLVR_TAXNUM,     --УНП
          BUT000.NAME_ORG1 || BUT000.NAME_ORG2 || BUT000.NAME_ORG3 || BUT000.NAME_ORG4                        AS DLVR_ORG_NAME,   --НАИМЕНОВАНИЕ ОРГАНИЗАЦИИ
          HRP1000.STEXT                                                                                       AS DLVR_DEPT_NAME,  --СТРУКТУРНОЕ ПОРАЗДЕЛЕНИЕ AZ.RAUMN
          AO.OBJNR,
          MOVS.CPUTM                                                                                          AS CPUTM,
          COALESCE( MOVS.GITCOL,0)                                                                            AS GITCOL,
          BKPF.XBLNR                                                                                          AS XBLNR,
          COALESCE( ZNAT.AFATXT, NAT.AFATXT, '' )                                                             AS AMORT_MODE_NAME,
          COALESCE( ANLBZA.NDJAR, ANLB.NDJAR, '' )                                                            AS NDJAR,
          COALESCE( ANLBZA.NDPER, ANLB.NDPER, '' )                                                            AS NDPER,
          ZANLU.BU_PARTNER                                                                                    AS RCV_ORG_NAME,
          RPAD( ANLA.BUKRS, 4, CHAR(32) ) || ANLA.ANLN1 || ANLA.ANLN2                                         AS TDNAME,
-- --> AK_BUTVILOVSK #25386 Акт о приеме-передачи ОС
          ( SELECT DISTINCT ADRC.ADRNR FROM ZRE_ASSET_LINK( :IV_BUDAT ) AS LINK
              LEFT JOIN VZOBJECT AS ADRC ON ADRC.MANDT = LINK.MANDT
                                        AND ADRC.ADROBJTYP = 'VI'
                                        AND ADRC.ADROBJNR = LINK.INTRENO
              WHERE LINK.MANDT = ANLA.MANDT
                AND LINK.BUKRS = ANLA.BUKRS
                AND LINK.ANLN1 = ANLA.ANLN1
                AND LINK.ANLN2 = ANLA.ANLN2 )                                                                 AS INTRENO_ADRNR,
          ZANLU.ADRNR                                                                                         AS ZANLU_ADRNR
-- <-- AK_BUTVILOVSK #25386
        FROM ANLA AS ANLA
          INNER JOIN ANLZ AS ANLZ ON ANLZ.MANDT = ANLA.MANDT
                                 AND ANLZ.BUKRS = ANLA.BUKRS
                                 AND ANLZ.ANLN1 = ANLA.ANLN1
                                 AND ANLZ.ANLN2 = ANLA.ANLN2
                                 AND ANLZ.BDATU >= :IV_BUDAT
                                 AND ANLZ.ADATU <= :IV_BUDAT  -- AK_BUTVILOVS #8000000757, Ст-ть ОС в акте приема-передачи
          INNER JOIN T095 AS T095 ON T095.MANDT = ANLA.MANDT
                                 AND T095.KTOGR = ANLA.KTOGR
                                 AND T095.AFABE = :IV_AFABE
          LEFT JOIN "ZAA_LINK_AA_RE_HDB=>GET_AA_RE_VALUES" ( :LV_MANDT, :IV_SYDAT ) AS AA_RE_VAL
                                   ON AA_RE_VAL.BUKRS = ANLA.BUKRS
                                  AND AA_RE_VAL.ANLN1 = ANLA.ANLN1
                                  AND AA_RE_VAL.ANLN2 = ANLA.ANLN2
          LEFT JOIN ZAFULL AS ZAFULL ON ZAFULL.MANDT = ANLA.MANDT
                                    AND ZAFULL.BUKRS = ANLA.BUKRS
                                    AND ZAFULL.ANLN1 = ANLA.ANLN1
                                    AND ZAFULL.ANLN2 = ANLA.ANLN2
          LEFT JOIN T001 AS T001 ON T001.MANDT = ANLA.MANDT
                                AND T001.BUKRS = ANLA.BUKRS
          LEFT JOIN ZANLU AS ZANLU ON ZANLU.MANDT = ANLA.MANDT
                                  AND ZANLU.INVNR = ANLA.INVNR
          LEFT JOIN TCURF AS TCURF ON TCURF.MANDT = ZANLU.MANDT
                                  AND TCURF.KURST = 'M'
                                  AND TCURF.FCURR = ZANLU.WAERS
                                  AND TCURF.TCURR = T001.WAERS
                                  AND TCURF.GDATU = ( SELECT MIN ( T.GDATU )
                                                        FROM TCURF AS T
                                                       WHERE T.MANDT = TCURF.MANDT
                                                         AND T.KURST = TCURF.KURST
                                                         AND T.FCURR = TCURF.FCURR
                                                         AND T.TCURR = TCURF.TCURR )
          INNER JOIN ( SELECT MOVS.MANDT, MOVS.BUKRS, MOVS.ANLN1, MOVS.ANLN2,MOVS.BELNR, MOVS.BUDAT, MOVS.LNRAN, TABWG.GITCOL,
                              CASE WHEN TABWG.GITCOL <> '2' THEN LPAD( FIRST_VALUE( ACDOCA.RASSC ORDER BY MOVS.ANLN1 ) , 10, '0' ) END AS PARTNER,
                              MOVS.CPUTM,
                              ( SUM( MOVS.KANSW ) ) AS KANSW,
                              ( SUM( MOVS.KNAFA ) ) AS KNAFA
                         FROM ZAA_V0_MOVE AS MOVS
                           INNER JOIN TVARVC AS TVARVC ON TVARVC.MANDT = MOVS.MANDT
                                                      AND TVARVC.TYPE  = 'S'
                                                      AND TVARVC.NAME  = 'ZAA_BWASL_AKT_PASS'
                                                      AND TVARVC.LOW   = MOVS.BWASL
                           LEFT JOIN TABW AS TABW ON TABW.MANDT = MOVS.MANDT
                                                 AND TABW.BWASL = MOVS.BWASL
                           LEFT JOIN TABWG AS TABWG ON TABWG.MANDT  = TABW.MANDT
                                                   AND TABWG.BWAGRP = TABW.BWAGRP
                                                   AND ( ( TABWG.GITCOL IN ( '1', '3' ) AND :IV_TYPE = 'X' )    --ПРИЕМ
                                                    OR   ( TABWG.GITCOL IN ( '2', '4' ) AND :IV_TYPE <> 'X' ) ) --ПЕРЕДАЧА

                           LEFT JOIN ACDOCA AS ACDOCA ON ACDOCA.RCLNT  = MOVS.MANDT
                                                     AND ACDOCA.RBUKRS = MOVS.BUKRS
                                                     AND ACDOCA.BELNR  = MOVS.BELNR
                                                     AND ACDOCA.GJAHR  = MOVS.GJAHR
                                                     AND ACDOCA.ANBWA  = MOVS.BWASL
                                                     AND ACDOCA.DOCLN  = '000001'
                                                     AND ACDOCA.AFABE  = '01'
                        WHERE MOVS.AFABE = '01'
                          AND MOVS.LNSAN = '00000'
                          AND MOVS.BUDAT = :IV_BUDAT                                        --ФОРМИРУЕТСЯ НА ДАТУ СОСТАВЛЕНИЯ АКТА
                        GROUP BY MOVS.MANDT,MOVS.BUKRS, MOVS.ANLN1, MOVS.ANLN2 , MOVS.BELNR, MOVS.BUDAT, MOVS.LNRAN, TABWG.GITCOL,MOVS.CPUTM
                     ) AS MOVS ON MOVS.MANDT = ANLA.MANDT
                              AND MOVS.BUKRS = ANLA.BUKRS
                              AND MOVS.ANLN1 = ANLA.ANLN1
                              AND MOVS.ANLN2 = ANLA.ANLN2
          LEFT JOIN BKPF AS BKPF ON BKPF.MANDT = MOVS.MANDT
                                AND BKPF.BUKRS = MOVS.BUKRS
                                AND BKPF.BELNR = MOVS.BELNR
                                AND BKPF.GJAHR = YEAR(MOVS.BUDAT)
          LEFT JOIN BSEG AS BSEG ON BSEG.MANDT = BKPF.MANDT
                                AND BSEG.BUKRS = BKPF.BUKRS
                                AND BSEG.BELNR = LEFT(BKPF.AWKEY,10)
                                AND BSEG.GJAHR = RIGHT(BKPF.AWKEY,4)
                                AND BSEG.SHKZG = 'H'
                                AND LEFT(BSEG.HKONT,2) = '68'
          LEFT JOIN BSEG AS BS ON BS.MANDT = BKPF.MANDT
                                AND BS.BUKRS = BKPF.BUKRS
                                AND BS.BELNR = LEFT(BKPF.AWKEY,10)
                                AND BS.GJAHR = RIGHT(BKPF.AWKEY,4)
                                AND BS.SHKZG = 'S'
                                AND ( LEFT(BS.HKONT,2) = '62' OR LEFT(BS.HKONT,3) = 'T62' )

          LEFT JOIN BSET AS BSET ON BSET.MANDT = BSEG.MANDT
                                AND BSET.BUKRS = BSEG.BUKRS
                                AND BSET.BELNR = BSEG.BELNR
                                AND BSET.GJAHR = BSEG.GJAHR
                                AND BSET.SHKZG = BSEG.SHKZG
                                AND BSET.HKONT = BSEG.HKONT

          LEFT JOIN HRP1000 AS HRP1000 ON HRP1000.MANDT = ANLZ.MANDT
                                      AND HRP1000.PLVAR = '01'
                                      AND HRP1000.OTYPE = 'O'
                                      AND HRP1000.OBJID = ANLZ.RAUMN
                                      AND HRP1000.ISTAT = '1'
                                      -- G.Domanikova #37892 учитываем не на тек.дату, а на дату составления акта
                                      AND HRP1000.BEGDA <= :IV_BUDAT  --:LV_DATE
                                      AND HRP1000.ENDDA >= :IV_BUDAT  --:LV_DATE
                                      AND HRP1000.LANGU  = :LV_SPRAS
          LEFT JOIN VIBDOBJASS AS VD ON VD.MANDT = ANLA.MANDT                                --ТАБЛИЦА ПРИСВОЕНИЙ
                                    AND SUBSTRING( VD.OBJNRTRG, 3, 2 )  = ANLA.BUKRS
                                    AND SUBSTRING( VD.OBJNRTRG, 7, 12 ) = ANLA.ANLN1
                                    AND SUBSTRING( VD.OBJNRTRG, 13, 4 ) = ANLA.ANLN2
                                    AND VD.OBJASSTYPE = '63'                                 --ПРИСВОЕНИЕ ОС
                                    AND VD.VALIDFROM < NOW( ) AND VD.VALIDTO > NOW( )
          LEFT JOIN VIBDPR AS PR ON PR.MANDT = VD.MANDT
                                AND PR.OBJNR = VD.OBJNRSRC                                   --ТАБЛИЦА ЗУ
          LEFT JOIN VIBDOBJREL AS REL ON REL.MANDT      = PR.MANDT
                                     AND REL.INTRENOTRG = PR.INTRENO                         --ТАБЛИЦА ОТНОШЕНИЙ
          LEFT JOIN VIBDAO AS AO ON AO.MANDT   = REL.MANDT
                                AND AO.INTRENO = REL.INTRENOSRC                              --ТАБЛИЦА АО
          LEFT JOIN DFKKBPTAXNUM AS DF ON DF.CLIENT  = ANLA.MANDT
                                      AND DF.PARTNER = LPAD( ANLA.BUKRS, 10, '0' )
                                      AND DF.TAXTYPE = :IV_TAXTP
          LEFT JOIN BUT000 AS BUT000 ON BUT000.CLIENT  = DF.CLIENT
                                    AND BUT000.PARTNER = DF.PARTNER
          LEFT JOIN FAAV_ANEK AS ANEK ON  ANEK.MANDT = ANLA.MANDT
                                      AND ANEK.BUKRS = ANLA.BUKRS
                                      AND ANEK.ANLN1 = ANLA.ANLN1
                                      AND ANEK.ANLN2 = ANLA.ANLN2
                                      AND ANEK.BUDAT = ANLA.DEAKT
                                      AND ANEK.LNRAN = MOVS.LNRAN

          LEFT JOIN ADRC AS ADRC ON ADRC.CLIENT     = ZANLU.MANDT
                                AND ADRC.ADDRNUMBER = ZANLU.ADRNR
                                AND ADRC.DATE_FROM <= :LV_DATE
                                AND ADRC.DATE_TO   >= :LV_DATE
          LEFT JOIN ANLBZA AS ANLBZA ON ANLBZA.MANDT = ANLA.MANDT
                                    AND ANLBZA.BUKRS = ANLA.BUKRS
                                    AND ANLBZA.ANLN1 = ANLA.ANLN1
                                    AND ANLBZA.ANLN2 = ANLA.ANLN2
                                    AND ANLBZA.AFABE = :IV_AFABE
                                    -- --> AK_BUTVILOVS #8000000549, Неверная сумма первонач.ст-ти ОС в акте
                                    AND ANLBZA.BDATU >= :IV_BUDAT
                                    AND ANLBZA.ADATU <= :IV_BUDAT
                                    -- <-- AK_BUTVILOVS #8000000549
          LEFT JOIN ANLB AS ANLB ON ANLB.MANDT = ANLA.MANDT
                                AND ANLB.BUKRS = ANLA.BUKRS
                                AND ANLB.ANLN1 = ANLA.ANLN1
                                AND ANLB.ANLN2 = ANLA.ANLN2
                                AND ANLB.AFABE = :IV_AFABE
          LEFT JOIN T090NAT AS ZNAT ON ZNAT.MANDT = ANLBZA.MANDT
                                   AND ZNAT.SPRAS = :LV_SPRAS
                                   AND ZNAT.AFAPL = :LV_AFAPL
                                   AND ZNAT.AFASL = ANLBZA.AFASL
          LEFT JOIN T090NAT AS NAT ON NAT.MANDT = ANLB.MANDT
                                  AND NAT.SPRAS = :LV_SPRAS
                                  AND NAT.AFAPL = :LV_AFAPL
                                  AND NAT.AFASL = ANLB.AFASL
          LEFT OUTER JOIN  "ZAA_UTILS_HDB=>GET_ASSET_SPI"( SESSION_CONTEXT('CLIENT'), :IV_BUDAT ) AS SPI
                                   ON SPI.BUKRS = ANLA.BUKRS       -- ДАННЫЕ ПО ОЦЕНКЕ
                                  AND SPI.ANLN1 = ANLA.ANLN1
                                  AND SPI.ANLN2 = ANLA.ANLN2
                                  AND SPI.AFABE = :IV_AFABE
         WHERE ANLA.MANDT = :LV_MANDT
           AND ANLA.BUKRS = :IV_BUKRS
           AND ANLA.ANLN1 = :IV_ANLN1
           AND ANLA.ANLN2 = :IV_ANLN2
         ORDER BY MOVS.CPUTM DESC;

    IF IS_EMPTY ( :LT_DATA ) THEN RETURN; END IF;

     LT_DATA =
      SELECT BUKRS, ANLN1, ANLN2, ZUGDT, DATE_DEAKT, ACCOUNT, INVNR, PLANTNR, ZZNUMREGDOC, ZZDATEREG, NAME_OC,
             -- ADDRESS,  -- AK_BUTVILOVSK #25386 Акт о приеме-передачи ОС
             MANUF, WAERS, KURSF, COSTRE, COSTRE_AC, DATE_BUILD, DATE_AKTIV, DATE_FACT,
             SUM (PERST)     AS PERST,
             SUM (AMORT)     AS AMORT,
             SUM (HWBAS)     AS HWBAS,
             SUM (KBETR)     AS KBETR,
             SUM (SUM_NDS)   AS SUM_NDS,
             SUM (STOIM_NDS) AS STOIM_NDS,
             PARTNER1, PARTNER2, DLVR_TAXNUM, DLVR_ORG_NAME, DLVR_DEPT_NAME, OBJNR, CPUTM, GITCOL, XBLNR,
             AMORT_MODE_NAME, NDJAR, NDPER, RCV_ORG_NAME, TDNAME,
             INTRENO_ADRNR, ZANLU_ADRNR -- AK_BUTVILOVSK #25386 Акт о приеме-передачи ОС
         FROM :LT_DATA AS DATA
        GROUP BY BUKRS, ANLN1, ANLN2, ZUGDT, DATE_DEAKT, ACCOUNT, INVNR, PLANTNR, ZZNUMREGDOC, ZZDATEREG, NAME_OC,
                 -- ADDRESS,  -- AK_BUTVILOVSK #25386 Акт о приеме-передачи ОС
                 MANUF, WAERS, KURSF, COSTRE, COSTRE_AC, DATE_BUILD, DATE_AKTIV, DATE_FACT, PARTNER1,
                 PARTNER2, DLVR_TAXNUM, DLVR_ORG_NAME, DLVR_DEPT_NAME, OBJNR, CPUTM, GITCOL, XBLNR,
                 AMORT_MODE_NAME, NDJAR, NDPER, RCV_ORG_NAME, TDNAME,
                 INTRENO_ADRNR, ZANLU_ADRNR; -- AK_BUTVILOVSK #25386 Акт о приеме-передачи ОС

* --> AK_BUTVILOVSK #25386 Акт о приеме-передачи ОС
        LT_DATA = SELECT DATA.BUKRS,
                         DATA.ANLN1,
                         DATA.ANLN2,
                         DATA.ZUGDT,
                         DATA.DATE_DEAKT,
                         DATA.ACCOUNT,
                         DATA.INVNR,
                         DATA.PLANTNR,
                         DATA.ZZNUMREGDOC,
                         DATA.ZZDATEREG,
                         DATA.NAME_OC,
                         -- DATA.ADDRESS,   -- AK_BUTVILOVSK #25386 Акт о приеме-передачи ОС
                         DATA.MANUF,
                         DATA.WAERS,
                         DATA.KURSF,
                         DATA.COSTRE,
                         DATA.COSTRE_AC,
                         DATA.DATE_BUILD,
                         DATA.DATE_AKTIV,
                         DATA.DATE_FACT,
                         DATA.PERST,
                         DATA.AMORT,
                         DATA.HWBAS,
                         DATA.KBETR,
                         DATA.SUM_NDS,
                         DATA.STOIM_NDS,
                         DATA.PARTNER1,
                         CASE WHEN DATA.PARTNER2 = '0000000000' AND DATA.GITCOL = 2 THEN COALESCE (PARTNER.PARTNER, MOVS.VPTNR) -- PARTNER.PARTNER  AK_BUTVILOVSK #26076 Безвозмездная долевая передача ОС
                                                                                    ELSE DATA.PARTNER2
                         END AS PARTNER2,
                         DATA.DLVR_TAXNUM,
                         DATA.DLVR_ORG_NAME,
                         DATA.DLVR_DEPT_NAME,
                         DATA.OBJNR, CPUTM,
                         DATA.GITCOL,
                         DATA.XBLNR,
                         DATA.AMORT_MODE_NAME,
                         DATA.NDJAR,
                         DATA.NDPER,
                         DATA.RCV_ORG_NAME,
                         DATA.TDNAME,
                         INTRENO_ADRNR,                       -- AK_BUTVILOVSK #25386 Акт о приеме-передачи ОС
                         ZANLU_ADRNR FROM :LT_DATA AS DATA    -- AK_BUTVILOVSK #25386 Акт о приеме-передачи ОС
                     LEFT JOIN (SELECT ANEP.BUKRS,
                                      ANEP.ANLN1,
                                      ANEP.ANLN2,
                                      ANEP.ANBTR,
                                      MAX( ACDOCA.KUNNR ) AS PARTNER FROM FAAV_ANEP AS ANEP
                                 JOIN ACDOCA ON  ACDOCA.RBUKRS = ANEP.BUKRS
                                             AND ACDOCA.GJAHR  = ANEP.GJAHR
                                             AND ACDOCA.BELNR  = ANEP.BELNR
                                             AND ACDOCA.KOART  = 'D'
                                             AND ACDOCA.RCLNT  = ANEP.MANDT
                                 WHERE ANEP.LNSAN = '00000'
                                   AND ANEP.AUGLN = '00000'
                                   AND ANEP.BZDAT = :IV_BUDAT
                                   AND ANEP.MANDT = :LV_MANDT
                                 GROUP BY ANEP.BUKRS, ANEP.ANLN1, ANEP.ANLN2, ANEP.ANBTR ) AS PARTNER ON  PARTNER.BUKRS = DATA.BUKRS
                                                                                                      AND PARTNER.ANLN1 = DATA.ANLN1
                                                                                                      AND PARTNER.ANLN2 = DATA.ANLN2
                                                                                                      AND PARTNER.ANBTR = DATA.PERST
* --> AK_BUTVILOVSK #26076 Безвозмездная долевая передача ОС
                    LEFT JOIN (SELECT MOVS.MANDT,
                                      MOVS.BUKRS,
                                      MOVS.ANLN1,
                                      MOVS.ANLN2,
                                      MOVS.BUDAT,
                                      MOVS.KANSW,
                                      ACDOCA.VPTNR FROM ZAA_V0_MOVE AS MOVS
                                --ПЕРЕДАЧА
                                 JOIN ACDOCA AS ACDOCA
                                   ON  ACDOCA.RCLNT  = MOVS.MANDT
                                   AND ACDOCA.RBUKRS = MOVS.BUKRS
                                   AND ACDOCA.BELNR  = MOVS.BELNR
                                   AND ACDOCA.GJAHR  = MOVS.GJAHR
                                   AND ACDOCA.VPTNR <> ''
                                   AND ACDOCA.AFABE  = '01'
                                 WHERE MOVS.LNSAN = '00000'
                                   AND MOVS.AFABE = '01' ) AS MOVS ON  MOVS.MANDT    = :LV_MANDT
                                                                   AND MOVS.BUKRS    = DATA.BUKRS
                                                                   AND MOVS.ANLN1    = DATA.ANLN1
                                                                   AND MOVS.ANLN2    = DATA.ANLN2
                                                                   AND MOVS.BUDAT    = :IV_BUDAT
                                                                   AND MOVS.KANSW    = DATA.PERST;
* <-- AK_BUTVILOVSK #26076
* --> AK_BUTVILOVSK #25386

    --ОБРАБОТКА НАЖАТИЯ ЗАПОЛНЯТЬ ДАННЫЕ ПОЛУЧАТЕЛЯ
    LT_ADD =
      SELECT
          '' AS BUKRS,
          '' AS ANLN1,
          '' AS ANLN2,
          '' AS RBUKRS,
          '' AS ANLN_1,
          '' AS ANLN_2,
          '' AS RCV_DEPT_NAME,
          0  AS NDJAR,
          0  AS NDPER,
          '' AS AMORT_MODE_NAME,
          '' AS FLAG
        FROM DUMMY;

    IF :IV_FLAG = 'X' THEN
      LT_ADD =
        SELECT
            MAIN.BUKRS,
            MAIN.ANLN1,
            MAIN.ANLN2,
            COALESCE(ANLA.BUKRS,'    ')                                                             AS RBUKRS,
            COALESCE(ANLA.ANLN1,'            ')                                                     AS ANLN_1,
            COALESCE(ANLA.ANLN2,'    ')                                                             AS ANLN_2,

            --HTTPS://SERVICE.IBA.BY/REDMINE/ISSUES/13167#NOTE-96
            COALESCE( HR.STEXT, 'X')                                                                AS RCV_DEPT_NAME,
            --CASE WHEN HR.STEXT <> MAIN.DLVR_DEPT_NAME THEN HR.STEXT ELSE '' END                   AS RCV_DEPT_NAME,
            COALESCE( ANLBZA.NDJAR, ANLB.NDJAR, '0' )                                               AS NDJAR,
            COALESCE( ANLBZA.NDPER, ANLB.NDPER, '0' )                                               AS NDPER,
            COALESCE( ZNAT.AFATXT, NAT.AFATXT, '' )                                                 AS AMORT_MODE_NAME,
            CASE WHEN HR.STEXT <> MAIN.DLVR_DEPT_NAME THEN 'X' ELSE '' END                          AS FLAG
          FROM :LT_DATA AS MAIN
            LEFT JOIN ANLA AS ANLA ON ANLA.MANDT = :LV_MANDT
                                  AND ANLA.INVNR = MAIN.INVNR
                                  AND ANLA.BUKRS <> MAIN.BUKRS
                                  AND ( ANLA.ANLN1 <> MAIN.ANLN1 OR
                                        ANLA.ANLN2 <> MAIN.ANLN2 )
   -- AK_BUTVILOVS #24132 "Акт приема-передачи ОС - неверно подтягиваются данные получателя"
                                  -- G.Domanikova #37892 Убираем проверку на AIBN1 = MAIN.ANLN1 т.к AIBN1 уже не заполняется основной записью ОС с которого было перемещение
                                  --AND ( ( MAIN.GITCOL IN ( 2, 4 ) AND ANLA.AIBN1 = MAIN.ANLN1 ) OR MAIN.GITCOL NOT IN ( 2, 4 ) )
            LEFT JOIN ANLZ AS ANLZ ON ANLZ.MANDT = ANLA.MANDT
                                  AND ANLZ.BUKRS = ANLA.BUKRS
                                  AND ANLZ.ANLN1 = ANLA.ANLN1
                                  AND ANLZ.ANLN2 = ANLA.ANLN2
-- --> AK_BUTVILOVS #24132 "Акт приема-передачи ОС - неверно подтягиваются данные получателя"
                                  AND ANLZ.BDATU >= :IV_BUDAT
                                  AND ANLZ.ADATU <= :IV_BUDAT
-- <-- AK_BUTVILOVS #24132
            LEFT JOIN ANLBZA AS ANLBZA ON ANLBZA.MANDT = ANLA.MANDT
                                      AND ANLBZA.BUKRS = ANLA.BUKRS
                                      AND ANLBZA.ANLN1 = ANLA.ANLN1
                                      AND ANLBZA.ANLN2 = ANLA.ANLN2
                                      AND ANLBZA.AFABE = :IV_AFABE
            LEFT JOIN ANLB AS ANLB ON ANLB.MANDT = ANLA.MANDT
                                  AND ANLB.BUKRS = ANLA.BUKRS
                                  AND ANLB.ANLN1 = ANLA.ANLN1
                                  AND ANLB.ANLN2 = ANLA.ANLN2
                                  AND ANLB.AFABE = :IV_AFABE
            LEFT JOIN T090NAT AS ZNAT ON ZNAT.MANDT = ANLBZA.MANDT
                                     AND ZNAT.SPRAS = :LV_SPRAS
                                     AND ZNAT.AFAPL = :LV_AFAPL
                                     AND ZNAT.AFASL = ANLBZA.AFASL
            LEFT JOIN T090NAT AS NAT ON NAT.MANDT = ANLB.MANDT
                                    AND NAT.SPRAS = :LV_SPRAS
                                    AND NAT.AFAPL = :LV_AFAPL
                                    AND NAT.AFASL = ANLB.AFASL
            LEFT JOIN HRP1000 AS HR ON HR.MANDT = ANLZ.MANDT
                                   AND HR.PLVAR = '01'
                                   AND HR.OTYPE = 'O'
                                   AND HR.OBJID = ANLZ.RAUMN
                                   AND HR.ISTAT = '1'
                                   -- G.Domanikova #37892 учитываем не на тек.дату, а на дату составления акта
                                   AND HR.BEGDA <= :IV_BUDAT    --:LV_DATE
                                   AND HR.ENDDA >= :IV_BUDAT    --:LV_DATE
                                   AND HR.LANGU = :LV_SPRAS
        WHERE MAIN.GITCOL <> 0;
    END IF;

* --> AK_BUTVILOVSK #25386 Акт о приеме-передачи ОС
    --ДАННЫЕ КРАТКОЙ ХАРАКТЕРИСТИКИ ПО ОС
*    LT_MEAS =
*      SELECT
*          MEAS,
*          SUM( VAL0 )                                       AS VAL0,
*          SUM( VAL1 )                                       AS VAL1,
*          SUM( VAL2 )                                       AS VAL2,
*          SUM( VAL3 )                                       AS VAL3,
*          SUM( VAL4 )                                       AS VAL4
*        FROM ( SELECT MEAS,
*                      0                                     AS VAL0,
*                      CASE WHEN NUM = 1 THEN MEASVALUE END  AS VAL1,
*                      CASE WHEN NUM = 2 THEN MEASVALUE END  AS VAL2,
*                      CASE WHEN NUM = 3 THEN MEASVALUE END  AS VAL3,
*                      CASE WHEN NUM = 4 THEN MEASVALUE END  AS VAL4
*                 FROM ( SELECT NODE.MANDT,
*                               NODE.PARENT,
*                               NODE.INTRENO,
*                               ROW_NUMBER( ) OVER( PARTITION BY NODE.PARENT ORDER BY NODE.PARENT, NODE.INTRENO ) AS NUM
*                          FROM ANLA AS ANLA
*                            LEFT JOIN "ZAA_LINK_AA_RE_HDB=>GET_AA_RE_VALUES" ( :LV_MANDT, :IV_SYDAT ) AS AA_RE_VAL
*                                            ON AA_RE_VAL.BUKRS = ANLA.BUKRS
*                                           AND AA_RE_VAL.ANLN1 = ANLA.ANLN1
*                                           AND AA_RE_VAL.ANLN2 = ANLA.ANLN2
*                            LEFT OUTER JOIN VIBDNODE AS NODE ON NODE.MANDT     = ANLA.MANDT
*                                                            AND NODE.AOTYPE_AO = '05RM'
*                                                            AND NODE.PARENT    = AA_RE_VAL.INTRENO
*                           WHERE ANLA.MANDT = :LV_MANDT
*                             AND ANLA.BUKRS = :IV_BUKRS
*                             AND ANLA.ANLN1 = :IV_ANLN1
*                             AND ANLA.ANLN2 = :IV_ANLN2 ) AS NODE
*          LEFT JOIN VIBDMEAS AS VIB ON VIB.MANDT      = NODE.MANDT
*                                   AND VIB.INTRENO    = NODE.INTRENO
*                                   AND VIB.VALIDFROM <= :IV_SYDAT
*                                   AND VIB.VALIDTO   >= :IV_SYDAT
*    UNION ALL
*      SELECT MEAS,
*             CASE WHEN VIB.INTRENO = AA_RE_VAL.INTRENO THEN VIB.MEASVALUE ELSE 0 END         AS VAL0,
*             0                                                                               AS VAL1,
*             0                                                                               AS VAL2,
*             0                                                                               AS VAL3,
*             0                                                                               AS VAL4
*        FROM ANLA AS ANLA
*          LEFT JOIN "ZAA_LINK_AA_RE_HDB=>GET_AA_RE_VALUES" ( :LV_MANDT, :IV_SYDAT ) AS AA_RE_VAL
*                  ON AA_RE_VAL.BUKRS = ANLA.BUKRS
*                 AND AA_RE_VAL.ANLN1 = ANLA.ANLN1
*                 AND AA_RE_VAL.ANLN2 = ANLA.ANLN2
*          LEFT JOIN VIBDMEAS AS VIB ON VIB.MANDT     = ANLA.MANDT
*                                   AND VIB.INTRENO   = AA_RE_VAL.INTRENO
*                                   AND VIB.VALIDFROM <= :IV_SYDAT
*                                   AND VIB.VALIDTO   >= :IV_SYDAT
*       WHERE ANLA.MANDT = :LV_MANDT
*         AND ANLA.BUKRS = :IV_BUKRS
*         AND ANLA.ANLN1 = :IV_ANLN1
*         AND ANLA.ANLN2 = :IV_ANLN2
*    UNION ALL
*      SELECT 'A002'                                                                  AS MEAS,
*            ( SELECT CASE WHEN VIBDAO.AOTYPE = '03BU' THEN VIBDAO.BANZGE ELSE 0 END  AS VAL0
*                FROM ANLA AS ANLA
*                  LEFT JOIN "ZAA_LINK_AA_RE_HDB=>GET_AA_RE_VALUES" ( :LV_MANDT, :IV_SYDAT ) AS AA_RE_VAL
*                                ON AA_RE_VAL.BUKRS = ANLA.BUKRS
*                               AND AA_RE_VAL.ANLN1 = ANLA.ANLN1
*                               AND AA_RE_VAL.ANLN2 = ANLA.ANLN2
*                  INNER JOIN VIBDAO AS VIBDAO ON VIBDAO.MANDT   = :LV_MANDT
*                                             AND VIBDAO.INTRENO = AA_RE_VAL.INTRENO
*               WHERE ANLA.MANDT = :LV_MANDT
*                 AND ANLA.BUKRS = :IV_BUKRS
*                 AND ANLA.ANLN1 = :IV_ANLN1
*                 AND ANLA.ANLN2 = :IV_ANLN2 ) AS VAL0,
*             SUM( VAL1 )                                                             AS VAL1,
*             SUM( VAL2 )                                                             AS VAL2,
*             SUM( VAL3 )                                                             AS VAL3,
*             SUM( VAL4 )                                                             AS VAL4
*        FROM ( SELECT
*                   CASE WHEN VIBDAO2.AONR = '001' THEN VIBDAO2.BANZGE ELSE 0 END     AS VAL1,
*                   CASE WHEN VIBDAO2.AONR = '002' THEN VIBDAO2.BANZGE ELSE 0 END     AS VAL2,
*                   CASE WHEN VIBDAO2.AONR = '003' THEN VIBDAO2.BANZGE ELSE 0 END     AS VAL3,
*                   CASE WHEN VIBDAO2.AONR = '004' THEN VIBDAO2.BANZGE ELSE 0 END     AS VAL4
*                 FROM ANLA AS ANLA
*                   LEFT JOIN "ZAA_LINK_AA_RE_HDB=>GET_AA_RE_VALUES" ( :LV_MANDT, :IV_SYDAT ) AS AA_RE_VAL
*                                    ON AA_RE_VAL.BUKRS = ANLA.BUKRS
*                                   AND AA_RE_VAL.ANLN1 = ANLA.ANLN1
*                                   AND AA_RE_VAL.ANLN2 = ANLA.ANLN2
*                   INNER JOIN VIBDNODE AS NODE ON NODE.MANDT = ANLA.MANDT
*                                              AND NODE.AOTYPE_AO = '05RM'
*                                              AND NODE.PARENT = AA_RE_VAL.INTRENO
*                   INNER JOIN VIBDAO AS VIBDAO2 ON VIBDAO2.MANDT   = NODE.MANDT
*                                               AND VIBDAO2.INTRENO = NODE.INTRENO
*       WHERE ANLA.MANDT = :LV_MANDT
*         AND ANLA.BUKRS = :IV_BUKRS
*         AND ANLA.ANLN1 = :IV_ANLN1
*         AND ANLA.ANLN2 = :IV_ANLN2 )
*    UNION ALL
*      SELECT *
*        FROM :IT_EMPT )
*       GROUP BY MEAS ORDER BY MEAS;
*
*    ET_MEAS = SELECT VAL0, VAL1, VAL2, VAL3, VAL4 FROM :LT_MEAS;

   LT_MEAS = SELECT * FROM "ZAA_LINK_AA_RE_HDB=>GET_AA_RE_VALUES"( :LV_MANDT, :IV_SYDAT )
               WHERE BUKRS = :IV_BUKRS
                 AND ANLN1 = :IV_ANLN1
                 AND ANLN2 = :IV_ANLN2;

   ET_MEAS = SELECT AREA      AS VAL0,
                    BANZGE    AS VAL1,
                    VOLUME    AS VAL2,
                    VOLUMEP   AS VAL3,
                    VOLUMEPR  AS VAL4
        FROM :LT_MEAS
    UNION ALL
        SELECT MEAS1.MEASVALUE  AS VAL0,
               DAO.BANZGE       AS VAL1,
               MEAS2.MEASVALUE  AS VAL2,
               MEAS3.MEASVALUE  AS VAL3,
               MEAS4.MEASVALUE  AS VAL4 FROM :LT_MEAS AS SECT7
            LEFT OUTER JOIN VIBDNODE AS NODE ON NODE.MANDT = SECT7.MANDT
                                            AND NODE.PARENT = SECT7.INTRENO
            LEFT OUTER JOIN VIBDAO AS DAO ON DAO.MANDT = NODE.MANDT
                                         AND DAO.INTRENO = NODE.INTRENO
            LEFT OUTER JOIN VIBDMEAS AS MEAS1 ON MEAS1.MANDT = DAO.MANDT
                                             AND MEAS1.VALIDFROM <= :IV_SYDAT
                                             AND MEAS1.VALIDTO >= :IV_SYDAT
                                             AND MEAS1.INTRENO = DAO.INTRENO
                                             AND MEAS1.MEAS = 'A001'
            LEFT OUTER JOIN VIBDMEAS AS MEAS2 ON MEAS2.MANDT = DAO.MANDT
                                             AND MEAS1.VALIDFROM <= :IV_SYDAT
                                             AND MEAS1.VALIDTO >= :IV_SYDAT
                                             AND MEAS2.INTRENO = DAO.INTRENO
                                             AND MEAS2.MEAS = 'Z006'
            LEFT OUTER JOIN VIBDMEAS AS MEAS3 ON MEAS3.MANDT = DAO.MANDT
                                             AND MEAS1.VALIDFROM <= :IV_SYDAT
                                             AND MEAS1.VALIDTO >= :IV_SYDAT
                                             AND MEAS3.INTRENO = DAO.INTRENO
                                             AND MEAS3.MEAS = 'Z007'
            LEFT OUTER JOIN VIBDMEAS AS MEAS4 ON MEAS4.MANDT = DAO.MANDT
                                             AND MEAS1.VALIDFROM <= :IV_SYDAT
                                             AND MEAS1.VALIDTO >= :IV_SYDAT
                                             AND MEAS4.INTRENO = DAO.INTRENO
                                             AND MEAS4.MEAS = 'Z008'
            WHERE DAO.AOTYPE = '05RM';
* --> AK_BUTVILOVSK #25386

* --> AK_BUTVILOVSK #26104 AS02 Акт о приеме-передачи ОС (разделение ДМ при частичном долевом выбытии)
    LT_UNIQUE_PARTNERS = SELECT DISTINCT PARTNER2,
                                         BUKRS,
                                         ANLN1,
                                         ANLN2 FROM :LT_DATA;
* <-- AK_BUTVILOVSK #26104

    --ДАННЫЕ ДМ И ДК
    ET_DRAG =
      SELECT
      -- CASE WHEN ROW_NUMBER() OVER ( PARTITION BY ANLA.MANDT ORDER BY DRAG_MET_TX.NAME ) = 1    AK_BUTVILOVSK #26104 AS02 Акт о приеме-передачи ОС
          CASE WHEN ROW_NUMBER() OVER ( PARTITION BY PARTNERS.PARTNER2 ORDER BY PARTNERS.PARTNER2, DRAG_MET_TX.NAME ) = 1
               THEN (  SELECT ZAFULL.TXTF1 || CHAR(32) || ZAFULL.TXTF2                                         AS NAMES_OC
                         FROM ZAFULL AS ZAFULL
                        WHERE ZAFULL.MANDT = ANLA.MANDT
                          AND ZAFULL.BUKRS = ANLA.BUKRS
                          AND ZAFULL.ANLN1 = ANLA.ANLN1
                          AND ZAFULL.ANLN2 = ANLA.ANLN2 ) ELSE '' END                                          AS NAMES_OC,
            --HTTPS://SERVICE.IBA.BY/REDMINE/ISSUES/13167#NOTE-96
            --КОЛИЧЕСТВО ВСЕГДА 1
            -- CASE WHEN ROW_NUMBER() OVER ( PARTITION BY ANLA.MANDT ORDER BY DRAG_MET_TX.NAME ) = 1    AK_BUTVILOVSK #26104 AS02 Акт о приеме-передачи ОС
            CASE WHEN ROW_NUMBER() OVER (PARTITION BY PARTNERS.PARTNER2 ORDER BY PARTNERS.PARTNER2, DRAG_MET_TX.NAME ) = 1 THEN '1' END    AS MENGE,
            DRAG_MET_TX.NAME                                                                                   AS DRAG_MET,
            CASE WHEN DRAG_MET.TYPE_MK = '1' THEN :IV_GRAMM
                 WHEN DRAG_MET.TYPE_MK = '2' THEN :IV_KARAT END                                                AS MEASURE,
            CASE WHEN ROW_NUMBER() OVER (PARTITION BY ANLA.MANDT) = 1 AND COUNT( MOVEI.WEIGHT ) = 0 THEN :IV_NO
             ELSE REPLACE ( SUM(MOVEI.WEIGHT), '.', ',') END                                                   AS WEIGHT,
            PARTNERS.PARTNER2                                                                                  AS PARTNER  -- AK_BUTVILOVSK #26104 AS02 Акт о приеме-передачи ОС (разделение ДМ при частичном долевом выбытии)
        FROM ANLA AS ANLA
          LEFT JOIN ZAFULL AS ZAFULL ON ZAFULL.MANDT = ANLA.MANDT
                                    AND ZAFULL.BUKRS = ANLA.BUKRS
                                    AND ZAFULL.ANLN1 = ANLA.ANLN1
                                    AND ZAFULL.ANLN2 = ANLA.ANLN2
          LEFT JOIN ZFI_DRAG_MOVEH AS MOVEH ON MOVEH.MANDT = ANLA.MANDT
                                           AND MOVEH.BUKRS = ANLA.BUKRS
                                           AND MOVEH.ANLN1 = ANLA.ANLN1
                                           AND ANLA.ANLN2  = ANLA.ANLN2
                                           AND MOVEH.STBLG = ''
                                           AND MOVEH.DATE_MOVE = :IV_BUDAT
          LEFT JOIN ZFI_DRAG_MOVEI AS MOVEI ON MOVEI.MANDT = MOVEH.MANDT
                                           AND MOVEI.BUKRS = MOVEH.BUKRS
                                           AND MOVEI.ANLN1 = MOVEH.ANLN1
                                           AND MOVEI.ANLN2 = MOVEH.ANLN2
                                           AND MOVEI.DATE_MOVE = MOVEH.DATE_MOVE
                                           AND MOVEI.NMOVE = MOVEH.NMOVE
          LEFT JOIN ZFI_DRAG_MET AS DRAG_MET ON DRAG_MET.MANDT    = MOVEI.MANDT
                                            AND DRAG_MET.KOD_MK   = MOVEI.KOD_MK
                                            AND DRAG_MET.PASP_KOM = MOVEI.PASP_KOM
          LEFT JOIN ZFI_DRAG_MET_TX AS DRAG_MET_TX ON DRAG_MET_TX.MANDT  = DRAG_MET.MANDT
                                                  AND DRAG_MET_TX.SPRAS  = :LV_SPRAS
                                                  AND DRAG_MET_TX.KOD_MK = DRAG_MET.KOD_MK
* --> AK_BUTVILOVSK #26104 AS02 Акт о приеме-передачи ОС (разделение ДМ при частичном долевом выбытии)
          LEFT JOIN :LT_UNIQUE_PARTNERS AS PARTNERS ON PARTNERS.BUKRS    = ZAFULL.BUKRS
                                                   AND PARTNERS.ANLN1    = ZAFULL.ANLN1
                                                   AND PARTNERS.ANLN2    = ZAFULL.ANLN2
                                                   AND PARTNERS.PARTNER2 = LEFT(MOVEH.TEXT , 10 )
* <-- AK_BUTVILOVSK #26104
       WHERE ANLA.MANDT = :LV_MANDT
         AND ANLA.BUKRS = :IV_BUKRS
         AND ANLA.ANLN1 = :IV_ANLN1
         AND ANLA.ANLN2 = :IV_ANLN2
       GROUP BY ANLA.MANDT, DRAG_MET_TX.NAME, DRAG_MET.TYPE_MK, ANLA.BUKRS, ANLA.ANLN1, ANLA.ANLN2, ANLA.DEAKT, PARTNERS.PARTNER2
      UNION
      SELECT
            ''                                                                                                 AS NAMES_OC,
            ''                                                                                                 AS MENGE,
            :IV_DMTEXT                                                                                         AS DRAG_MET,
            ''                                                                                                 AS MEASURE,
            ''                                                                                                 AS WEIGHT,
            ''                                                                                                 AS PARTNER -- AK_BUTVILOVSK #26104 AS02 Акт о приеме-передачи ОС (разделение ДМ при частичном долевом выбытии)
        FROM ANLA AS ANLA
        INNER JOIN ZANLU AS ZU ON ZU.MANDT = ANLA.MANDT
                              AND ZU.INVNR = ANLA.INVNR
                              AND ZU.DMOFF = 'X'
         WHERE ANLA.MANDT = :LV_MANDT
                 AND ANLA.BUKRS = :IV_BUKRS
                 AND ANLA.ANLN1 = :IV_ANLN1
                 AND ANLA.ANLN2 = :IV_ANLN2;

    ET_PROP =
      SELECT
          CASE WHEN BUT000.TYPE = '1' THEN BUT000.NAME_LAST || CHAR( 32 ) || BUT000.NAMEMIDDLE

               WHEN BUT000.TYPE = '2' THEN BUT000.NAME_ORG1 || BUT000.NAME_ORG2 ||        -- BUT000.NAME_ORG3 || AK_BUTVILOVS #25386 Акт о приеме-передачи ОС
                    BUT000.NAME_ORG3 || BUT000.NAME_ORG4 END          AS PARTNER_NAME,    --ОРГАНИЗАЦИЯ - ИЗГОТОВИТЕЛЬ
            PROP.PROP_PER                                                                 --ДОЛЯ В ПРАВЕ ОБЩЕЙ СОБСТВЕННОСТИ, %
        FROM ANLA AS ANLA
          LEFT JOIN ZFI_PROP AS PROP ON PROP.MANDT = ANLA.MANDT
                                    AND PROP.INVNR = ANLA.INVNR
                                    AND PROP.DATE_FROM <= :IV_BUDAT   -- ANLA.DEAKT AK_BUTVILOVSK #25386 Акт о приеме-передачи ОС
                                    AND PROP.DATE_TO   >= :IV_BUDAT   -- ANLA.DEAKT AK_BUTVILOVSK #25386 Акт о приеме-передачи ОС
          LEFT JOIN BUT000 AS BUT000 ON BUT000.CLIENT  = PROP.MANDT
                                    AND BUT000.PARTNER = PROP.PARTNER
       WHERE ANLA.MANDT = :LV_MANDT
         AND ANLA.BUKRS = :IV_BUKRS
         AND ANLA.ANLN1 = :IV_ANLN1
         AND ANLA.ANLN2 = :IV_ANLN2;

    LT_TEMP =
      SELECT
          --ОРГАНИЗАЦИЯ-СДАТЧИК
          LT_DATA.DLVR_TAXNUM                                                        AS DLVR_TAXNUM,         --УНП
          LT_DATA.DLVR_ORG_NAME                                                      AS DLVR_ORG_NAME,       --НАИМЕНОВАНИЕ ОРГАНИЗАЦИИ
          LT_DATA.DLVR_DEPT_NAME                                                     AS DLVR_DEPT_NAME,      --СТРУКТУРНОЕ ПОРАЗДЕЛЕНИЕ

          --ОРГАНИЗАЦИЯ-ПОЛУЧАТЕЛЬ
          DF.TAXNUM                                                                  AS RCV_TAXNUM,          --УНП
          BT.NAME_ORG1 || BT.NAME_ORG2 || BT.NAME_ORG3 || BT.NAME_ORG4               AS RCV_ORG_NAME,
/*          CASE WHEN :IV_FLAG = 'X' AND LT_ADD.RCV_DEPT_NAME <> 'X'
                 THEN LT_ADD.RCV_DEPT_NAME                                                                   --СТРУКТУРНОЕ ПОРАЗДЕЛЕНИЕ
                 ELSE HRP1000.STEXT END                                              AS RCV_DEPT_NAME, */
          HRP1000.STEXT                                                              AS RCV_DEPT_NAME,
          LT_DATA.ZUGDT,                                                                                     --ДАТА ПРИНЯТИЯ К БУХГАЛТЕРСКОМУ УЧЕТУ
          LT_DATA.DATE_DEAKT,                                                                                --ДАТА СПИСАНИЯ С БУХГАЛТЕРСКОГО УЧЕТА
          LT_DATA.ACCOUNT,                                                                                   --СЧЕТ, СУБСЧЕТ
          LT_DATA.INVNR,                                                                                     --ИНВЕНТАРНЫЙ НОМЕР
          LT_DATA.PLANTNR,                                                                                   --ЗАВОДСКОЙ НОМЕР
          LT_DATA.ZZNUMREGDOC,                                                                               --НОМЕР ГОСУДАРСТВЕННОЙ РЕГИСТРАЦИИ
          LT_DATA.ZZDATEREG,                                                                                 --ДАТА ГОСУДАРСТВЕННОЙ РЕГИСТРАЦИИ
          LT_DATA.NAME_OC,                                                                                   --ОБЪЕКТ OC
-- --> AK_BUTVILOVSK #25386 Акт о приеме-передачи ОС
         -- LT_DATA.ADDRESS,                                                                                   --МЕСТО НАХОЖДЕНИЯ ОБЪЕКТА ОС
          ADR.POST_CODE1
            || CASE WHEN CN.LANDX50 <> ''          THEN ',' || CHAR(32) || CN.LANDX50 ELSE '' END
            || CASE WHEN T005U.BEZEI <> ''         THEN ',' || CHAR(32) || T005U.BEZEI ELSE '' END                     -- Область
            || CASE WHEN DISTRICT.ZZDISTRICT <> '' THEN ',' || CHAR(32) || DISTRICT.ZZDISTRICT || ' р-н' ELSE '' END   -- Район
            || CASE WHEN ADR.CITY1 <> ''           THEN ',' || CHAR(32) || ADR.CITY1 ELSE '' END
            || CASE WHEN ADR.STREET <> ''          THEN ',' || CHAR(32) || ADR.STREET ELSE '' END
            || CASE WHEN ADR.HOUSE_NUM1 <> ''      THEN ',' || CHAR(32) || ADR.HOUSE_NUM1 ELSE '' END
            || CASE WHEN ADR.HOUSE_NUM2 <> ''      THEN ',' || CHAR(32) || ADR.HOUSE_NUM2 ELSE '' END
            || CASE WHEN ADR.ZZNUM <> ''           THEN ',' || CHAR(32) || ADR.ZZNUM ELSE '' END
            || CASE WHEN ADR.BUILDING <> ''        THEN ',' || CHAR(32) || ADR.BUILDING ELSE '' END
            || CASE WHEN ADR.ROOMNUMBER <> ''      THEN ',' || CHAR(32) || ADR.ROOMNUMBER ELSE '' END AS ADDRESS,    -- МЕСТО НАХОЖДЕНИЯ ОБЪЕКТА ОС
-- <-- AK_BUTVILOVSK #25386
          LT_DATA.MANUF,                                                                                     --(ПЕРЕДАВАЕМОГО ОС) ОРГАНИЗАЦИЯ - ИЗГОТОВИТЕЛЬ
          LT_DATA.WAERS,                                                                                     --НАИМЕНОВАНИЕ ИНОСТРАННОЙ ВАЛЮТЫ
          LT_DATA.KURSF,                                                                                     --КУРС ИНОСТРАННОЙ ВАЛЮТЫ
          LT_DATA.COSTRE,                                                                                    --СУММА
          LT_DATA.DATE_BUILD,                                                                                --ДАТА СОЗДАНИЯ ИЛИ ПРИОБРЕТЕНИЯ
          LT_DATA.DATE_AKTIV,                                                                                --ДАТА НАЧАЛА ИСПОЛЬЗОВАНИЯ
          LT_DATA.DATE_FACT,                                                                                 --ФАКТИЧЕСКИЙ СРОК ЭКСПЛУАТАЦИИ, ЛЕТ МЕСЯЦЕВ
          LT_DATA.PERST,                                                                                     --ПЕРВОНАЧАЛЬНАЯ СТОИМОСТЬ, РУБ.КОП.
          LT_DATA.AMORT,                                                                                     --СУММА НАКОПЛЕННОЙ АМОРТИЗАЦИИ, РУБ.КОП.
          LT_DATA.HWBAS AS STOIM_BEZ_NDS,
          CASE WHEN LT_DATA.KBETR <> 0 THEN LT_DATA.KBETR || '%'
               ELSE '' END                                                           AS RATE,
          COALESCE(LT_DATA.KBETR,0)                                                  AS KBETR,
          LT_DATA.SUM_NDS,
          LT_DATA.STOIM_NDS,
          CASE WHEN :IV_FLAG = 'X' THEN LT_DATA.COSTRE_AC END                        AS COSTRE_AC,           --ПЕРВОНОЧАЛЬНАЯ СУММА
          CASE WHEN :IV_FLAG = 'X' AND LT_ADD.ANLN1 <> ''
               THEN TO_NUMBER( LT_ADD.NDJAR ) || CHAR(32) || :IV_YEARS || CHAR(32) ||
                    CASE WHEN LT_ADD.NDPER <> 000 THEN TO_NUMBER( LT_ADD.NDPER ) ELSE '0' END
               ELSE TO_NUMBER( LT_DATA.NDJAR ) || CHAR(32) || :IV_YEARS || CHAR(32) ||
                    CASE WHEN LT_DATA.NDPER <> 000 THEN TO_NUMBER( LT_DATA.NDPER ) ELSE '0' END
                 || CHAR(32) || :IV_MONTH END                                        AS DATE_WRNT,           --СРОК ПОЛЕЗНОГО ИСПОЛЬЗОВАНИЯ
          --А ТАКЖЕ И ДЛЯ ПОСТУПИВШЕГО
          CASE WHEN :IV_FLAG = 'X' AND LT_ADD.ANLN1 <> ''
               THEN LT_ADD.AMORT_MODE_NAME
               ELSE LT_DATA.AMORT_MODE_NAME END                                      AS AMORT_MODE_NAME,     --НАИМЕНОВАНИЕ СПОСОБА НАЧИСЛЕНИЯ АМОРТИЗАЦИИ
          CASE WHEN :IV_FLAG = 'X' AND LT_ADD.ANLN1 <> ''  AND ( LT_ADD.NDJAR * 12 + LT_ADD.NDPER ) <> 0
               THEN ROUND( CAST( 1 / ( LT_ADD.NDJAR * 12 + LT_ADD.NDPER  / 12 ) * 100
                    AS DECIMAL( 15, 2 ) ), 2 ) || '%'
              -- А ЕСЛИ LT_ADD НЕ НАЙДЕНО, ТО НОРМЫ - ИЗ ПОСТУПИВШЕГО ОС
               ELSE ROUND( CAST( 1 / ( LT_DATA.NDJAR * 12 + LT_DATA.NDPER  / 12 ) * 100
                    AS DECIMAL( 15, 2 ) ), 2 ) || '%' END                            AS AMORT_COUNT_NORMT,   --НОРМА НАЧИСЛЕНИЯ АМОРТИЗАЦИИ
          ( SELECT VIBDAO.OBJNR
              FROM VIBDOBJASS AS VIBDOBJASS
                LEFT OUTER JOIN VIBDBU AS VIBDBU ON VIBDBU.MANDT = VIBDOBJASS.MANDT
                                                AND VIBDBU.OBJNR = VIBDOBJASS.OBJNRSRC
                LEFT OUTER JOIN VIBDPR AS VIBDPR ON VIBDPR.MANDT = VIBDOBJASS.MANDT
                                                AND VIBDPR.OBJNR = VIBDOBJASS.OBJNRSRC
                LEFT OUTER JOIN VIBDOBJREL AS VIBDOBJREL ON VIBDOBJREL.MANDT = :LV_MANDT
                                                        AND VIBDOBJREL.VALIDFROM <= :IV_SYDAT
                                                        AND VIBDOBJREL.VALIDTO   >= :IV_SYDAT
                                                        AND ( VIBDOBJREL.INTRENOTRG = VIBDBU.INTRENO OR VIBDOBJREL.INTRENOTRG = VIBDPR.INTRENO )
                LEFT JOIN VIBDAO AS VIBDAO ON VIBDAO.MANDT   = VIBDOBJREL.MANDT
                                          AND VIBDAO.INTRENO = VIBDOBJREL.INTRENOSRC
             WHERE VIBDOBJASS.OBJASSTYPE = '63'
               AND VIBDOBJASS.MANDT      = :LV_MANDT
               AND VIBDOBJASS.OBJNRTRG   = :LV_OBJNRTRG
               AND VIBDOBJASS.VALIDFROM <= :IV_SYDAT
               AND VIBDOBJASS.VALIDTO   >= :IV_SYDAT ) AS OBJNR,
          LT_ADD.RBUKRS,
          LT_DATA.GITCOL,
          LT_DATA.XBLNR,
          LT_DATA.TDNAME,
          '' AS TXTF,
          BT.PARTNER AS PARTNER,
          LT_DATA.BUKRS,
          LT_DATA.ANLN1,
          LT_DATA.ANLN2
      FROM :LT_DATA AS LT_DATA
        LEFT JOIN :LT_ADD AS LT_ADD ON LT_ADD.BUKRS = LT_DATA.BUKRS
                                   AND LT_ADD.ANLN1 = LT_DATA.ANLN1
                                   AND LT_ADD.ANLN2 = LT_DATA.ANLN2
        LEFT JOIN DFKKBPTAXNUM AS DF ON DF.CLIENT  = :LV_MANDT
                                    AND DF.PARTNER = CASE WHEN LT_DATA.GITCOL IN ( 1, 3 )
                                                          THEN LT_DATA.PARTNER1
                                                          ELSE LT_DATA.PARTNER2 END
                                    AND DF.TAXTYPE = :IV_TAXTP
        LEFT JOIN BUT000 AS BT ON BT.CLIENT  = DF.CLIENT
                              AND BT.PARTNER = DF.PARTNER
        LEFT JOIN ANLZ AS AZ ON AZ.MANDT = :LV_MANDT
                            AND AZ.BUKRS = CASE WHEN LT_DATA.GITCOL IN ( 2, 4 ) THEN LT_ADD.RBUKRS ELSE LT_DATA.BUKRS END
                            AND AZ.ANLN1 = CASE WHEN LT_DATA.GITCOL IN ( 2, 4 ) THEN LT_ADD.ANLN_1 ELSE LT_DATA.ANLN1 END
                            AND AZ.ANLN2 = CASE WHEN LT_DATA.GITCOL IN ( 2, 4 ) THEN LT_ADD.ANLN_2 ELSE LT_DATA.ANLN2 END
                            AND AZ.BDATU >= :IV_BUDAT
                            AND AZ.ADATU <= :IV_BUDAT           -- AK_BUTVILOVS #8000000757, Ст-ть ОС в акте приема-передачи
        LEFT JOIN HRP1000 AS HRP1000 ON HRP1000.MANDT = AZ.MANDT
                                    AND HRP1000.PLVAR = '01'
                                    AND HRP1000.OTYPE = 'O'
                                    AND HRP1000.OBJID = AZ.RAUMN
                                    AND HRP1000.BEGDA <= :LV_DATE
                                    AND HRP1000.ENDDA >= :LV_DATE
                                    AND HRP1000.LANGU = :LV_SPRAS
-- --> AK_BUTVILOVSK #25386 Акт о приеме-передачи ОС
        LEFT JOIN ADRC AS ADR ON ADR.CLIENT = :LV_MANDT
                             AND ADR.ADDRNUMBER = CASE WHEN LT_DATA.INTRENO_ADRNR <> '' THEN LT_DATA.INTRENO_ADRNR ELSE LT_DATA.ZANLU_ADRNR END
        LEFT JOIN T005T CN ON CN.MANDT = :LV_MANDT
                          AND CN.SPRAS = CASE WHEN ADR.LANGU <> '' THEN ADR.LANGU ELSE ADR.LANGU_CREA END
                          AND CN.LAND1 = ADR.COUNTRY
        LEFT JOIN ADRCITY AS CITY ON CITY.CLIENT = :LV_MANDT
                                 AND CITY.CITY_CODE = ADR.CITY2
        LEFT JOIN ZREDISTRICT AS DISTRICT ON DISTRICT.MANDT = :LV_MANDT
                                         AND DISTRICT.ZZDISTRICTID = CITY.ZZDISTRICTID
                                         AND DISTRICT.BLAND = CITY.REGION
        LEFT JOIN T005U ON T005U.MANDT = :LV_MANDT
                       AND T005U.LAND1 = CITY.COUNTRY
                       AND T005U.BLAND = CITY.REGION
                       AND T005U.SPRAS = CASE WHEN ADR.LANGU <> '' THEN ADR.LANGU ELSE ADR.LANGU_CREA END
-- <-- AK_BUTVILOVSK #25386
     WHERE ( :IV_TYPE = 'X' AND LT_DATA.GITCOL IN ( 1, 3 )
        OR   :IV_TYPE = ''  AND LT_DATA.GITCOL IN ( 2, 4 ) );

    ET_DATA =
        SELECT T.DLVR_TAXNUM, T.DLVR_ORG_NAME, T.DLVR_DEPT_NAME, T.RCV_TAXNUM, T.RCV_ORG_NAME,
               /*T.RCV_DEPT_NAME, */
               CASE WHEN ( :IV_FLAG = 'X' AND ADD.RCV_DEPT_NAME <> 'X' )
                 THEN ADD.RCV_DEPT_NAME
                 ELSE T.RCV_DEPT_NAME END                                                       AS RCV_DEPT_NAME,
               T.ZUGDT, T.DATE_DEAKT, T.ACCOUNT, T.INVNR, T.PLANTNR,
               T.ZZNUMREGDOC, T.ZZDATEREG, T.NAME_OC, T.ADDRESS, T.MANUF, T.WAERS, T.KURSF,
               T.COSTRE, T.DATE_BUILD, T.DATE_AKTIV, T.DATE_FACT, T.PERST, T.AMORT, T.STOIM_BEZ_NDS,
               T.RATE, T.KBETR, T.SUM_NDS, T.STOIM_NDS, T.COSTRE_AC, T.DATE_WRNT, T.AMORT_MODE_NAME,
               T.AMORT_COUNT_NORMT, T.OBJNR, T.RBUKRS, T.GITCOL, T.XBLNR, T.TDNAME, T.TXTF, T.PARTNER
        FROM :LT_TEMP AS T
                LEFT JOIN :LT_ADD AS ADD ON ADD.BUKRS = T.BUKRS
                                        AND ADD.ANLN1 = T.ANLN1
                                        AND ADD.ANLN2 = T.ANLN2;
/*        ORDER BY RCV_DEPT_NAME DESC; */
  ENDMETHOD.
ENDCLASS.