class zcl_aa_add_value_amdp definition
  public
  final
  create public.

  public section.
    interfaces if_amdp_marker_hdb.

    types:
      begin of gty_s_header,
        tdname   type tdobname,                     "Ключ текста
        bname    type char200,                      "Наим обособл подразделения
        zzbudate type anlu-zzbudate,                "Дата принятия к бухгалтерскому учету
        ktansw   type t095-ktansw,                  "Счет бухгалтерского учета t095-ktansw для t095-ktogr = anka-ktogr
        invnr    type anla-invnr,                   "Инвентарный номер
        txt50    type char256,                      "Наименование объекта ОС Объект НМА
        waers    type string,                       "Иностранная валюта, наименование
        kursf    type zanlu-kursf,                  "Иностранная валюта, курс
        costre   type zanlu-costre,                 "Иностранная валюта (сумма)
        ndjar    type char256,                      "Срок полезного использования
        afasl    type char256,                      "Способ начисления амортизации
        addsum   type faav_anep-anbtr,              "Дополнительная стоимость anep.anbtr
        kansw    type faav_anep-anbtr,              "Первоначальная (переоцененная) стоимость
        deakt    type anla-deakt,                   "Дата списания
        other    type string,                       "Другие характеристики
        waers1   type zanlu-waers,
      end of gty_s_header,
      gty_t_header type standard table of gty_s_header,
      begin of gty_s_data,
        txt50  type char256,                       "Наименование объекта ОС Объект НМА
        ndjar  type char256,                       "Срок полезного использования
        afasl  type char256,                       "Способ начисления амортизации
        null   type char1,
        addsum type faav_anep-anbtr,               "Дополнительная стоимость
      end of gty_s_data,
      gty_t_data type standard table of gty_s_data.

    class-methods get_data
      importing
        value(iv_bukrs)  type bukrs
        value(iv_anln1)  type anln1
        value(iv_anln2)  type anln2
        value(iv_years)  type char10
        value(iv_month)  type char10
        value(iv_datum)  type d
        value(iv_dats)   type d
      exporting
        value(et_header) type gty_t_header
        value(et_data)   type gty_t_data
      raising
        cx_amdp_error.
ENDCLASS.



CLASS ZCL_AA_ADD_VALUE_AMDP IMPLEMENTATION.


  method get_data
    by database procedure for hdb language sqlscript options read-only
                using anla t001 t001l adrc anlz zanlu zafull t095 glofaatmdpndnt anlu t090nat hrp1000 anlb
                      t093c tcurt but000 tvarvc faav_anep faav_anek ZAA_UTILS_HDB=>GET_ASSET_VALUES.

    declare lv_spras char(1) := session_context('LOCALE_SAP');
    declare lv_mandt char(3) := session_context('CLIENT');
    declare lv_dat_val char(8):= to_dats( add_days( :iv_dats, 1) );

    et_header =
    select
      case when row_number() over (partition by anla.mandt) = 1 then anla.bukrs || char(32) || char(32) || anla.anln1 || anla.anln2 end as tdname,
      bu.name_org1 || char(32) || bu.name_org2 || bu.name_org3 || bu.name_org4 as bname,
      case when anlu.zzbudate <> '' then anlu.zzbudate end as zzbudate,
      t095.ktansw,
      anla.invnr,
      zafull.txtf1 || char(32) || zafull.txtf2 as txt50,
      zanlu.waers || char(32) || tcurt.ltext as waers,
      zanlu.kursf,
      zanlu.costre,
      case when anlb.ndjar <> 000 then ltrim ( anlb.ndjar, 0 ) else 0 end || char(32) || iv_years || char(32) ||
      case when anlb.ndper <> 000 then ltrim ( anlb.ndper, 0 ) else 0 end || char(32) || iv_month AS ndjar,
      t090nat.afatxt as afasl,
      vals2.kansw as addsum,
      sum ( vals.kansw ) as kansw,
      anla.deakt,
      zanlu.waers || char(32) || tcurt.ltext as other,
      t001.waers as waers1
    from anla as anla
      inner join t001 as t001 on  t001.mandt = anla.mandt
                              and t001.bukrs = anla.bukrs
      left join t095 as t095 on  t095.mandt = anla.mandt
                             and t095.ktopl = t001.ktopl
                             and t095.ktogr = anla.ktogr
                             and t095.afabe = '01'
      left join zafull AS zafull on  zafull.mandt = anla.mandt
                                 and zafull.bukrs = anla.bukrs
                                 and zafull.anln1 = anla.anln1
                                 and zafull.anln2 = anla.anln2
      left join anlu as anlu on  anlu.mandt = anla.mandt
                             and anlu.bukrs = anla.bukrs
                             and anlu.anln1 = anla.anln1
                             and anlu.anln2 = anla.anln2
      left join zanlu as zanlu on  zanlu.mandt = anla.mandt
                               and zanlu.invnr = anla.invnr
      left outer join tcurt as tcurt on  tcurt.mandt = anla.mandt
                                     and tcurt.spras = :lv_spras
                                     and tcurt.waers = zanlu.waers
      left join glofaatmdpndnt as glofa on  glofa.mandt = anla.mandt
                                        and glofa.bukrs = anla.bukrs
                                        and glofa.anln1 = anla.anln1
                                        and glofa.anln2 = anla.anln2
      inner join adrc as adrc on  adrc.client = t001.mandt
                              and adrc.addrnumber = t001.adrnr
      left join anlz as anlz on  anlz.mandt = anla.mandt
                             and anlz.bukrs = anla.bukrs
                             and anlz.anln1 = anla.anln1
                             and anlz.anln2 = anla.anln2
                             and anlz.bdatu >= to_dats(anla.deakt)
                             and anlz.adatu <= to_dats(anla.deakt)
      left join t001l AS t001l on  t001l.mandt = anla.mandt
                               and t001l.werks = anlz.werks
                               and t001l.lgort = anlz.lgort
      left join hrp1000 as hrp1000 on  hrp1000.mandt = anla.mandt
                                   and hrp1000.plvar = '01'
                                   and hrp1000.otype = 'O'
                                   and hrp1000.objid = anlz.raumn
                                   and hrp1000.istat = '1'
                                   and hrp1000.begda <= :iv_datum  -- to_dats(anla.deakt)
                                   and hrp1000.endda >= :iv_datum  -- to_dats(anla.deakt)
                                   and hrp1000.langu = :lv_spras
      left outer join but000 AS bu on  bu.client  = anla.mandt
                                   and bu.partner = '00000000' || anla.bukrs
      left join anlb as anlb on  anlb.mandt = anla.mandt
                             and anlb.bukrs = anla.bukrs
                             and anlb.anln1 = anla.anln1
                             and anlb.anln2 = anla.anln2
                             and anlb.afabe = '01'
                             and anlb.bdatu >= :iv_datum   -- to_dats(anla.deakt)
                             and anlb.adatu <= :iv_datum   -- to_dats(anla.deakt)
      left join t093c AS t093c on  t093c.bukrs = anla.bukrs
                               and t093c.mandt = anla.mandt
      left join t090nat as t090nat on  t090nat.mandt = zanlu.mandt
                                   and t090nat.afasl = anlb.afasl
                                   and t090nat.afapl = t093c.afapl
                                   and t090nat.spras = :lv_spras
      left outer join ( select anep.mandt,
                               anep.bukrs,
                               anep.anln1,
                               anep.anln2,
                               anep.bwasl,
                               anep.lnsan,
                               anep.afabe,
                               sum (anbtr) as kansw
                               from faav_anep as anep
                                 inner join faav_anek as anek on anek.mandt = anep.mandt
                                                             and anek.bukrs = anep.bukrs
                                                             and anek.anln1 = anep.anln1
                                                             and anek.anln2 = anep.anln2
                                                             and anek.gjahr = anep.gjahr
                                                             and anek.lnran = anep.lnran
                                                             and anek.budat <= :iv_dats
                                                             and year( anek.budat ) = year(:iv_dats) -- AK_BUTVILOVS #8000000591, Доп.ст-ть НМА в выходных формах
                                                             and month( anek.budat ) = month ( :iv_dats ) --RM #14729 #112
                                 inner join tvarvc as tvarvc on tvarvc.mandt = anep.mandt
                                                            and tvarvc.type = 'S'
                                                            and tvarvc.name = 'ZAA_BWASL_NMA_AKT'
                                                            and tvarvc.low = anep.bwasl
                               group by anep.mandt,
                                        anep.bukrs,
                                        anep.anln1,
                                        anep.anln2,
                                        anep.bwasl,
                                        anep.lnsan,
                                        anep.afabe
                               ) as vals2 on vals2.mandt = anla.mandt
                                         and vals2.bukrs = anla.bukrs
                                         and vals2.anln1 = anla.anln1
                                         and vals2.anln2 = anla.anln2
                                         and vals2.lnsan = '00000'
                                         and vals2.afabe = '01'
   -- рассчитываются стоимость
    left outer join ( select vals.bukrs,vals.anln1, vals.anln2, vals.afabe, coalesce( vals.kansw, 0 ) as kansw
                        from "ZAA_UTILS_HDB=>GET_ASSET_VALUES"( :lv_mandt, :lv_dat_val, '' ) as vals
                    ) as vals on vals.bukrs = anla.bukrs
                             and vals.anln1 = anla.anln1
                             and vals.anln2 = anla.anln2
                             and vals.afabe = '01'
    where anla.mandt = :lv_mandt
      and anla.bukrs = :iv_bukrs
      and anla.anln1 = :iv_anln1
      and anla.anln2 = :iv_anln2
group by anla.mandt, anla.deakt, anla.bukrs, anla.anln1, anla.anln2,  bu.name_org1, bu.name_org2, bu.name_org3, bu.name_org4,
anlu.zzbudate, t095.ktansw, anla.invnr, zafull.txtf1, zafull.txtf2, zanlu.waers, tcurt.ltext, zanlu.kursf, zanlu.costre,
anlb.ndjar, anlb.ndper, t090nat.afatxt, anlb.afasl, vals2.kansw, anla.deakt,zanlu.waers, tcurt.ltext, t001.waers;

et_data =
  select
    txt50,
    ndjar,
    afasl,
    null,
    sum (addsum) as addsum
  from :et_header
 group by txt50, ndjar, afasl, null;

  endmethod.
ENDCLASS.