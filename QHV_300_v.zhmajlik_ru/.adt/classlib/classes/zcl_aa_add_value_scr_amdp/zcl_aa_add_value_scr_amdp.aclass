CLASS zcl_aa_add_value_scr_amdp DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES if_amdp_marker_hdb .

    CLASS-METHODS get_data
      IMPORTING
        VALUE(iv_bukrs)  TYPE bukrs
        VALUE(iv_anln1)  TYPE anln1
        VALUE(iv_anln2)  TYPE anln2
        VALUE(iv_datum)  TYPE d
      EXPORTING
        VALUE(ev_budate) TYPE char10  "Дата принятия к бухгалтерскому учету
        VALUE(ev_butxt)  TYPE char200
      RAISING
        cx_amdp_error .
ENDCLASS.



CLASS ZCL_AA_ADD_VALUE_SCR_AMDP IMPLEMENTATION.


  METHOD get_data
    BY DATABASE PROCEDURE FOR HDB
                LANGUAGE SQLSCRIPT
                OPTIONS READ-ONLY
                USING anla anlu but000.

    declare lv_spras char(1);
    declare lv_mandt char(3);
    declare lv_sdate char(8);

    lv_spras = session_context('LOCALE_SAP');
    lv_mandt = session_context('CLIENT');


    it_header =
    SELECT
      CASE WHEN anlu.zzbudate <> ' ' OR anlu.zzbudate <> '00000000' then anlu.zzbudate else iv_datum end as zzbudate,
      bu.name_org1 || char(32) || bu.name_org2 || bu.name_org3 || bu.name_org4 as bname
    from anla as anla
      left join anlu as anlu on anlu.mandt = anla.mandt
                             and anlu.bukrs = anla.bukrs
                             and anlu.anln1 = anla.anln1
                             and anlu.anln2 = anla.anln2
      left outer join but000 AS bu on bu.client = anla.mandt
                                   and bu.partner = '00000000' || anla.bukrs
    where anla.mandt = :lv_mandt
      AND anla.bukrs = :iv_bukrs
      AND anla.anln1 = :iv_anln1
      AND anla.anln2 = :iv_anln2;

      SELECT zzbudate INTO lv_sdate
      FROM :it_header;

      ev_budate = substr(:lv_sdate, 7,2 ) || '.' || substr(:lv_sdate, 5,2 ) || '.' || left( :lv_sdate,4);

      SELECT bname INTO ev_butxt
      FROM :it_header;

  ENDMETHOD.
ENDCLASS.