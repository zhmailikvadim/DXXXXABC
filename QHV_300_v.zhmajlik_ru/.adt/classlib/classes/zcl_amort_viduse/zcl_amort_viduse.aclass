CLASS ZCL_AMORT_VIDUSE DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
   INTERFACES IF_AMDP_MARKER_HDB.

    TYPES:
      BEGIN OF GTY_S_DATA,
        BUKRS        TYPE BUKRS,            " БЕ
        NAME_BUK     TYPE CHAR200,          " НАИМЕН. БЕ
        KTANSW       TYPE KTANSW,           " СЧЕТ БУХГАЛТЕРСКОГО УЧЕТА
        ANLKL        TYPE ANLKL,            " КЛАСС
        TXK50        TYPE ANKT-TXK50,       " Наименование класса
        ANLN1        TYPE ANLN1,            " СИСТЕМНЫЙ НОМЕР
        ANLN2        TYPE ANLN2,            " СУБНОМЕР
        INVNR        TYPE INVNR_ANLA,       " ИНВЕНТАРНЫЙ НОМЕР
        TXT          TYPE ZCS_COMMENT,      " НАИМЕНОВАНИЕ ОБЪЕКТА
        RAUMN        TYPE ANLZ-RAUMN,       " СТРУКТУРНОЕ ПОДРАЗДЕЛЕНИЕ
        NAME_RAUMN   TYPE STRING,           " НАИМЕНОВАНИЕ
        FKBER        TYPE FKBER,            " ФУНКЦИОНАЛЬНАЯ СФЕРА
        GROUP_D      TYPE J_3RFAMORTGR,     " ГРУППА АМОРТИЗАЦИИ
        NAME_GROUP   TYPE STRING,
        WERKS        TYPE ANLZ-WERKS,       " ЗАВОД
        NAME_WERKS   TYPE STRING,
        LGORT        TYPE ANLZ-LGORT,       " СКЛАД
        NAME_LGORT   TYPE STRING,
        KTNAFG       TYPE KTNAFG,           " ШИФР ЗАТРАТ
        KOSTL        TYPE ANLZ-KOSTL,       " МВЗ
        NAME_KOSTL   TYPE STRING,
        CAUFN        TYPE ANLZ-CAUFN,       " ВНУТРЕННИЙ ЗАКАЗ
        NAME_CAUFN   TYPE STRING,
        PS_PSP_PNR2  TYPE ANLZ-PS_PSP_PNR2, " СПП-ЭЛЕМЕНТ
        NAME_SPP     TYPE STRING,
        VIDUSE       TYPE CHAR200,          " ВИД ИСПОЛЬЗОВАНИЯ
        ZUGDT        TYPE CHAR7,
        ZZBUDATE     TYPE ANLU-ZZBUDATE,    " ДАТА ВВОДА ОБЪЕКТА В ЭКСПЛУАТАЦИЮ
        NAME_ANL     TYPE TXT50_ANKT,
        AM_CURR      TYPE ACDOCA-HSL,       " АМОРТИЗАЦИЯ ЗА ТЕКУЩИЙ МЕСЯЦ
        PR_ST        TYPE ACDOCA-HSL,       " ПЕРВОНАЧАЛЬНАЯ (ПЕРЕОЦЕНЕННАЯ) СТОИМОСТЬ
        SUM_AMORT    TYPE ACDOCA-HSL,       " НАКОПЛЕННАЯ СУММА АМОРТИЗАЦИИ
        OST_ST       TYPE ACDOCA-HSL,       " ОСТАТОЧНАЯ СТОИМОСТЬ
        BUK          TYPE BUKRS,
        ANLKL_KL     TYPE ANLKL,
        VID          TYPE ZAA_VIDUSE_TEXT-VIDUSE,
      END OF GTY_S_DATA,
      BEGIN OF GTY_S_SKAT,
      SAKNR          TYPE SKAT-SAKNR,
      TXT50          TYPE SKAT-TXT50,
      END OF GTY_S_SKAT,
        GTY_T_DATA TYPE STANDARD TABLE OF GTY_S_DATA WITH EMPTY KEY,
        GTY_T_SKAT TYPE STANDARD TABLE OF GTY_S_SKAT WITH EMPTY KEY.
  CLASS-METHODS:
    GET_DATA                                "ВЫБОРКА ДАННЫХ ДЛЯ ОТЧЕТА ZFI_AMORT_VIDUSE
      IMPORTING
        VALUE(IV_DATE)  TYPE SY-DATUM
        VALUE(IV_FLT)   TYPE STRING
        VALUE(IV_FDM)   TYPE SY-DATUM
      EXPORTING
        VALUE(ET_DATA)  TYPE GTY_T_DATA
        VALUE(ET_SKAT)  TYPE GTY_T_SKAT.
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS ZCL_AMORT_VIDUSE IMPLEMENTATION.


  METHOD  GET_DATA
       BY DATABASE PROCEDURE FOR HDB LANGUAGE SQLSCRIPT
       USING ANLA ZAFULL ANLZ CSKS AUFK GLOFAAASSETDATA ZANLZ
             T001L T001W AUFK PRPS CSKT J_3RFDEPRGROUPT HRP1000
             T095  T001 TKA02 ANKT ZAA_VIDUSE_TEXT T095B ZFKBER_HKONT
             ZAA_UTILS_HDB=>GET_ASSET_VALUES_Y FAAV_ANLP SKAT ANKA BUT000.

    DECLARE LV_SPRAS CHAR(1);
    DECLARE LV_MANDT CHAR(3);

    DECLARE LV_ALL_MONTH CHAR(8) := TO_DATS( ADD_DAYS( LAST_DAY( :iv_date ), 1 ) ); -- первый день следующего месяца

    LV_SPRAS = SESSION_CONTEXT('LOCALE_SAP');
    LV_MANDT = SESSION_CONTEXT('CLIENT');

    ET_DATA =
      SELECT DISTINCT
          T001.BUKRS,
          BUT000.NAME_ORG1 || BUT000.NAME_ORG2 || BUT000.NAME_ORG3 || BUT000.NAME_ORG4 AS NAME_BUK,
          T095.KTANSW,
          ANKT.ANLKL,
          ANKT.TXK50,
          ANLA.ANLN1,
          ANLA.ANLN2,
          ANLA.INVNR,
          ZAFULL.TXTF1 || ZAFULL.TXTF2 AS TXT,
          ANLZ.RAUMN,
          H1000.STEXT AS NAME_RAUMN,
          ( SELECT MAX( HKONT ) FROM ZFKBER_HKONT
             WHERE FKBER = COALESCE(AUFK.FUNC_AREA, CSKS.FUNC_AREA ) )
              AS FKBER,
          G.GLO_RUS_DEPGR AS GROUP_D,
          JT.DESCRIPT AS NAME_GROUP,
          ANLZ.WERKS,
          T001W.NAME1 AS NAME_WERKS,
          ANLZ.LGORT,
          T001L.LGOBE AS NAME_LGORT,
          T095B.KTNAFG,
          ANLZ.KOSTL,
          CSKT.KTEXT  AS NAME_KOSTL,
          ANLZ.CAUFN,
          AUFK.KTEXT AS NAME_CAUFN,
          ANLZ.PS_PSP_PNR2,
          PRPS.POST1 AS NAME_SPP,
          ZANLZ.VIDUSE || CHAR(32) || ZTEXT.VIDUSE_NAME AS VIDUSE,
          CASE WHEN ANLA.ZUGDT = '00000000' THEN ''
          ELSE SUBSTR(ANLA.ZUGDT,5,2) || '.' || LEFT(ANLA.ZUGDT,4) END AS ZUGDT,
          CASE WHEN ANLA.AKTIV = '00000000' THEN '' ELSE ANLA.AKTIV END AS ZZBUDATE,
          ANKT.TXK50 AS NAME_ANL,
          - ANLP.AM_CURR AS AM_CURR,
          VALS.KANSW AS PR_ST,
          - VALS.NETVL + VALS.KANSW AS SUM_AMORT,
          VALS.NETVL AS OST_ST,
          ANLA.BUKRS AS BUK,
          ANLA.ANLKL AS ANLKL_KL,
          ZTEXT.VIDUSE AS VID

        FROM ANLA AS ANLA
          INNER JOIN T001 AS T001 ON T001.MANDT = ANLA.MANDT
                                 AND T001.BUKRS = ANLA.BUKRS
          LEFT JOIN BUT000 AS BUT000 ON BUT000.CLIENT = ANLA.MANDT
                                    AND BUT000.PARTNER = LPAD( T001.BUKRS,10,'0' )
          INNER JOIN T095 AS T095 ON T095.MANDT = ANLA.MANDT
                                 AND T095.KTOPL = T001.KTOPL
                                 AND T095.KTOGR = ANLA.KTOGR
                                 AND T095.AFABE = '01'
          LEFT JOIN ANKT AS ANKT ON ANKT.MANDT = ANLA.MANDT
                                AND ANKT.SPRAS = :LV_SPRAS
                                AND ANKT.ANLKL = ANLA.ANLKL
          LEFT JOIN ZAFULL AS ZAFULL ON ZAFULL.MANDT = ANLA.MANDT
                                    AND ZAFULL.BUKRS = ANLA.BUKRS
                                    AND ZAFULL.ANLN1 = ANLA.ANLN1
                                    AND ZAFULL.ANLN2 = ANLA.ANLN2
          LEFT JOIN ANLZ AS ANLZ ON ANLZ.MANDT = ANLA.MANDT
                                AND ANLZ.BUKRS = ANLA.BUKRS
                                AND ANLZ.ANLN1 = ANLA.ANLN1
                                AND ANLZ.ANLN2 = ANLA.ANLN2
                                AND ANLZ.ADATU < :IV_DATE
                                AND ANLZ.BDATU >= :IV_DATE
          LEFT JOIN HRP1000 as H1000 ON H1000.MANDT = ANLZ.MANDT
                                     AND H1000.plvar = '01'
                                     AND H1000.OTYPE = 'O'
                                     AND H1000.OBJID = ANLZ.RAUMN
                                     AND H1000.ENDDA >= :IV_DATE
          INNER JOIN TKA02 AS TKA02 ON TKA02.BUKRS = ANLA.BUKRS
                                   AND TKA02.MANDT = ANLA.MANDT
          LEFT OUTER JOIN CSKS AS CSKS ON CSKS.MANDT = ANLA.MANDT
                                      AND CSKS.KOKRS = TKA02.KOKRS
                                      AND CSKS.KOSTL = ANLZ.KOSTL
                                      AND CSKS.DATBI >= :IV_DATE
                                      AND CSKS.DATAB <= :IV_DATE
          LEFT OUTER JOIN AUFK AS AUFK ON AUFK.AUFNR = ANLZ.CAUFN
                                      AND AUFK.MANDT = ANLZ.MANDT
          LEFT OUTER JOIN GLOFAAASSETDATA AS G ON G.MANDT = ANLA.MANDT
                                              AND G.BUKRS = ANLA.BUKRS
                                              AND G.ANLN1 = ANLA.ANLN1
                                              AND G.ANLN2 = ANLA.ANLN2
          LEFT OUTER JOIN ZANLZ AS ZANLZ ON ZANLZ.MANDT = ANLA.MANDT
                                        AND ZANLZ.INVNR = ANLA.INVNR
                                        AND ZANLZ.ADATU <= :IV_DATE
                                        AND ZANLZ.BDATU >= :IV_DATE
          LEFT OUTER JOIN ZAA_VIDUSE_TEXT AS ZTEXT ON ZTEXT.MANDT = ANLA.MANDT
                                                  AND ZTEXT.SPRAS = :LV_SPRAS
                                                  AND ZTEXT.VIDUSE = ZANLZ.VIDUSE
          LEFT OUTER JOIN ANKA AS ANKA ON ANKA.MANDT = ANLA.MANDT
                                        AND ANKA.ANLKL = ANLA.ANLKL
          LEFT OUTER JOIN T095B AS T095B ON T095B.MANDT = ANLA.MANDT
                                        AND T095B.KTOPL = T001.KTOPL
                                        AND T095B.KTOGR = ANKA.KTOGR
                                        AND T095B.AFABE = '01'
           LEFT OUTER JOIN  "ZAA_UTILS_HDB=>GET_ASSET_VALUES_Y"( :LV_MANDT, :IV_DATE,  '' ) AS VALS ON VALS.BUKRS = ANLA.BUKRS
         --  LEFT OUTER JOIN  "ZAA_UTILS_HDB=>GET_ASSET_VALUES"( :LV_MANDT, :LV_ALL_MONTH,  '' ) AS VALS ON VALS.BUKRS = ANLA.BUKRS
                                                                                                AND VALS.ANLN1 = ANLA.ANLN1
                                                                                                AND VALS.ANLN2 = ANLA.ANLN2
                                                                                                AND VALS.AFABE = '01'
          LEFT OUTER JOIN T001L AS T001L  ON  T001L.MANDT = ANLZ.MANDT
                                      AND T001L.WERKS = ANLZ.WERKS
                                      AND T001L.LGORT = ANLZ.LGORT
          LEFT OUTER JOIN T001W AS T001W  ON  T001W.MANDT = ANLA.MANDT    -- ЗАВОД
                                       AND T001W.WERKS = ANLZ.WERKS
          LEFT OUTER JOIN PRPS AS PRPS    ON  PRPS.PSPNR = ANLZ.PS_PSP_PNR2  -- СПП
                                     AND PRPS.MANDT = ANLZ.MANDT
          LEFT OUTER JOIN  CSKT AS CSKT ON CSKT.SPRAS = :LV_SPRAS          -- АКТУАЛЬНОЕ НАЗВАНИЕ МВЗ
                                    AND CSKT.MANDT = ANLA.MANDT
                                    AND CSKT.KOKRS = TKA02.KOKRS
                                    AND CSKT.KOSTL = CSKS.KOSTL
                                    AND CSKT.DATBI = CSKS.DATBI
          LEFT OUTER JOIN J_3RFDEPRGROUPT AS JT ON JT.MANDT = G.MANDT
                                            AND JT.SPRSL = :LV_SPRAS
                                            AND JT.AMORTGR = G.GLO_RUS_DEPGR
          LEFT OUTER JOIN ( SELECT BUKRS, ANLN1, ANLN2, SUM( NAFAZ + SAFAZ + AAFAZ ) AS AM_CURR
                              FROM FAAV_ANLP AS ANLP
                              WHERE MANDT = :LV_MANDT
                                AND AFABER = '01'
                                AND GJAHR = LEFT(:IV_DATE,4)
                                AND RIGHT(PERAF,2) = MONTH(:IV_FDM) GROUP BY BUKRS,ANLN1, ANLN2  )
                   AS ANLP ON ANLP.BUKRS = ANLA.BUKRS
                          AND ANLP.ANLN1 = ANLA.ANLN1
                          AND ANLP.ANLN2 = ANLA.ANLN2
        WHERE ANLA.MANDT = :LV_MANDT
          AND ( ANLA.DEAKT >= :IV_FDM  OR ANLA.DEAKT < '19000101'  )
          AND ANLA.ZUGDT > '19000101'
          AND ANLA.ZUGDT <= :IV_DATE;

  ET_DATA  = APPLY_FILTER( :ET_DATA, :IV_FLT );

/*Удаление из отчета ОС, выбывших до отчетного месяца
 и выбывших в отчетном месяце, в которых поля ПС,АМ накопленная,
  АМ начисленная на дату отчета в этом месяце равны 0*/
    ET_DATA =
        SELECT ET_DATA.*
          FROM :ET_DATA AS ET_DATA
         WHERE ( AM_CURR   <> 0
            OR   PR_ST     <> 0
            OR   SUM_AMORT <> 0
            OR   OST_ST    <> 0 );

  ET_SKAT =
    SELECT DISTINCT
        SKAT.SAKNR,
        SKAT.TXT50
      FROM SKAT AS SKAT
        INNER JOIN :ET_DATA AS ET_DATA ON ET_DATA.KTANSW = SKAT.SAKNR
      WHERE SKAT.SPRAS = :LV_SPRAS
        AND SKAT.KTOPL = 'BNFT';

 ENDMETHOD.
ENDCLASS.