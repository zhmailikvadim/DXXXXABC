CLASS zcl_recruitment_static DEFINITION
  PUBLIC FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.
    TYPES ty_lt_bapiret2 TYPE STANDARD TABLE OF bapiret2 WITH DEFAULT KEY.

    CLASS-METHODS get_hr_master_data.

    CLASS-METHODS copy_roles_from_user_to_user
      IMPORTING iv_user_from TYPE uname
                iv_user_to   TYPE uname.

    CLASS-METHODS send_email
      CHANGING  cs_candidate         TYPE zhr_s_sync_btw_erp_and_hr
      RETURNING VALUE(rt_bapirettab) TYPE bapirettab
      RAISING   cx_send_req_bcs
                cx_document_bcs
                cx_address_bcs.

    CLASS-METHODS change_user_alias.

    CLASS-METHODS change_user_type_to_communicat
      IMPORTING iv_user            TYPE  bapibname-bapibname
      RETURNING VALUE(rt_bapiret2) TYPE ty_lt_bapiret2.

    CLASS-METHODS register_user_sap
      CHANGING  cs_candidate     TYPE zhr_s_sync_btw_erp_and_hr
      RETURNING VALUE(et_return) TYPE bapirettab.

  PRIVATE SECTION.
    CONSTANTS gc_mailsubject TYPE char50 VALUE 'Регистрационные данные кандидата - beloil.by'.
    CONSTANTS gc_sap_mail    TYPE uname  VALUE 'SAP_MAIL'.

ENDCLASS.



CLASS ZCL_RECRUITMENT_STATIC IMPLEMENTATION.


  METHOD change_user_alias.
    DATA ls_alias      TYPE bapialias.
    DATA ls_aliasx     TYPE bapialiasx.
    DATA lt_bapirettab TYPE bapirettab.

    SELECT * INTO TABLE @DATA(lt_usrefus)
      FROM usrefus AS useralias
      WHERE useralias <> ( SELECT bname FROM usrefus WHERE bname = useralias~bname AND refuser = '' ) "#EC CI_BUFFSUBQ
      ORDER BY useralias.
    LOOP AT lt_usrefus ASSIGNING FIELD-SYMBOL(<ls_userfus>).
      ls_alias-useralias = <ls_userfus>-bname.
      ls_aliasx-bapialias = abap_true.

      CALL FUNCTION 'BAPI_USER_CHANGE'
        EXPORTING username = <ls_userfus>-bname
                  aliasx   = ls_aliasx
                  alias    = ls_alias
        TABLES    return   = lt_bapirettab.
    ENDLOOP.
  ENDMETHOD.


  METHOD copy_roles_from_user_to_user.
    DATA lt_ag     TYPE STANDARD TABLE OF bapiagr.
    DATA lt_return TYPE STANDARD TABLE OF bapiret2.
    " TODO: variable is assigned but never used (ABAP cleaner)

    CALL FUNCTION 'BAPI_USER_GET_DETAIL'
      EXPORTING username       = iv_user_from
      TABLES    activitygroups = lt_ag
                return         = lt_return.

    CALL FUNCTION 'BAPI_USER_ACTGROUPS_ASSIGN'
      EXPORTING username       = iv_user_to
      TABLES    activitygroups = lt_ag
                return         = lt_return.

    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING wait = 'X'.
  ENDMETHOD.


  METHOD get_hr_master_data.
    DATA lt_hrp1001        TYPE TABLE OF hrp1001.
    DATA lt_hrp1000        TYPE TABLE OF hrp1000.
    DATA lt_t591s          TYPE TABLE OF t591s.
    DATA lt_t77rcf_contty  TYPE TABLE OF zt77rcf_contty.
    DATA lt_zhr_c_org_recr TYPE TABLE OF zhr_c_org_recr.
    DATA lt_t535n          TYPE TABLE OF t535n.

    CALL FUNCTION 'ZHR_FM_GET_HR_MASTER_DATA'
      DESTINATION 'HRDCLNT300'
      IMPORTING et_hrp1001        = lt_hrp1001
                et_hrp1000        = lt_hrp1000
                et_t591s          = lt_t591s
                et_t77rcf_contty  = lt_t77rcf_contty
                et_zhr_c_org_recr = lt_zhr_c_org_recr
                et_t535n          = lt_t535n.

    DELETE FROM zhrp1000.                               "#EC CI_NOWHERE
    DELETE FROM zhrp1001.                               "#EC CI_NOWHERE
    DELETE FROM zt591s.                                 "#EC CI_NOWHERE
    DELETE FROM zt77rcf_contty.                         "#EC CI_NOWHERE
    DELETE FROM zhr_c_org_recr.                         "#EC CI_NOWHERE
    DELETE FROM t535n WHERE art = 'T'.

    INSERT zhrp1000 FROM TABLE lt_hrp1000.
    INSERT zhrp1001 FROM TABLE lt_hrp1001.
    INSERT zt591s FROM TABLE lt_t591s.
    INSERT zt77rcf_contty FROM TABLE lt_t77rcf_contty.
    INSERT zhr_c_org_recr FROM TABLE lt_zhr_c_org_recr.
    INSERT t535n FROM TABLE lt_t535n.
  ENDMETHOD.


  METHOD send_email.
    DATA(lo_send_request) = cl_bcs=>create_persistent( ).
    lo_send_request->set_document(
        cl_document_bcs=>create_document(
            i_type    = 'HTM'
            i_text    = VALUE #(
                ( line = |<style>table \{  border-collapse: collapse;  width: 100%;\} tr \{  border-bottom: 1px solid #ddd; \} </style>| )
                ( line = |<table style="width:100%"><tr><td>Имя пользователя: </td><td> { cs_candidate-candidate_header-useralias } </td></tr>| )
                ( line = cl_abap_char_utilities=>newline )
                ( line = |<tr><td>Пароль: </td><td> { cs_candidate-candidate_header-password }</td></tr> | )
                ( line = cl_abap_char_utilities=>newline )
                ( line = |<tr><td>Ссылка для входа в систему: </td><td> <a href="URL">https://sapbpc-dev.beloil.by/sap/bc/ui5_ui5/sap/zhr_cand_recrui/index.html?sap-client=400&sap-ui-language=RU</a></p></td></tr>| )
                ( line = cl_abap_char_utilities=>newline )
                ( line = |<tr><td>Имя пользователя внутр.: </td><td> { cs_candidate-candidate_header-zsap_user }</td></tr></table>| ) )
            i_subject = gc_mailsubject ) ).
    lo_send_request->set_sender( cl_sapuser_bcs=>create( gc_sap_mail ) ).
    lo_send_request->add_recipient( cl_cam_address_bcs=>create_internet_address( CONV #( 'v.zhmajlik@beloil.by' ) ) ). " cs_candidate-candidate_header-num01_email
    lo_send_request->add_recipient( cl_cam_address_bcs=>create_internet_address( CONV #( 'o.tararenko@beloil.by' ) ) ).
    lo_send_request->add_recipient(
        cl_cam_address_bcs=>create_internet_address( CONV #( cs_candidate-candidate_header-num01_email ) ) ).
    lo_send_request->set_send_immediately( 'X' ).
    lo_send_request->send( ).
  ENDMETHOD.


  METHOD change_user_type_to_communicat.
    DATA ls_logondatax TYPE bapilogonx.
    DATA ls_logondata  TYPE bapilogond.

    ls_logondatax-ustyp = 'X'.
    ls_logondata-ustyp = 'C'.

    CALL FUNCTION 'BAPI_USER_CHANGE'
      EXPORTING username   = iv_user
                logondata  = ls_logondata
                logondatax = ls_logondatax
      TABLES    return     = rt_bapiret2.
    DELETE rt_bapiret2 WHERE type <> 'E' AND type <> 'A'.
    zcl_recruitment_static=>copy_roles_from_user_to_user( iv_user_from = 'RCF_CAND_EXT'
                                                          iv_user_to   = iv_user ).
  ENDMETHOD.


  METHOD register_user_sap.
    CONSTANTS lc_usertype_communicate TYPE c LENGTH 1 VALUE 'C'.
    CONSTANTS gc_ref_user             TYPE xubname    VALUE 'RCF_CAND_EXT'.

    DATA ls_address       TYPE bapiaddr3.
    DATA ls_ref_user      TYPE bapirefus.
    DATA ls_defaults      TYPE bapidefaul.
    DATA ls_logondata     TYPE bapilogond.
    DATA ls_uclass        TYPE bapiuclass.
    DATA lt_return        TYPE bapirettab.
    DATA lv_password      TYPE bapipwd.
    DATA lv_username      TYPE bapibname-bapibname.
    DATA lv_self_register TYPE bapiflag-bapiflag.
    DATA lv_alias         TYPE bapialias.
    DATA ls_logondata_sap TYPE bapilogond.

    ls_address-lastname   = cs_candidate-candidate_header-nachn.
    ls_address-firstname  = cs_candidate-candidate_header-vorna.
    ls_address-middlename = cs_candidate-candidate_header-nach2.

    ls_ref_user-ref_user = gc_ref_user.

    CALL FUNCTION 'BAPI_USER_GET_DETAIL'
      EXPORTING username  = ls_ref_user-ref_user
      IMPORTING defaults  = ls_defaults
                logondata = ls_logondata
                uclass    = ls_uclass
      TABLES    return    = lt_return.
    CLEAR lt_return.

    ls_logondata-ustyp = lc_usertype_communicate.
    ls_logondata-gltgv = sy-datum.
    ls_logondata-gltgb = '99991231'.
    lv_password = cs_candidate-candidate_header-password.
    lv_username = cs_candidate-candidate_header-zhr_user.
    lv_self_register = abap_true.
    lv_alias = cs_candidate-candidate_header-useralias.

    CALL FUNCTION 'BAPI_USER_CREATE1'
      EXPORTING username                = lv_username
                logondata               = ls_logondata
                password                = lv_password
                defaults                = ls_defaults
                address                 = ls_address
                ref_user                = ls_ref_user
                alias                   = lv_alias
                uclass                  = ls_uclass
                force_system_assignment = 'X'
                self_register           = lv_self_register
      TABLES    return                  = lt_return.

    DELETE lt_return WHERE type <> 'E' AND type <> 'A'.
    et_return = lt_return.

    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING wait = 'X'.

    CALL FUNCTION 'BAPI_USER_GET_DETAIL'
      EXPORTING username  = cs_candidate-candidate_header-zhr_user
      IMPORTING defaults  = ls_defaults
                logondata = ls_logondata_sap
                uclass    = ls_uclass
      TABLES    return    = lt_return.

    IF ls_logondata_sap-ustyp = lc_usertype_communicate.
      cs_candidate-candidate_header-zsap_user = cs_candidate-candidate_header-zhr_user.
    ENDIF.
    copy_roles_from_user_to_user( iv_user_from = gc_ref_user
                                  iv_user_to   = cs_candidate-candidate_header-zsap_user  ).
  ENDMETHOD.
ENDCLASS.