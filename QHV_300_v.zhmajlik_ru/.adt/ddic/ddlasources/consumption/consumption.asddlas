define annotation Consumption
{
   @Scope:[#ENTITY, #PARAMETER, #ELEMENT] 
   @MetadataExtension.usageAllowed : true 
   @CompatibilityContract: {
   c1: { usageAllowed: true,
         allowedChanges.annotation: [ #ANY ],
         allowedChanges.value: [ #ANY ] },   
   c2: { usageAllowed: false } }
   @API.state: [ #RELEASED_FOR_SAP_CLOUD_PLATFORM ]
   semanticObject   : String(120);
   
   @MetadataExtension.usageAllowed : true 
   @Scope:[#ELEMENT, #PARAMETER] 
   @CompatibilityContract: {
   c1: { usageAllowed: true,
         allowedChanges.annotation: [ #ANY ],
         allowedChanges.value: [ #ANY ] },   
   c2: { usageAllowed: false } }
   labelElement     : ElementRef;
   
   @Scope:[#ELEMENT, #PARAMETER] 
   @CompatibilityContract: {
   c1: { usageAllowed: true,
         allowedChanges.annotation: [ #ANY ],
         allowedChanges.value: [ #ANY ] },   
   c2: { usageAllowed: false } }
   quickInfoElement : ElementRef;
   
   @Scope:[#ELEMENT, #PARAMETER] 
   @CompatibilityContract: {
   c1: { usageAllowed: true,
         allowedChanges.annotation: [ #REMOVE ],
         allowedChanges.value: [ #TRUE_TO_FALSE ] },   
   c2: { usageAllowed: true, 
         allowedChanges.annotation: [ #NONE ],
         allowedChanges.value: [ #NONE ] } }
   hidden : Boolean default true;
   
   @MetadataExtension.usageAllowed : true 
   @Scope:[#ELEMENT, #PARAMETER] 
   @CompatibilityContract: {
   c1: { usageAllowed: true,
         allowedChanges.annotation: [ #ANY ],
         allowedChanges.value: [ #ANY ] },   
   c2: { usageAllowed: true,
         allowedChanges.annotation: [ #ANY ],
         allowedChanges.value: [ #ANY ] } }
   derivation
   {
       lookupEntity      : EntityRef;
       pfcgMapping       : String(30);
       resultElement     : String(30);
       resultElementHigh : String(30);
       resultHierarchyNode
       {
           nodeTypeElement : String(30);
           mapping : array of
           {
               hierarchyElement : String(30);
               lookupElement    : String(30);
           };
       };
       binding : array of
       {
           targetParameter : String(30);
           targetElement   : String(30);
           type            : String(12) enum 
           { 
               ELEMENT; 
               PARAMETER; 
               CONSTANT; 
               SYSTEM_FIELD; 
           };
           value           : String(512);
       };
   };
   
   @Scope:[#ELEMENT] 
   @MetadataExtension.usageAllowed : true 
   @CompatibilityContract: {
   c1: { usageAllowed: true,
         allowedChanges.annotation: [ #ANY ],
         allowedChanges.value: [ #ANY ] },   
   c2: { usageAllowed: false } }
   filter
   {
      
      @CompatibilityContract: {
      c1: { usageAllowed: true,
            allowedChanges.annotation: [ #NONE ],
            allowedChanges.value: [ #TRUE_TO_FALSE ] },   
      c2: { usageAllowed: true,
            allowedChanges.annotation: [ #NONE ],
            allowedChanges.value: [ #TRUE_TO_FALSE ] } }
      mandatory        : Boolean default true;
      defaultValue     : String(1024);
      defaultValueHigh : String(1024);
      defaultHierarchyNode
      {
         nodeType : ElementRef;
         node     : array of
         {
            element : ElementRef;
            value   : String(512);
         };
      };
      hidden             : Boolean default true;
      
      @CompatibilityContract: {
      c1: { usageAllowed: true,
            allowedChanges.annotation: [ #ADD ],
            allowedChanges.value: [ #NONE ] },   
      c2: { usageAllowed: false } }
      selectionType      : String(20) enum 
      { 
          SINGLE; 
          INTERVAL; 
          RANGE; 
          HIERARCHY_NODE; 
      };

      @CompatibilityContract: {
      c1: { usageAllowed: true,
            allowedChanges.annotation: [ #ADD ],
            allowedChanges.value: [ #FALSE_TO_TRUE ] },   
      c2: { usageAllowed: false } }
      multipleSelections : Boolean default true;
      hierarchyBinding   : array of
      {
         type             : String(12) enum 
         { 
             ELEMENT; 
             PARAMETER; 
             CONSTANT; 
             USER_INPUT; 
             SYSTEM_FIELD; 
         };
         value            : String(512);
         variableSequence : Integer;
      };
      @Scope: [#VIEW, #ELEMENT] 
      @MetadataExtension.usageAllowed : false
      @CompatibilityContract: {
      c1: { usageAllowed: true,
            allowedChanges.annotation: [ #CUSTOM ],
            allowedChanges.value:      [ #CUSTOM ] },  
      c2: { usageAllowed: true,
            allowedChanges.annotation: [ #CUSTOM ],
            allowedChanges.value:      [ #CUSTOM ] } }  
      businessDate :
      {
        at : Boolean default true;
      };
   };
   
   @Scope:[#ELEMENT] 
   @MetadataExtension.usageAllowed : true 
   @CompatibilityContract: {
   c1: { usageAllowed: true,
         allowedChanges.annotation: [ #ANY ],
         allowedChanges.value: [ #ANY ] },   
   c2: { usageAllowed: false } }
   groupWithElement: ElementRef;
   
   @MetadataExtension.usageAllowed : true 
   @Scope:[#ELEMENT] 
   @CompatibilityContract: {
   c1: { usageAllowed: true,
         allowedChanges.annotation: [ #ANY ],
         allowedChanges.value: [ #ANY ] },   
   c2: { usageAllowed: true,
         allowedChanges.annotation: [ #ANY ],
         allowedChanges.value: [ #ANY ]  } }
   ranking
   {  
      functionParameterBinding : array of
      {
         functionId  : String(120);
         parameterId : String(120);
      };

      @Scope:[#VIEW, #ENTITY] 
      activeFunctions : array of
      {
         id     : String(120);
         weight : Decimal(3,2) default 1;
      };
   };
   
   @Scope:[#PARAMETER,#ELEMENT] 
   @MetadataExtension.usageAllowed : true 
   @CompatibilityContract: {
   c1: { usageAllowed: true,
         allowedChanges.annotation: [ #ANY ],
         allowedChanges.value: [ #ANY ] },   
   c2: { usageAllowed: false } }
   defaultValue : String(1024);
   
   @Scope:[#ELEMENT, #PARAMETER] 
   @CompatibilityContract: {
   c1: { usageAllowed: true,
         allowedChanges.annotation: [ #CUSTOM ],
         allowedChanges.value: [ #ANY ] },   
   c2: { usageAllowed: false } }
   valueHelp    : ElementRef;   
   
//=================================================   
// Version 7.69   
//=================================================   
   @Scope:[#ELEMENT, #PARAMETER] 
   @MetadataExtension.usageAllowed : true
   @CompatibilityContract: {
   c1: { usageAllowed: true,
         allowedChanges.annotation: [ #ANY ],
         allowedChanges.value: [ #ANY ] },   
   c2: { usageAllowed: false } }
   valueHelpDefinition: array of 
   { 
      @API.state: [ #RELEASED_FOR_SAP_CLOUD_PLATFORM ]
      qualifier: String(120); 
      @API.state: [ #RELEASED_FOR_SAP_CLOUD_PLATFORM ]
      entity  
      { 
          @Scope:[#VIEW, #ELEMENT, #PARAMETER]
          name    : EntityRef;
          element : String(40);
      };
      association        : AssociationRef;
      @API.state: [ #RELEASED_FOR_SAP_CLOUD_PLATFORM ]
      distinctValues     : Boolean default true;
      @API.state: [ #RELEASED_FOR_SAP_CLOUD_PLATFORM ]
      additionalBinding : array of 
      {
          localParameter : ParameterRef;
          localElement   : ElementRef;
          parameter      : String(40);
          element        : String(40);                                                                                   
          usage          : String(30) enum 
          {
              FILTER; 
              RESULT; 
              FILTER_AND_RESULT;
          };                                                                                   
      };
      @LanguageDependency.maxLength : 40
      @API.state: [ #RELEASED_FOR_SAP_CLOUD_PLATFORM ]
      label : String(60);
      @API.state: [ #RELEASED_FOR_SAP_CLOUD_PLATFORM ]
      presentationVariantQualifier : String(120);
      
      selectionVariantQualifier : String(120);
   };
   
   @MetadataExtension.usageAllowed : true
   @API.state: [ #RELEASED_FOR_SAP_CLOUD_PLATFORM ]
   @CompatibilityContract: {
   c1: { usageAllowed: true,
         allowedChanges.annotation: [ #ANY ],
         allowedChanges.value:      [ #ANY ] },  
   c2: { usageAllowed: false } }
   valueHelpDefault
   {      
      @Scope:[#ENTITY]
      fetchValues: String(30) enum
      {
        AUTOMATICALLY_WHEN_DISPLAYED;
        ON_EXPLICIT_REQUEST;
      };
          
      @Scope:[#ELEMENT]
      binding
      {
         usage: String(30) enum
         {
           FILTER;
           RESULT;
           FILTER_AND_RESULT;
         };
      };

      @Scope:[#ELEMENT]
      display : Boolean default true;
   };
   
   @CompatibilityContract:{ 
   c1: { usageAllowed: true,
        allowedChanges.annotation: [#ANY],
        allowedChanges.value:      [#ANY] },
   c2: { usageAllowed: true,
        allowedChanges.annotation: [#ANY],
        allowedChanges.value:      [#ANY] } }
   @Scope: [#VIEW]
   @MetadataExtension.usageAllowed : true
   dbHints : array of String(1298);
  
   @CompatibilityContract:{ 
   c1: { usageAllowed: true,
         allowedChanges.annotation: [#ANY],
         allowedChanges.value:      [#ANY] },
   c2: { usageAllowed: true,
         allowedChanges.annotation: [#ANY],
         allowedChanges.value:      [#ANY] } }
   @Scope: [#VIEW]
   dbHintsCalculatedBy : String(255);
   
   @MetadataExtension.usageAllowed : true 
   @Scope:[#ELEMENT] 
   @CompatibilityContract: {
   c1: { usageAllowed: true,
         allowedChanges.annotation: [ #ANY ],
         allowedChanges.value:      [ #ANY ] },   
   c2: { usageAllowed: false } }
   dynamicLabel
   {
     @LanguageDependency.maxLength : 40
     @Scope: [ #ELEMENT ]
       label : String(60);
       binding : array of
       {
          index     : Integer;
          parameter : ParameterRef;
       }
   }
   
   @Scope:[#PARAMETER]
   @API.state: [#RELEASED_FOR_SAP_CLOUD_PLATFORM]
   @MetadataExtension.usageAllowed : true
   @CompatibilityContract: {
   c1: { usageAllowed: true,
         allowedChanges.annotation: [ #ANY ],
         allowedChanges.value:      [ #ANY ] },  
   c2: { usageAllowed: false } }
   hierarchyNodeSelection 
   {
     hierarchyElement : ElementRef; 
     hierarchyBinding : array of
     {
        type             : String(12) enum
        {
            ELEMENT;
            PARAMETER;
            CONSTANT;
            USER_INPUT;
            SYSTEM_FIELD;
        };
        value            : String(512);
        variableSequence : Integer;
     };
     defaultHierarchyNode
     {
        nodeType : ElementRef;
        node     : array of
        {
           element : ElementRef;
           value   : String(512);
        };
     };
     multipleSelections : Boolean default true;      
   };
   
}; 