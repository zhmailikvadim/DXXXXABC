*"* use this source file for any macro definitions you need
*"* in the implementation part of the class

* We would prefer to store only %CID if given (and not store %TKY), because %TKY fields
* might not be stable (filled further by [partial] processsing).
* But LATE failed instances do not have %CID, so %TKY must be stored for relating SAVE.
define serial_key.
  clear &3.  " Serialized %TKY
  clear &4.  " %CID
  assign component cl_abap_behv=>co_techfield_name-cid of structure &2 to field-symbol(<cid_&1>).
  if sy-subrc = 0.
    &4 = <cid_&1>.
  endif.
  assign component cl_abap_behv=>co_techfield_name-tky of structure &2 to field-symbol(<tky_&1>).
  assert sy-subrc = 0.
  data(wtr_&1) = cl_sxml_string_writer=>create( if_sxml=>co_xt_json ).
  call transformation id options value_handling = 'RAW' initial_components = 'SUPPRESS'
   source tky = <tky_&1> result xml wtr_&1.
  &3 = wtr_&1->get_output( ).
  clear wtr_&1.
end-of-definition.

define deserial_key.
  assign component cl_abap_behv=>co_techfield_name-tky of structure &2 to field-symbol(<tky_&1>).
  assert sy-subrc = 0.
  if &4 is not initial.
    assign component cl_abap_behv=>co_techfield_name-cid of structure &2 to field-symbol(<cid_&1>).
    if sy-subrc = 0.
      <cid_&1> = &4.
    endif.
  endif.
  clear <tky_&1>.
  call transformation id options value_handling = 'RAW'
   source xml &3 result tky = <tky_&1>.
end-of-definition.