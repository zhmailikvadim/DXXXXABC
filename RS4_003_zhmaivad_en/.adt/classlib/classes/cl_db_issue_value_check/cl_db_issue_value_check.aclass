class CL_DB_ISSUE_VALUE_CHECK definition
  public
  final
  create public .

public section.

  class-methods CHECK_GUID
    importing
      !IV_GUID type GUID
    exceptions
      NOT_VALID .
  class-methods CHECK_IS_TYPE_N
    importing
      !IV_IS_TYPE_N type IS_TYPE_N
    exceptions
      NOT_VALID .
  class-methods CHECK_IS_STAT_N
    importing
      !IV_IS_STAT_N type IS_STAT_N
    exceptions
      NOT_VALID .
  class-methods CHECK_MSG_TYPE
    importing
      !IV_MSG_TYPE type CHAR1
    exceptions
      NOT_VALID .
  class-methods CHECK_ISSUE_T_STATUS
    importing
      !IT_ISSUE_STATUS type ISSUE_T_STATUS
    exporting
      !ET_ISSUE_STATUS type ISSUE_T_STATUS
    exceptions
      NOT_VALID .
  class-methods CHECK_ISSUE_T_RELATION
    importing
      !IT_ISSUE_RELATION type ISSUE_T_RELATION
    exporting
      !ET_ISSUE_RELATION type ISSUE_T_RELATION
    exceptions
      NOT_VALID .
  class-methods CHECK_ISSUE_T_ATTRIB
    importing
      !IT_ISSUE_ATTRIB type ISSUE_T_ATTRIB
    exporting
      !ET_ISSUE_ATTRIB type ISSUE_T_ATTRIB
    exceptions
      NOT_VALID .
  interface IF_DB_ISSUE_ATTRIB load .
  class-methods CHECK_RANGE_T_IS_STAT_N
    importing
      !IT_ISSUE_ATTRIB type IF_DB_ISSUE_ATTRIB=>TY_RANGE_IS_STAT_N
    exporting
      !ET_ISSUE_ATTRIB type IF_DB_ISSUE_ATTRIB=>TY_RANGE_IS_STAT_N
    exceptions
      NOT_VALID .
  class-methods CHECK_T_MESSAGE_NUMBER
    importing
      !IT_MESSAGE_NUMBER type TABTYPE_MESSAGE_NUMBER
    exporting
      !ET_MESSAGE_NUMBER type TABTYPE_MESSAGE_NUMBER
    exceptions
      NOT_VALID .
  class-methods CHECK_CSS_GUID
    importing
      !IV_GUID type GUID
    exceptions
      NOT_VALID .
protected section.
private section.
ENDCLASS.



CLASS CL_DB_ISSUE_VALUE_CHECK IMPLEMENTATION.


METHOD CHECK_CSS_GUID.

  DATA: lv_guid(24) TYPE c.

  lv_guid = iv_guid.
  IF lv_guid CN '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ'.
    RAISE not_valid.
  ENDIF.

ENDMETHOD.


METHOD check_guid.

  DATA: lv_guid(32) TYPE c.

  lv_guid = iv_guid.
  IF lv_guid CN '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ'.
    RAISE not_valid.
  ENDIF.

ENDMETHOD.


METHOD check_issue_t_attrib.

  DATA ls_issue_attrib TYPE issue_s_attrib.
  DATA lv_guid           TYPE guid.

  et_issue_attrib = it_issue_attrib.

  LOOP AT it_issue_attrib INTO ls_issue_attrib.
*   check status_id
    lv_guid = ls_issue_attrib-status_id.
    CALL METHOD cl_db_issue_value_check=>check_guid
      EXPORTING
        iv_guid   = lv_guid
      EXCEPTIONS
        not_valid = 1
        OTHERS    = 2.
    IF sy-subrc <> 0.
*     remove not authorized entry from table
      DELETE TABLE et_issue_attrib FROM ls_issue_attrib.
    ELSE.
*     check msg_key
      lv_guid = ls_issue_attrib-msg_key.
      CASE ls_issue_attrib-msg_type.
        WHEN 'CSS'. "CSS message
          CALL METHOD cl_db_issue_value_check=>check_css_guid
            EXPORTING
              iv_guid   = lv_guid
            EXCEPTIONS
              not_valid = 1
              OTHERS    = 2.

        WHEN 'CRM'.  "CRM message
          CALL METHOD cl_db_issue_value_check=>check_guid
            EXPORTING
              iv_guid   = lv_guid
            EXCEPTIONS
              not_valid = 1
              OTHERS    = 2.

        WHEN OTHERS.
          CALL METHOD cl_db_issue_value_check=>check_guid
            EXPORTING
              iv_guid   = lv_guid
            EXCEPTIONS
              not_valid = 1
              OTHERS    = 2.
      ENDCASE.
      IF sy-subrc <> 0.
*       remove not authorized entry from table
        DELETE TABLE et_issue_attrib FROM ls_issue_attrib.
      ELSE.
*       check msg_type
        CALL METHOD cl_db_issue_value_check=>check_is_type_n
          EXPORTING
            iv_is_type_n = ls_issue_attrib-msg_type
          EXCEPTIONS
            not_valid    = 1
            OTHERS       = 2.
        IF sy-subrc <> 0.
*        remove not authorized entry from table
          DELETE TABLE et_issue_attrib FROM ls_issue_attrib.
        ENDIF.
      ENDIF.
    ENDIF.

  ENDLOOP.

ENDMETHOD.


METHOD check_issue_t_relation.

  DATA ls_issue_relation TYPE issue_s_relation.
  DATA lv_guid           TYPE guid.

  et_issue_relation = it_issue_relation.

  LOOP AT it_issue_relation INTO ls_issue_relation.
    lv_guid = ls_issue_relation-status_id.
    CASE ls_issue_relation-msg_type.
      WHEN '1'. "CSS message
        CALL METHOD cl_db_issue_value_check=>check_css_guid
          EXPORTING
            iv_guid   = lv_guid
          EXCEPTIONS
            not_valid = 1
            OTHERS    = 2.

      WHEN '2'.  "CRM message
        CALL METHOD cl_db_issue_value_check=>check_guid
          EXPORTING
            iv_guid   = lv_guid
          EXCEPTIONS
            not_valid = 1
            OTHERS    = 2.

      WHEN OTHERS.
        CALL METHOD cl_db_issue_value_check=>check_guid
          EXPORTING
            iv_guid   = lv_guid
          EXCEPTIONS
            not_valid = 1
            OTHERS    = 2.
    ENDCASE.
    IF sy-subrc <> 0.
*     remove not authorized entry from table
      DELETE TABLE et_issue_relation FROM ls_issue_relation.
    ENDIF.
  ENDLOOP.


ENDMETHOD.


METHOD check_issue_t_status.

  DATA ls_issue_status TYPE issue_s_status.
  DATA lv_guid         TYPE guid.

  et_issue_status = it_issue_status.

  LOOP AT it_issue_status INTO ls_issue_status.
    lv_guid = ls_issue_status-status_id.
    CALL METHOD cl_db_issue_value_check=>check_guid
      EXPORTING
        iv_guid   = lv_guid
      EXCEPTIONS
        not_valid = 1
        OTHERS    = 2.
    IF sy-subrc <> 0.
*     remove not authorized entry from table
      DELETE TABLE et_issue_status FROM ls_issue_status.
    ENDIF.
  ENDLOOP.


ENDMETHOD.


METHOD CHECK_IS_STAT_N.
  IF iv_is_stat_n CN '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ '.
    RAISE not_valid.
  ENDIF.
ENDMETHOD.


METHOD check_is_type_n.
  IF iv_is_type_n CN '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ '.
    RAISE not_valid.
  ENDIF.
ENDMETHOD.


METHOD check_msg_type.
  IF iv_msg_type <> '1' AND iv_msg_type <> '2' AND iv_msg_type <> '3'.
    RAISE not_valid.
  ENDIF.
ENDMETHOD.


METHOD check_range_t_is_stat_n.

  DATA ls_issue_attrib LIKE LINE OF it_issue_attrib.
  DATA lv_guid           TYPE guid.

  et_issue_attrib = it_issue_attrib.

  LOOP AT et_issue_attrib INTO ls_issue_attrib.
*   check status ID
    CALL METHOD cl_db_issue_value_check=>check_is_stat_n
      EXPORTING
        iv_is_stat_n = ls_issue_attrib-low
      EXCEPTIONS
        not_valid    = 1
        OTHERS       = 2.
    IF sy-subrc <> 0.
*       remove not authorized entry from table
      DELETE TABLE et_issue_attrib FROM ls_issue_attrib.
    ELSE.
      CALL METHOD cl_db_issue_value_check=>check_is_stat_n
        EXPORTING
          iv_is_stat_n = ls_issue_attrib-high
        EXCEPTIONS
          not_valid    = 1
          OTHERS       = 2.
      IF sy-subrc <> 0.
*       remove not authorized entry from table
        DELETE TABLE et_issue_attrib FROM ls_issue_attrib.
      ENDIF.
    ENDIF.
  ENDLOOP.


ENDMETHOD.


METHOD check_t_message_number.

  DATA ls_message_number TYPE issue_message_number.
  DATA lv_guid           TYPE guid.

  et_message_number = it_message_number.

  LOOP AT it_message_number INTO ls_message_number.
*   check status ID
    lv_guid = ls_message_number-status_id.
    CALL METHOD cl_db_issue_value_check=>check_guid
      EXPORTING
        iv_guid   = lv_guid
      EXCEPTIONS
        not_valid = 1
        OTHERS    = 2.
    IF sy-subrc <> 0.
*     remove not authorized entry from table
      DELETE TABLE et_message_number FROM ls_message_number.
    ELSE.
*     check msg_key
      lv_guid = ls_message_number-msg_key.
      DATA lv_size TYPE i.
      CONSTANTS css_size  TYPE i VALUE 24.
      CONSTANTS guid_size TYPE i VALUE 32.
      lv_size = strlen( ls_message_number-msg_key ).
      CASE lv_size.
        WHEN css_size.
          CALL METHOD cl_db_issue_value_check=>check_css_guid
            EXPORTING
              iv_guid   = lv_guid
            EXCEPTIONS
              not_valid = 1
              OTHERS    = 2.
        WHEN guid_size.
          CALL METHOD cl_db_issue_value_check=>check_guid
            EXPORTING
              iv_guid   = lv_guid
            EXCEPTIONS
              not_valid = 1
              OTHERS    = 2.
        WHEN OTHERS.
          CALL METHOD cl_db_issue_value_check=>check_guid
            EXPORTING
              iv_guid   = lv_guid
            EXCEPTIONS
              not_valid = 1
              OTHERS    = 2.
      ENDCASE.
      IF sy-subrc <> 0.
*       remove not authorized entry from table
        DELETE TABLE et_message_number FROM ls_message_number.
      ENDIF.
    ENDIF.
  ENDLOOP.


ENDMETHOD.
ENDCLASS.