class ZCL_SC_S4_DELIVER_OUT_EXT definition
  public
  final
  create private .

public section.

  class-data GV_IS_DELIV type BOOL .
  class-data GV_IS_STO type BOOL value 'X' ##NO_TEXT.

  methods GET_DATA
    changing
      !CT_RAW_STRUCT type ANY
      !CT_RETURN_TAB type BAPIRET2_T .
  class-methods GET_INSTANCE
    returning
      value(RO_INST) type ref to ZCL_SC_S4_DELIVER_OUT_EXT .
  PROTECTED SECTION.
private section.

  types:
    BEGIN OF gtyp_delivery_items,
      matnr            TYPE matnr,
      wrf_charstc2(18) TYPE c,
      wrf_charstc1(18) TYPE c,
      netpr            TYPE netpr,
      zzfsh_mg_at1     TYPE fsh_mg_attribute1,
      vbeln            TYPE vbeln,
      auart            TYPE auart,
      bsart            TYPE esart,
      posnr            TYPE posnr,
      bsark            TYPE bsark,
      ihrez            TYPE ihrez,
      zzlocalsize      TYPE fsh_sc_entx8,
    END OF gtyp_delivery_items .
  types:
    BEGIN OF gtyp_prices,
      kschl  TYPE kschl, "Condition Type
      waers  TYPE waers, "Currency
      kntyp  TYPE kntyp, "Condition Category
      kwert  TYPE kwert, "Condition Amount A
      lfimg  TYPE lfimg, "Delivery Quantity
      kwmeng TYPE kwmeng, "Condition Amount B
    END OF gtyp_prices .
  types:
    BEGIN OF gtyp_party,
      fsh_msopid     TYPE fsh_msopid,
      kunnr          TYPE kunnr,
      zzmobile_phone TYPE telf2,
      zzemail        TYPE ad_smtpadr,
    END OF gtyp_party .
  types:
    BEGIN OF gtyp_carrier_name,
      tdlnr        TYPE vttk-tdlnr,
      vttk         TYPE vttk-tndr_crnm,
      vbeln        TYPE vttp-vbeln,
      erdat        TYPE vttk-erdat,
      carrier_name TYPE vttk-tndr_crnm,
    END OF gtyp_carrier_name .
  types:
    BEGIN OF gtyp_exidv2,
      venum        TYPE venum,
      exidv2       TYPE exidv2,
      spe_ident_01 TYPE /spe/de_ident,
    END OF gtyp_exidv2 .
  types:
    BEGIN OF gtyp_event_text_key,
      head_hdl   TYPE char44,
      even       TYPE char10,
      even_vernu TYPE char4,
    END OF gtyp_event_text_key .

  data:
    mt_party  TYPE STANDARD TABLE OF gtyp_party .
  data:
    mt_prices TYPE STANDARD TABLE OF gtyp_prices .
  data:
    mt_delivery_item TYPE STANDARD TABLE OF  gtyp_delivery_items .
  data MV_VBELN type VBELN .
  data MS_LIKP type ZSD_I_DELIVERY_HEADER .
  data:
    mt_events TYPE STANDARD TABLE OF zsd_i_tevents_out_delivery_int .
  data MO_PRICE type ref to DATA .
  data MO_EVENT type ref to DATA .
  data:
    mv_cal_first TYPE  p DECIMALS 5 .
  data:
    mts_exidv2 TYPE SORTED TABLE OF gtyp_exidv2 WITH UNIQUE KEY venum .
  data:
    mt_carrier_name TYPE STANDARD TABLE OF gtyp_carrier_name .
  constants GC_EVENTS type NAME_FELD value 'ZZSD_S_EVENT' ##NO_TEXT.
  constants GC_PRICES type NAME_FELD value 'ZZSD_S_PRICES' ##NO_TEXT.
  constants GC_POTYPE type NAME_FELD value 'ZZPOTYPE' ##NO_TEXT.
  constants GC_YOUR_REFERENCE type NAME_FELD value 'ZZYOUR_REFERENCE' ##NO_TEXT.
  constants GC_LOCAL_SIZE type NAME_FELD value 'ZZLOCALSIZE' ##NO_TEXT.
  constants GC_CONVERTEDSIZE type NAME_FELD value 'ZZCONVERTED_SIZE' ##NO_TEXT.
  constants GC_ITEM_DIVISION type NAME_FELD value 'ZZITEM_DIVISION' ##NO_TEXT.
  constants GC_NETPRICE type NAME_FELD value 'ZZNET_PRICE' ##NO_TEXT.
  constants GC_SALES_DOC_TYPE type NAME_FELD value 'ZZSALES_DOC_TYPE' ##NO_TEXT.
  constants GC_STO_DOC_TYPE type NAME_FELD value 'ZZSTO_DOC_TYPE' ##NO_TEXT.
  constants GC_TECHNICAL_SIZE type NAME_FELD value 'ZZTECHNICAL_SIZE' ##NO_TEXT.
  constants GC_EDI_OUTBOUND_DELIVERY_ITEM type NAME_FELD value 'DELIVERY_ITEM' ##NO_TEXT.
  constants GC_MATERIAL type NAME_FELD value 'MATERIAL' ##NO_TEXT.
  constants GC_SUPP_PROD_ID type NAME_FELD value 'SUPPLIER_PRODUCT_ID' ##NO_TEXT.
  constants GC_PARTY type NAME_FELD value 'PARTY' ##NO_TEXT.
  constants GC_EMAIL type NAME_FELD value 'ZZEMAIL' ##NO_TEXT.
  constants GC_MOBILE_PHONE type NAME_FELD value 'ZZMOBILE_PHONE' ##NO_TEXT.
  constants GC_CUSTIDPART type NAME_FELD value 'ZZCUST_IDPARTNER' ##NO_TEXT.
  constants GC_ZZCMGST type NAME_FELD value 'ZZCREDIT_STATUS' ##NO_TEXT.
  constants GC_ZZLFART type NAME_FELD value 'ZZDELIVERY_TYPE' ##NO_TEXT.
  constants GC_DELIVERY_DOCUMENT type NAME_FELD value 'DELIVERY_DOCUMENT' ##NO_TEXT.
  constants GC_ZZVBELN type NAME_FELD value 'ZZPARENT_DELIVERY' ##NO_TEXT.
  constants GC_DELIVERY type NAME_FELD value 'DELIVERY' ##NO_TEXT.
  constants GC_ZZKOSTK type NAME_FELD value 'ZZPICKING_STATUS' ##NO_TEXT.
  constants GC_COND_TYP type NAME_FELD value 'ZZCONDITION_TYPE' ##NO_TEXT.
  constants GC_CURR type NAME_FELD value 'ZZCURRENCY' ##NO_TEXT.
  constants GC_COND_CAT type NAME_FELD value 'ZZCONDITION_CATEGORY' ##NO_TEXT.
  constants GC_RATE type NAME_FELD value 'ZZRATE' ##NO_TEXT.
  constants GC_VBTYPL_V type VBTYPL_V value 'C' ##NO_TEXT.
  constants GC_EVENT_TYPE type NAME_FELD value 'ZZEVENT_TYPE' ##NO_TEXT.
  constants GC_START_DATE type NAME_FELD value 'ZZSTART_DATE' ##NO_TEXT.
  constants GC_START_TIME type NAME_FELD value 'ZZSTART_TIME' ##NO_TEXT.
  constants GC_START_T_Z type NAME_FELD value 'ZZSTART_TIME_ZONE' ##NO_TEXT.
  constants GC_EVENT_TEXT type NAME_FELD value 'ZZEVENT_TEXT' ##NO_TEXT.
  constants GC_BUY_PART_ID type NAME_FELD value 'BUYER_PARTY_ID' ##NO_TEXT.
  class-data GO_INST type ref to ZCL_SC_S4_DELIVER_OUT_EXT .
  constants GC_CONTROLLER type NAME_FELD value 'CONTROLLER' ##NO_TEXT.
  constants GC_HANDLING_UNIT type NAME_FELD value 'HANDLING_UNIT' ##NO_TEXT ##NEEDED.
  constants GC_EVENT_CREATED type CHAR8 value 'CREATED' ##NO_TEXT.
  constants GC_EVENT_CHANGED type CHAR8 value 'CHANGED' ##NO_TEXT.

  methods FILL_DELIVERY_PARTY
    changing
      !CT_DELIVERY_PARTY_DATA type ANY .
  methods GET_EVENT_TEXT
    importing
      !IS_EVENT_TEXT_KEY type GTYP_EVENT_TEXT_KEY
    returning
      value(RV_TEXT) type TDLINE .
  methods FILL_EVENTS
    changing
      !CT_DELIVERY_EVENT_DATA type ANY .
  methods FILL_PRICES
    changing
      !CT_DELIVERY_PRICE_DATA type ANY .
  methods FILL_DATA
    changing
      !CT_RAW_STRUCT type ANY
      !CT_RETURN_TAB type BAPIRET2_T optional .
  methods GET_DATA_FROM_DB
    importing
      !IV_FS_DELIVERY_DOCUMENT type ANY optional .
  methods FILL_HEADER
    changing
      !CT_DELIVERY_HEADER_DATA type ANY .
  methods FILL_DELIVERY_ITEMS
    changing
      !CT_DELIVERY_ITEM_DATA type ANY .
  methods UPDATE_EVENTS
    importing
      !IV_DEL_DOC type ANY optional
    changing
      !CT_RETURN_TAB type BAPIRET2_T optional .
  methods FILL_CARRIER_NAME
    changing
      !CS_DELIVERY_DATA type EDI_OUTBOUND_DELIVERY .
  methods FILL_ARCHIVED_FLAG
    changing
      !CS_DELIVERY_DATA type EDI_OUTBOUND_DELIVERY .
  methods FILL_HEADER_EVENT
    changing
      !CS_DELIVERY_DATA type EDI_OUTBOUND_DELIVERY .
  methods FILL_HUID
    changing
      !CS_DELIVERY_DATA type EDI_OUTBOUND_DELIVERY .
ENDCLASS.



CLASS ZCL_SC_S4_DELIVER_OUT_EXT IMPLEMENTATION.


METHOD fill_archived_flag.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* DOCHIIGO     | 03.08.2023 | 23462     : Feature - [Build][PFE]-  S4  *
*              |            | DS4K958556                               *
*----------------------------------------------------------------------*

  ASSIGN COMPONENT gc_delivery_document OF STRUCTURE cs_delivery_data TO FIELD-SYMBOL(<ls_delivery_document>).
  IF sy-subrc <> 0.
    RETURN.
  ENDIF.

  DATA(lv_object_id) = |{ <ls_delivery_document> }%|.

  SELECT SINGLE @abap_true
    FROM toa03
   WHERE  object_id LIKE @lv_object_id
      AND sap_object = 'LIKP'
      AND archiv_id  = 'DN'
      AND ar_object  = 'SDODELNOTE'
   INTO @DATA(lv_archived_flag).                          "#EC CI_SUBRC

  cs_delivery_data-zzsd_s_archived_flag = lv_archived_flag.

ENDMETHOD.


  METHOD fill_carrier_name.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR   | DATE     | CHANGE NUMBER & DESCRIPTION                    *
*          |          | TRANSPORT REQUESTS                             *
************************************************************************
* BIGVATAM |18.08.2022| 12448: T4MTEMP-13064
*          |          | DS4K925374
************************************************************************
    IF mt_carrier_name IS NOT INITIAL.
      cs_delivery_data-zzcarrier_name = mt_carrier_name[ 1 ]-carrier_name.
    ENDIF.
  ENDMETHOD.


  METHOD fill_data.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KAUSHRIS     | 20.06.2022 | 14480     : FB_11743_SD_[Platform-API    *
*              |            |           extension] - Custom Field Logic*
*              |            | DS4K921704                               *
************************************************************************
* KAUSHRIS     | 20.06.2022 | 12191     : FB_11743_SD_[Platform-API    *
*              |            |           extension] - Custom Field Logic*
*              |            | DS4K921704                               *
************************************************************************
* KAUSHRIS     | 20.06.2022 | 12191     : FB_11743_SD_[Platform-API    *
*              |            |           extension] - Custom Field Logic*
*              |            | DS4K924254                               *
************************************************************************
* BIGVATAM     | 18.08.2022 | 12448: T4MTEMP-13064
*              |            |         Adding & filling additional fields
*              |            | DS4K925374
************************************************************************
* ZHMAIVAD     | 17.10.2022 | 13118 : FB_13118_SD_[Platform] - S4 to WMS - Outbound Delive*
*              |            | DS4K927689                               *
*----------------------------------------------------------------------*
* GERTSVIK     | 16.03.2023 | 18992     : Feature - Order Service Confi*
*              |            | DS4K947438                               *
*----------------------------------------------------------------------*
* DOCHIIGO     | 03.08.2023 | 23462     : Feature - [Build][PFE]-  S4  *
*              |            | DS4K958556                               *
*----------------------------------------------------------------------*
* BEGMUAZI     | 15.09.2023 | 23809_SD_[CR] Development - Consider warehouse cu *
*              |            | DS4K959580                               *
*----------------------------------------------------------------------*
* CHISLRIM     | 14.02.2024 | 27479    : FB_27479_SD_[FEATURE] -       *
*              |            |             -Delivery API ( Routing statu*
*              |            | DS4K973219                               *
************************************************************************

*-Description: Fetching and filling all the data for the Field Extensions
**********************************************************************
*)-Assign Header data 'DELIVERY' to a dynamic field-symbol and then populate the data
    ASSIGN COMPONENT gc_delivery  OF STRUCTURE ct_raw_struct TO FIELD-SYMBOL(<ls_delivery>).
    IF sy-subrc = 0.
*)-Pass the Delivery Document Number and get the data from the database and populate the data to the
*  respected Global internal tables to be used further
      gv_is_deliv = abap_true.
      get_data_from_db(  iv_fs_delivery_document = <ls_delivery> ).
      "Fill Header's Event
      fill_header_event( CHANGING cs_delivery_data = <ls_delivery> ).

*Populate Delivery Header Fields
      fill_header( CHANGING ct_delivery_header_data = <ls_delivery> ).

*-)Populate Party fields
      fill_delivery_party( CHANGING ct_delivery_party_data = <ls_delivery>  ).

*)-Delivery Item Extension
      fill_delivery_items( CHANGING ct_delivery_item_data = <ls_delivery> ).
*)-Populate Prices
      fill_prices( CHANGING ct_delivery_price_data = <ls_delivery> ).
*)-Update Events
      update_events(  EXPORTING iv_del_doc = <ls_delivery>  CHANGING ct_return_tab = ct_return_tab ).
*)-Populate Events
      fill_events( CHANGING ct_delivery_event_data = <ls_delivery> ).
      "Populate PrintableStatus
      fill_carrier_name( CHANGING cs_delivery_data = <ls_delivery> ).
      "Populate PrintableStatus
      fill_huid( CHANGING cs_delivery_data = <ls_delivery> ).
      "
      fill_archived_flag( CHANGING cs_delivery_data = <ls_delivery> ).
    ENDIF.
  ENDMETHOD.


METHOD fill_delivery_items.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KAUSHRIS     | 20.06.2022 | 14480     : FB_11743_SD_[Platform-API    *
*              |            |           extension] - Custom Field Logic*
*              |            | DS4K921704                               *
************************************************************************
* KAUSHRIS     | 20.06.2022 | 12191     : FB_11743_SD_[Platform-API    *
*              |            |           extension] - Custom Field Logic*
*              |            | DS4K924254                               *
************************************************************************
* GERTSVIK     | 06.04.2023 | 19854     : Feature - S4 to WMS Delivery *
*              |            | DS4K949348                               *
************************************************************************
* KASHTULA     | 23.10.2023 | 26143    : Outbound DN Interface - field *
*              |            | DS4K967801                               *
************************************************************************
* CHISLRIM     | 18.11.2023 | 27479    : FB_27479_SD_[FEATURE] -       *
*              |            |             -Delivery API ( Routing statu*
*              |            | DS4K973219                               *
************************************************************************

************************************************************************
*Description: Fetching and filling all the data for the Field Extensions
************************************************************************
  FIELD-SYMBOLS: <lt_delivery_item> TYPE STANDARD TABLE.
  ASSIGN COMPONENT gc_edi_outbound_delivery_item OF STRUCTURE ct_delivery_item_data TO <lt_delivery_item>.
  IF sy-subrc IS INITIAL.
    LOOP AT <lt_delivery_item> ASSIGNING FIELD-SYMBOL(<ls_delivery_item>) .
      ASSIGN COMPONENT gc_material OF STRUCTURE <ls_delivery_item> TO FIELD-SYMBOL(<ls_material>).
      "SUPPLIER_PRODUCT_ID
      IF sy-subrc IS INITIAL.
        ASSIGN COMPONENT gc_supp_prod_id OF STRUCTURE <ls_material> TO FIELD-SYMBOL(<ls_supp_prod_id>).
        IF sy-subrc IS INITIAL.

          ASSIGN COMPONENT gc_technical_size OF STRUCTURE <ls_delivery_item> TO FIELD-SYMBOL(<lv_zztechnical_size>).
          IF  sy-subrc IS INITIAL.
*)-Technical Notation
            <lv_zztechnical_size> = VALUE #( mt_delivery_item[ matnr = <ls_supp_prod_id> ]-wrf_charstc2 OPTIONAL ).
          ENDIF.

          ASSIGN COMPONENT gc_convertedsize OF STRUCTURE <ls_delivery_item> TO FIELD-SYMBOL(<ls_convertedsize>).
          IF  sy-subrc IS INITIAL.
*)-Size Conversion Material
            <ls_convertedsize> = VALUE #( mt_delivery_item[ matnr = <ls_supp_prod_id> ]-wrf_charstc1 OPTIONAL ).
          ENDIF.

          ASSIGN COMPONENT gc_netprice OF STRUCTURE <ls_delivery_item> TO FIELD-SYMBOL(<lv_netprice>).
          IF sy-subrc IS INITIAL.
*)-Net Price
            <lv_netprice> = VALUE #( mt_delivery_item[ matnr = <ls_supp_prod_id> ]-netpr OPTIONAL ).
          ENDIF.

          ASSIGN COMPONENT gc_sales_doc_type OF STRUCTURE <ls_delivery_item> TO FIELD-SYMBOL(<lv_sales_doc_type>).
          IF  sy-subrc IS INITIAL.
*Sales document type
            <lv_sales_doc_type> = VALUE #( mt_delivery_item[ matnr = <ls_supp_prod_id> ]-auart OPTIONAL ).
          ENDIF.

          ASSIGN COMPONENT gc_sto_doc_type OF STRUCTURE <ls_delivery_item> TO FIELD-SYMBOL(<lv_sto_doc_type>).
          IF  sy-subrc IS INITIAL.
*STO document type
            <lv_sto_doc_type> = VALUE #( mt_delivery_item[ matnr = <ls_supp_prod_id> ]-bsart OPTIONAL ).
          ENDIF.

          ASSIGN COMPONENT gc_item_division OF STRUCTURE <ls_delivery_item> TO FIELD-SYMBOL(<ls_item_division>).
          IF  sy-subrc IS INITIAL.
*Division
            <ls_item_division> = VALUE #( mt_delivery_item[ matnr = <ls_supp_prod_id> ]-zzfsh_mg_at1 OPTIONAL ).
          ENDIF.

          ASSIGN COMPONENT gc_potype OF STRUCTURE <ls_delivery_item> TO FIELD-SYMBOL(<lv_potype>).
          IF  sy-subrc IS INITIAL.
*Customer purchase order type
            <lv_potype> = VALUE #( mt_delivery_item[ matnr = <ls_supp_prod_id> ]-bsark OPTIONAL ).
          ENDIF.

          ASSIGN COMPONENT gc_your_reference OF STRUCTURE <ls_delivery_item> TO FIELD-SYMBOL(<lv_your_reference>).
          IF  sy-subrc IS INITIAL.
*Customer's or vendor's internal reference
            <lv_your_reference> = VALUE #( mt_delivery_item[ matnr = <ls_supp_prod_id> ]-ihrez OPTIONAL ).
          ENDIF.

          ASSIGN COMPONENT gc_local_size OF STRUCTURE <ls_delivery_item> TO FIELD-SYMBOL(<lv_local_size>).
          IF  sy-subrc IS INITIAL.
*LOcal size
            <lv_local_size> = VALUE #( mt_delivery_item[ matnr = <ls_supp_prod_id> ]-zzlocalsize OPTIONAL ).
          ENDIF.

        ENDIF.
      ENDIF.
    ENDLOOP.
    CLEAR mt_delivery_item.
  ENDIF.
ENDMETHOD.


  METHOD fill_delivery_party.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KAUSHRIS     | 20.06.2022 | 14480     : FB_11743_SD_[Platform-API    *
*              |            |           extension] - Custom Field Logic*
*              |            | DS4K921704                               *
************************************************************************
* KAUSHRIS     | 20.06.2022 | 12191     : FB_11743_SD_[Platform-API    *
*              |            |           extension] - Custom Field Logic*
*              |            | DS4K924254                               *
************************************************************************
* CHISLRIM     | 18.11.2023 | 27479    : FB_27479_SD_[FEATURE] -       *
*              |            |             -Delivery API ( Routing statu*
*              |            | DS4K973219                               *
**********************************************************************

**********************************************************************
*    A new Custom Filed was added to the existing Party Data Type
**********************************************************************
    FIELD-SYMBOLS: <lt_party>         TYPE STANDARD TABLE.
    ASSIGN COMPONENT gc_party OF STRUCTURE ct_delivery_party_data TO <lt_party>.
    IF sy-subrc = 0.
      LOOP AT <lt_party>  ASSIGNING FIELD-SYMBOL(<ls_party>).
        ASSIGN COMPONENT gc_buy_part_id OF STRUCTURE <ls_party> TO FIELD-SYMBOL(<ls_part_id>).
        IF sy-subrc = 0.
          ASSIGN COMPONENT gc_custidpart OF STRUCTURE <ls_party> TO FIELD-SYMBOL(<ls_cust_id_part>).
          IF sy-subrc = 0.
*)-Identification of the Customer in the Partner System
            <ls_cust_id_part> = VALUE #( mt_party[ kunnr = <ls_part_id> ]-fsh_msopid OPTIONAL ).
          ENDIF.
        ENDIF.

        ASSIGN COMPONENT gc_mobile_phone OF STRUCTURE <ls_party> TO FIELD-SYMBOL(<ls_mobile_phone>).
        IF sy-subrc = 0.
**)-Mobile phone
          <ls_mobile_phone> = VALUE #( mt_party[ kunnr = <ls_part_id> ]-zzmobile_phone OPTIONAL ).
        ENDIF.

        ASSIGN COMPONENT gc_email OF STRUCTURE <ls_party> TO FIELD-SYMBOL(<ls_email>).
        IF sy-subrc = 0.
**)-Email
          <ls_email> = VALUE #( mt_party[ kunnr = <ls_part_id> ]-zzemail OPTIONAL ).
        ENDIF.

      ENDLOOP.
      CLEAR mt_party.
    ENDIF.
  ENDMETHOD.


  METHOD fill_events.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KAUSHRIS     | 20.06.2022 | 14480     : FB_11743_SD_[Platform-API    *
*              |            |           extension] - Custom Field Logic*
*              |            | DS4K921704                               *
************************************************************************
* KAUSHRIS     | 20.06.2022 | 12191     : FB_11743_SD_[Platform-API    *
*              |            |           extension] - Custom Field Logic*
*              |            | DS4K924254                               *
************************************************************************
* ZHMAIVAD     | 01.11.2022 | 13118 : FB_13118_SD_[Platform] - S4 to WMS - Outbound Delive*
*              |            | DS4K927689                               *
************************************************************************
* SHNIPALI     | 18.07.2022 | 23462 : FB_23462_SD_Feature - [Build][PFE]-  S4 to TMS - Del*
*              |            | DS4K958556                               *
************************************************************************
* SERGEVAD     | 31.01.2024 | 78426 : FB_27479_SD_[FEATURE] - Delivery API ( Routing status
*              |            | DS4K973219                               *
**********************************************************************
*   A New Node 'EVENTS' was added to the EDI_OUTBOUND_DELIVERY Data type
**********************************************************************
    FIELD-SYMBOLS <lt_events> TYPE STANDARD TABLE.
    IF mt_events IS NOT INITIAL.
      DELETE mt_events WHERE eventtimestartfromutc IS INITIAL AND eventtimestarttoutc IS INITIAL.

      ASSIGN COMPONENT gc_events OF STRUCTURE ct_delivery_event_data TO <lt_events>.
      IF  sy-subrc IS INITIAL.
*)-Fill Events Related details
        CREATE DATA mo_event LIKE LINE OF <lt_events>.
        ASSIGN mo_event->* TO FIELD-SYMBOL(<ls_event_data>).

        LOOP AT mt_events ASSIGNING FIELD-SYMBOL(<ls_event>).
          ASSIGN COMPONENT gc_event_type OF STRUCTURE <ls_event_data> TO FIELD-SYMBOL(<lv_event_type>).
          IF sy-subrc IS INITIAL.
* Event type
            <lv_event_type> = <ls_event>-eventtype.
          ENDIF.

          ASSIGN COMPONENT gc_start_t_z OF STRUCTURE <ls_event_data> TO FIELD-SYMBOL(<lv_start_time_zone>).
          IF sy-subrc IS INITIAL.
*Start time zone of transaction
            <lv_start_time_zone> = <ls_event>-eventtimestartfromtimezone.
          ENDIF.

          ASSIGN COMPONENT gc_start_date OF STRUCTURE <ls_event_data> TO FIELD-SYMBOL(<lv_start_date>).
          IF sy-subrc IS INITIAL AND <lv_start_time_zone> IS ASSIGNED.
*)-Split date and time
            CONVERT TIME STAMP <ls_event>-eventtimestartfromutc TIME ZONE <lv_start_time_zone> INTO  DATE DATA(lv_date)  TIME DATA(lv_time) .
*Start date from Start time of transaction (UTC time stamp)
            <lv_start_date> = lv_date.
          ENDIF.

          ASSIGN COMPONENT gc_start_time OF STRUCTURE <ls_event_data> TO FIELD-SYMBOL(<lv_start_time>).
          IF sy-subrc IS INITIAL.
*Start time from Start time of transaction (UTC time stamp)
            <lv_start_time> = lv_time.
          ENDIF.

          ASSIGN COMPONENT gc_event_text OF STRUCTURE <ls_event_data> TO FIELD-SYMBOL(<lv_event_text>).
          IF sy-subrc IS INITIAL AND <ls_event>-textavailflag = abap_true.
*Event Text
            <lv_event_text> = get_event_text( is_event_text_key = VALUE #( head_hdl    = <ls_event>-handlertimeeventsegment
                                                                           even        = <ls_event>-eventtype
                                                                           even_vernu  = <ls_event>-eventversionnumber ) ).
          ENDIF.
          INSERT <ls_event_data> INTO TABLE <lt_events>.
        ENDLOOP.
        CLEAR mt_events.
      ENDIF.
    ENDIF.
  ENDMETHOD.


  METHOD fill_header.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KAUSHRIS     | 20.06.2022 | 14480     : FB_11743_SD_[Platform-API    *
*              |            |           extension] - Custom Field Logic*
*              |            | DS4K921704                               *
************************************************************************
* KAUSHRIS     | 20.06.2022 | 12191     : FB_11743_SD_[Platform-API    *
*              |            |           extension] - Custom Field Logic*
*              |            | DS4K924254                               *
*----------------------------------------------------------------------*
* ZHMAIVAD     | 14.10.2022 | 13118     : [Platform] - S4 to WMS - Outbound Delive *
*              |            | DS4K927689                               *
************************************************************************
* KOCHUIGO     | 17.05.2023 | 21371     : DN with HU can't flow to WMS *
*              |            | DS4K952750
************************************************************************
* KOCHUIGO     | 16.06.2023 | 21675     : Implement OSS Note 3335754 - D *
*              |            | DS4K953622                               *
*----------------------------------------------------------------------*
* ZUJSKAS      | 07.08.2023 | 24138     : Feature - Revert changes for T4MTEMP-509 *
*              |            | DS4K960285                               *
*----------------------------------------------------------------------*
* CHISLRIM     | 24.01.2024 |  27479    : FB_27479_SD_[FEATURE] -       *
*              |            |             -Delivery API ( Routing statu*
*              |            | DS4K973219                               *
*----------------------------------------------------------------------*


    DATA: ls_prxctrl          TYPE prxctrl.
    FIELD-SYMBOLS:
      <lt_controller> TYPE STANDARD TABLE.

    ASSIGN COMPONENT gc_zzvbeln OF STRUCTURE ct_delivery_header_data TO FIELD-SYMBOL(<lv_zzvbeln>).
    IF   sy-subrc IS INITIAL.
      <lv_zzvbeln> = mv_vbeln. "Parent delivery note number
      CLEAR mv_vbeln.
      IF <lv_zzvbeln> IS INITIAL.
        ASSIGN COMPONENT gc_controller OF STRUCTURE ct_delivery_header_data TO <lt_controller>.
        IF sy-subrc = 0.
          ls_prxctrl-field = gc_zzvbeln.
          ls_prxctrl-value = sai_ctrl_initial.
          APPEND ls_prxctrl TO <lt_controller>.
          <lv_zzvbeln> = cl_abap_char_utilities=>cr_lf.
        ENDIF.
      ENDIF.
    ENDIF.

    ASSIGN COMPONENT gc_zzkostk OF STRUCTURE ct_delivery_header_data TO FIELD-SYMBOL(<lv_kostk>).
    IF  sy-subrc IS INITIAL.
      <lv_kostk> = ms_likp-kostk. "Overall picking status
    ENDIF.
    ASSIGN COMPONENT gc_zzlfart OF STRUCTURE ct_delivery_header_data TO FIELD-SYMBOL(<lv_lfart>).
    IF  sy-subrc IS INITIAL.
      <lv_lfart> = ms_likp-lfart. "Delivery Type
    ENDIF.

    ASSIGN COMPONENT gc_zzcmgst OF STRUCTURE ct_delivery_header_data TO FIELD-SYMBOL(<lv_cmgst>).
    IF  sy-subrc IS INITIAL.
      <lv_cmgst> = ms_likp-cmgst. "Overall credit status
      IF <lv_cmgst> IS INITIAL.
        ASSIGN COMPONENT gc_controller OF STRUCTURE ct_delivery_header_data TO <lt_controller>.
        IF sy-subrc = 0.
          ls_prxctrl-field = gc_zzcmgst.
          ls_prxctrl-value = sai_ctrl_initial.
          APPEND ls_prxctrl TO <lt_controller>.
          <lv_cmgst> = cl_abap_char_utilities=>cr_lf.
        ENDIF.
      ENDIF.
    ENDIF.

    CLEAR ms_likp.
  ENDMETHOD.


METHOD fill_huid.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* BIGVATAM     |18.08.2022  | 12448     : T4MTEMP-13064                *
*              |            | DS4K925374                               *
************************************************************************
* GERTSVIK     | 16.03.2023 | 18992     : Feature - Order Service Confi*
*              |            | DS4K947438                               *
*----------------------------------------------------------------------*
  DATA lv_venum TYPE venum.
  IF mts_exidv2 IS INITIAL.
    RETURN.
  ENDIF.
  LOOP AT  cs_delivery_data-handling_unit ASSIGNING FIELD-SYMBOL(<ls_handling_unit>).
    lv_venum = |{ <ls_handling_unit>-id ALPHA = IN }|.
    ASSIGN mts_exidv2[ venum = lv_venum ]-exidv2 TO FIELD-SYMBOL(<lv_exidv2>).
    IF sy-subrc = 0 AND <lv_exidv2> IS NOT INITIAL.
      <ls_handling_unit>-zzhuid2 = <lv_exidv2>.
    ENDIF.
    ASSIGN mts_exidv2[ venum = lv_venum ]-spe_ident_01 TO FIELD-SYMBOL(<lv_spe_ident_01>).
    IF sy-subrc = 0 AND <lv_spe_ident_01> IS NOT INITIAL.
      <ls_handling_unit>-zzalternate_huid = <lv_spe_ident_01>.
    ENDIF.
  ENDLOOP.
ENDMETHOD.


  METHOD fill_prices.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KAUSHRIS     | 20.06.2022 | 14480     : FB_11743_SD_[Platform-API    *
*              |            |           extension] - Custom Field Logic*
*              |            | DS4K921704                               *
************************************************************************
* KAUSHRIS     | 20.06.2022 | 12191     : FB_11743_SD_[Platform-API    *
*              |            |           extension] - Custom Field Logic*
*              |            | DS4K924254                               *
**********************************************************************

**********************************************************************
*   A New Node 'PRICES' was added to the EDI_OUTBOUND_DELIVERY Data type
**********************************************************************
    IF mt_prices IS NOT INITIAL.
      FIELD-SYMBOLS <lt_prices> TYPE STANDARD TABLE.
      ASSIGN COMPONENT gc_prices OF STRUCTURE ct_delivery_price_data TO <lt_prices>.
      IF  sy-subrc IS INITIAL.
        CREATE DATA mo_price LIKE LINE OF <lt_prices>.
        ASSIGN  mo_price->* TO FIELD-SYMBOL(<ls_delivery_price_data>).
        LOOP AT mt_prices ASSIGNING FIELD-SYMBOL(<ls_prices>).


          ASSIGN COMPONENT gc_cond_typ OF STRUCTURE <ls_delivery_price_data> TO FIELD-SYMBOL(<ls_cond_typ>).
          IF sy-subrc IS INITIAL.
            <ls_cond_typ> = <ls_prices>-kschl.
          ENDIF.

          ASSIGN COMPONENT gc_curr OF STRUCTURE <ls_delivery_price_data> TO FIELD-SYMBOL(<ls_curr>).
          IF sy-subrc IS INITIAL.
            <ls_curr> = <ls_prices>-waers.
          ENDIF.

          ASSIGN COMPONENT gc_cond_cat  OF STRUCTURE <ls_delivery_price_data> TO FIELD-SYMBOL(<ls_cond_cat>).
          IF sy-subrc IS INITIAL.
            <ls_cond_cat> = <ls_prices>-kntyp .
          ENDIF.

          ASSIGN COMPONENT  gc_rate  OF STRUCTURE <ls_delivery_price_data> TO FIELD-SYMBOL(<ls_rate>).
          IF sy-subrc IS INITIAL AND <ls_prices>-kwmeng IS NOT INITIAL.
            mv_cal_first  = <ls_prices>-kwert / <ls_prices>-kwmeng.
            <ls_rate> = mv_cal_first * <ls_prices>-lfimg.
          ENDIF.

          INSERT <ls_delivery_price_data> INTO TABLE <lt_prices>.

        ENDLOOP.
        CLEAR mt_prices.
      ENDIF.
    ENDIF.
  ENDMETHOD.


  METHOD get_data.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KAUSHRIS     | 20.06.2022 | 14480     : FB_11743_SD_[Platform-API    *
*              |            |           extension] - Custom Field Logic*
*              |            | DS4K921704                               *
************************************************************************
* KAUSHRIS     | 20.06.2022 | 12191     : FB_11743_SD_[Platform-API    *
*              |            |           extension] - Custom Field Logic*
*              |            | DS4K924254                               *
**********************************************************************
**********************************************************************
*    Main Method to Get and process the data type Enhancements for the
*    Custom Fields added to the OutboundDelivery Interface
*    ABAP Name: EDI_OUTBOUND_DELIVERY Tcode- Sproxy
**********************************************************************
    fill_data( CHANGING ct_raw_struct = ct_raw_struct ct_return_tab = ct_return_tab ).
  ENDMETHOD.


  METHOD get_data_from_db.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KAUSHRIS     | 20.06.2022 | 14480     : FB_11743_SD_[Platform-API    *
*              |            |           extension] - Custom Field Logic*
*              |            | DS4K921704                               *
************************************************************************
* KAUSHRIS     | 20.06.2022 | 12191     : FB_11743_SD_[Platform-API    *
*              |            |           extension] - Custom Field Logic*
*              |            | DS4K924254                               *
************************************************************************
* BIGVATAM     | 18.08.2022 | 12448: T4MTEMP-13064                     *
*              |            |        Adding & filling additional fields*
*              |            | DS4K925374                               *
************************************************************************
* ZHMAIVAD     | 02.11.2022 | 13118 : FB_13118_SD_[Platform] - S4 to WM*
*              |            | DS4K927689                               *
************************************************************************
* ZHMAIVAD     | 02.02.2023 | 15633 : FB_15633_SD_[Build] Mass inventor*
*              |            | DS4K936733                               *
************************************************************************
* GERTSVIK     | 16.03.2023 | 18992     : Feature - Order Service Confi*
*              |            | DS4K947438                               *
************************************************************************
* GERTSVIK     | 06.04.2023 | 19854     : Feature - S4 to WMS Delivery *
*              |            | DS4K949348                               *
************************************************************************
* SHNIPALI     | 18.07.2022 | 23462 : FB_23462_SD_Feature - [Build][PFE]-  S4 to TMS - Del*
*              |            | DS4K958556                               *
************************************************************************
* KASHTULA     | 23.10.2023 | 26143    : Outbound DN Interface - field *
*              |            | DS4K967801                               *
************************************************************************
* CHISLRIM     | 18.11.2023 | 27479    : FB_27479_SD_[FEATURE] -       *
*              |            |             -Delivery API ( Routing statu*
*              |            | DS4K973219                               *
************************************************************************

*    Main Method to fetch all the data for the Extension Fields and also
*    to process and update the Events
*    All data is captured in Global Internal tables, Structures and
*    Fields as and when requred and is being cleared after use
*    in their respective methods and places of use
**********************************************************************
    ASSIGN COMPONENT gc_delivery_document OF STRUCTURE iv_fs_delivery_document TO FIELD-SYMBOL(<ls_delivery_document>).

    IF sy-subrc IS INITIAL.

**********************************************************************
*)-Fetch Originating Document based on the Sales and Distribution Document Number
**********************************************************************
      DATA(lv_delivery_document) = |{ <ls_delivery_document> ALPHA = OUT }|.
      SELECT  vbeln
        FROM ledspd_flow UP TO 1 ROWS
        INTO (@mv_vbeln) "Fetching
        WHERE vbeln_new = @lv_delivery_document.
      ENDSELECT.
      IF sy-subrc IS INITIAL.
*)-Continue the process
      ELSE.
        CLEAR mv_vbeln.
      ENDIF.

**********************************************************************
*)-Fetch SD Document: Delivery Header Data
**********************************************************************
      SELECT SINGLE
        kostk,
        lfart,
        cmgst,
        handle
        FROM zsd_i_delivery_header
        WHERE vbeln = @<ls_delivery_document>
        INTO CORRESPONDING FIELDS OF @ms_likp.

*)-Based on entries present in LIKP table we will use HANDLE (Handle for time segment header)
******************************
*)-to get the Events Note data
******************************
      IF sy-subrc IS INITIAL.
*)-Fetch data for Events Node
        SELECT *
          FROM zsd_i_tevents_out_delivery_int
          WHERE deliverydocument = @<ls_delivery_document> AND
                handlertimeeventsegment IS NOT NULL
          ORDER BY eventversionnumber DESCENDING
          INTO CORRESPONDING FIELDS OF TABLE @mt_events.
        IF sy-subrc IS INITIAL.
          READ TABLE mt_events INDEX 1 ASSIGNING FIELD-SYMBOL(<ls_event>).
          IF sy-subrc IS INITIAL.
            DELETE mt_events WHERE eventversionnumber <> <ls_event>-eventversionnumber.
          ENDIF.
        ENDIF.
      ELSE.
        CLEAR mt_events.
      ENDIF.
**********************************************************************
*)-Fetch Party data
**********************************************************************
      SELECT c~fsh_msopid,
             a~shiptoparty AS kunnr
        FROM i_deliverydocument AS a
        INNER JOIN i_deliverydocumentitem AS b
        ON a~deliverydocument = b~deliverydocument
        INNER JOIN zsd_i_customersalesarea AS c
        ON c~kunnr = a~shiptoparty
        AND c~vkorg = a~salesorganization
        AND c~vtweg = b~distributionchannel
        AND c~spart = b~division
        WHERE a~deliverydocument = @<ls_delivery_document>
        INTO TABLE @mt_party ##TOO_MANY_ITAB_FIELDS.    "#EC CI_PRIVACC
      IF sy-subrc = 0.

**********************************************************************
*)-Party address data
**********************************************************************
        SELECT  a~customer AS kunnr,                    "#EC CI_PRIVACC
           a~telephonenumber2 AS zzmobile_phone,
          b~emailaddress AS zzemail
          FROM i_customer WITH PRIVILEGED ACCESS AS a
          LEFT JOIN i_addressemailaddress WITH PRIVILEGED ACCESS AS b
          ON a~addressid = b~addressid
          FOR ALL ENTRIES IN @mt_party
          WHERE a~customer = @mt_party-kunnr
          AND b~isdefaultemailaddress = @abap_true
          INTO TABLE @DATA(lt_party).              "#EC CI_NO_TRANSFORM

        IF sy-subrc = 0.
          LOOP AT mt_party ASSIGNING FIELD-SYMBOL(<ls_party>).
            <ls_party>-zzmobile_phone =  VALUE #( lt_party[ kunnr = <ls_party>-kunnr ]-zzmobile_phone OPTIONAL ).
            <ls_party>-zzemail =  VALUE #( lt_party[ kunnr = <ls_party>-kunnr ]-zzemail OPTIONAL ).
          ENDLOOP.
        ENDIF.

      ELSE.
        CLEAR mt_party.
      ENDIF.



**********************************************************************
*)-Fetch the data for Prices
**********************************************************************
      SELECT d~conditiontype AS kschl,          "Condition Type
             d~conditioncurrency AS waers,      "Currency
             d~conditioncategory AS kntyp,      "Condition Category
             d~conditionamount AS kwert,        "Amount
             a~actualdeliveryquantity AS lfimg, "Condition Amount A
             c~orderquantity AS kwmeng          "Condition Amount B
        FROM i_deliverydocumentitem AS a
        LEFT OUTER JOIN i_sddocumentmultilevelprocflow WITH PRIVILEGED ACCESS AS b
        ON b~precedingdocument = a~deliverydocument
        AND b~subsequentdocumentitem = a~deliverydocumentitem
        AND b~precedingdocumentcategory = @gc_vbtypl_v
        LEFT OUTER JOIN i_salesdocumentitem AS c
        ON c~salesdocument = b~precedingdocument
        AND c~salesdocumentitem = b~precedingdocumentitem
        LEFT OUTER JOIN i_pricingelement WITH PRIVILEGED ACCESS AS d
        ON d~pricingdocument = c~salesdocumentcondition
        AND d~pricingdocumentitem = c~salesdocumentitem
        WHERE a~deliverydocument = @<ls_delivery_document>
        INTO TABLE @mt_prices.
      IF sy-subrc = 0.
      ELSE.
        CLEAR mt_prices.
      ENDIF.
**********************************************************************
*)-Fetch data for Item Level Fields
**********************************************************************
      SELECT a~material AS matnr,
             a~deliverydocument,
             a~referencesddocument,
             e~purchasingdocumenttype AS bsart
        FROM i_deliverydocumentitem AS a
        JOIN i_purchasingdocument AS e ON a~referencesddocument = e~purchasingdocument
        WHERE a~deliverydocument = @<ls_delivery_document>
        INTO TABLE @DATA(lt_delivery_item).               "#EC CI_SUBRC

      SELECT a~material AS matnr,
             a~deliverydocument,
             a~deliverydocumentitem,
             a~referencesddocument,
             a~productcharacteristic2 AS wrf_charstc2,
             a~productcharacteristic1 AS wrf_charstc1,
             b~netpriceamount AS netpr,
             b~zzfsh_mg_at1,
             c~salesdocument AS vbeln,
             c~salesdocumenttype AS auart,
             d~posnr,
             d~bsark,
             d~ihrez
        FROM i_deliverydocumentitem AS a
        LEFT OUTER JOIN i_salesdocumentitem AS b ON a~referencesddocument = b~salesdocument AND a~referencesddocumentitem = b~salesdocumentitem
        LEFT OUTER JOIN i_salesdocumentbasic AS c ON a~referencesddocument = c~salesdocument
        LEFT OUTER JOIN zsd_i_business_data AS d ON a~referencesddocument = d~vbeln AND a~referencesddocumentitem = d~posnr
        WHERE a~deliverydocument = @<ls_delivery_document>
        INTO TABLE @DATA(lt_delivery_main).               "#EC CI_SUBRC

      LOOP AT lt_delivery_main ASSIGNING FIELD-SYMBOL(<ls_delivery_main>).
        APPEND INITIAL LINE TO mt_delivery_item ASSIGNING FIELD-SYMBOL(<ls_delivery_item>).
        <ls_delivery_item> = CORRESPONDING #( <ls_delivery_main> ).
        IF lt_delivery_item IS NOT INITIAL.
          <ls_delivery_item>-bsart = VALUE #( lt_delivery_item[ deliverydocument    = <ls_delivery_main>-deliverydocument
                                                                referencesddocument = <ls_delivery_main>-referencesddocument ]-bsart OPTIONAL ).
        ENDIF.
      ENDLOOP.
      IF mt_delivery_item IS NOT INITIAL.
        SELECT
          d~vbeln,
          d~bsark,
          d~ihrez
          FROM i_deliverydocumentitem AS a
          JOIN zsd_i_business_data AS d
          ON a~referencesddocument = d~vbeln
          WHERE a~deliverydocument = @<ls_delivery_document>
          INTO TABLE @DATA(lt_delivery).                  "#EC CI_SUBRC
      ENDIF.
      IF lt_delivery IS NOT INITIAL.
        LOOP AT mt_delivery_item ASSIGNING <ls_delivery_item> WHERE bsark IS INITIAL OR ihrez IS INITIAL.
          IF <ls_delivery_item>-bsark IS INITIAL.
            <ls_delivery_item>-bsark = VALUE #( lt_delivery[ vbeln = <ls_delivery_item>-vbeln ]-bsark OPTIONAL ).
          ELSEIF <ls_delivery_item>-ihrez IS INITIAL.
            <ls_delivery_item>-ihrez = VALUE #( lt_delivery[ vbeln = <ls_delivery_item>-vbeln ]-ihrez OPTIONAL ).
          ENDIF.
        ENDLOOP.
      ENDIF.

      "Fetch data for CarrierName with latest shipment
      SELECT
        vttk~tdlnr,
        vttk~tndr_crnm,
        vttp~vbeln,
        vttk~erdat,
        vttk~tdlnr AS carrier_name
        FROM vttp INNER JOIN vttk ON vttp~tknum  = vttk~tknum
        WHERE vttp~vbeln = @<ls_delivery_document>
        ORDER BY vttp~vbeln, vttk~erdat DESCENDING
        INTO TABLE @mt_carrier_name
        UP TO 3 ROWS.
      IF sy-subrc <> 0 .
        CLEAR mt_carrier_name.
      ENDIF.

      "Fetch data for HUID2 and AlternateHUID
      SELECT DISTINCT venum, exidv2, spe_ident_01
        FROM zsd_i_handlingunit_header
        WHERE vpobjkey = @<ls_delivery_document>
        INTO TABLE @mts_exidv2.
      IF sy-subrc <> 0 .
        CLEAR mts_exidv2.
      ENDIF.
    ENDIF.

*)-Fetch data for Item Division
    SELECT precedingdocumentrequirement AS aufer        "#EC CI_NOORDER
      FROM i_deliverydocument
      INNER JOIN i_deliverydocumenttype
      ON i_deliverydocumenttype~deliverydocumenttype = i_deliverydocument~deliverydocumenttype
      WHERE i_deliverydocument~deliverydocument = @<ls_delivery_document>
      INTO @DATA(lv_aufer)
      UP TO 1 ROWS.
    ENDSELECT.

    IF sy-subrc  = 0.
      CASE lv_aufer.
        WHEN 'B'. "Stock Transport Order
          gv_is_sto = abap_true.
          SELECT m~freedefinedproductattribute01 AS fsh_mg_at1,
                 l~referencesddocumentitem AS vgpos,
                 e~purchasingdocumentitem AS ebelp,
                 m~material AS matnr
            FROM i_supdmndmaterialplant AS m
            JOIN i_purchasingdocumentitem AS e
            ON m~material = e~material
            JOIN i_deliverydocumentitem AS l
            ON l~referencesddocument = e~purchasingdocument
            WHERE l~deliverydocument = @<ls_delivery_document>
            INTO TABLE @DATA(lt_division).                "#EC CI_SUBRC
          LOOP AT lt_division ASSIGNING FIELD-SYMBOL(<ls_division1>).
            IF <ls_division1>-vgpos <> <ls_division1>-ebelp.
              CLEAR <ls_division1>.
            ENDIF.
          ENDLOOP.
          DELETE lt_division WHERE fsh_mg_at1 IS INITIAL.

        WHEN 'X'. "Sales Order
          gv_is_sto = abap_false.
          SELECT m~freedefinedproductattribute01 AS fsh_mg_at1,
                 m~material AS matnr                      "#EC CI_SUBRC
            FROM i_supdmndmaterialplant AS m
            JOIN i_salesdocumentitem AS v ON m~material = v~material
            JOIN i_deliverydocumentitem AS l ON l~referencesddocument = v~salesdocument
                                            AND l~referencesddocumentitem = v~salesdocumentitem
            WHERE l~deliverydocument = @<ls_delivery_document>
            INTO CORRESPONDING FIELDS OF TABLE @lt_division ##TOO_MANY_ITAB_FIELDS.
      ENDCASE.

      IF lines( lt_division ) > 0.
        LOOP AT lt_division ASSIGNING FIELD-SYMBOL(<ls_division>).
          TRY.
              mt_delivery_item[ matnr = <ls_division>-matnr ]-zzfsh_mg_at1 = <ls_division>-fsh_mg_at1.
            CATCH cx_sy_itab_line_not_found ##NO_HANDLER.
          ENDTRY.
        ENDLOOP.
      ENDIF.
    ENDIF.

    " Get items' Local size
    IF lt_delivery_main IS NOT INITIAL.
      DATA(lt_item_sizes) = VALUE zsc_tt_delivery_items( FOR ls_wa IN lt_delivery_main
                                                          ( vbeln     = |{ ls_wa-deliverydocument     ALPHA = IN }|
                                                            posnr     = |{ ls_wa-deliverydocumentitem ALPHA = IN }|
                                                            matnr     = ls_wa-matnr
                                                            localsize = '' ) ).

      DATA(lo_local_sizer) = NEW zcl_sc_delivery_local_size_def( ).
      lo_local_sizer->define_local_size(
        EXPORTING
          iv_aufer = lv_aufer
        CHANGING
          ct_items = lt_item_sizes ).

      LOOP AT lt_item_sizes ASSIGNING FIELD-SYMBOL(<ls_sizes>).
        TRY.
            mt_delivery_item[ matnr = <ls_sizes>-matnr ]-zzlocalsize = <ls_sizes>-localsize.
          CATCH cx_sy_itab_line_not_found.
            CONTINUE.
        ENDTRY.
      ENDLOOP.
    ENDIF.

  ENDMETHOD.


  METHOD get_event_text.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* SHNIPALI     | 18.07.2022 | 23462 : FB_23462_SD_Feature - [Build][PFE]-  S4 to TMS - Del*
*              |            | DS4K958556                               *
************************************************************************

    CONSTANTS:
      lc_low    TYPE char1          VALUE 'L',
      lc_id     TYPE thead-tdid     VALUE '0001',
      lc_object TYPE thead-tdobject VALUE 'TSEG'.

    DATA: lt_text_line          TYPE STANDARD TABLE OF tline,
          ls_event_text_key     TYPE gtyp_event_text_key,
          lv_field_length       TYPE i,
          lv_field_shift_length TYPE i,
          lv_container          TYPE string.

    CHECK is_event_text_key-head_hdl   IS NOT INITIAL AND
          is_event_text_key-even       IS NOT INITIAL AND
          is_event_text_key-even_vernu IS NOT INITIAL.

    ls_event_text_key = CORRESPONDING #( is_event_text_key EXCEPT head_hdl ).

    DO 22 TIMES ##NUMBER_OK.
      ls_event_text_key-head_hdl = COND #( LET lv_counter    = sy-index - 1
                                               lv_char       = is_event_text_key-head_hdl+lv_counter(1)
                                               lv_char_upper = to_upper( val = lv_char )
                                           IN
                                            "already upper case
                                             WHEN lv_char = lv_char_upper
                                               THEN |{ ls_event_text_key-head_hdl }{ lv_char }|
                                             ELSE   |{ ls_event_text_key-head_hdl }{ lv_char_upper }{ lc_low }| ).
    ENDDO.

    DESCRIBE FIELD ls_event_text_key-even_vernu LENGTH lv_field_length IN CHARACTER MODE.
    lv_field_shift_length = lv_field_length - strlen( ls_event_text_key-even_vernu ).
    SHIFT ls_event_text_key-even_vernu RIGHT BY lv_field_shift_length PLACES.

    cl_abap_container_utilities=>fill_container_c(
      EXPORTING
        im_value               =  ls_event_text_key                " Data for Filling Container
      IMPORTING
        ex_container           =  lv_container ).

    IF lv_container IS NOT INITIAL.

      CALL FUNCTION 'READ_TEXT'
        EXPORTING
          id       = lc_id
          language = sy-langu
          name     = CONV tdobname( lv_container )
          object   = lc_object
        TABLES
          lines    = lt_text_line
        EXCEPTIONS
          OTHERS   = 1.

      IF sy-subrc = 0.
        LOOP AT lt_text_line ASSIGNING FIELD-SYMBOL(<ls_text_line>).
          rv_text = |{ rv_text } { <ls_text_line>-tdline }|.
        ENDLOOP.
      ELSE.
        CLEAR rv_text.
      ENDIF.

    ENDIF.

  ENDMETHOD.


  METHOD get_instance.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KAUSHRIS     | 20.06.2022 | 14480     : FB_11743_SD_[Platform-API    *
*              |            |           extension] - Custom Field Logic*
*              |            | DS4K921704                               *
************************************************************************
* KAUSHRIS     | 20.06.2022 | 12191     : FB_11743_SD_[Platform-API    *
*              |            |           extension] - Custom Field Logic*
*              |            | DS4K924254                               *
**********************************************************************
    IF go_inst IS NOT BOUND.
      ro_inst = NEW zcl_sc_s4_deliver_out_ext( ).
      go_inst = ro_inst.
    ELSE.
      ro_inst = go_inst.
    ENDIF.
  ENDMETHOD.


  METHOD update_events.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* KAUSHRIS     | 20.06.2022 | 16980     : FB_12191_SD_[Platform-API    *
*              |            |           extension] - DN Events Update  *
*              |            | DS4K924254                               *
************************************************************************
* ZHMAIVAD     | 01.11.2022 | 13118 : FB_13118_SD_[Platform] - S4 to WMS - Outbound Delive*
*              |            | DS4K927689                               *
************************************************************************
* SHNIPALI     | 18.07.2022 | 23462 : FB_23462_SD_Feature - [Build][PFE]-  S4 to TMS - Del*
*              |            | DS4K958556                               *
************************************************************************

    ASSIGN COMPONENT gc_delivery_document  OF STRUCTURE iv_del_doc TO FIELD-SYMBOL(<ls_delivery_doc>).
    IF sy-subrc IS INITIAL AND mt_events IS INITIAL.
      DATA(lo_events_ext) =  zcl_sc_s4_delivery_events_updt=>get_instance(  ).
      DATA lv_vbeln TYPE vbeln.
      lv_vbeln = <ls_delivery_doc>.
      IF lo_events_ext->update_events(  EXPORTING iv_del_doc = lv_vbeln
                                        CHANGING  ct_return = ct_return_tab ) IS NOT INITIAL.

*)-Fetch data for Events Node
          SELECT *
            FROM zsd_i_tevents_out_delivery_int
            INTO CORRESPONDING FIELDS OF TABLE @mt_events
            WHERE deliverydocument = @<ls_delivery_doc> AND
                  handlertimeeventsegment IS NOT NULL
            ORDER BY eventversionnumber DESCENDING.
          IF sy-subrc IS INITIAL.
            READ TABLE mt_events INDEX 1 ASSIGNING FIELD-SYMBOL(<ls_event>).
            IF sy-subrc IS INITIAL.
              DELETE mt_events WHERE eventversionnumber <> <ls_event>-eventversionnumber.
            ENDIF.
          ENDIF.
      ELSE.
        CLEAR mt_events.
      ENDIF.
    ENDIF.
  ENDMETHOD.


METHOD fill_header_event.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
*----------------------------------------------------------------------*
* CHISLRIM     | 14.02.2024 | 27479    : FB_27479_SD_[FEATURE] -       *
*              |            |             -Delivery API ( Routing statu*
*              |            | DS4K973219                               *
*----------------------------------------------------------------------*

  IF lines( mt_events[] ) <> 0.
    cs_delivery_data-zzdelivery_event = gc_event_changed.
  ELSE.
    cs_delivery_data-zzdelivery_event = gc_event_created.
  ENDIF.

ENDMETHOD.
ENDCLASS.