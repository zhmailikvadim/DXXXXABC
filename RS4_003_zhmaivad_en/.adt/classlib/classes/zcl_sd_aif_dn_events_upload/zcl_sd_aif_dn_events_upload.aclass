class ZCL_SD_AIF_DN_EVENTS_UPLOAD definition
  public
  final
  create public .

public section.

  data GV_MESSAGE_CLASS type NAME_FELD value 'ZSD_AIF_DN_EVENT' ##NO_TEXT.

  class-methods CONVERT_DATE
    importing
      !IV_DAY type STRING
    returning
      value(RV_DATE) type DATUM .
  class-methods CONVERT_TIME
    importing
      !IV_TIME type STRING
    returning
      value(RV_TIME) type TIMS .
  class-methods DATE_TIME_CONVERT_TIMEZONE
    importing
      !IV_TIMEZONE_FROM type TIMEZONE
      !IV_TIMEZONE_TO type TIMEZONE
    changing
      !CV_DATE type DATUM
      !CV_TIME type UZEIT .
  class-methods DATE_TIME_CONVERT_LINE
    changing
      !CS_DN_EVENTS_LINE type ZSD_S_DN_EVENTS_INT_PROC .
  class-methods DATE_TIME_CONVERT_LINE_API
    changing
      !CS_DN_EVENTS_LINE type ZSD_S_UPD_MLSTNS_BULK_RQ_SAP .
  class-methods GET_DELIVERY_TIMEZONE
    importing
      !IV_DELIVERY_NUMBER type VBELN
    returning
      value(RV_TIMEZONE) type TIMEZONE .
  methods GET_RAW_STRUCT_TABLE_ADAPTER
    importing
      !IV_DATA_BINARY type XSTRING
      !IV_DATA_STRING type STRING
    changing
      !CO_RAW_STRUCT type ref to DATA
    returning
      value(RT_BAPIRET2) type BAPIRET2_T .
  PROTECTED SECTION.
  PRIVATE SECTION.

    DATA gv_header TYPE name_feld VALUE 'HEADER' ##NO_TEXT.
    DATA gv_delivery_note_number TYPE name_feld VALUE 'DELIVERY_NOTE_NUMBER' ##NO_TEXT.
    DATA gv_event TYPE name_feld VALUE 'EVENT' ##NO_TEXT.
    DATA gv_begin_date TYPE name_feld VALUE 'BEGIN_DATE' ##NO_TEXT.
    DATA gv_begin_time TYPE name_feld VALUE 'BEGIN_TIME' ##NO_TEXT.
    DATA gv_end_date TYPE name_feld VALUE 'END_DATE' ##NO_TEXT.
    DATA gv_end_time TYPE name_feld VALUE 'END_TIME' ##NO_TEXT.
    DATA gv_actual_begin_date TYPE name_feld VALUE 'ACTUAL_BEGIN_DATE' ##NO_TEXT.
    DATA gv_actual_begin_time TYPE name_feld VALUE 'ACTUAL_BEGIN_TIME' ##NO_TEXT.
    DATA gv_actual_end_date TYPE name_feld VALUE 'ACTUAL_END_DATE' ##NO_TEXT.
    DATA gv_actual_end_time TYPE name_feld VALUE 'ACTUAL_END_TIME' ##NO_TEXT.
    DATA gv_actual_timezone TYPE name_feld VALUE 'ACTUAL_TIMEZONE' ##NO_TEXT.
    DATA gv_reason TYPE name_feld VALUE 'REASON' ##NO_TEXT.
    DATA gv_handling_unit TYPE name_feld VALUE 'HANDLING_UNIT' ##NO_TEXT.
ENDCLASS.



CLASS ZCL_SD_AIF_DN_EVENTS_UPLOAD IMPLEMENTATION.


  METHOD convert_date.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* SRIKAVEN     | 26.04.2023 | 20359     : Feature - [Build]DN event up *
*              |            | DS4K950293                               *
*----------------------------------------------------------------------*
    IF iv_day IS NOT INITIAL.
      DATA(lv_dd) = iv_day(2).
      DATA(lv_mm) = iv_day+3(2).
      DATA(lv_yy) = iv_day+6(4).
      DATA(lv_date) = |{ lv_yy }{ lv_mm }{ lv_dd }|.
      rv_date = lv_date.
    ENDIF.
  ENDMETHOD.


  METHOD convert_time.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* SRIKAVEN     | 26.04.2023 | 20359     : Feature - [Build]DN event up *
*              |            | DS4K950293                               *
*----------------------------------------------------------------------*
    IF iv_time IS NOT INITIAL.
      DATA(lv_hh) = iv_time(2).
      DATA(lv_mm) = iv_time+3(2).
      DATA(lv_ss) = '00'.

      DATA(lv_time) = |{ lv_hh }{ lv_mm }{ lv_ss }|.
      rv_time =  lv_time.
    ENDIF.
  ENDMETHOD.


  METHOD date_time_convert_line.
    " -----------------------------------------------------------------------
    "  R E V I S I O N   H I S T O R Y                                     -
    " -----------------------------------------------------------------------
    " AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              -
    "              |            | TRANSPORT REQUESTS                       -
    " -----------------------------------------------------------------------
    " ZHMAIVAD     | 29.01.2024 | 26115     : Feature - [Defect] - Deliver -
    "              |            | DS4K967671                               -
    " -----------------------------------------------------------------------
    " ZHMAIVAD     | 01.02.2024 | 28610     : Feature - [Defect] - Deliver -
    "              |            | DS4K978196                              -
    " -----------------------------------------------------------------------
    FINAL(lv_shipping_point_timezone) = zcl_sd_aif_dn_events_upload=>get_delivery_timezone(
                                            iv_delivery_number = cs_dn_events_line-delivery_note ).
    zcl_sd_aif_dn_events_upload=>date_time_convert_timezone(
      EXPORTING iv_timezone_from = cs_dn_events_line-actual_time_zone
                iv_timezone_to   = lv_shipping_point_timezone
      CHANGING  cv_date          = cs_dn_events_line-begin_actual_date
                cv_time          = cs_dn_events_line-begin_actual_time ).
    zcl_sd_aif_dn_events_upload=>date_time_convert_timezone(
      EXPORTING iv_timezone_from = cs_dn_events_line-actual_time_zone
                iv_timezone_to   = lv_shipping_point_timezone
      CHANGING  cv_date          = cs_dn_events_line-end_actual_date
                cv_time          = cs_dn_events_line-end_actual_time ).
    zcl_sd_aif_dn_events_upload=>date_time_convert_timezone(
      EXPORTING iv_timezone_from = cs_dn_events_line-plan_time_zone
                iv_timezone_to   = lv_shipping_point_timezone
      CHANGING  cv_date          = cs_dn_events_line-begin_plan_date
                cv_time          = cs_dn_events_line-begin_plan_time ).
    zcl_sd_aif_dn_events_upload=>date_time_convert_timezone(
      EXPORTING iv_timezone_from = cs_dn_events_line-plan_time_zone
                iv_timezone_to   = lv_shipping_point_timezone
      CHANGING  cv_date          = cs_dn_events_line-end_plan_date
                cv_time          = cs_dn_events_line-end_plan_time ).

    cs_dn_events_line-plan_time_zone   = lv_shipping_point_timezone.
    cs_dn_events_line-actual_time_zone = cs_dn_events_line-plan_time_zone.
  ENDMETHOD.


  METHOD date_time_convert_line_api.
    " -----------------------------------------------------------------------
    "  R E V I S I O N   H I S T O R Y                                     -
    " -----------------------------------------------------------------------
    " AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              -
    "              |            | TRANSPORT REQUESTS                       -
    " -----------------------------------------------------------------------
    " ZHMAIVAD     | 29.01.2024 | 26115     : Feature - [Defect] - Deliver -
    "              |            | DS4K967671                               -
    " -----------------------------------------------------------------------
    " ZHMAIVAD     | 01.02.2024 | 28610     : Feature - [Defect] - Deliver -
    "              |            | DS4K978196                              -
    " -----------------------------------------------------------------------
    LOOP AT cs_dn_events_line-update_milestones_request ASSIGNING FIELD-SYMBOL(<ls_dn_events>).
      FINAL(lv_shipping_point_timezone) = zcl_sd_aif_dn_events_upload=>get_delivery_timezone(
                                              iv_delivery_number = <ls_dn_events>-delivery_note ).
      zcl_sd_aif_dn_events_upload=>date_time_convert_timezone(
        EXPORTING iv_timezone_from = <ls_dn_events>-actual_time_zone
                  iv_timezone_to   = lv_shipping_point_timezone
        CHANGING  cv_date          = <ls_dn_events>-begin_actual_date
                  cv_time          = <ls_dn_events>-begin_actual_time ).
      zcl_sd_aif_dn_events_upload=>date_time_convert_timezone(
        EXPORTING iv_timezone_from = <ls_dn_events>-actual_time_zone
                  iv_timezone_to   = lv_shipping_point_timezone
        CHANGING  cv_date          = <ls_dn_events>-end_actual_date
                  cv_time          = <ls_dn_events>-end_actual_time ).
      zcl_sd_aif_dn_events_upload=>date_time_convert_timezone(
        EXPORTING iv_timezone_from = <ls_dn_events>-actual_time_zone
                  iv_timezone_to   = lv_shipping_point_timezone
        CHANGING  cv_date          = <ls_dn_events>-begin_plan_date
                  cv_time          = <ls_dn_events>-begin_plan_time ).
      zcl_sd_aif_dn_events_upload=>date_time_convert_timezone(
        EXPORTING iv_timezone_from = <ls_dn_events>-actual_time_zone
                  iv_timezone_to   = lv_shipping_point_timezone
        CHANGING  cv_date          = <ls_dn_events>-end_plan_date
                  cv_time          = <ls_dn_events>-end_plan_time ).
      <ls_dn_events>-actual_time_zone = lv_shipping_point_timezone.
    ENDLOOP.
  ENDMETHOD.


  METHOD date_time_convert_timezone.
    " -----------------------------------------------------------------------
    "  R E V I S I O N   H I S T O R Y                                     -
    " -----------------------------------------------------------------------
    " AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              -
    "              |            | TRANSPORT REQUESTS                       -
    " -----------------------------------------------------------------------
    " ZHMAIVAD     | 29.01.2024 | 26115     : Feature - [Defect] - Deliver -
    "              |            | DS4K967671                               -
    " ----------------------------------------------------------------------
    " ZHMAIVAD     | 01.02.2024 | 28610     : Feature - [Defect] - Deliver -
    "              |            | DS4K978196                              -
    " -----------------------------------------------------------------------

    CONVERT DATE cv_date
            TIME            cv_time
            INTO TIME STAMP FINAL(lv_itimestamp)
            TIME ZONE       iv_timezone_from.
    CONVERT TIME STAMP lv_itimestamp
            TIME ZONE iv_timezone_to
            INTO DATE cv_date
            TIME      cv_time.
  ENDMETHOD.


  METHOD get_delivery_timezone.
    " -----------------------------------------------------------------------
    "  R E V I S I O N   H I S T O R Y                                     -
    " -----------------------------------------------------------------------
    " AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              -
    "              |            | TRANSPORT REQUESTS                       -
    " -----------------------------------------------------------------------
    " ZHMAIVAD     | 29.01.2024 | 26115     : Feature - [Defect] - Deliver -
    "              |            | DS4K967671                               -
    " -----------------------------------------------------------------------
    " ZHMAIVAD     | 01.02.2024 | 28610     : Feature - [Defect] - Deliver -
    "              |            | DS4K978196                              -
    " -----------------------------------------------------------------------

    SELECT SINGLE addresstimezone FROM zsd_i_shipping_point_time_zone AS delivery
      INTO @rv_timezone
      WHERE deliverydocument = @iv_delivery_number.  "#EC CI_SEL_NESTED
    IF sy-subrc <> 0.
      rv_timezone = sy-zonlo.
      IF sy-zonlo IS INITIAL.
        CALL FUNCTION 'GET_SYSTEM_TIMEZONE'
          IMPORTING
            timezone = rv_timezone.
      ENDIF.
    ENDIF.
  ENDMETHOD.


  METHOD get_raw_struct_table_adapter.
************************************************************************
*  R E V I S I O N   H I S T O R Y                                     *
************************************************************************
* AUTHOR       | DATE       | CHANGE NUMBER & DESCRIPTION              *
*              |            | TRANSPORT REQUESTS                       *
************************************************************************
* SRIKAVEN     | 26.04.2023 | 20359     : Feature - [Build]DN event up *
*              |            | DS4K950293                               *
*----------------------------------------------------------------------*

    DATA:
      lt_string  TYPE TABLE OF string,
      lt_string2 TYPE TABLE OF string,
      lv_count   TYPE i.

    FIELD-SYMBOLS:
      <lt_raw_substructure> TYPE STANDARD TABLE.
    co_raw_struct = NEW zsd_s_dn_events( ).
    ASSIGN co_raw_struct->* TO FIELD-SYMBOL(<ls_raw_table>).
    ASSIGN COMPONENT gv_header OF STRUCTURE <ls_raw_table> TO <lt_raw_substructure>.
    IF sy-subrc IS INITIAL.
      SPLIT iv_data_string AT cl_abap_char_utilities=>newline INTO TABLE lt_string.
      DELETE lt_string INDEX 1.
      LOOP AT lt_string ASSIGNING FIELD-SYMBOL(<lv_string>).
        CLEAR :lt_string2,lv_count.
        SPLIT <lv_string> AT cl_abap_char_utilities=>horizontal_tab INTO TABLE lt_string2.

        LOOP AT lt_string2 ASSIGNING FIELD-SYMBOL(<lv_string2>). "#EC CI_NESTED
          lv_count  = lv_count + 1.
          IF <lv_string2> = cl_abap_char_utilities=>cr_lf(1)  OR <lv_string2> = cl_abap_char_utilities=>cr_lf  OR <lv_string2> IS INITIAL."cl_abap_char_utilities=>newline'.
            CONTINUE.
          ENDIF.

          CASE lv_count.
*
            WHEN 1.
              APPEND INITIAL LINE TO <lt_raw_substructure> ASSIGNING FIELD-SYMBOL(<ls_raw_substructure_line>).
              ASSIGN COMPONENT gv_delivery_note_number OF STRUCTURE <ls_raw_substructure_line> TO FIELD-SYMBOL(<ls_delivery>).
              IF sy-subrc IS INITIAL AND <lv_string2> IS NOT INITIAL.
                REPLACE ALL OCCURRENCES OF cl_abap_char_utilities=>cr_lf(1) IN <lv_string2> WITH ''.
                <ls_delivery> = <lv_string2>.
              ENDIF.
            WHEN 2.
              ASSIGN COMPONENT gv_event OF STRUCTURE <ls_raw_substructure_line> TO FIELD-SYMBOL(<ls_event>).
              IF sy-subrc IS INITIAL AND <lv_string2> IS NOT INITIAL.
                REPLACE ALL OCCURRENCES OF cl_abap_char_utilities=>cr_lf(1) IN <lv_string2> WITH ''.
                <ls_event> = <lv_string2>.
              ENDIF.
            WHEN 3 .
              ASSIGN COMPONENT gv_begin_date OF STRUCTURE <ls_raw_substructure_line> TO FIELD-SYMBOL(<ls_begin_date>).
              IF sy-subrc IS INITIAL AND <lv_string2> IS NOT INITIAL.
                REPLACE ALL OCCURRENCES OF cl_abap_char_utilities=>cr_lf(1) IN <lv_string2> WITH ''.
                <ls_begin_date> = convert_date( <lv_string2> ).
              ENDIF.
            WHEN 4.
              ASSIGN COMPONENT gv_begin_time OF STRUCTURE <ls_raw_substructure_line> TO FIELD-SYMBOL(<ls_begin_time>).
              IF sy-subrc IS INITIAL AND <lv_string2> IS NOT INITIAL.
                REPLACE ALL OCCURRENCES OF cl_abap_char_utilities=>cr_lf(1) IN <lv_string2> WITH ''.
                <ls_begin_time> = convert_time( <lv_string2>  ).
              ENDIF.
            WHEN 5.
              ASSIGN COMPONENT gv_end_date OF STRUCTURE <ls_raw_substructure_line> TO FIELD-SYMBOL(<ls_end_date>).
              IF sy-subrc IS INITIAL AND <lv_string2>  IS NOT INITIAL.
                REPLACE ALL OCCURRENCES OF cl_abap_char_utilities=>cr_lf(1) IN <lv_string2> WITH ''.
                <ls_end_date> = convert_date( <lv_string2>  ).
              ENDIF.

            WHEN 6 .

              ASSIGN COMPONENT gv_end_time OF STRUCTURE <ls_raw_substructure_line> TO FIELD-SYMBOL(<ls_end_time>).
              IF sy-subrc IS INITIAL AND <lv_string2>  IS NOT INITIAL.
                REPLACE ALL OCCURRENCES OF cl_abap_char_utilities=>cr_lf(1) IN <lv_string2> WITH ''.
                <ls_end_time> = convert_time( <lv_string2>  ).
              ENDIF.
            WHEN 7.
              ASSIGN COMPONENT gv_actual_begin_date OF STRUCTURE <ls_raw_substructure_line> TO FIELD-SYMBOL(<ls_actual_begin_date>).
              IF sy-subrc IS INITIAL AND <lv_string2> IS NOT INITIAL.
                REPLACE ALL OCCURRENCES OF cl_abap_char_utilities=>cr_lf(1) IN <lv_string2> WITH ''.
                <ls_actual_begin_date> = convert_date( <lv_string2>  ).
              ENDIF.

            WHEN 8.
              ASSIGN COMPONENT gv_actual_begin_time OF STRUCTURE <ls_raw_substructure_line> TO FIELD-SYMBOL(<ls_actual_begin_time>).
              IF sy-subrc IS INITIAL AND <lv_string2>  IS NOT INITIAL.
                REPLACE ALL OCCURRENCES OF cl_abap_char_utilities=>cr_lf(1) IN <lv_string2> WITH ''.
                <ls_actual_begin_time> = convert_time( <lv_string2>  ).
              ENDIF.
            WHEN 9.
              ASSIGN COMPONENT gv_actual_end_date OF STRUCTURE <ls_raw_substructure_line> TO FIELD-SYMBOL(<ls_actual_end_date>).
              IF sy-subrc IS INITIAL AND <lv_string2>  IS NOT INITIAL.
                REPLACE ALL OCCURRENCES OF cl_abap_char_utilities=>cr_lf(1) IN <lv_string2> WITH ''.
                <ls_actual_end_date> = convert_date( <lv_string2>  ).
              ENDIF.

            WHEN 10 .
              ASSIGN COMPONENT gv_actual_end_time OF STRUCTURE <ls_raw_substructure_line> TO FIELD-SYMBOL(<ls_actual_end_time>).
              IF sy-subrc IS INITIAL AND <lv_string2> IS NOT INITIAL.
                REPLACE ALL OCCURRENCES OF cl_abap_char_utilities=>cr_lf(1) IN <lv_string2> WITH ''.
                <ls_actual_end_time> = convert_time( <lv_string2>  ).
              ENDIF.
              ##NUMBER_OK
            WHEN 11.
              ASSIGN COMPONENT gv_actual_timezone OF STRUCTURE <ls_raw_substructure_line> TO FIELD-SYMBOL(<ls_timezone>).
              IF sy-subrc IS INITIAL AND <lv_string2>  IS NOT INITIAL.
                REPLACE ALL OCCURRENCES OF cl_abap_char_utilities=>cr_lf(1) IN <lv_string2> WITH ''.
                <ls_timezone> = <lv_string2> .
              ENDIF.
              ##NUMBER_OK
            WHEN 12.
              ASSIGN COMPONENT gv_reason OF STRUCTURE <ls_raw_substructure_line> TO FIELD-SYMBOL(<ls_reason>).
              IF sy-subrc IS INITIAL AND <lv_string2> IS NOT INITIAL.
                REPLACE ALL OCCURRENCES OF cl_abap_char_utilities=>cr_lf(1) IN <lv_string2> WITH ''.
                <ls_reason> = <lv_string2>.
              ENDIF.
              ##NUMBER_OK
            WHEN 13 .
              ASSIGN COMPONENT gv_handling_unit OF STRUCTURE <ls_raw_substructure_line> TO FIELD-SYMBOL(<ls_handle>).
              IF sy-subrc IS INITIAL AND <lv_string2> IS NOT INITIAL.
                REPLACE ALL OCCURRENCES OF cl_abap_char_utilities=>cr_lf(1) IN <lv_string2> WITH ''.
                <ls_handle> = <lv_string2>.
              ENDIF.
          ENDCASE.
        ENDLOOP.
      ENDLOOP.
    ENDIF.
  ENDMETHOD.
ENDCLASS.