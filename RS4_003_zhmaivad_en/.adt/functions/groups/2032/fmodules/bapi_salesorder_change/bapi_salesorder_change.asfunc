function bapi_salesorder_change
  importing
    value(salesdocument) like bapivbeln-vbeln
    value(order_header_in) like bapisdh1 optional
    value(order_header_inx) like bapisdh1x
    value(simulation) like bapiflag-bapiflag optional
    value(behave_when_error) like bapiflag-bapiflag default space
    value(int_number_assignment) like bapiflag-bapiflag default space
    value(logic_switch) like bapisdls optional
    value(no_status_buf_init) like bapiflag-bapiflag default space
  tables
    return like bapiret2
    order_item_in like bapisditm optional
    order_item_inx like bapisditmx optional
    partners like bapiparnr optional
    partnerchanges like bapiparnrc optional
    partneraddresses like bapiaddr1 optional
    order_cfgs_ref like bapicucfg optional
    order_cfgs_inst like bapicuins optional
    order_cfgs_part_of like bapicuprt optional
    order_cfgs_value like bapicuval optional
    order_cfgs_blob like bapicublb optional
    order_cfgs_vk like bapicuvk optional
    order_cfgs_refinst like bapicuref optional
    schedule_lines like bapischdl optional
    schedule_linesx like bapischdlx optional
    order_text like bapisdtext optional
    order_keys like bapisdkey optional
    conditions_in like bapicond optional
    conditions_inx like bapicondx optional
    extensionin like bapiparex optional
    extensionex like bapiparex optional.





* generate data record
fbgenmac 'BAPI_SALESORDER_CHANGE'.
* FLE MATNR BAPI Changes
include FLEMATNRIN2.
* End FLE MATNR BAPI Changes

* Begin FLE Segmentation BAPI changes
perform sfle_sgt_conversion
tables
  order_item_in
  order_item_inx
 using ' '
 changing return.
* END FLE Segmentation BAPI changes

ENHANCEMENT-POINT BAPI_SALESORDER_CHANGE_G8 SPOTS ES_SAPL2032 STATIC.

ENHANCEMENT-POINT BAPI_SALESORDER_CHANGE_G6 SPOTS ES_SAPL2032.

DATA: BEGIN OF DA_ORDER_HEADER_IN.
            INCLUDE STRUCTURE BAPISDHD1.
DATA: END   OF DA_ORDER_HEADER_IN.
DATA: BEGIN OF DA_ORDER_HEADER_INX.
            INCLUDE STRUCTURE BAPISDHD1X.
DATA: END   OF DA_ORDER_HEADER_INX.

DATA: BEGIN OF DA_ORDER_ITEM_IN OCCURS 10.
            INCLUDE STRUCTURE BAPISDITM.
DATA: END   OF DA_ORDER_ITEM_IN.
DATA: BEGIN OF DA_ORDER_ITEM_INX OCCURS 10.
            INCLUDE STRUCTURE BAPISDITMX.
DATA: END   OF DA_ORDER_ITEM_INX.

REFRESH: DA_ORDER_ITEM_IN,
         DA_ORDER_ITEM_INX,
         RETURN.
CLEAR  : DA_ORDER_HEADER_IN,
         DA_ORDER_HEADER_INX,
         DA_ORDER_ITEM_IN,
         DA_ORDER_ITEM_INX,
         RETURN.

* 00. BAPIs run without dialog, set the flag
  CALL FUNCTION 'DIALOG_SET_NO_DIALOG'.

ENHANCEMENT-SECTION     BAPI_SALES_ORDER_CHANGE_02 SPOTS ES_SAPL2032.

"{ Begin ENHO /NFM/SD_BAPI_SALES_ORDER_01 IS-MP-NF /NFM/SD }
* /NFM/ processing - C5007732
  call function '/NFM/CA_BAPI_TRANSFER_DOCITM'
       exporting
            im_doc_type_nfm    = 'A'
            im_documentin      = salesdocument
            im_simulation      = simulation
       tables
            t_nfmetallitms     = nfmetallitms
            t_return           = return.
* check if error occurred
  loop at return transporting no fields
                    where type = 'E' or
                          type = 'A'.
    exit.
  endloop.
  if sy-subrc <> 0.
"{ End ENHO /NFM/SD_BAPI_SALES_ORDER_01 IS-MP-NF /NFM/SD }

* 1. Convert to BAPI structure head
   MOVE-CORRESPONDING ORDER_HEADER_IN  TO DA_ORDER_HEADER_IN.
   MOVE-CORRESPONDING ORDER_HEADER_INX TO DA_ORDER_HEADER_INX.
* 2. Convert to BAPI structure item
   LOOP AT ORDER_ITEM_IN.
        MOVE-CORRESPONDING ORDER_ITEM_IN TO DA_ORDER_ITEM_IN.
        APPEND DA_ORDER_ITEM_IN.
   ENDLOOP.
   LOOP AT ORDER_ITEM_INX.
        MOVE-CORRESPONDING ORDER_ITEM_INX TO DA_ORDER_ITEM_INX.
        APPEND DA_ORDER_ITEM_INX.
   ENDLOOP.

* 2. CALL the FB
   CALL FUNCTION 'SD_SALESDOCUMENT_CHANGE'
        EXPORTING
           SALESDOCUMENT         = SALESDOCUMENT
           ORDER_HEADER_IN       = DA_ORDER_HEADER_IN
           ORDER_HEADER_INX      = DA_ORDER_HEADER_INX
           SIMULATION            = SIMULATION
           BEHAVE_WHEN_ERROR     = BEHAVE_WHEN_ERROR
           INT_NUMBER_ASSIGNMENT = INT_NUMBER_ASSIGNMENT
           logic_switch          = logic_switch
           BUSINESS_OBJECT       = 'BUS2032'
           CALL_FROM_BAPI        = 'X'
           no_status_buf_init    = no_status_buf_init
        TABLES
           RETURN               = RETURN
           ITEM_IN              = DA_ORDER_ITEM_IN
           ITEM_INX             = DA_ORDER_ITEM_INX
           SCHEDULE_IN          = SCHEDULE_LINES
           SCHEDULE_INX         = SCHEDULE_LINESX
           partners             = partners
           partnerchanges       = partnerchanges
           partneraddresses     = partneraddresses
           CONDITIONS_IN        = CONDITIONS_IN
           CONDITIONS_INX       = CONDITIONS_INX
           SALES_CFGS_REF       = ORDER_CFGS_REF
           SALES_CFGS_INST      = ORDER_CFGS_INST
           SALES_CFGS_PART_OF   = ORDER_CFGS_PART_OF
           SALES_CFGS_VALUE     = ORDER_CFGS_VALUE
           SALES_CFGS_BLOB      = ORDER_CFGS_BLOB
           sales_cfgs_vk        = order_cfgs_vk
           sales_cfgs_refinst   = order_cfgs_refinst
           SALES_TEXT           = ORDER_TEXT
           SALES_KEYS           = ORDER_KEYS
           EXTENSIONIN          = EXTENSIONIN
           EXTENSIONEX          = EXTENSIONEX.
"{ Begin ENHO /NFM/SD_BAPI_SALES_ORDER_01 IS-MP-NF /NFM/SD }
* /NFM/ processing - C5007732
* /NFM/ processing - C5007732
    call function '/NFM/CA_BAPI_DOCITM_GET'
         tables
              t_nfmetallitms     = nfmetallitms.
  endif.                             "sy-subrc <> 0.
"{ End ENHO /NFM/SD_BAPI_SALES_ORDER_01 IS-MP-NF /NFM/SD }
END-ENHANCEMENT-SECTION.

* reset / initialize the dialogflag

  CALL FUNCTION 'DIALOG_SET_WITH_DIALOG'.

ENHANCEMENT-POINT BAPI_SALESORDER_CHANGE_G7 SPOTS ES_SAPL2032.
*FLE MATNR BAPI Changes
include FLEMATNROUT2.
* End FLE MATNR BAPI Changes

* Begin FLE Segmentation BAPI changes
perform sfle_sgt_conversion
tables
  order_item_in
  order_item_inx
 using 'X'
 changing return.
* END FLE Segmentation BAPI changes

ENDFUNCTION.