FUNCTION TSEG_READ_INLINEFIELDS
  IMPORTING
    VALUE(IF_OBJECT) TYPE TSEGOBJHDR
    IS_OBJECT_WA TYPE ANY ##ADT_PARAMETER_UNTYPED
    VALUE(IF_CALLBACK_PROG) TYPE SYREPID
  EXCEPTIONS
    FATAL_ERROR.



DATA:
  LF_APPHD           TYPE  TSEGGUID,
  LF_APPTS           TYPE  TSEGFLDTTS,
  LF_APPTP           TYPE  TSEGTEMPLA,
  LX_HEADER          TYPE  TSEG_HEADERDATAWA,
  LF_HEADER_LINES    TYPE  I,
  LS_VTSEG_RANGE     TYPE  TSEG_HEADER_SELWA,
  LX_TEMPLATE        TYPE  TSEG_TEMPLATECUSTWA,
  LS_OBJECT          TYPE  TSEG_OBJECTWA,
  LS_EVENDATA        TYPE  TSEG_EVENDATAWA,
  LF_SUBRC           TYPE I.
FIELD-SYMBOLS:
  <EVTYCUSTWA>       TYPE TSEG_EVTYCUSTWA,
  <TPLECUSTWA>       TYPE TSEG_TPLECUSTWA,
  <HEADER>           TYPE TSEG_HEADERDATAWA,
  <TEMPLATE>         TYPE TSEG_TEMPLATECUSTWA,
  <LOCADATA>         TYPE TSEG_LOCADATAWA.

* read object
  IF IF_OBJECT IS INITIAL.
*   RAISE OBJECT_NOT_FOUND.
    RAISE FATAL_ERROR.
  ELSEIF LS_OBJECT-OBJE <> IF_OBJECT.
    PERFORM READ_OBJECT
        USING    IF_OBJECT
        CHANGING LS_OBJECT.
  ENDIF.

* --> header
  PERFORM READ_FIELD_DYNAMIC
      USING    LS_OBJECT-TABL_APP
               LS_OBJECT-FIEL_APPHD
               IS_OBJECT_WA
      CHANGING LF_APPHD.
  IF LF_APPHD IS INITIAL.
    RAISE FATAL_ERROR.
  ELSE.
*   read header
    READ TABLE GT_HEADER ASSIGNING <HEADER>
        WITH TABLE KEY
            HEAD_HDL  = LF_APPHD.
    IF NOT SY-SUBRC IS INITIAL.
      RAISE FATAL_ERROR.
    ENDIF.
  ENDIF.


* --> template
* PERFORM read_field_dynamic
*     USING    ls_object-tabl_app
*              ls_object-fiel_apptp
*              is_object_wa
*     CHANGING lf_apptp.
* IF lf_apptp IS INITIAL.
*   RAISE fatal_error.
* ELSE.
*   read template
    READ TABLE GT_TEMPLATE ASSIGNING <TEMPLATE>
        WITH TABLE KEY
*           tepl  = lf_apptp.
            TEPL  = <HEADER>-HEAD_TPL.
    IF NOT SY-SUBRC IS INITIAL.
      RAISE FATAL_ERROR.
    ENDIF.
* ENDIF.

PERFORM READ_INLINE_FIELDS
            USING
               <TEMPLATE>
               LS_OBJECT-TABL_APP
               IS_OBJECT_WA
               IF_CALLBACK_PROG
            CHANGING
               <HEADER>.

* temp------------------------------------------------------------------
* loca / EVEN_CNT / LOCA_ZON
LOOP AT <HEADER>-LOCA  ASSIGNING <LOCADATA> WHERE LOCA_ZON IS INITIAL.
  PERFORM CALLB_LOCA
  USING     IF_CALLBACK_PROG
            <LOCADATA>-LOCA
            LS_OBJECT-TABL_APP
            IS_OBJECT_WA
  CHANGING  <LOCADATA>-LOCA_ZON.
  MODIFY <HEADER>-LOCA FROM <LOCADATA>.
ENDLOOP.

* temp------------------------------------------------------------------
ENDFUNCTION.