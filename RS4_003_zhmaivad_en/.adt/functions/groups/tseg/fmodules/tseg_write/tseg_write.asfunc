FUNCTION tseg_write
  IMPORTING
    VALUE(if_object) TYPE tsegobjhdr
    is_object_wa TYPE any ##ADT_PARAMETER_UNTYPED
    VALUE(if_update_task) TYPE tsegflupdt DEFAULT 'X'
    if_handle TYPE tsegguid DEFAULT space
  EXPORTING
    VALUE(ef_update) TYPE tsegflupdt
    VALUE(ef_delete) TYPE tsegflgmod
  EXCEPTIONS
    fatal_error
    no_events.



FIELD-SYMBOLS:
  <HEADER>    TYPE TSEG_HEADERDATAWA,
  <EVENDATA>  TYPE TSEG_EVENDATAWA,
  <EVVTRANGE> TYPE TSEG_EVVTRANGEWA,
  <EVVNRANGE> TYPE TSEG_EVVNRANGEWA,
  <TEXTDATA>  TYPE TSEG_TEXTDATAWA.
DATA:
  LS_TIMEFR   TYPE TSEG_TIMEDATAWA,
  LS_TIMETO   TYPE TSEG_TIMEDATAWA,
  LS_LOCAFR   TYPE TSEG_LOCADATAWA,
  LS_LOCATO   TYPE TSEG_LOCADATAWA.

DATA:
* tsegh
  LS_TSEGH    TYPE TSEG_HEADWRITEWA,
  LT_TSEGH    TYPE TSEG_HEADWRITETAB,
* tsege
  LS_TSEGE    TYPE TSEG_EVENWRITEWA,
  LT_TSEGE    TYPE TSEG_EVENWRITETAB.
DATA:                                                        "P9CK020019
* conversion structure for handle                            "P9CK020019
  LS_HEAD_HDL              TYPE TSEG_HEAD_HDL22,             "P9CK020019
  LF_TDNAME                TYPE TDOBNAME,                    "P9CK020019
  LS_TDNAME_TSEG           TYPE TSEG_TDNAME.                 "P9CK020019

DATA: LV_NOT_ALL_DELETED   TYPE c.                            "n_2270051

* >>> START of insertion UNICODE enabling
FIELD-SYMBOLS:
  <fs_hdl_s>               TYPE TSEG_HEAD_HDL22.
* <<< END of insertion UNICODE enabling


* read header
LOOP AT GT_HEADER ASSIGNING <HEADER>.
* v_n_670573
* check if it belongs to the object to be processed
  IF NOT if_handle IS INITIAL.
    CHECK <header>-head_hdl = if_handle.
  ENDIF.
* ^_n_670573
  CLEAR LS_TSEGH.
  MOVE-CORRESPONDING <HEADER> TO LS_TSEGH.
* reset flags for texts and application data                 "P9CK020019
* ... and set them later again if there is still data        "P9CK020019
  clear ls_tsegh-head_flgap.                                 "P9CK020019
  clear ls_tsegh-head_flgtx.                                 "P9CK020019

* possible modif's
* direct
*         even     --> sor
*         ..       --> txt
* indirect
*         time     --> tst
*         loca     --> zon


  LOOP AT <HEADER>-EVEN ASSIGNING <EVENDATA>.

*   LOOP AT <header>-evcn ASSIGNING <evcnrange>.
    LOOP AT <HEADER>-EVVT ASSIGNING <EVVTRANGE>.
      LOOP AT <HEADER>-EVVN ASSIGNING <EVVNRANGE>.
        CLEAR LS_TSEGE.

*       diag modif of event
        LS_TSEGE-DIAG_MODIF  =  <EVENDATA>-DIAG_MODIF.

*       deleted entries first
        IF <EVENDATA>-DIAG_MODIF = GC_MODE_DELETE.
        ENDIF.


*       time from
        READ TABLE <HEADER>-TIME INTO LS_TIMEFR
            WITH TABLE KEY
                TIME        =  <EVENDATA>-EVEN_TIMFR
                EVEN_CNT    =  <EVENDATA>-EVEN_CNT
                EVEN_VERTY  =  <EVVTRANGE>-EVEN_VERTY
                EVEN_VERNU  =  <EVVNRANGE>-EVEN_VERNU.
        IF NOT LS_TIMEFR-DIAG_MODIF IS INITIAL.
          IF LS_TSEGE-DIAG_MODIF IS INITIAL.
            LS_TSEGE-DIAG_MODIF = GC_MODE_UPDATE.
          ENDIF.
        ENDIF.

*       time from
        READ TABLE <HEADER>-TIME INTO LS_TIMETO
            WITH TABLE KEY
                TIME        =  <EVENDATA>-EVEN_TIMTO
                EVEN_CNT    =  <EVENDATA>-EVEN_CNT
                EVEN_VERTY  =  <EVVTRANGE>-EVEN_VERTY
                EVEN_VERNU  =  <EVVNRANGE>-EVEN_VERNU.
        IF NOT LS_TIMETO-DIAG_MODIF IS INITIAL.
          IF LS_TSEGE-DIAG_MODIF IS INITIAL.
            LS_TSEGE-DIAG_MODIF = GC_MODE_UPDATE.
          ENDIF.
        ENDIF.


*       loca from
        READ TABLE <HEADER>-LOCA INTO LS_LOCAFR
            WITH TABLE KEY
                LOCA        =  <EVENDATA>-EVEN_LOCFR
                EVEN_CNT    =  <EVENDATA>-EVEN_CNT.
        IF NOT LS_LOCAFR-DIAG_MODIF IS INITIAL.
          IF LS_TSEGE-DIAG_MODIF IS INITIAL.
            LS_TSEGE-DIAG_MODIF = GC_MODE_UPDATE.
          ENDIF.
        ENDIF.

*       loca to
        READ TABLE <HEADER>-LOCA INTO LS_LOCATO
            WITH TABLE KEY
                LOCA        =  <EVENDATA>-EVEN_LOCFR
                EVEN_CNT    =  <EVENDATA>-EVEN_CNT.
        IF NOT LS_LOCATO-DIAG_MODIF IS INITIAL.
          IF LS_TSEGE-DIAG_MODIF IS INITIAL.
            LS_TSEGE-DIAG_MODIF = GC_MODE_UPDATE.
          ENDIF.
        ENDIF.

*       insert event
        IF NOT LS_TSEGE-DIAG_MODIF IS INITIAL.
          LS_TSEGE-CLIENT      =  SY-MANDT.
          LS_TSEGE-HEAD_HDL    =  <HEADER>-HEAD_HDL.
          LS_TSEGE-EVEN        =  <EVENDATA>-EVEN.
          LS_TSEGE-EVEN_CNT    =  <EVENDATA>-EVEN_CNT.
          LS_TSEGE-EVEN_VERTY  =  <EVVTRANGE>-EVEN_VERTY.
          LS_TSEGE-EVEN_VERNU  =  <EVVNRANGE>-EVEN_VERNU.
          LS_TSEGE-EVEN_SOR    =  <EVENDATA>-EVEN_SOR.

          LS_TSEGE-EVEN_TSTFR  =  LS_TIMEFR-TIME_TST.
          LS_TSEGE-EVEN_ZONFR  =  LS_LOCAFR-LOCA_ZON.
          LS_TSEGE-EVEN_TSTTO  =  LS_TIMETO-TIME_TST.
          LS_TSEGE-EVEN_ZONTO  =  LS_LOCATO-LOCA_ZON.
*         ls_tsege-even_flgff  =
*         ls_tsege-even_flgff  =
          INSERT LS_TSEGE INTO TABLE LT_TSEGE.

*         modify flag
          IF LS_TSEGH-HEAD_TSTCR IS INITIAL.
            LS_TSEGH-DIAG_MODIF = GC_MODE_INSERT.
          ELSE.
            LS_TSEGH-DIAG_MODIF = GC_MODE_UPDATE.
          ENDIF.
        ENDIF.

*       rebuild flag for text, address, appl data          "P9CK020019
*       deleted events are not relevant                    "P9CK020019
        if <evendata>-diag_modif <> gc_mode_delete.        "P9CK020019
*         ... flag address                                 "P9CK020019
          IF LS_TIMEFR-TIME_FLGAD = GC_TRUE  OR            "P9CK020019
             LS_TIMETO-TIME_FLGAD = GC_TRUE.               "P9CK020019
            LS_TSEGH-HEAD_FLGAD = GC_TRUE.                 "P9CK020019
          ENDIF.                                           "P9CK020019
*         ... flag text                                    "P9CK020019
          IF <EVENDATA>-EVEN_FLGTX = GC_TRUE.              "P9CK020019
            LS_TSEGH-HEAD_FLGTX = GC_TRUE.                 "P9CK020019
          ENDIF.                                           "P9CK020019
*         ... flag appl. data                              "P9CK020019
          IF <EVENDATA>-EVEN_FLGAP = GC_TRUE.              "P9CK020019
            LS_TSEGH-HEAD_FLGAP = GC_TRUE.                 "P9CK020019
          ENDIF.                                           "P9CK020019
        endif.                                             "P9CK020019

      ENDLOOP.
    ENDLOOP.
*   ENDLOOP.

* insert header
  ENDLOOP.
  IF NOT SY-SUBRC IS INITIAL.                                 "v_n530988
    RAISE NO_EVENTS.
  ENDIF.                                                      "^_n530988
  IF NOT LS_TSEGH-DIAG_MODIF IS INITIAL.
    LS_TSEGH-CLIENT = SY-MANDT.
    IF LS_TSEGH-HEAD_UNACR IS INITIAL.
      LS_TSEGH-HEAD_UNACR = SY-UNAME.
      GET TIME STAMP FIELD LS_TSEGH-HEAD_TSTCR.
    ELSE.
      LS_TSEGH-HEAD_UNACH = SY-UNAME.
      GET TIME STAMP FIELD LS_TSEGH-HEAD_TSTCH.
    ENDIF.
    INSERT LS_TSEGH INTO TABLE LT_TSEGH.
  ENDIF.
ENDLOOP.
IF NOT LT_TSEGH[] IS INITIAL.
  IF IF_UPDATE_TASK = GC_TRUE.
    CALL FUNCTION 'TSEG_WRITE_UPD'
         IN UPDATE TASK
         EXPORTING
              IT_TSEGH = LT_TSEGH
              IT_TSEGE = LT_TSEGE.
  ELSE.
    CALL FUNCTION 'TSEG_WRITE_UPD'
         EXPORTING
              IT_TSEGH = LT_TSEGH
              IT_TSEGE = LT_TSEGE.
  ENDIF.
ENDIF.

* text update
if if_update_task = gc_true.
  LOOP AT GT_TEXT ASSIGNING <TEXTDATA>.
*   build key for text                                       "P9CK020019

    ASSIGN <TEXTDATA>-HEAD_HDL TO <fs_hdl_s> casting.       "v_n_1125185
    LS_TDNAME_TSEG-HEAD_HDL_UPPER = <fs_hdl_s>-hex22.

    if <TEXTDATA>-HEADER-TDNAME(20) = LS_TDNAME_TSEG-HEAD_HDL_UPPER(20).
*     use the HEX value
    else.
*     UNICODE enabling - convert with form routine
      perform conv_handle_to_uppercase
         using    <TEXTDATA>-HEAD_HDL
         changing LS_TDNAME_TSEG-HEAD_HDL_UPPER.
    endif.                                                  "^_n_1125185

    LS_TDNAME_TSEG-EVEN           = <TEXTDATA>-EVEN.         "P9CK020019
    LS_TDNAME_TSEG-EVEN_CNT       = <TEXTDATA>-EVEN_CNT.     "P9CK020019
    LF_TDNAME                     = LS_TDNAME_TSEG.          "P9CK020019
    if <TEXTDATA>-DIAG_MODIF = gc_mode_delete.               "P9CK020019
      CALL FUNCTION 'DELETE_TEXT'                            "P9CK020019
        EXPORTING                                            "P9CK020019
          object                =  TSEG_TDOBJECT             "P9CK020019
          name                  =  LF_TDNAME                 "P9CK020019
          id                    =  TSEG_TDID                 "P9CK020019
          language              =   '*'                      "P9CK020019
          SAVEMODE_DIRECT       =   GC_FALSE                 "P9CK020019
        EXCEPTIONS                                           "P9CK020019
          OTHERS                = 0.                         "n_670573
    else.                                                    "P9CK020019
      CALL FUNCTION 'SAVE_TEXT'
           EXPORTING
               HEADER           =  <TEXTDATA>-HEADER
               SAVEMODE_DIRECT =   GC_FALSE
           TABLES
               LINES           =   <TEXTDATA>-LINES
           EXCEPTIONS
               OTHERS          = 0.                          "n_670573
    endif.                                                   "P9CK020019
* deleted line of n_670573
      CALL FUNCTION 'COMMIT_TEXT'                            "v_n_579961
           EXPORTING
             OBJECT = TSEG_TDOBJECT
             NAME   = LF_TDNAME.                             "^_n_579961
* deleted line of n_670573
  ENDLOOP.
ELSE.
  LOOP AT GT_TEXT ASSIGNING <TEXTDATA>.
    if <TEXTDATA>-DIAG_MODIF = gc_mode_delete.               "P9CK020019
      CALL FUNCTION 'DELETE_TEXT'                            "P9CK020019
        EXPORTING                                            "P9CK020019
          object                =  TSEG_TDOBJECT             "P9CK020019
          name                  =  LF_TDNAME                 "P9CK020019
          id                    =  TSEG_TDID                 "P9CK020019
          language              =   '*'                      "P9CK020019
          SAVEMODE_DIRECT       =   GC_true                  "P9CK020019
        EXCEPTIONS                                           "P9CK020019
          OTHERS                = 0.                         "n_670573
    else.                                                    "P9CK020019
      CALL FUNCTION 'SAVE_TEXT'
           EXPORTING
               HEADER           =  <TEXTDATA>-HEADER
               SAVEMODE_DIRECT =   GC_TRUE
           TABLES
               LINES           =   <TEXTDATA>-LINES
           EXCEPTIONS
               OTHERS          = 0.                          "n_670573
    endif.                                                   "P9CK020019
* deleted lines of n_670573
  ENDLOOP.
ENDIF.

IF NOT LT_TSEGH[] IS INITIAL  or
   not gt_text[]  is initial.
  ef_update = gc_true.
endif.

* If all time events are deleted, then return parameter       "v_2270051
* ef_delete, only valid for delivery
  if IF_OBJECT = 'WSHDRLIKP' and <HEADER> is assigned.
     loop at <HEADER>-EVEN  transporting no fields where diag_modif ne GC_MODE_DELETE.
       lv_not_all_deleted = 'X'.
     endloop.
     if lv_not_all_deleted is initial and not <HEADER>-EVEN is initial.
       ef_delete = GC_MODE_DELETE.
     endif.
  endif.                                                      "^_2270051

ENDFUNCTION.