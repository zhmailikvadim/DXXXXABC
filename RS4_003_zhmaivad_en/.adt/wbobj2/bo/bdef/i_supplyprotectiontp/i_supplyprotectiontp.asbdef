managed implementation in class bp_i_supplyprotectiontp unique;
strict;
with draft;
with privileged mode disabling NoCheckWhenPrivileged;

define authorization context NoCheckWhenPrivileged
{
  'M_SUP_CVC';
}

define own authorization context
{
  'M_SUP_CVC';
}

define behavior for I_SupplyProtectionTP alias root implementation in class bp_i_supplyprotectiontp unique
persistent table sup_object
draft table sup_objectd
lock master
total etag DraftLastChangedDateTime
authorization master ( global, instance )
etag master LastChangeDateTime
with additional save
{
  field ( readonly, numbering : managed ) SupplyProtectionUUID;

  field ( readonly )
  CreatedByUser, CreationDateTime, CreationDate, LastChangedByUser, LastChangeDateTime, LastChangeDate,
  UnitOfMeasure, SupProtProtectedQuantity, SupProtConsumedQuantity, SupProtRemainingProtectedQty, SupProtActivationDate, SupProtPlngContextIsConsistent;

  field ( features : instance ) SupplyProtectionName, Plant, Material, SupProtIsPlanningContextSlsOrd, SupProtIsPlanningContextSTO, SupProtLifecycleStatus,
  SupProtPlanningPeriodType, SupProtPlanningPeriodStartDate, SupProtPlanningPeriodEndDate,
  SupProtCoreCharc01CtlgPathUUID, CoreCharc01CtlgPathIntID, SupProtCoreCharc01Text, SupProtCoreCharc01ValueID,
  SupProtCoreCharc02CtlgPathUUID, CoreCharc02CtlgPathIntID, SupProtCoreCharc02Text, SupProtCoreCharc02ValueID,
  SupProtAutomActivationIsActive, SupProtAutomActivationDate, SupProtCnsmpnDateTimeType, SupProtSelfRestrictionType;

  mapping for sup_object corresponding
  {
    SupplyProtectionUUID = uuid;
    SupplyProtectionName = name;
    Material = material;
    Plant = plant;
    SupProtLifecycleStatus = status;
    SupProtPlanningPeriodType = planningperiodtype;
    SupProtPlanningPeriodStartDate = planningperiodstart;
    SupProtPlanningPeriodEndDate = planningperiodend;
    SupProtCoreCharc01CtlgPathUUID = corecharc01catalogpathuuid;
    CoreCharc01CtlgPathIntID = corecharc01catalogpathid;
    SupProtCoreCharc01ValueID = corecharc01value;
    SupProtCoreCharc02CtlgPathUUID = corecharc02catalogpathuuid;
    CoreCharc02CtlgPathIntID = corecharc02catalogpathid;
    SupProtCoreCharc02ValueID = corecharc02value;
    SupProtIsPlanningContextSlsOrd = planningcontextso;
    SupProtIsPlanningContextSTO = planningcontextsto;
    SupProtCharcCatalogType = catalogtype;
    CreatedByUser = createdbyuser;
    CreationDateTime = creationdatetime;
    LastChangedByUser = lastchangedbyuser;
    LastChangeDateTime = lastchangedatetime;
    DraftLastChangedDateTime = last_changed_at;
    SupplyProtectionIsBlocked = blocked;
    SupProtAutomActivationIsActive = autoactivation;
    SupProtAutomActivationDate = autoactivationdate;
    SupProtActivationDate = activationdate;
    SupProtCnsmpnDateTimeType = consumptiondatetype;
    SupProtSelfRestrictionType = selfrestriction;
  }
  create ( precheck );
  update ( features : instance );
  delete ( features : instance );

  association _SupplyProtectionGroupTP { create ( precheck, features : instance ); with draft; }
  association _SupProtCharacteristicTP { create ( precheck, features : instance ); with draft; }
  association _SupProtFlexibleTimeBucketTP { create ( features : instance ); with draft; }

  determination setObjectInitialStatus on modify { create; }
  determination setObjectCatalogPathUUID on modify { field CoreCharc01CtlgPathIntID, CoreCharc02CtlgPathIntID; }
  determination setObjectCatalogPathIDsByText on modify { field SupProtCoreCharc01Text, SupProtCoreCharc02Text; }
  determination setObjectCatalogType on modify { field SupProtIsPlanningContextSlsOrd, SupProtIsPlanningContextSTO; }
  determination setObjectAuthGroup on save { field SupplyProtectionName, SupProtCoreCharc01CtlgPathUUID, SupProtCoreCharc01ValueID, SupProtCoreCharc02CtlgPathUUID, SupProtCoreCharc02ValueID; }
  determination convertCoreCharcValueIds on modify { field SupProtCoreCharc01ValueID, SupProtCoreCharc02ValueID; }
  determination setGroupByCoreCharcValues on save { field SupProtCoreCharc01ValueID, SupProtCoreCharc02ValueID; }

  validation checkObjectMandatoryFields on save
  { field SupplyProtectionName, Material, Plant, SupProtIsPlanningContextSlsOrd, SupProtIsPlanningContextSTO,
    SupProtPlanningPeriodType, SupProtPlanningPeriodStartDate, SupProtPlanningPeriodEndDate, SupProtCoreCharc01ValueID, SupProtCoreCharc01Text,
    SupProtCoreCharc02ValueID, SupProtCoreCharc02Text, SupProtAutomActivationIsActive, SupProtAutomActivationDate; }
  validation checkObjectNextStatus on save { field SupProtLifecycleStatus; }
  validation checkObjectAutoActivation on save { create; update; }
  validation checkObjectAuthority on save { field CoreCharc01CtlgPathIntID, SupProtCoreCharc01ValueID, CoreCharc02CtlgPathIntID, SupProtCoreCharc02ValueID; }
  validation checkObjectNumOfCharcs on save { field SupplyProtectionUUID, SupProtCoreCharc01CtlgPathUUID, SupProtCoreCharc01ValueID, SupProtCoreCharc02CtlgPathUUID, SupProtCoreCharc02ValueID; }
  validation checkObjectWildcards on save { field SupProtCoreCharc01ValueID, SupProtCoreCharc02ValueID; }


  draft action Edit;
  draft action Resume;
  draft action Activate;
  draft action Discard;
  draft determine action Prepare
  { validation checkObjectMandatoryFields;
    validation checkObjectNextStatus;
    validation checkObjectAuthority;
    validation checkObjectAutoActivation;
    validation checkObjectNumOfCharcs;
    validation checkObjectWildcards;
    validation characteristics ~ checkPrioCharcCatalogPathIntID;
    validation characteristics ~ checknumofcharcs;
    validation protectionGroups ~ checkGroupAuthority;
    validation protectionGroups ~ checkGroupPriority;
    validation protectionGroups ~ checkGroupNew;
    validation protectionGroups ~ checkGroupDuplicate;
    validation protectionGroups ~ checkGroupWildcards;
    validation timeBuckets ~ checkTimebuckets;
    validation flexTimeBuckets ~ checkFlexTimeBucket;
    determination setGroupByCoreCharcValues;
  }

  action ( features : instance ) SetLifecycleStatusToActive result [0..1] $self;
  action ( features : instance ) SetLifecycleStatusToInactive result [0..1] $self;
  action ( features : instance ) GenerateFlexibleTimeBuckets result [0..1] $self;
  static  factory action CopySupplyProtectionObject parameter D_SupProtObjCopySupProtObjP [1];
  action ( features : instance ) MovePlanningHorizon parameter D_SupProtMovePlanningHorizonP result [0..1] $self;
  action ( features : instance ) ChangePlanningHorizonEnd parameter D_SupProtChangePlngHorizonEndP result [0..1] $self;
  static action ( authorization:none ) IncreaseFileUploadCounter;
  static action ( authorization:none ) IncreaseFileDownloadCounter;

}
define behavior for I_SupProtCharacteristicTP alias characteristics implementation in class bp_i_supprotcharacteristictp unique
persistent table sup_charc
draft table sup_charcd
lock dependent by _SupplyProtectionTP
authorization dependent by _SupplyProtectionTP
etag master LastChangeDateTime
{
  field ( readonly, numbering : managed ) SupProtCharacteristicUUID;
  field ( readonly ) SupplyProtectionUUID, CreatedByUser, CreationDateTime, LastChangedByUser, LastChangeDateTime;
  field ( features : instance ) Characteristic;

  mapping for sup_charc corresponding
  {
    SupProtCharacteristicUUID = uuid;
    SupplyProtectionUUID = objectuuid;
    SupProtOrdinalNumberValue = ordinalnumber;
    SupProtCharcColumnName = tablecolumnname;
    SupProtCharcCtlgPathUUID = catalogpathuuid;
    SupProtCharcCtlgPathIntID = catalogpathid;
    CreatedByUser = createdbyuser;
    CreationDateTime = creationdatetime;
    LastChangedByUser = lastchangedbyuser;
    LastChangeDateTime = lastchangedatetime;
  }
  update ( features : instance );
  delete ( features : instance );

  association _SupplyProtectionTP { with draft; }

  determination setPrioCharcInitialValues on modify { create; }
  determination setPrioCharcPathIDsByText on modify { field Characteristic; }

  validation checkPrioCharcCatalogPathIntID on save { field SupplyProtectionUUID, SupProtCharcCtlgPathIntID; }
  validation checknumofcharcs on save { field SupplyProtectionUUID; }

  action ( features : instance ) DeletePrioritizedCharc result [0..1] $self;
  action ( features : instance ) MoveUpPrioritizedCharc result [0..1] $self;
  action ( features : instance ) MoveDownPrioritizedCharc result [0..1] $self;
}

define behavior for I_SupProtFlexibleTimeBucketTP alias flexTimeBuckets implementation in class bp_i_supprotflextimebuckettp unique
persistent table sup_flex_tb
draft table sup_flex_tbd
lock dependent by _SupplyProtectionTP
authorization dependent by _SupplyProtectionTP
etag master LastChangeDateTime
{
  field ( readonly, numbering : managed ) SupProtFlexibleTimeBucketUUID;
  field ( readonly ) SupplyProtectionUUID, SupProtPeriodStartUTCDateTime, EndDate, SupProtPeriodEndUTCDateTime, NumberOfDays, CreatedByUser, CreationDateTime, LastChangedByUser, LastChangeDateTime;
  field ( features : instance ) StartDate;

  mapping for sup_flex_tb corresponding
  {
    SupProtFlexibleTimeBucketUUID = uuid;
    SupplyProtectionUUID = objectuuid;
    SupProtPeriodStartUTCDateTime = startutcdatetime;
    SupProtPeriodEndUTCDateTime = endutcdatetime;
    CreatedByUser = createdbyuser;
    CreationDateTime = creationdatetime;
    LastChangedByUser = lastchangedbyuser;
    LastChangeDateTime = lastchangedatetime;
  }
  update ( features : instance );
  delete ( precheck, features : instance );

  association _SupplyProtectionTP { with draft; }

  determination setFlexTimeBucketOnSave on save { field StartDate; }
  determination setFlexTimeBucketOnDelete on modify { delete; }

  validation checkFlexTimeBucket on save { field SupProtFlexibleTimeBucketUUID, StartDate; }
}

define behavior for I_SupplyProtectionGroupTP alias protectionGroups implementation in class bp_i_supplyprotectiongrouptp unique
persistent table sup_cvc
draft table sup_cvcd
lock dependent by _SupplyProtectionTP
authorization dependent by _SupplyProtectionTP
etag master LastChangeDateTime
{
  field ( readonly, numbering : managed ) SupplyProtectionGroupUUID;
  field ( readonly ) SupplyProtectionUUID, CreatedByUser, CreationDateTime, LastChangedByUser, LastChangeDateTime, SupProtProtectedQuantity, UnitOfMeasure, SupProtConsumedQuantity, SupProtRemainingProtectedQty, CharcValAuthznGroup;
  field ( features : instance ) SupProtGroupPriorityValue, SupProtCharc01ValueID, SupProtCharc02ValueID, SupProtCharc03ValueID, SupProtCharc04ValueID,
  SupProtCharc05ValueID, SupProtCharc06ValueID, SupProtCharc07ValueID, SupProtCharc08ValueID, SupProtCharc09ValueID, SupProtCharc10ValueID;

  mapping for sup_cvc corresponding
  {
    SupplyProtectionGroupUUID = uuid;
    SupplyProtectionUUID = supobjectuuid;
    SupProtCharc01CtlgPathIntID = charc01catalogpathid;
    SupProtCharc01CtlgPathUUID = charc01catalogpathuuid;
    SupProtCharc01ValueID = characteristic01;
    SupProtCharc02CtlgPathIntID = charc02catalogpathid;
    SupProtCharc02CtlgPathUUID = charc02catalogpathuuid;
    SupProtCharc02ValueID = characteristic02;
    SupProtCharc03CtlgPathIntID = charc03catalogpathid;
    SupProtCharc03CtlgPathUUID = charc03catalogpathuuid;
    SupProtCharc03ValueID = characteristic03;
    SupProtCharc04CtlgPathIntID = charc04catalogpathid;
    SupProtCharc04CtlgPathUUID = charc04catalogpathuuid;
    SupProtCharc04ValueID = characteristic04;
    SupProtCharc05CtlgPathIntID = charc05catalogpathid;
    SupProtCharc05CtlgPathUUID = charc05catalogpathuuid;
    SupProtCharc05ValueID = characteristic05;
    SupProtCharc06CtlgPathIntID = charc06catalogpathid;
    SupProtCharc06CtlgPathUUID = charc06catalogpathuuid;
    SupProtCharc06ValueID = characteristic06;
    SupProtCharc07CtlgPathIntID = charc07catalogpathid;
    SupProtCharc07CtlgPathUUID = charc07catalogpathuuid;
    SupProtCharc07ValueID = characteristic07;
    SupProtCharc08CtlgPathIntID = charc08catalogpathid;
    SupProtCharc08CtlgPathUUID = charc08catalogpathuuid;
    SupProtCharc08ValueID = characteristic08;
    SupProtCharc09CtlgPathIntID = charc09catalogpathid;
    SupProtCharc09CtlgPathUUID = charc09catalogpathuuid;
    SupProtCharc09ValueID = characteristic09;
    SupProtCharc10CtlgPathIntID = charc10catalogpathid;
    SupProtCharc10CtlgPathUUID = charc10catalogpathuuid;
    SupProtCharc10ValueID = characteristic10;
    SupProtGroupPriorityValue = cvcpriority;
    CreatedByUser = createdbyuser;
    CreationDateTime = creationdatetime;
    LastChangedByUser = lastchangedbyuser;
    LastChangeDateTime = lastchangedatetime;
    CharcValAuthznGroup = charcvalauthzngroup;
    SupplyProtectionGroupIsBlocked = blocked;
  }
  update ( features : instance );
  delete ( features : instance, precheck );

  association _SupplyProtectionTimeBucketTP { create; with draft; }
  association _SupplyProtectionTP { with draft; }

  determination setGroupInitialValues on modify { create; }

  determination convertCharcValueIds on modify
  { field SupProtCharc01ValueID, SupProtCharc02ValueID, SupProtCharc03ValueID, SupProtCharc04ValueID, SupProtCharc05ValueID,
    SupProtCharc06ValueID, SupProtCharc07ValueID, SupProtCharc08ValueID, SupProtCharc09ValueID, SupProtCharc10ValueID; }

  determination setGroupAuthGroup on save
  //  determination setGroupAuthGroup on modify
  { field SupProtCharc01ValueID, SupProtCharc02ValueID, SupProtCharc03ValueID, SupProtCharc04ValueID, SupProtCharc05ValueID,
    SupProtCharc06ValueID, SupProtCharc07ValueID, SupProtCharc08ValueID, SupProtCharc09ValueID, SupProtCharc10ValueID; }

  validation checkGroupAuthority on save
  { field SupProtCharc01ValueID, SupProtCharc02ValueID, SupProtCharc03ValueID, SupProtCharc04ValueID, SupProtCharc05ValueID,
    SupProtCharc06ValueID, SupProtCharc07ValueID, SupProtCharc08ValueID, SupProtCharc09ValueID, SupProtCharc10ValueID; }
  validation checkGroupPriority on save { field SupProtGroupPriorityValue; }
  validation checkGroupNew on save { field SupplyProtectionGroupUUID; }
  validation checkGroupDuplicate on save
  { field SupProtCharc01ValueID, SupProtCharc02ValueID, SupProtCharc03ValueID, SupProtCharc04ValueID, SupProtCharc05ValueID,
    SupProtCharc06ValueID, SupProtCharc07ValueID, SupProtCharc08ValueID, SupProtCharc09ValueID, SupProtCharc10ValueID; }
  validation checkGroupWildcards on save
  { field SupProtCharc01ValueID, SupProtCharc02ValueID, SupProtCharc03ValueID, SupProtCharc04ValueID, SupProtCharc05ValueID,
    SupProtCharc06ValueID, SupProtCharc07ValueID, SupProtCharc08ValueID, SupProtCharc09ValueID, SupProtCharc10ValueID; }
}

define behavior for I_SupplyProtectionTimeBucketTP alias timeBuckets implementation in class bp_i_supprottimebuckettp unique
persistent table sup_timebucket
draft table sup_timebucketd
lock dependent by _SupplyProtectionTP
authorization dependent by _SupplyProtectionTP
etag master LastChangeDateTime
with additional save
{
  field ( readonly, numbering : managed ) SupProtTimeBucketUUID;
  field ( readonly ) SupplyProtectionUUID, SupplyProtectionGroupUUID, EndDate, CreatedByUser, CreationDateTime, LastChangedByUser, LastChangeDateTime,
  UnitOfMeasure, SupProtConsumedQuantity, SupProtRemainingProtectedQty;

  mapping for sup_timebucket corresponding
  {
    SupProtTimeBucketUUID = uuid;
    SupplyProtectionGroupUUID = supcvcuuid;
    SupProtPeriodStartUTCDateTime = startutcdatetime;
    SupProtPeriodEndUTCDateTime = endutcdatetime;
    SupProtProtectedQuantity = protectedquantity;
    UnitOfMeasure = protectedquantityunit;
    CreatedByUser = createdbyuser;
    CreationDateTime = creationdatetime;
    LastChangedByUser = lastchangedbyuser;
    LastChangeDateTime = lastchangedatetime;
  }
  update ( features : instance );
  delete;

  association _SupProtPermConsumptionTP { create; with draft; }
  association _SupplyProtectionTP { with draft; }
  association _SupplyProtectionGroupTP { with draft; }

  determination setTimeBucketEndDateOnSave on modify { field StartDate, SupProtPeriodStartUTCDateTime; }

  validation checkTimebuckets on save { field SupProtTimeBucketUUID, SupProtPeriodStartUTCDateTime, SupProtPeriodEndUTCDateTime, SupProtProtectedQuantity; }
}


define behavior for I_SupProtPermConsumptionTP alias permConsumptions
persistent table sup_pcp
draft table sup_pcpd
lock dependent by _SupplyProtectionTP
authorization dependent by _SupplyProtectionTP
etag master LastChangeDateTime
{
  field ( readonly, numbering : managed ) SupProtPermConsumptionUUID;
  field ( readonly ) SupplyProtectionUUID, SupProtTimeBucketUUID, CreatedByUser, CreationDateTime, LastChangedByUser, LastChangeDateTime;
  mapping for sup_pcp corresponding
  {
    SupProtPermConsumptionUUID = uuid;
    SupProtTimeBucketUUID = timebucketuuid;
    SupplyProtectionDocumentType = documenttype;
    SupProtAssignedDocument = documentid;
    SupProtAssignedDocumentItem = documentitemid;
    SupProtConsumedQuantity = consumedquantity;
    SupProtConsumedQuantityUnit = consumedquantityunit;
    CreatedByUser = createdbyuser;
    CreationDateTime = creationdatetime;
    LastChangedByUser = lastchangedbyuser;
    LastChangeDateTime = lastchangedatetime;
  }

  update; ##DRAFT_OP_NOT_REQUIRED
  delete; ##DRAFT_OP_NOT_REQUIRED


  association _SupplyProtectionTP { with draft; }
  association _SupplyProtectionTimeBucketTP { with draft; }

}