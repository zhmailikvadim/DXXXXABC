"! <P CLASS="SHORTTEXT SYNCHRONIZED" LANG="RU">РАСПРЕДЕЛЕНИЕ ТЗЗ</P>
CLASS ZCL_ACCOUNT_NEW DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

PUBLIC SECTION.

  INTERFACES IF_AMDP_MARKER_HDB .

  TYPES:
    BEGIN OF TY_S_MSEG,
        BUKRS      TYPE MSEG-BUKRS,
        WERKS      TYPE MSEG-WERKS,
        MATNR      TYPE MATDOC-MATNR,

        BKLAS      TYPE T030-KONTS,
        CHARG      TYPE MSEG-CHARG,
        CHARG2     TYPE MSEG-CHARG,
        SHKZG      TYPE MSEG-SHKZG,
        DMBTR      TYPE MSEG-DMBTR,
        MJAHR      TYPE MSEG-MJAHR,
        MBLNR      TYPE MSEG-MBLNR,
        ZEILE      TYPE MSEG-ZEILE,
        SJAHR      TYPE MSEG-SJAHR,
        SMBLN      TYPE MSEG-SMBLN,
        SMBLP      TYPE MSEG-SMBLP,
        SAKTO      TYPE MSEG-SAKTO,

        BKLAS2     TYPE T030-KONTS,

        AUFNR      TYPE MSEG-AUFNR,
        KOSTL      TYPE MSEG-KOSTL,

        VBELV      TYPE VBFA-VBELV,
        POSNV      TYPE VBFA-POSNV,

        PS_PSP_PNR TYPE MSEG-PS_PSP_PNR,
        NPLNR      TYPE MSEG-NPLNR,
        VORNR      TYPE AFVC-VORNR,        " ГРАФИК
        BUDAT_MKPF TYPE BUDAT,

        ACRES      TYPE MSEG-CHARG,
        TZZ        TYPE BKPF-XBLNR,
        AWKEY      TYPE BKPF-AWKEY,

        BELNR      TYPE BKPF-BELNR,
        BUZEIK     TYPE J_3RK_CORR_ITEMS-BUZEIK,
        BUZEID     TYPE J_3RK_CORR_ITEMS-BUZEID,
        VBUKR      TYPE T001U-VBUKR,
        ABUKR      TYPE T001U-ABUKR,
        KONTS      TYPE T001U-KONTS,
        OBOROT     TYPE CHAR1,
      END OF TY_S_MSEG .
  TYPES:
    BEGIN OF TY_S_BKPF,
        BVORG TYPE BKPF-BVORG,
        XBLNR TYPE BKPF-XBLNR,
        KDAUF TYPE ACDOCA-KDAUF,
        KDPOS TYPE ACDOCA-KDPOS,
        BKTXT TYPE BKPF-BKTXT,
        BELNR TYPE BKPF-BELNR,
        BUKRS TYPE BKPF-BUKRS,
        GJAHR TYPE BKPF-GJAHR,
        HSL TYPE ACDOCA-HSL,
        RCNTR TYPE ACDOCA-RCNTR,
        PS_PSP_PNR TYPE ACDOCA-PS_PSP_PNR,
        AUFNR TYPE ACDOCA-AUFNR,
        NPLNR TYPE ACDOCA-NPLNR,
        NPLNR_VORGN TYPE ACDOCA-NPLNR_VORGN,
        RACCT       TYPE ACDOCA-RACCT,
        BUDAT TYPE BKPF-BUDAT,
     END OF TY_S_BKPF .
  TYPES:
    BEGIN OF TY_S_RES,
        CHK        TYPE C LENGTH 1,
        ACRES      TYPE MSEG-CHARG,        " СЧЕТ ЗАПАСОВ
        SAKTO      TYPE MSEG-SAKTO,        " СЧЕТ СПИС. МАТ.
        BKLASAC    TYPE T030-KONTS,
        DMBTR      TYPE MSEG-DMBTR,        " СУММА ПРОВ
        PROCENT(8) TYPE P DECIMALS 4,
        CHARG2     TYPE MSEG-CHARG,

        BUKRS      TYPE MSEG-BUKRS,
        AUFNR      TYPE MSEG-AUFNR,        " ЗАТРАТЫ Заказ исходный
        KOSTL      TYPE MSEG-KOSTL,        " MBЗ
        VBELV      TYPE VBFA-VBELV,
        POSNV      TYPE VBFA-POSNV,

        PS_PSP_PNR TYPE MSEG-PS_PSP_PNR,   " СПП-ЭЛЕМЕНТ
        NPLNR      TYPE MSEG-NPLNR,        " ГРАФИК
        VORNR      TYPE AFVC-VORNR,        " ГРАФИК
        ACCRUED    TYPE MSEG-DMBTR,        " НАЧИСЛЕНО
        CARRIED    TYPE MSEG-DMBTR,        " ПРОВЕДЕНО
        STOCK      TYPE MSEG-DMBTR,        " ТЗР К ПРОВОДКЕ

        BELNR_PROV TYPE CHAR20,
        TZZ        TYPE BKPF-XBLNR,
        BKTXT      TYPE BKPF-BKTXT,
        FLAG       TYPE CHAR1,
        SIGNP      TYPE CHAR1,
        NEW_BELNR  TYPE CHAR1,
        STATUS     TYPE ICON_D,
        ROW_COLOR  TYPE C LENGTH 4,
        VBUKR      TYPE T001U-VBUKR,
        ABUKR      TYPE T001U-ABUKR,
        KONTS      TYPE T001U-KONTS,
        OBOROT     TYPE CHAR1,
        HKONT_SAKTO TYPE HKONT,
        TVARVC_CLIE_INDEP TYPE TVARVC-CLIE_INDEP,
        INITIAL_AUFNR TYPE MSEG-AUFNR,
      END OF TY_S_RES .
  TYPES:
    BEGIN OF TY_S_PROCENT,
        NUMB TYPE CHAR50,
        TEXT TYPE CHAR50,
        COL1 TYPE ACDOCA-HSL,
        COL2 TYPE ACDOCA-HSL,
      END OF TY_S_PROCENT .
  TYPES:
    TY_PROCENT  TYPE STANDARD TABLE OF TY_S_PROCENT .
  TYPES:
    TY_RES      TYPE STANDARD TABLE OF TY_S_RES .
  TYPES:
    TY_MSEG_ALL TYPE STANDARD TABLE OF TY_S_MSEG .
  TYPES:
    TY_RES_BKPF TYPE STANDARD TABLE OF TY_S_BKPF .

  CLASS-METHODS GET_ACCOUNTS
    IMPORTING
      VALUE(IV_COSTS)   TYPE CHAR01
      VALUE(IV_BEG)     TYPE MSEG-BUDAT_MKPF
      VALUE(IV_END_DAY) TYPE MSEG-BUDAT_MKPF
      VALUE(IV_BUKRS)   TYPE MSEG-BUKRS
      VALUE(IV_HKONT)   TYPE CHAR3
      VALUE(IV_PROCENT) TYPE DEC_16_04_S
      VALUE(IV_TZZ)     TYPE BKPF-XBLNR
      VALUE(IV_SKIP_M)  TYPE CHAR01
    EXPORTING
      VALUE(ET_RESULT) TYPE TY_MSEG_ALL
      VALUE(ET_RES_ACCOUNTS_COLLECTED) TYPE TY_RES
    RAISING
      CX_AMDP_ERROR .

  CLASS-METHODS GET_PROCENT
    IMPORTING
      VALUE(IV_BUKRS) TYPE MSEG-BUKRS
      VALUE(IV_COSTS) TYPE CHAR01
      VALUE(IV_BEG)   TYPE MSEG-BUDAT_MKPF
      VALUE(IV_END)   TYPE MSEG-BUDAT_MKPF
    EXPORTING
      VALUE(ET_PROCENT) TYPE TY_PROCENT
      VALUE(EV_PROCENT) TYPE DEC_16_08_S
      VALUE(ET_PREV_PROCENT) TYPE TY_PROCENT
      VALUE(EV_PREV_PROCENT) TYPE DEC_16_08_S
    RAISING
      CX_AMDP_ERROR .

  CLASS-METHODS GET_PROVOD_DOC
    IMPORTING
      VALUE(IV_BUKRS) TYPE MSEG-BUKRS
      VALUE(IV_BEG)   TYPE MSEG-BUDAT_MKPF
      VALUE(IV_TZZ)   TYPE BKPF-XBLNR
    EXPORTING
      VALUE(ET_PROVOD_BKPF) TYPE TY_RES_BKPF
    RAISING
      CX_AMDP_ERROR .
PROTECTED SECTION.
PRIVATE SECTION.
ENDCLASS.



CLASS ZCL_ACCOUNT_NEW IMPLEMENTATION.


  METHOD GET_ACCOUNTS BY DATABASE PROCEDURE FOR HDB
                      LANGUAGE SQLSCRIPT OPTIONS READ-ONLY
                      USING NSDM_V_MSEG MBEW QBEW J_3RK_CORR_ITEMS ACDOCA
                            BKPF ZFI_TRANSP_COSTS AFVC T001U ANLA T095 T156
                            VBFA TVARVC t030 TVARVC ZFI_CALC_HDB=>ZFI_REV_DOCS.

  DECLARE LV_MANDT CHAR(3) := SESSION_CONTEXT('CLIENT');

  IF IV_SKIP_M <> 'X' THEN          -- AK_BADYLEVIC 29.04.2023 Исключить счета с типом 'M' из обработки
    -- ВЫБОРКА ПО МАТЕРИАЛЬНЫМ СЧЕТАМ.
  LT_M_ACCOUNTS =
    SELECT
        '' AS BUKRS,
        M.WERKS,
        M.MATNR,
        CASE WHEN M.SOBKZ = '' THEN T030.KONTS ELSE QT030.KONTS END AS BKLAS,
        M.CHARG,
        '' CHARG2,
        M.SHKZG,
        CASE
            WHEN M.SHKZG = 'H' THEN M.DMBTR
            ELSE M.DMBTR * ( -1 )
        END AS DMBTR,
        M.MJAHR,
        M.MBLNR,
        M.ZEILE,
        M.SJAHR,
        M.SMBLN,
        M.SMBLP,
        CASE
            WHEN M.SAKTO <> '' AND M.SAKTO <> '7800000000' THEN M.SAKTO
            ELSE CASE WHEN M.SOBKZ = '' THEN T030.KONTS ELSE QT030.KONTS END
        END AS SAKTO,
        '' BKLAS2,
        COALESCE(M.AUFNR,'') AS AUFNR,
        COALESCE(M.KOSTL,'') AS KOSTL,

        '' AS VBELV,
        '000000' AS POSNV,

        CASE WHEN M.PS_PSP_PNR = '00000000' THEN M.MAT_PSPNR ELSE M.PS_PSP_PNR END AS PS_PSP_PNR,
        COALESCE(M.NPLNR,'') AS NPLNR,
        COALESCE(AFVC.VORNR,'') AS VORNR,
        M.BUDAT_MKPF,
        CASE
            WHEN T030.KONTS IS NOT NULL THEN T030.KONTS
            WHEN QT030.KONTS IS NOT NULL THEN  QT030.KONTS
        END AS ACRES,
        CONCAT ( :IV_TZZ||CHAR(32), CASE
            WHEN T030.KONTS IS NOT NULL THEN T030.KONTS
            WHEN QT030.KONTS IS NOT NULL THEN QT030.KONTS
        END ) AS TZZ,
        CONCAT( M.MBLNR, M.MJAHR ) AS AWKEY,
        '' AS BELNR,
        '' AS BUZEIK,
        '' AS BUZEID,
        '' AS VBUKR,
        '' AS ABUKR,
        '' AS KONTS,
        '' AS OBOROT
      FROM NSDM_V_MSEG AS M
        LEFT OUTER JOIN MBEW AS MB ON MB.MANDT = :LV_MANDT
                                  AND MB.MATNR = M.MATNR
                                  AND MB.BWTAR = M.BWTAR
                                  AND MB.BWKEY = M.WERKS
                                  AND M.SOBKZ  = ''
        LEFT OUTER JOIN T030 AS T030 ON T030.MANDT = MB.MANDT
                                    AND T030.KTOPL = 'BNFT'
                                    AND T030.KTOSL = 'BSX'
                                    AND T030.BWMOD = 'ZZ10'
                                    AND T030.BKLAS = MB.BKLAS
        LEFT OUTER JOIN QBEW AS QB ON QB.MANDT = M.MANDT
                                  AND QB.MATNR = M.MATNR
                                  AND QB.BWTAR = M.BWTAR
                                  AND QB.BWKEY = M.WERKS
                                  AND M.SOBKZ = 'Q'
        LEFT OUTER JOIN T030 AS QT030 ON QT030.MANDT = QB.MANDT
                                     AND QT030.KTOPL = 'BNFT'
                                     AND QT030.KTOSL = 'BSX'
                                     AND QT030.BWMOD = 'ZZ10'
                                     AND QT030.BKLAS = QB.BKLAS
        INNER JOIN ZFI_TRANSP_COSTS AS COST ON COST.MANDT = M.MANDT
                                           AND COALESCE( T030.KONTS, QT030.KONTS ) = COST.HKONT
                                           AND COST.KIND   = :IV_COSTS
                                           AND COST.CREDIT = '1'
                                           AND COST.TYPE   = 'M' /* ОБРАБОТКА СЧЕТОВ М */
        LEFT JOIN AFVC AS AFVC ON AFVC.MANDT = M.MANDT
                              AND AFVC.AUFPL = M.AUFPL
                              AND AFVC.APLZL = M.APLZL
        LEFT JOIN T156 AS T156 ON T156.MANDT = M.MANDT
                              AND T156.BWART = M.BWART
        WHERE M.MANDT = :LV_MANDT
          AND M.BUDAT_MKPF BETWEEN :IV_BEG AND :IV_END_DAY
          AND ( M.SHKZG = 'H' OR ( M.SHKZG = 'S' AND SJAHR <> '0000' ) OR ( M.SHKZG = 'S' AND M.SJAHR = '0000' AND T156.SHKZG = 'S' AND T156.XSTBW = 'X' ) )
          AND M.MATNR <> ''
          AND ( M.SAKTO <> '' AND M.SAKTO <> '7800000000' --! ТЕХНИЧЕСКИЙ ПЕРЕРАСЧЕТНЫЙ СЧЕТ МЕЖДУ БЕ
                OR ( M.SAKTO = '' AND M.SHKZG = 'H' AND ( M.BWART = '122' OR M.BWART = '161' ) )
                OR ( M.SAKTO = '' AND M.SHKZG = 'S' AND SJAHR <> '0000' AND ( M.BWART = '123' OR M.BWART = '162' )  )
              )
          AND M.WERKS LIKE '%10'
          AND M.BUKRS = :IV_BUKRS
    UNION ALL
    SELECT
        CASE
            WHEN M2.BUKRS <> M.BUKRS THEN M2.BUKRS
            ELSE ''
        END AS BUKRS,
        M.WERKS,
        M.MATNR,
        CASE WHEN M.SOBKZ = '' THEN T030.KONTS ELSE QT030.KONTS END AS BKLAS,
        M.CHARG,
        M.CHARG CHARG2,
        M.SHKZG,
        CASE
            WHEN M.SHKZG = 'H' THEN M.DMBTR
            ELSE M.DMBTR * ( -1 )
        END AS DMBTR,
        M.MJAHR,
        M.MBLNR,
        M.ZEILE,
        M.SJAHR,
        M.SMBLN,
        M.SMBLP,
        CASE WHEN M2.BUKRS <> M.BUKRS              THEN CONCAT('78000000', M2.BUKRS)
             WHEN M2.SOBKZ = ' '                   THEN T0302.KONTS
             WHEN M2.SOBKZ = 'Q'                   THEN QT0302.KONTS
             WHEN M2.SOBKZ = 'T' OR M2.SOBKZ = 'O' THEN COALESCE(T0302.KONTS, QT0302.KONTS )
        END AS SAKTO,
        '' AS BKLAS2,
        COALESCE(M.AUFNR,'') AS AUFNR,
        COALESCE(M.KOSTL,'') AS KOSTL,

        '' AS VBELV,
        '000000' AS POSNV,

        CASE WHEN M.PS_PSP_PNR = '00000000' THEN M.MAT_PSPNR ELSE M.PS_PSP_PNR END AS PS_PSP_PNR,
        COALESCE(M.NPLNR,'') AS NPLNR,
        COALESCE(AFVC.VORNR, '') AS VORNR,
        M.BUDAT_MKPF,
        CASE
            WHEN T030.KONTS IS NOT NULL THEN T030.KONTS
            WHEN QT030.KONTS IS NOT NULL THEN QT030.KONTS
        END AS ACRES,
        CONCAT( :IV_TZZ||CHAR(32), CASE WHEN T030.KONTS IS NOT NULL THEN T030.KONTS
                           WHEN QT030.KONTS IS NOT NULL THEN QT030.KONTS
               END ) AS TZZ,
        CONCAT( M.MBLNR, M.MJAHR ) AS AWKEY,
        '' AS BELNR,
        '' AS BUZEIK,
        '' AS BUZEID,
        '' AS VBUKR,
        '' AS ABUKR,
        '' AS KONTS,
        '' AS OBOROT
      FROM NSDM_V_MSEG AS M
          LEFT OUTER JOIN MBEW AS MB ON MB.MANDT = M.MANDT
                                    AND MB.MATNR = M.MATNR
                                    AND MB.BWKEY = M.WERKS
                                    AND MB.BWTAR = M.CHARG
                                    AND M.SOBKZ  = ''
          LEFT OUTER JOIN T030 AS T030 ON T030.MANDT = MB.MANDT
                                      AND T030.KTOPL = 'BNFT'
                                      AND T030.KTOSL = 'BSX'
                                      AND T030.BWMOD = 'ZZ10'
                                      AND T030.BKLAS = MB.BKLAS
          LEFT OUTER JOIN QBEW AS QB ON QB.MANDT = M.MANDT
                                    AND QB.MATNR = M.MATNR
                                    AND QB.BWKEY = M.WERKS
                                    AND QB.BWTAR = M.CHARG
                                    AND  M.SOBKZ = 'Q'
          LEFT OUTER JOIN T030 AS QT030 ON QT030.MANDT = QB.MANDT
                                       AND QT030.KTOPL = 'BNFT'
                                       AND QT030.KTOSL = 'BSX'
                                       AND QT030.BWMOD = 'ZZ10'
                                       AND QT030.BKLAS = QB.BKLAS
          INNER JOIN NSDM_V_MSEG AS M2 ON M2.MANDT = M.MANDT
                                      AND M2.MBLNR = M.MBLNR
                                      AND M2.MJAHR = M.MJAHR
                                      AND M2.PARENT_ID = M.LINE_ID
          LEFT OUTER JOIN MBEW AS MB2 ON MB2.MANDT = M2.MANDT
                                     AND MB2.MATNR = M2.MATNR
                                     AND MB2.BWKEY = M2.WERKS
                                     AND MB2.BWTAR = M2.CHARG
          LEFT OUTER JOIN T030 AS T0302 ON T0302.MANDT = MB2.MANDT
                                       AND T0302.KTOPL = 'BNFT'
                                       AND T0302.KTOSL = 'BSX'
                                       AND T0302.BWMOD = 'ZZ10'
                                       AND T0302.BKLAS = MB2.BKLAS
          LEFT OUTER JOIN QBEW AS QB2 ON QB2.MANDT = M2.MANDT
                                     AND QB2.MATNR = M2.MATNR
                                     AND QB2.BWKEY = M2.WERKS
                                     AND QB2.BWTAR = M2.CHARG
          LEFT OUTER JOIN T030 AS QT0302 ON QT0302.MANDT = QB2.MANDT
                                        AND QT0302.KTOPL = 'BNFT'
                                        AND QT0302.KTOSL = 'BSX'
                                        AND QT0302.BWMOD = 'ZZ10'
                                        AND QT0302.BKLAS = QB2.BKLAS
          INNER JOIN ZFI_TRANSP_COSTS AS COST ON COST.MANDT = :LV_MANDT
                                             --AND COALESCE( MB.BKLAS, QB.BKLAS ) = LEFT (COST.HKONT, 4) --БНУ#25327 AK_POTAPCHUK Счет 1009300000 не попадает в расчет
                                             AND COALESCE( T030.KONTS, QT030.KONTS ) = COST.HKONT --БНУ#25327
                                             AND COST.KIND = :IV_COSTS
                                             AND COST.CREDIT = '1'
                                             AND COST.TYPE = 'M' /* ОБРАБОТКА СЧЕТОВ М */
          LEFT JOIN AFVC AS AFVC ON AFVC.MANDT = M.MANDT
                                AND AFVC.AUFPL = M.AUFPL
                                AND AFVC.APLZL = M.APLZL
          LEFT JOIN T156 AS T156 ON T156.MANDT = M.MANDT
                                AND T156.BWART = M.BWART
     WHERE M.MANDT = :LV_MANDT
       AND M.BUDAT_MKPF BETWEEN :IV_BEG AND :IV_END_DAY
       AND ( M.SHKZG = 'H' OR  ( M.SHKZG = 'S'  AND M.SJAHR <> '0000' ) OR ( M.SHKZG = 'S' AND M.SJAHR = '0000' AND T156.SHKZG = 'S' AND T156.XSTBW = 'X' ) )
       AND M.BUKRS = :IV_BUKRS
       AND M.MATNR <> ''
       AND ( M.SAKTO = '' OR M.SAKTO = '7800000000' ) --! ТЕХНИЧЕСКИЙ ПЕРЕРАСЧЕТНЫЙ СЧЕТ МЕЖДУ БЕ
       AND M.WERKS LIKE '%10'
       WITH HINT(NO_INLINE);     -- AK_BUTVILOVSK #25332 ZFI_PASPRED_TZZ Оптимизация

*     ОБРАБОТКА СТОРНО
  LT_M_ACCOUNTS =
    SELECT *
      FROM :LT_M_ACCOUNTS AS A
      WHERE NOT EXISTS ( SELECT *
                           FROM NSDM_V_MSEG AS T
                          WHERE T.MANDT = :LV_MANDT
                            AND T.MBLNR = A.SMBLN
                            AND T.MJAHR = A.SJAHR
                            AND T.ZEILE = A.SMBLP
                            AND LEFT( T.BUDAT_MKPF, 6 ) = LEFT( A.BUDAT_MKPF, 6 )
                            AND T.DMBTR = ABS(A.DMBTR * ( -1) ) )
        AND NOT EXISTS ( SELECT *
                           FROM NSDM_V_MSEG AS T
                          WHERE T.MANDT = :LV_MANDT
                            AND T.SMBLN = A.MBLNR
                            AND T.SJAHR = A.MJAHR
                            AND T.SMBLP = A.ZEILE
                            AND LEFT( T.BUDAT_MKPF, 6 ) = LEFT( A.BUDAT_MKPF, 6 )
                            AND T.DMBTR = ABS(A.DMBTR * ( -1) ) )
        WITH HINT(NO_INLINE);     -- AK_BUTVILOVSK #25332 ZFI_PASPRED_TZZ Оптимизация
    END IF;     -- AK_BADYLEVIC 29.04.2023 Исключить счета с типом 'M' из обработки

    -- ВЫБОРКА ПО НЕ МАТЕРИАЛЬНЫМ СЧЕТАМ.
    -- ВЫБОР ПО ДЕБИТУ
    LT_NON_M_ACCOUNTS =
    SELECT
        '' AS BUKRS,
        ACDOCA.WERKS AS WERKS,
        ACDOCA.MATNR AS MATNR,
        T030.KONTS AS BKLAS,
        ACDOCA.BWTAR AS CHARG,
        '' AS CHARG2,
        ACDOCA.DRCRK AS SHKZG,
        CASE WHEN ACDOCA.BUZEI = J3.BUZEID  THEN J3.DMBTR
             WHEN ACDOCA.BUZEI = J3.BUZEIK  THEN -J3.DMBTR END AS DMBTR,
        ACDOCA.GJAHR AS MJAHR,
        ACDOCA.AWREF AS MBLNR,
        '' AS ZEILE,
        '' AS SJAHR,
        '' AS SMBLN,
        '' AS SMBLP,
         CASE WHEN ACDOCA.BUZEI = J3.BUZEID THEN J3.DEBET
              WHEN ACDOCA.BUZEI = J3.BUZEIK THEN J3.KREDIT END AS SAKTO,
        '' AS BKLAS2,
        COALESCE(ACDOCA.AUFNR,'') AS AUFNR,
        COALESCE(ACDOCA.RCNTR,'') AS KOSTL,

        '' AS VBELV,
        '000000' AS POSNV,

        CASE WHEN ACDOCA.PS_PSP_PNR = '00000000' THEN ACDOCA.MAT_PSPNR ELSE ACDOCA.PS_PSP_PNR END AS PS_PSP_PNR,
        COALESCE(ACDOCA.NPLNR,'') AS NPLNR,
        ACDOCA.NPLNR_VORGN AS VORNR,                    -- AK_BADYLEVIC #ZFI_PASPRED_TZZ Номер операции
        ACDOCA.BUDAT AS BUDAT_MKPF,
        CASE WHEN ACDOCA.BUZEI = J3.BUZEID THEN J3.KREDIT
             WHEN ACDOCA.BUZEI = J3.BUZEIK THEN J3.DEBET END AS ACRES,
        CONCAT( :IV_TZZ||CHAR(32), CASE WHEN ACDOCA.BUZEI = J3.BUZEID THEN J3.KREDIT
                                        WHEN ACDOCA.BUZEI = J3.BUZEIK THEN J3.DEBET END ) AS TZZ,
        '' AS AWKEY,
        ACDOCA.BELNR,
        J3.BUZEID AS BUZEIK,
        J3.BUZEIK AS BUZEID,
        '' AS VBUKR,
        '' AS ABUKR,
        '' AS KONTS,
        '' AS OBOROT
        FROM J_3RK_CORR_ITEMS AS J3
        INNER JOIN BKPF AS BKPF ON BKPF.MANDT = J3.MANDT
                               AND BKPF.BUKRS = J3.BUKRS
                               AND BKPF.BELNR = J3.BELNR
                               AND BKPF.GJAHR = J3.GJAHR
        INNER JOIN ZFI_TRANSP_COSTS AS COST ON COST.MANDT =  J3.MANDT
                                           AND COST.CREDIT = '1'
                                           AND ( COST.TYPE <> 'M' OR ( COST.TYPE = 'M' AND BKPF.AWTYP = 'RMRP') )
                                           AND ( ( J3.KREDIT = COST.HKONT AND J3.XNEGPK = '' )
                                           OR ( J3.DEBET = COST.HKONT AND J3.XNEGPD = 'X' ) )
                                           AND COST.KIND = :IV_COSTS
        INNER JOIN ACDOCA AS ACDOCA ON ACDOCA.RCLNT   = J3.MANDT
                                   AND ACDOCA.BELNR   = J3.BELNR
                                   AND ACDOCA.RBUKRS  = J3.BUKRS
                                   AND ACDOCA.GJAHR   = J3.GJAHR
                                   AND ( ACDOCA.BUZEI = J3.BUZEID AND J3.KREDIT = COST.HKONT OR
                                         ACDOCA.BUZEI = J3.BUZEIK AND J3.DEBET = COST.HKONT )
        LEFT OUTER JOIN MBEW AS MB ON MB.MANDT = ACDOCA.RCLNT
                                  AND MB.MATNR = ACDOCA.MATNR
                                  AND MB.BWTAR = ACDOCA.BWTAR
                                  AND MB.BWKEY = ACDOCA.WERKS
        LEFT OUTER JOIN T030 AS T030 ON T030.MANDT = MB.MANDT
                                    AND T030.KTOPL = 'BNFT'
                                    AND T030.KTOSL = 'BSX'
                                    AND T030.BWMOD = 'ZZ10'
                                    AND T030.BKLAS = MB.BKLAS
        LEFT OUTER JOIN "ZFI_CALC_HDB=>ZFI_REV_DOCS"( SESSION_CONTEXT('CLIENT') ) AS REV  ON REV.BUKRS = ACDOCA.RBUKRS
                                                                                         AND REV.GJAHR = ACDOCA.GJAHR
                                                                                         AND REV.BELNR = ACDOCA.BELNR
                                                                                         AND REV.BUZEI = ACDOCA.BUZEI
                                                                                         AND LEFT(COALESCE(REV.REVDT, '0000000000'), 6 ) = LEFT( ACDOCA.BUDAT, 6 )
      WHERE J3.MANDT = :LV_MANDT
        AND J3.BUKRS = :IV_BUKRS
        AND REV.BUDAT IS NULL
        AND J3.BUDAT BETWEEN :IV_BEG AND :IV_END_DAY
        WITH HINT(NO_INLINE);     -- AK_BUTVILOVSK #25332 ZFI_PASPRED_TZZ Оптимизация

    -- ОБЪЕДИНИНИЕ МАТЕРИАЛЬНЫХ И НЕ МАТЕРИАЛЬНЫХ СЧЕТОВ
    ET_RES_ACCOUNTS =
      SELECT * FROM :LT_M_ACCOUNTS
      UNION
      SELECT * FROM :LT_NON_M_ACCOUNTS
      WITH HINT(NO_INLINE);     -- AK_BUTVILOVSK #25332 ZFI_PASPRED_TZZ Оптимизация

    ET_RES_ACCOUNTS =
    SELECT
        COALESCE (RES.BUKRS,'') AS BUKRS,
        RES.WERKS,
        RES.MATNR,
        RES.BKLAS,
        RES.CHARG,
        RES.CHARG2,
        RES.SHKZG,
        RES.DMBTR,
        RES.MJAHR,
        RES.MBLNR,
        RES.ZEILE,
        RES.SJAHR,
        RES.SMBLN,
        RES.SMBLP,
        COALESCE (RES.SAKTO,'') AS SAKTO,
        RES.BKLAS2,
        CASE
          WHEN RES.SAKTO = '0708000000' THEN ''
          WHEN RES.BUKRS <> '' THEN ''
          ELSE RES.AUFNR
        END AS AUFNR,
        CASE
          WHEN RES.SAKTO = '0708000000' THEN ''
          WHEN RES.BUKRS <> '' THEN ''
          ELSE RES.KOSTL
        END AS KOSTL,
        RES.VBELV AS VBELV,
        RES.POSNV AS POSNV,
        CASE
          WHEN RES.SAKTO = '0708000000' THEN '00000000'
          WHEN RES.BUKRS <> '' THEN '00000000'
          ELSE RES.PS_PSP_PNR
        END AS PS_PSP_PNR,
        CASE
          WHEN RES.SAKTO = '0708000000' THEN ''
          WHEN RES.BUKRS <> '' THEN ''
          ELSE RES.NPLNR
        END AS NPLNR,
        CASE
          WHEN RES.SAKTO = '0708000000' THEN ''
          WHEN RES.BUKRS <> '' THEN ''
          ELSE RES.VORNR
        END AS VORNR,
        RES.BUDAT_MKPF,
        COALESCE (RES.ACRES,'') AS ACRES,
        COALESCE(RES.TZZ,'') AS TZZ,
        RES.AWKEY,
        RES.BELNR,
        RES.BUZEIK,
        RES.BUZEID,
        COALESCE(T001U.VBUKR,'') AS VBUKR,
        COALESCE(T001U.ABUKR,'') AS ABUKR,
        COALESCE(T001U.KONTS,'') AS KONTS,
        CASE WHEN RES.ACRES NOT IN ( SELECT HKONT FROM ZFI_TRANSP_COSTS WHERE KIND = :IV_COSTS )
               OR RES.SAKTO NOT IN ( SELECT HKONT FROM ZFI_TRANSP_COSTS WHERE KIND = :IV_COSTS )
             THEN 'X'
        END AS OBOROT
    FROM :ET_RES_ACCOUNTS AS RES
      LEFT JOIN T001U AS T001U ON T001U.MANDT = :LV_MANDT
                              AND T001U.VBUKR = :IV_BUKRS
                              AND T001U.ABUKR = RES.BUKRS
                              AND T001U.KOMOK = ''
      WITH HINT(NO_INLINE);     -- AK_BUTVILOVSK #25332 ZFI_PASPRED_TZZ Оптимизация
  IF IV_COSTS = 'M' THEN
    LT_TAB_2 =
      SELECT
        '' AS BUKRS,
        M1.WERKS,
        M1.MATNR,
        T030.KONTS AS BKLAS,
        M1.CHARG,
        ' ' AS CHARG2,
        M1.SHKZG,
        CASE
            WHEN M1.SHKZG = 'H' THEN M1.DMBTR
            ELSE M1.DMBTR * ( -1 )
        END AS DMBTR,
        M1.MJAHR,
        M1.MBLNR,
        M1.ZEILE,
        M1.SJAHR,
        M1.SMBLN,
        M1.SMBLP,
        CASE
            WHEN T095.KTANSW <> ' ' THEN T095.KTANSW
            ELSE T030.KONTS
        END AS SAKTO,
        ' ' AS BKLAS2,
        CASE
          WHEN M1.SAKTO = '0708000000' THEN ''
          WHEN M1.BUKRS <> '' THEN ''
          ELSE M1.AUFNR
        END AS AUFNR,
        CASE
          WHEN M1.SAKTO = '0708000000' THEN ''
          WHEN M1.BUKRS <> '' THEN ''
          ELSE M1.KOSTL
        END AS KOSTL,
        '' AS VBELV,
        '000000' AS POSNV,
        CASE
          WHEN M1.SAKTO = '0708000000' THEN '00000000'
          WHEN M1.BUKRS <> '' THEN '00000000'
          ELSE M1.PS_PSP_PNR
        END AS PS_PSP_PNR,
        CASE
          WHEN M1.SAKTO = '0708000000' THEN ''
          WHEN M1.BUKRS <> '' THEN ''
          ELSE M1.NPLNR
        END AS NPLNR,
        CASE
          WHEN M1.SAKTO = '0708000000' THEN ''
          WHEN M1.BUKRS <> '' THEN ''
          ELSE ''
        END AS VORNR,
        M1.BUDAT_MKPF,
        CASE
            WHEN T030.KONTS  IS NOT NULL THEN T030.KONTS
            WHEN QT030.KONTS IS NOT NULL THEN QT030.KONTS
        END AS ACRES,
        CONCAT ( :IV_TZZ||CHAR(32), CASE
            WHEN T030.KONTS  IS NOT NULL THEN T030.KONTS
            WHEN QT030.KONTS IS NOT NULL THEN QT030.KONTS
        END ) AS TZZ,
        CONCAT( M1.MBLNR, M1.MJAHR ) AS AWKEY,
        '' AS BELNR,
        '' AS BUZEIK,
        '' AS BUZEID,
        COALESCE(T001U.VBUKR,'') AS VBUKR,
        COALESCE(T001U.ABUKR,'') AS ABUKR,
        COALESCE(T001U.KONTS,'') AS KONTS,
        '' AS OBOROT
      FROM NSDM_V_MSEG AS M1
        INNER JOIN ANLA AS ANLA ON ANLA.MANDT = M1.MANDT
                               AND ANLA.ANLN1 = M1.ANLN1
        INNER JOIN T095 AS T095 ON T095.MANDT = ANLA.MANDT
                               AND T095.KTOGR = ANLA.KTOGR
                               AND T095.AFABE = '01'
        LEFT JOIN T001U AS T001U ON T001U.MANDT = M1.MANDT
                                AND T001U.VBUKR = :IV_BUKRS
                                AND T001U.ABUKR = M1.BUKRS
                                AND T001U.KOMOK = ''
        LEFT OUTER JOIN MBEW AS MB ON MB.MANDT = M1.MANDT
                                  AND MB.MATNR = M1.MATNR
                                  AND MB.BWKEY = M1.WERKS
                                  AND MB.BWTAR = M1.CHARG
                                  AND M1.SOBKZ = ''
        LEFT OUTER JOIN T030 AS T030 ON T030.MANDT = MB.MANDT
                                    AND T030.KTOPL = 'BNFT'
                                    AND T030.KTOSL = 'BSX'
                                    AND T030.BWMOD = 'ZZ10'
                                    AND T030.BKLAS = MB.BKLAS
        LEFT OUTER JOIN QBEW AS QB ON QB.MANDT = M1.MANDT
                                  AND QB.MATNR = M1.MATNR
                                  AND QB.BWKEY = M1.WERKS
                                  AND QB.BWTAR = M1.CHARG
                                  AND M1.SOBKZ = 'Q'
        LEFT OUTER JOIN T030 AS QT030 ON QT030.MANDT = MB.MANDT
                                     AND QT030.KTOPL = 'BNFT'
                                     AND QT030.KTOSL = 'BSX'
                                     AND QT030.BWMOD = 'ZZ10'
                                     AND QT030.BKLAS = QB.BKLAS
        LEFT JOIN VBFA AS VBFA ON VBFA.MANDT = M1.MANDT
                              AND VBFA.VBELN = M1.MBLNR
                              AND RIGHT ( VBFA.POSNN, 4 ) = M1.ZEILE
                              AND VBFA.VBTYP_N = 'R'
                              AND VBFA.VBTYP_V = 'C'
      WHERE M1.MANDT = :LV_MANDT
        AND M1.BUKRS = :IV_BUKRS
        AND M1.BUDAT_MKPF BETWEEN :IV_BEG AND :IV_END_DAY
        AND  M1.MATNR <> ''
        AND ( M1.SAKTO = '' AND M1.ANLN1 <> '' )
        WITH HINT(NO_INLINE);     -- AK_BUTVILOVSK #25332 ZFI_PASPRED_TZZ Оптимизация


    LT_BEF_RESULT =
      SELECT * FROM :ET_RES_ACCOUNTS
      UNION ALL
      SELECT * FROM :LT_TAB_2
      WITH HINT(NO_INLINE);     -- AK_BUTVILOVSK #25332 ZFI_PASPRED_TZZ Оптимизация

  ELSE
    LT_BEF_RESULT =
      SELECT * FROM :ET_RES_ACCOUNTS
      WITH HINT(NO_INLINE);     -- AK_BUTVILOVSK #25332 ZFI_PASPRED_TZZ Оптимизация
  END IF;

    ET_RESULT =
    SELECT
      LT.BUKRS,
      LT.WERKS,
      LT.MATNR,
      LT.BKLAS,
      LT.CHARG,
      LT.CHARG2,
      LT.SHKZG,
      LT.DMBTR,
      LT.MJAHR,
      LT.MBLNR,
      LT.ZEILE,
      LT.SJAHR,
      LT.SMBLN,
      LT.SMBLP,
      LT.SAKTO,
      LT.BKLAS2,
      CASE WHEN ( LEFT ( LT.SAKTO, 2 ) = '90' OR LEFT ( LT.SAKTO, 2 ) = '91' ) AND ( LEFT ( LT.AUFNR, 1 ) <> 'N' )
        THEN REPLACE ( TVARVC.HIGH, '++', RIGHT ( CAST( :IV_BUKRS AS VARCHAR ), 2 ) )
        ELSE LT.AUFNR END AS AUFNR,
      LT.KOSTL,

      CASE WHEN LEFT ( LT.SAKTO, 2 ) = '90' OR LEFT ( LT.SAKTO, 2 ) = '91' THEN COALESCE (VBFA.VBELV,'') END AS VBELV,
      CASE WHEN LEFT ( LT.SAKTO, 2 ) = '90' OR LEFT ( LT.SAKTO, 2 ) = '91' THEN COALESCE (VBFA.POSNV,'000000') END AS POSNV,

      LT.PS_PSP_PNR,
      CASE WHEN (LT.PS_PSP_PNR = '00000000') THEN LT.NPLNR END AS NPLNR,                    -- AK_BADYLEVIC #ZFI_PASPRED_TZZ Номер операции
      CASE WHEN (LT.PS_PSP_PNR = '00000000') THEN LT.VORNR END AS VORNR,                    -- AK_BADYLEVIC #ZFI_PASPRED_TZZ Номер операции
      LT.BUDAT_MKPF,

      LT.ACRES,
      LT.TZZ,
      LT.AWKEY,
      LT.BELNR,
      LT.BUZEIK,
      LT.BUZEID,
      LT.VBUKR,
      LT.ABUKR,
      LT.KONTS,
      LT.oborot
    FROM :LT_BEF_RESULT AS LT
      LEFT JOIN VBFA AS VBFA ON VBFA.MANDT = :LV_MANDT
                            AND VBFA.VBELN = LT.MBLNR
                            AND RIGHT ( VBFA.POSNN, 4 ) = LT.ZEILE
                            AND ( VBFA.VBTYP_N = 'R' OR VBFA.VBTYP_N = 'h' )
                            AND VBFA.VBTYP_V = 'C'
      LEFT JOIN TVARVC AS TVARVC ON TVARVC.MANDT = :LV_MANDT
                                AND TVARVC.TYPE  = 'S'
                                AND TVARVC.NAME  = 'ZFI_TZZ'
                                AND TVARVC.LOW   = LT.SAKTO
      WITH HINT(NO_INLINE);     -- AK_BUTVILOVSK #25332 ZFI_PASPRED_TZZ Оптимизация

  -- ГРУППИРОВКА СЧЕТОВ ПО СУММЕ
  ET_RES_ACCOUNTS_COLLECTED =
    SELECT
         '' AS CHK,
         COALESCE (ACC.ACRES,'') AS ACRES,
         COALESCE (ACC.SAKTO,'') AS SAKTO,
         '' AS BKLASAC,
         SUM(  ACC.DMBTR ) AS DMBTR,
         :IV_PROCENT AS PROCENT,
         '' AS CHARG2,
         COALESCE (ACC.BUKRS,'') AS BUKRS,
         COALESCE (ACC.AUFNR,'') AS AUFNR,
         COALESCE (ACC.KOSTL,'') AS KOSTL,

         COALESCE (ACC.VBELV,'') AS VBELV,
         COALESCE (ACC.POSNV,'000000') AS POSNV,

         COALESCE (ACC.PS_PSP_PNR,'') AS PS_PSP_PNR,
         COALESCE (ACC.NPLNR,'') AS NPLNR,
         COALESCE (ACC.VORNR,'') AS VORNR,
        ROUND( SUM( ACC.DMBTR )  * :IV_PROCENT / 100, 2) AS ACCRUED,
        SUM( MSEG.DMBTR)  AS CARRIED,
        ROUND(( COALESCE(SUM( acc.dmbtr ),0)  * :iv_procent / 100 ),2) - COALESCE(SUM( mseg.dmbtr),0) AS stock,
        '' AS  BELNR_PROV,
        COALESCE (ACC.TZZ,'') AS TZZ,
        COALESCE (ACC.SAKTO,'') AS BKTXT,
        '' AS FLAG,
        '' AS SIGNP,
        '' AS NEW_BELNR,
        '' AS STATUS,
        '' AS ROW_COLOR,
        COALESCE (T001U.VBUKR,'') AS VBUKR,
        COALESCE (T001U.ABUKR,'') AS ABUKR,
        COALESCE (T001U.KONTS,'') AS KONTS,
        COALESCE (ACC.OBOROT,'') AS OBOROT,
        '' AS HKONT_SAKTO,
        '' AS TVARVC_CLIE_INDEP,
        COALESCE (ACC.AUFNR,'') AS INITIAL_AUFNR
     FROM :ET_RESULT AS ACC
       LEFT JOIN BKPF AS BKPF ON BKPF.MANDT = :LV_MANDT
                             AND BKPF.BUKRS = ACC.BUKRS
                             AND BKPF.XBLNR = ACC.TZZ
                             AND BKPF.BKTXT = ACC.ACRES
       LEFT JOIN NSDM_V_MSEG AS MSEG ON MSEG.MANDT = BKPF.MANDT
                                    AND MSEG.BUKRS = BKPF.BUKRS
                                    AND MSEG.BELNR = BKPF.BELNR
                                    AND MSEG.GJAHR = BKPF.GJAHR
       LEFT JOIN T001U AS T001U ON T001U.MANDT = :LV_MANDT
                               AND T001U.VBUKR = :IV_BUKRS
                               AND T001U.ABUKR = ACC.BUKRS
                               AND T001U.KOMOK = ''
     GROUP BY ACC.ACRES, ACC.TZZ, ACC.SAKTO, ACC.BUKRS, ACC.AUFNR, ACC.VORNR, ACC.KOSTL, ACC.PS_PSP_PNR, ACC.NPLNR, T001U.VBUKR, T001U.ABUKR, T001U.KONTS, ACC.OBOROT, ACC.VBELV, ACC.POSNV
     WITH HINT(NO_INLINE);       -- AK_BUTVILOVSK #25332 ZFI_PASPRED_TZZ Оптимизация

    ET_RES_ACCOUNTS_COLLECTED =
         SELECT
         RES.CHK,
         RES.ACRES,
         RES.SAKTO,
         RES.BKLASAC,
         RES.DMBTR,
         RES.PROCENT,
         RES.CHARG2,
         RES.BUKRS,
         RES.AUFNR,
         RES.KOSTL,

         RES.VBELV,
         RES.POSNV,

         RES.PS_PSP_PNR,
         RES.NPLNR,
         RES.VORNR,
         RES.ACCRUED,
         RES.CARRIED,
         RES.stock,
         RES.BELNR_PROV,
         RES.TZZ,
         RES.BKTXT,
         RES.FLAG,
         RES.SIGNP,
         RES.NEW_BELNR,
         RES.STATUS,
         RES.ROW_COLOR,
         RES.VBUKR,
         RES.ABUKR,
         RES.KONTS,
         RES.OBOROT,
         RES.HKONT_SAKTO,
         TVARVC.CLIE_INDEP AS TVARVC_CLIE_INDEP,
         RES.INITIAL_AUFNR
     FROM :ET_RES_ACCOUNTS_COLLECTED AS RES
      LEFT JOIN TVARVC AS TVARVC ON TVARVC.MANDT = :LV_MANDT
                                 AND TVARVC.NAME  = 'ZFI_TZZ'
                                 AND TVARVC.TYPE  = 'S'
                                 AND TVARVC.LOW = RES.SAKTO;
*                                 AND TVARVC.NUMB = ( SELECT min( numb )  -- БНУ#25327 AK_POTAPCHUK Закоммент-ые записи были добавлены запросом DHVK951986 задача DHVK951987.
*                                                      FROM TVARVC        --                  Но на SHV изменения не переносились. Поэтому закоммент-ли обратно, чтобы DHV=SHV
*                                                      WHERE MANDT = :LV_MANDT
*                                                        AND NAME  = 'ZFI_TZZ'
*                                                        AND TYPE  = 'S'
*                                                        AND LOW = RES.SAKTO );



  ENDMETHOD.


  METHOD GET_PROCENT BY DATABASE PROCEDURE FOR HDB
                              LANGUAGE SQLSCRIPT
                              OPTIONS READ-ONLY
                              USING
                              ZFI_TRANSP_COSTS
                              ZFI_CALC_TRNCOR1
                              ACDOCA.
    DECLARE LV_ACC STRING;
    DECLARE LV_BEG DATE := :IV_BEG;
    DECLARE LV_END DATE := :IV_END;
    DECLARE LV_SPACE STRING := ' ';
    DECLARE LV_MANDT CHAR(3) := SESSION_CONTEXT('CLIENT');

    IF :IV_COSTS = 'M' THEN
        LV_ACC = '1600000000';
    ELSE
        LV_ACC = '0716000000';
    END IF;

    --ОБЪЕДИНЯЕМ СЧЕТА И СЧЁТ :LV_ACC ЧТОБ ЛИШНИЙ РАЗ НЕ ДЖОЁНИТЬ ACDOCA
    LT_BALANCE_ACCOUNTS =
    SELECT DISTINCT HKONT
        FROM ZFI_TRANSP_COSTS
        WHERE ( KIND = 'M' AND :IV_COSTS = 'M' OR KIND <> 'M' AND :IV_COSTS <> 'M' )  --МАТЕРИАЛЬНЫЕ СЧЕТА, ЕСЛИ ВЫБОРКА ПО МАТЕРИАЛЬНЫМ
          AND BALANCE = '1'
          AND MANDT = :LV_MANDT
    UNION ALL
    SELECT :LV_ACC AS ACRESS FROM DUMMY;

    --ОБЪЕДИНЯЕМ ВЫБРАННЫЕ СЧЕТА И СЧЁТ :LV_ACC ЧТОБ ЛИШНИЙ РАЗ НЕ ДЖОЁНИТЬ ZFI_CALC_TRNCOR1
    LT_DEBET_ACCOUNTS =
    SELECT DISTINCT HKONT
        FROM ZFI_TRANSP_COSTS
        WHERE DEBET = '1'
          AND ( KIND = 'M' AND :IV_COSTS = 'M' OR KIND <> 'M' AND :IV_COSTS <> 'M' ) --НЕ МАТЕРИАЛЬНЫЕ СЧЕТА, ЕСЛИ ВЫБОРКА НЕ ПО МАТЕРИАЛЬНЫМ
          AND MANDT = :LV_MANDT
    UNION ALL
    SELECT :LV_ACC AS ACRESS FROM DUMMY;


    --РАССЧЁТ САЛЬДО, ПОСТУПЛЕНИЙ ЗА ТЕКУЩИЙ МЕСЯЦ И ВНУТРЕННИГО ОБОРОТА

    ET_PROCENT =
    SELECT
        '1' AS NUMB,
        'Остаток на начало месяца' AS TEXT,
        SUM( CASE                   --САЛЬДО ПО СЧЁТАМ
                WHEN ACDOCA.RACCT <> :LV_ACC THEN ACDOCA.HSL
                ELSE 0
             END
        ) AS COL1,
        SUM( CASE                   --САЛЬДО ПО СЧЁТУ :LV_ACC
                WHEN ACDOCA.RACCT = :LV_ACC THEN ACDOCA.HSL
                ELSE 0
             END
        ) AS COL2
      FROM :LT_BALANCE_ACCOUNTS AS ACC
        INNER JOIN ACDOCA AS ACDOCA ON ACDOCA.RCLNT = :LV_MANDT
                                   AND ACDOCA.RACCT = ACC.HKONT
                                   AND ACDOCA.GJAHR = LEFT( :LV_BEG, 4 )
                                   AND ACDOCA.RBUKRS = :IV_BUKRS
                                   AND ACDOCA.BUDAT < :LV_BEG
    UNION ALL
    SELECT
        '2' AS NUMB,
        'Поступило за месяц' AS TEXT,
        SUM( CASE
                WHEN TRN.HKONT <> :LV_ACC THEN TRN.TURN
                ELSE 0
             END
        ) AS COL1,
        SUM( CASE
                WHEN TRN.HKONT = :LV_ACC THEN TRN.TURN
                ELSE 0
             END
        ) AS COL2
      FROM :LT_DEBET_ACCOUNTS AS ACC
        INNER JOIN ZFI_CALC_TRNCOR1 AS TRN ON TRN.MANDT = :LV_MANDT
                                          AND TRN.HKONT = ACC.HKONT
                                          AND TRN.SHKZG = 'S'
                                          AND TRN.BUDAT BETWEEN :LV_BEG AND :LV_END
                                          AND TRN.BUKRS = :IV_BUKRS
    UNION ALL
    SELECT
        '2А' AS NUMB,
        'В том числе внутренний оборот' AS TEXT,
        SUM( CASE
                WHEN TRN.HKONT <> :LV_ACC THEN TRN.TURN
                ELSE 0
             END
        ) AS COL1,
        SUM( CASE
                WHEN TRN.HKONT = :LV_ACC THEN TRN.TURN
                ELSE 0
             END
        ) AS COL2
      FROM ZFI_CALC_TRNCOR1 AS TRN
      WHERE TRN.MANDT =  :LV_MANDT
        AND TRN.GKONT IN ( SELECT HKONT FROM :LT_DEBET_ACCOUNTS )
        AND TRN.HKONT IN ( SELECT HKONT FROM :LT_DEBET_ACCOUNTS )
        AND TRN.SHKZG = 'S'
        AND TRN.BUDAT BETWEEN :LV_BEG AND :LV_END
        AND TRN.BUKRS = :IV_BUKRS;

    --ДОБАВЛЕНИЕ ИТОГОВ
    ET_PROCENT =
    SELECT L.NUMB AS NUMB, L.TEXT, L.COL1, L.COL2
        FROM :ET_PROCENT AS L
    UNION
    SELECT
        '3',
        'Итого:',
        COALESCE(L1.COL1, 0) + COALESCE(L2.COL1, 0) - COALESCE(L3.COL1, 0) AS COL1,
        COALESCE(L1.COL2, 0) + COALESCE(L2.COL2, 0) - COALESCE(L3.COL2, 0) AS COL2
      FROM :ET_PROCENT AS L1, :ET_PROCENT AS L2, :ET_PROCENT AS L3
      WHERE L1.NUMB = '1'
        AND L2.NUMB = '2'
        AND L3.NUMB = '2А';


    --РАССЧЁТ ПРОЦЕНТА
    SELECT
        CASE
            WHEN COL1 = 0 THEN 0
            ELSE COL2 * 100 / COL1
        END
      INTO EV_PROCENT
      FROM :ET_PROCENT
      WHERE NUMB = '3';

    LV_BEG = ADD_MONTHS( :IV_BEG, -1 );
    LV_END = TO_DATS(LAST_DAY( LV_BEG ) );
    --LV_END = ADD_MONTHS( :IV_END, -1 );
    --{ РАССЧЁТ САЛЬДО, ПОСТУПЛЕНИЙ ЗА ПРЕДЫДУЩИЙ МЕСЯЦ И ВНУТРЕННИГО ОБОРОТА
    ET_PREV_PROCENT =
    SELECT
        '1' AS NUMB,
        'Остаток на начало пр. месяца' AS TEXT,
        SUM( CASE                   --САЛЬДО ПО СЧЁТАМ
                WHEN ACDOCA.RACCT <> :LV_ACC THEN ACDOCA.HSL
                ELSE 0
             END
        ) AS COL1,
        SUM( CASE                   --САЛЬДО ПО СЧЁТУ :LV_ACC
                WHEN ACDOCA.RACCT = :LV_ACC THEN ACDOCA.HSL
                ELSE 0
             END
        ) AS COL2
      FROM :LT_BALANCE_ACCOUNTS AS ACC
        INNER JOIN ACDOCA AS ACDOCA
                        ON  ACDOCA.RCLNT = :LV_MANDT
                        AND ACDOCA.RACCT = ACC.HKONT
                        AND ACDOCA.GJAHR = LEFT( :LV_BEG, 4 )
                        AND ACDOCA.RBUKRS = :IV_BUKRS
                        AND ACDOCA.BUDAT < :LV_BEG
    UNION ALL
    SELECT
        '2' AS NUMB,
        'Поступило за пр. месяц' AS TEXT,
        SUM( CASE
                WHEN TRN.HKONT <> :LV_ACC THEN TRN.TURN
                ELSE 0
             END
        ) AS COL1,
        SUM( CASE
                WHEN TRN.HKONT = :LV_ACC THEN TRN.TURN
                ELSE 0
             END
        ) AS COL2
      FROM :LT_DEBET_ACCOUNTS AS ACC
        INNER JOIN ZFI_CALC_TRNCOR1 AS TRN ON TRN.MANDT =  :LV_MANDT
                                          AND TRN.HKONT = ACC.HKONT
                                          AND TRN.SHKZG = 'S'
                                          AND TRN.BUDAT BETWEEN :LV_BEG AND :LV_END
                                          AND TRN.BUKRS = :IV_BUKRS
    UNION ALL
    SELECT
        '2А' AS NUMB,
        'В том числе внутренний оборот' AS TEXT,
        SUM( CASE
                WHEN TRN.HKONT <> :LV_ACC THEN TRN.TURN
                ELSE 0
             END
        ) AS COL1,
        SUM( CASE
                WHEN TRN.HKONT = :LV_ACC THEN TRN.TURN
                ELSE 0
             END
        ) AS COL2
      FROM ZFI_CALC_TRNCOR1 AS TRN
      WHERE TRN.MANDT = :LV_MANDT
        AND TRN.HKONT IN ( SELECT HKONT FROM :LT_DEBET_ACCOUNTS )
        AND TRN.GKONT IN ( SELECT HKONT FROM :LT_DEBET_ACCOUNTS )
        AND TRN.SHKZG = 'S'
        AND TRN.BUDAT BETWEEN :LV_BEG AND :LV_END
        AND TRN.BUKRS = :IV_BUKRS;

    --ДОБАВЛЕНИЕ ИТОГОВ
    ET_PREV_PROCENT =
    SELECT L.NUMB, L.TEXT, L.COL1, L.COL2
        FROM :ET_PREV_PROCENT AS L
    UNION
    SELECT
        '3' AS NUMB,
        'итого:' AS TEXT,
        COALESCE(L1.COL1, 0) + COALESCE(L2.COL1, 0) - COALESCE(L3.COL1, 0) AS COL1,
        COALESCE(L1.COL2, 0) + COALESCE(L2.COL2, 0) - COALESCE(L3.COL2, 0) AS COL2
      FROM :ET_PREV_PROCENT AS L1, :ET_PREV_PROCENT AS L2, :ET_PREV_PROCENT AS L3
      WHERE L1.NUMB = '1'
        AND L2.NUMB = '2'
        AND L3.NUMB = '2А';

    --РАССЧЁТ ПРОЦЕНТА
    SELECT
        CASE
            WHEN COL1 = 0 THEN 0
            ELSE COL2 * 100 / COL1
        END
      INTO EV_PREV_PROCENT
      FROM :ET_PREV_PROCENT
     WHERE NUMB = '3';
  ENDMETHOD.


  METHOD GET_PROVOD_DOC BY DATABASE PROCEDURE FOR HDB
                        LANGUAGE SQLSCRIPT OPTIONS READ-ONLY
                        USING BKPF BSEG AFVC.

  DECLARE LV_MANDT CHAR(3) := SESSION_CONTEXT('CLIENT');

  ET_PROVOD_BKPF =
    SELECT BKPF.BVORG,
          BKPF.XBLNR,
          BS.VBEL2 AS KDAUF,
          BS.POSN2 AS KDPOS,
          BKPF.BKTXT,
          BKPF.BELNR,
          BKPF.BUKRS,
          BKPF.GJAHR,
          CASE WHEN BS.SHKZG = 'H' THEN BS.DMBTR * -1 ELSE BS.DMBTR END AS HSL,
          bs.KOSTL AS RCNTR,
          BS.PROJK AS PS_PSP_PNR,
          BS.AUFNR,
          BS.NPLNR,
          AFVC.VORNR AS NPLNR_VORGN,
          BS.HKONT AS RACCT,
          BKPF.BUDAT
      FROM BKPF AS BKPF
        INNER JOIN BSEG AS BS ON BS.MANDT = BKPF.MANDT
                             AND BS.BUKRS = BKPF.BUKRS
                             AND BS.BELNR = BKPF.BELNR
                             AND BS.GJAHR = BKPF.GJAHR
        LEFT JOIN AFVC AS AFVC ON AFVC.MANDT = BS.MANDT
                              AND AFVC.AUFPL = BS.AUFPL
                              AND AFVC.APLZL = BS.APLZL
      WHERE BKPF.MANDT = :LV_MANDT
        AND LEFT(BKPF.XBLNR, 3 ) = :IV_TZZ
        AND BKPF.STBLG = ' '
        AND LENGTH( BKPF.BKTXT) = 10
        AND BKPF.BUKRS = :IV_BUKRS
        AND BKPF.GJAHR = LEFT( :IV_BEG, 4 )
        AND BKPF.MONAT = MONTH ( :IV_BEG )
        AND ( SUBSTRING(BKPF.BVORG, 11,2) = :IV_BUKRS OR BKPF.BVORG = '' );
  ENDMETHOD.
ENDCLASS.