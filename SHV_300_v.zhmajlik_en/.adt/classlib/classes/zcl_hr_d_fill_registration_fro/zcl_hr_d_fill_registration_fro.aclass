CLASS zcl_hr_d_fill_registration_fro DEFINITION
  PUBLIC
  INHERITING FROM /bobf/cl_lib_d_supercl_simple FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.
    METHODS /bobf/if_frw_determination~execute REDEFINITION.

  PROTECTED SECTION.

  PRIVATE SECTION.
ENDCLASS.



CLASS ZCL_HR_D_FILL_REGISTRATION_FRO IMPLEMENTATION.


  METHOD /bobf/if_frw_determination~execute.
    DATA lt_header TYPE zthri_candidateheader.

    io_read->retrieve( EXPORTING iv_node = is_ctx-node_key
                                 it_key  = it_key
                       IMPORTING et_data = lt_header ).

    IF lt_header[ 1 ]-zhr_user IS NOT INITIAL.
      RETURN.
    ENDIF.

    SELECT SINGLE num01email, vorna, nachn, nach2, pernr, useralias, password, objid, otype, plvar, zsapuser, zhruser,
                  createduser, createddata, changeduser, changeddata, createdtime, changedtime
      FROM zhr_i_candidate_header_draft
      INTO @DATA(ls_registration_draft)
      WHERE zsapuser = @sy-uname AND haserrors = @abap_false.
    IF sy-subrc <> 0.
      RETURN.
    ENDIF.

    ASSIGN lt_header[ 1 ] TO FIELD-SYMBOL(<ls_header>).
    IF <ls_header>-zhr_user IS NOT INITIAL.
      RETURN.
    ENDIF.

    <ls_header>-num01_email      = ls_registration_draft-num01email.
    <ls_header>-vorna            = ls_registration_draft-vorna.
    <ls_header>-nachn            = ls_registration_draft-nachn.
    <ls_header>-nach2            = ls_registration_draft-nach2.
    <ls_header>-pernr            = ls_registration_draft-pernr.
    <ls_header>-useralias        = ls_registration_draft-useralias.
    <ls_header>-password         = ls_registration_draft-password.
    <ls_header>-objid            = ls_registration_draft-objid.
    <ls_header>-otype            = ls_registration_draft-otype.
    <ls_header>-plvar            = ls_registration_draft-plvar.
    <ls_header>-zsap_user        = ls_registration_draft-zsapuser.
    <ls_header>-zhr_user         = ls_registration_draft-zhruser.
    <ls_header>-created_user_reg = ls_registration_draft-createduser.
    <ls_header>-created_data_reg = ls_registration_draft-createddata.
    <ls_header>-changed_user_reg = ls_registration_draft-changeduser.
    <ls_header>-changed_data_reg = ls_registration_draft-changeddata.
    <ls_header>-created_time_reg = ls_registration_draft-createdtime.
    <ls_header>-changed_time_reg = ls_registration_draft-changedtime.
    LOOP AT lt_header REFERENCE INTO DATA(ls_header).
      io_modify->update( iv_node = is_ctx-node_key
                         iv_key  = ls_header->key
                         is_data = ls_header ).
    ENDLOOP.
  ENDMETHOD.
ENDCLASS.