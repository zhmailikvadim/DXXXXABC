CLASS zcl_hr_v_check_fields DEFINITION
  PUBLIC
  INHERITING FROM /bobf/cl_lib_v_supercl_simple FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.
    METHODS /bobf/if_frw_validation~execute REDEFINITION.

  PROTECTED SECTION.

  PRIVATE SECTION.
ENDCLASS.



CLASS ZCL_HR_V_CHECK_FIELDS IMPLEMENTATION.


  METHOD /bobf/if_frw_validation~execute.
    TYPES ty_lt_sysmessages TYPE STANDARD TABLE OF symsg WITH DEFAULT KEY.

    DATA lt_header TYPE zthri_candidateheader3.

    IF lcl_buffer=>get_instance( )->set_keys( it_key ) = abap_true.
      RETURN.
    ENDIF.

    io_read->retrieve( EXPORTING iv_node = is_ctx-node_key
                                 it_key  = it_key
                       IMPORTING et_data = lt_header ).

    LOOP AT lt_header ASSIGNING FIELD-SYMBOL(<ls_header>).
      DATA(lv_success) = abap_true.
      IF validate_phone_number( EXPORTING is_header  = <ls_header>
                                          iv_phone   = <ls_header>-num02_phone1
                                          is_ctx     = is_ctx
                                IMPORTING eo_message = eo_message ) = abap_false.

        lv_success = abap_false.
      ENDIF.
      IF validate_phone_number( EXPORTING is_header  = <ls_header>
                                          iv_phone   = <ls_header>-num02_phone2
                                          is_ctx     = is_ctx
                                IMPORTING eo_message = eo_message ) = abap_false.
        lv_success = abap_false.
      ENDIF.
      IF validate_category_driver( EXPORTING is_header  = <ls_header>
                                             io_read    = io_read
                                             is_ctx     = is_ctx
                                   IMPORTING eo_message = eo_message ) = abap_false.
        lv_success = abap_false.
      ENDIF.
      IF validate_category_tractor( EXPORTING is_header  = <ls_header>
                                              io_read    = io_read
                                              is_ctx     = is_ctx
                                    IMPORTING eo_message = eo_message ) = abap_false.
        lv_success = abap_false.
      ENDIF.
      IF lv_success = abap_false.
        APPEND VALUE #( key = <ls_header>-key ) TO et_failed_key.
      ENDIF.
    ENDLOOP.
  ENDMETHOD.


  METHOD validate_category_driver.
    DATA it_data TYPE zthri_candidate_driver.

    CHECK is_header-is_driver = abap_true.

    io_read->retrieve_by_association(
      EXPORTING it_key         = VALUE #( ( key = is_header-key ) )
                iv_node        = is_ctx-node_key
                iv_association = zif_hr_i_candidateheader3_c=>sc_association-zhr_i_candidateheader-_candidatedriver
                iv_fill_data   = abap_true
      IMPORTING et_data        = it_data  ).

    IF lines( it_data ) = 0.
      IF eo_message IS NOT BOUND.
        eo_message = /bobf/cl_frw_factory=>get_message( ).
      ENDIF.

      eo_message->add_message( is_msg  = VALUE #( msgty = /iwbep/cl_cos_logger=>warning
                                                  msgid = gc_msgid
                                                  msgno = '004' )
                               iv_node = is_ctx-node_key
                               iv_key  = is_header-key ).
    ELSE.
      rv_success = abap_true.
    ENDIF.
  ENDMETHOD.
ENDCLASS.